
main_test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000063dc  080001c8  080001c8  000011c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000058  080065a8  080065a8  000075a8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006600  08006600  00008098  2**0
                  CONTENTS
  4 .ARM          00000008  08006600  08006600  00007600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006608  08006608  00008098  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006608  08006608  00007608  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800660c  0800660c  0000760c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000098  20000000  08006610  00008000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000003c8  20000098  080066a8  00008098  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000460  080066a8  00008460  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00008098  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000f65f  00000000  00000000  000080c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000028a3  00000000  00000000  00017727  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000ed0  00000000  00000000  00019fd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000b80  00000000  00000000  0001aea0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000219f2  00000000  00000000  0001ba20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00013a3f  00000000  00000000  0003d412  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000d18f0  00000000  00000000  00050e51  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00122741  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000041c8  00000000  00000000  00122784  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006c  00000000  00000000  0012694c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	@ (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	@ (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000098 	.word	0x20000098
 80001e4:	00000000 	.word	0x00000000
 80001e8:	0800658c 	.word	0x0800658c

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	@ (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	@ (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	@ (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	2000009c 	.word	0x2000009c
 8000204:	0800658c 	.word	0x0800658c

08000208 <__aeabi_drsub>:
 8000208:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 800020c:	e002      	b.n	8000214 <__adddf3>
 800020e:	bf00      	nop

08000210 <__aeabi_dsub>:
 8000210:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000214 <__adddf3>:
 8000214:	b530      	push	{r4, r5, lr}
 8000216:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800021a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800021e:	ea94 0f05 	teq	r4, r5
 8000222:	bf08      	it	eq
 8000224:	ea90 0f02 	teqeq	r0, r2
 8000228:	bf1f      	itttt	ne
 800022a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800022e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000232:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000236:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800023a:	f000 80e2 	beq.w	8000402 <__adddf3+0x1ee>
 800023e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000242:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000246:	bfb8      	it	lt
 8000248:	426d      	neglt	r5, r5
 800024a:	dd0c      	ble.n	8000266 <__adddf3+0x52>
 800024c:	442c      	add	r4, r5
 800024e:	ea80 0202 	eor.w	r2, r0, r2
 8000252:	ea81 0303 	eor.w	r3, r1, r3
 8000256:	ea82 0000 	eor.w	r0, r2, r0
 800025a:	ea83 0101 	eor.w	r1, r3, r1
 800025e:	ea80 0202 	eor.w	r2, r0, r2
 8000262:	ea81 0303 	eor.w	r3, r1, r3
 8000266:	2d36      	cmp	r5, #54	@ 0x36
 8000268:	bf88      	it	hi
 800026a:	bd30      	pophi	{r4, r5, pc}
 800026c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000270:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000274:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000278:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800027c:	d002      	beq.n	8000284 <__adddf3+0x70>
 800027e:	4240      	negs	r0, r0
 8000280:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000284:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000288:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800028c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000290:	d002      	beq.n	8000298 <__adddf3+0x84>
 8000292:	4252      	negs	r2, r2
 8000294:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000298:	ea94 0f05 	teq	r4, r5
 800029c:	f000 80a7 	beq.w	80003ee <__adddf3+0x1da>
 80002a0:	f1a4 0401 	sub.w	r4, r4, #1
 80002a4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002a8:	db0d      	blt.n	80002c6 <__adddf3+0xb2>
 80002aa:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002ae:	fa22 f205 	lsr.w	r2, r2, r5
 80002b2:	1880      	adds	r0, r0, r2
 80002b4:	f141 0100 	adc.w	r1, r1, #0
 80002b8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002bc:	1880      	adds	r0, r0, r2
 80002be:	fa43 f305 	asr.w	r3, r3, r5
 80002c2:	4159      	adcs	r1, r3
 80002c4:	e00e      	b.n	80002e4 <__adddf3+0xd0>
 80002c6:	f1a5 0520 	sub.w	r5, r5, #32
 80002ca:	f10e 0e20 	add.w	lr, lr, #32
 80002ce:	2a01      	cmp	r2, #1
 80002d0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002d4:	bf28      	it	cs
 80002d6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002da:	fa43 f305 	asr.w	r3, r3, r5
 80002de:	18c0      	adds	r0, r0, r3
 80002e0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002e4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80002e8:	d507      	bpl.n	80002fa <__adddf3+0xe6>
 80002ea:	f04f 0e00 	mov.w	lr, #0
 80002ee:	f1dc 0c00 	rsbs	ip, ip, #0
 80002f2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002f6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002fa:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80002fe:	d31b      	bcc.n	8000338 <__adddf3+0x124>
 8000300:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8000304:	d30c      	bcc.n	8000320 <__adddf3+0x10c>
 8000306:	0849      	lsrs	r1, r1, #1
 8000308:	ea5f 0030 	movs.w	r0, r0, rrx
 800030c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000310:	f104 0401 	add.w	r4, r4, #1
 8000314:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000318:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 800031c:	f080 809a 	bcs.w	8000454 <__adddf3+0x240>
 8000320:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000324:	bf08      	it	eq
 8000326:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800032a:	f150 0000 	adcs.w	r0, r0, #0
 800032e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000332:	ea41 0105 	orr.w	r1, r1, r5
 8000336:	bd30      	pop	{r4, r5, pc}
 8000338:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800033c:	4140      	adcs	r0, r0
 800033e:	eb41 0101 	adc.w	r1, r1, r1
 8000342:	3c01      	subs	r4, #1
 8000344:	bf28      	it	cs
 8000346:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800034a:	d2e9      	bcs.n	8000320 <__adddf3+0x10c>
 800034c:	f091 0f00 	teq	r1, #0
 8000350:	bf04      	itt	eq
 8000352:	4601      	moveq	r1, r0
 8000354:	2000      	moveq	r0, #0
 8000356:	fab1 f381 	clz	r3, r1
 800035a:	bf08      	it	eq
 800035c:	3320      	addeq	r3, #32
 800035e:	f1a3 030b 	sub.w	r3, r3, #11
 8000362:	f1b3 0220 	subs.w	r2, r3, #32
 8000366:	da0c      	bge.n	8000382 <__adddf3+0x16e>
 8000368:	320c      	adds	r2, #12
 800036a:	dd08      	ble.n	800037e <__adddf3+0x16a>
 800036c:	f102 0c14 	add.w	ip, r2, #20
 8000370:	f1c2 020c 	rsb	r2, r2, #12
 8000374:	fa01 f00c 	lsl.w	r0, r1, ip
 8000378:	fa21 f102 	lsr.w	r1, r1, r2
 800037c:	e00c      	b.n	8000398 <__adddf3+0x184>
 800037e:	f102 0214 	add.w	r2, r2, #20
 8000382:	bfd8      	it	le
 8000384:	f1c2 0c20 	rsble	ip, r2, #32
 8000388:	fa01 f102 	lsl.w	r1, r1, r2
 800038c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000390:	bfdc      	itt	le
 8000392:	ea41 010c 	orrle.w	r1, r1, ip
 8000396:	4090      	lslle	r0, r2
 8000398:	1ae4      	subs	r4, r4, r3
 800039a:	bfa2      	ittt	ge
 800039c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003a0:	4329      	orrge	r1, r5
 80003a2:	bd30      	popge	{r4, r5, pc}
 80003a4:	ea6f 0404 	mvn.w	r4, r4
 80003a8:	3c1f      	subs	r4, #31
 80003aa:	da1c      	bge.n	80003e6 <__adddf3+0x1d2>
 80003ac:	340c      	adds	r4, #12
 80003ae:	dc0e      	bgt.n	80003ce <__adddf3+0x1ba>
 80003b0:	f104 0414 	add.w	r4, r4, #20
 80003b4:	f1c4 0220 	rsb	r2, r4, #32
 80003b8:	fa20 f004 	lsr.w	r0, r0, r4
 80003bc:	fa01 f302 	lsl.w	r3, r1, r2
 80003c0:	ea40 0003 	orr.w	r0, r0, r3
 80003c4:	fa21 f304 	lsr.w	r3, r1, r4
 80003c8:	ea45 0103 	orr.w	r1, r5, r3
 80003cc:	bd30      	pop	{r4, r5, pc}
 80003ce:	f1c4 040c 	rsb	r4, r4, #12
 80003d2:	f1c4 0220 	rsb	r2, r4, #32
 80003d6:	fa20 f002 	lsr.w	r0, r0, r2
 80003da:	fa01 f304 	lsl.w	r3, r1, r4
 80003de:	ea40 0003 	orr.w	r0, r0, r3
 80003e2:	4629      	mov	r1, r5
 80003e4:	bd30      	pop	{r4, r5, pc}
 80003e6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ea:	4629      	mov	r1, r5
 80003ec:	bd30      	pop	{r4, r5, pc}
 80003ee:	f094 0f00 	teq	r4, #0
 80003f2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80003f6:	bf06      	itte	eq
 80003f8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80003fc:	3401      	addeq	r4, #1
 80003fe:	3d01      	subne	r5, #1
 8000400:	e74e      	b.n	80002a0 <__adddf3+0x8c>
 8000402:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000406:	bf18      	it	ne
 8000408:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800040c:	d029      	beq.n	8000462 <__adddf3+0x24e>
 800040e:	ea94 0f05 	teq	r4, r5
 8000412:	bf08      	it	eq
 8000414:	ea90 0f02 	teqeq	r0, r2
 8000418:	d005      	beq.n	8000426 <__adddf3+0x212>
 800041a:	ea54 0c00 	orrs.w	ip, r4, r0
 800041e:	bf04      	itt	eq
 8000420:	4619      	moveq	r1, r3
 8000422:	4610      	moveq	r0, r2
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	ea91 0f03 	teq	r1, r3
 800042a:	bf1e      	ittt	ne
 800042c:	2100      	movne	r1, #0
 800042e:	2000      	movne	r0, #0
 8000430:	bd30      	popne	{r4, r5, pc}
 8000432:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000436:	d105      	bne.n	8000444 <__adddf3+0x230>
 8000438:	0040      	lsls	r0, r0, #1
 800043a:	4149      	adcs	r1, r1
 800043c:	bf28      	it	cs
 800043e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000442:	bd30      	pop	{r4, r5, pc}
 8000444:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000448:	bf3c      	itt	cc
 800044a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800044e:	bd30      	popcc	{r4, r5, pc}
 8000450:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000454:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000458:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800045c:	f04f 0000 	mov.w	r0, #0
 8000460:	bd30      	pop	{r4, r5, pc}
 8000462:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000466:	bf1a      	itte	ne
 8000468:	4619      	movne	r1, r3
 800046a:	4610      	movne	r0, r2
 800046c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000470:	bf1c      	itt	ne
 8000472:	460b      	movne	r3, r1
 8000474:	4602      	movne	r2, r0
 8000476:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800047a:	bf06      	itte	eq
 800047c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000480:	ea91 0f03 	teqeq	r1, r3
 8000484:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000488:	bd30      	pop	{r4, r5, pc}
 800048a:	bf00      	nop

0800048c <__aeabi_ui2d>:
 800048c:	f090 0f00 	teq	r0, #0
 8000490:	bf04      	itt	eq
 8000492:	2100      	moveq	r1, #0
 8000494:	4770      	bxeq	lr
 8000496:	b530      	push	{r4, r5, lr}
 8000498:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800049c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004a0:	f04f 0500 	mov.w	r5, #0
 80004a4:	f04f 0100 	mov.w	r1, #0
 80004a8:	e750      	b.n	800034c <__adddf3+0x138>
 80004aa:	bf00      	nop

080004ac <__aeabi_i2d>:
 80004ac:	f090 0f00 	teq	r0, #0
 80004b0:	bf04      	itt	eq
 80004b2:	2100      	moveq	r1, #0
 80004b4:	4770      	bxeq	lr
 80004b6:	b530      	push	{r4, r5, lr}
 80004b8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004bc:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004c0:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80004c4:	bf48      	it	mi
 80004c6:	4240      	negmi	r0, r0
 80004c8:	f04f 0100 	mov.w	r1, #0
 80004cc:	e73e      	b.n	800034c <__adddf3+0x138>
 80004ce:	bf00      	nop

080004d0 <__aeabi_f2d>:
 80004d0:	0042      	lsls	r2, r0, #1
 80004d2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004d6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004da:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004de:	bf1f      	itttt	ne
 80004e0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80004e4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80004e8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80004ec:	4770      	bxne	lr
 80004ee:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80004f2:	bf08      	it	eq
 80004f4:	4770      	bxeq	lr
 80004f6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80004fa:	bf04      	itt	eq
 80004fc:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000500:	4770      	bxeq	lr
 8000502:	b530      	push	{r4, r5, lr}
 8000504:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000510:	e71c      	b.n	800034c <__adddf3+0x138>
 8000512:	bf00      	nop

08000514 <__aeabi_ul2d>:
 8000514:	ea50 0201 	orrs.w	r2, r0, r1
 8000518:	bf08      	it	eq
 800051a:	4770      	bxeq	lr
 800051c:	b530      	push	{r4, r5, lr}
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	e00a      	b.n	800053a <__aeabi_l2d+0x16>

08000524 <__aeabi_l2d>:
 8000524:	ea50 0201 	orrs.w	r2, r0, r1
 8000528:	bf08      	it	eq
 800052a:	4770      	bxeq	lr
 800052c:	b530      	push	{r4, r5, lr}
 800052e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000532:	d502      	bpl.n	800053a <__aeabi_l2d+0x16>
 8000534:	4240      	negs	r0, r0
 8000536:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800053a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800053e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000542:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000546:	f43f aed8 	beq.w	80002fa <__adddf3+0xe6>
 800054a:	f04f 0203 	mov.w	r2, #3
 800054e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000552:	bf18      	it	ne
 8000554:	3203      	addne	r2, #3
 8000556:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800055a:	bf18      	it	ne
 800055c:	3203      	addne	r2, #3
 800055e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000562:	f1c2 0320 	rsb	r3, r2, #32
 8000566:	fa00 fc03 	lsl.w	ip, r0, r3
 800056a:	fa20 f002 	lsr.w	r0, r0, r2
 800056e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000572:	ea40 000e 	orr.w	r0, r0, lr
 8000576:	fa21 f102 	lsr.w	r1, r1, r2
 800057a:	4414      	add	r4, r2
 800057c:	e6bd      	b.n	80002fa <__adddf3+0xe6>
 800057e:	bf00      	nop

08000580 <__aeabi_dmul>:
 8000580:	b570      	push	{r4, r5, r6, lr}
 8000582:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000586:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800058a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800058e:	bf1d      	ittte	ne
 8000590:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000594:	ea94 0f0c 	teqne	r4, ip
 8000598:	ea95 0f0c 	teqne	r5, ip
 800059c:	f000 f8de 	bleq	800075c <__aeabi_dmul+0x1dc>
 80005a0:	442c      	add	r4, r5
 80005a2:	ea81 0603 	eor.w	r6, r1, r3
 80005a6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005aa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005ae:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005b2:	bf18      	it	ne
 80005b4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005bc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80005c0:	d038      	beq.n	8000634 <__aeabi_dmul+0xb4>
 80005c2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005ce:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80005d2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005d6:	f04f 0600 	mov.w	r6, #0
 80005da:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005de:	f09c 0f00 	teq	ip, #0
 80005e2:	bf18      	it	ne
 80005e4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005e8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80005ec:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80005f0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80005f4:	d204      	bcs.n	8000600 <__aeabi_dmul+0x80>
 80005f6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005fa:	416d      	adcs	r5, r5
 80005fc:	eb46 0606 	adc.w	r6, r6, r6
 8000600:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000604:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000608:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800060c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000610:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000614:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000618:	bf88      	it	hi
 800061a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800061e:	d81e      	bhi.n	800065e <__aeabi_dmul+0xde>
 8000620:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000624:	bf08      	it	eq
 8000626:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800062a:	f150 0000 	adcs.w	r0, r0, #0
 800062e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000632:	bd70      	pop	{r4, r5, r6, pc}
 8000634:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000638:	ea46 0101 	orr.w	r1, r6, r1
 800063c:	ea40 0002 	orr.w	r0, r0, r2
 8000640:	ea81 0103 	eor.w	r1, r1, r3
 8000644:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000648:	bfc2      	ittt	gt
 800064a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800064e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000652:	bd70      	popgt	{r4, r5, r6, pc}
 8000654:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000658:	f04f 0e00 	mov.w	lr, #0
 800065c:	3c01      	subs	r4, #1
 800065e:	f300 80ab 	bgt.w	80007b8 <__aeabi_dmul+0x238>
 8000662:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000666:	bfde      	ittt	le
 8000668:	2000      	movle	r0, #0
 800066a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800066e:	bd70      	pople	{r4, r5, r6, pc}
 8000670:	f1c4 0400 	rsb	r4, r4, #0
 8000674:	3c20      	subs	r4, #32
 8000676:	da35      	bge.n	80006e4 <__aeabi_dmul+0x164>
 8000678:	340c      	adds	r4, #12
 800067a:	dc1b      	bgt.n	80006b4 <__aeabi_dmul+0x134>
 800067c:	f104 0414 	add.w	r4, r4, #20
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f305 	lsl.w	r3, r0, r5
 8000688:	fa20 f004 	lsr.w	r0, r0, r4
 800068c:	fa01 f205 	lsl.w	r2, r1, r5
 8000690:	ea40 0002 	orr.w	r0, r0, r2
 8000694:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000698:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800069c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a0:	fa21 f604 	lsr.w	r6, r1, r4
 80006a4:	eb42 0106 	adc.w	r1, r2, r6
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 040c 	rsb	r4, r4, #12
 80006b8:	f1c4 0520 	rsb	r5, r4, #32
 80006bc:	fa00 f304 	lsl.w	r3, r0, r4
 80006c0:	fa20 f005 	lsr.w	r0, r0, r5
 80006c4:	fa01 f204 	lsl.w	r2, r1, r4
 80006c8:	ea40 0002 	orr.w	r0, r0, r2
 80006cc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006d4:	f141 0100 	adc.w	r1, r1, #0
 80006d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006dc:	bf08      	it	eq
 80006de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f1c4 0520 	rsb	r5, r4, #32
 80006e8:	fa00 f205 	lsl.w	r2, r0, r5
 80006ec:	ea4e 0e02 	orr.w	lr, lr, r2
 80006f0:	fa20 f304 	lsr.w	r3, r0, r4
 80006f4:	fa01 f205 	lsl.w	r2, r1, r5
 80006f8:	ea43 0302 	orr.w	r3, r3, r2
 80006fc:	fa21 f004 	lsr.w	r0, r1, r4
 8000700:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000704:	fa21 f204 	lsr.w	r2, r1, r4
 8000708:	ea20 0002 	bic.w	r0, r0, r2
 800070c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000710:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000714:	bf08      	it	eq
 8000716:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800071a:	bd70      	pop	{r4, r5, r6, pc}
 800071c:	f094 0f00 	teq	r4, #0
 8000720:	d10f      	bne.n	8000742 <__aeabi_dmul+0x1c2>
 8000722:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000726:	0040      	lsls	r0, r0, #1
 8000728:	eb41 0101 	adc.w	r1, r1, r1
 800072c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000730:	bf08      	it	eq
 8000732:	3c01      	subeq	r4, #1
 8000734:	d0f7      	beq.n	8000726 <__aeabi_dmul+0x1a6>
 8000736:	ea41 0106 	orr.w	r1, r1, r6
 800073a:	f095 0f00 	teq	r5, #0
 800073e:	bf18      	it	ne
 8000740:	4770      	bxne	lr
 8000742:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000746:	0052      	lsls	r2, r2, #1
 8000748:	eb43 0303 	adc.w	r3, r3, r3
 800074c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000750:	bf08      	it	eq
 8000752:	3d01      	subeq	r5, #1
 8000754:	d0f7      	beq.n	8000746 <__aeabi_dmul+0x1c6>
 8000756:	ea43 0306 	orr.w	r3, r3, r6
 800075a:	4770      	bx	lr
 800075c:	ea94 0f0c 	teq	r4, ip
 8000760:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000764:	bf18      	it	ne
 8000766:	ea95 0f0c 	teqne	r5, ip
 800076a:	d00c      	beq.n	8000786 <__aeabi_dmul+0x206>
 800076c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000770:	bf18      	it	ne
 8000772:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000776:	d1d1      	bne.n	800071c <__aeabi_dmul+0x19c>
 8000778:	ea81 0103 	eor.w	r1, r1, r3
 800077c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000780:	f04f 0000 	mov.w	r0, #0
 8000784:	bd70      	pop	{r4, r5, r6, pc}
 8000786:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800078a:	bf06      	itte	eq
 800078c:	4610      	moveq	r0, r2
 800078e:	4619      	moveq	r1, r3
 8000790:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000794:	d019      	beq.n	80007ca <__aeabi_dmul+0x24a>
 8000796:	ea94 0f0c 	teq	r4, ip
 800079a:	d102      	bne.n	80007a2 <__aeabi_dmul+0x222>
 800079c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007a0:	d113      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007a2:	ea95 0f0c 	teq	r5, ip
 80007a6:	d105      	bne.n	80007b4 <__aeabi_dmul+0x234>
 80007a8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007ac:	bf1c      	itt	ne
 80007ae:	4610      	movne	r0, r2
 80007b0:	4619      	movne	r1, r3
 80007b2:	d10a      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007b4:	ea81 0103 	eor.w	r1, r1, r3
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007c0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80007c4:	f04f 0000 	mov.w	r0, #0
 80007c8:	bd70      	pop	{r4, r5, r6, pc}
 80007ca:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007ce:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80007d2:	bd70      	pop	{r4, r5, r6, pc}

080007d4 <__aeabi_ddiv>:
 80007d4:	b570      	push	{r4, r5, r6, lr}
 80007d6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80007da:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80007de:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007e2:	bf1d      	ittte	ne
 80007e4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007e8:	ea94 0f0c 	teqne	r4, ip
 80007ec:	ea95 0f0c 	teqne	r5, ip
 80007f0:	f000 f8a7 	bleq	8000942 <__aeabi_ddiv+0x16e>
 80007f4:	eba4 0405 	sub.w	r4, r4, r5
 80007f8:	ea81 0e03 	eor.w	lr, r1, r3
 80007fc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000800:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000804:	f000 8088 	beq.w	8000918 <__aeabi_ddiv+0x144>
 8000808:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800080c:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000810:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000814:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000818:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800081c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000820:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000824:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000828:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 800082c:	429d      	cmp	r5, r3
 800082e:	bf08      	it	eq
 8000830:	4296      	cmpeq	r6, r2
 8000832:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 8000836:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 800083a:	d202      	bcs.n	8000842 <__aeabi_ddiv+0x6e>
 800083c:	085b      	lsrs	r3, r3, #1
 800083e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000842:	1ab6      	subs	r6, r6, r2
 8000844:	eb65 0503 	sbc.w	r5, r5, r3
 8000848:	085b      	lsrs	r3, r3, #1
 800084a:	ea4f 0232 	mov.w	r2, r2, rrx
 800084e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000852:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 000c 	orrcs.w	r0, r0, ip
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000880:	085b      	lsrs	r3, r3, #1
 8000882:	ea4f 0232 	mov.w	r2, r2, rrx
 8000886:	ebb6 0e02 	subs.w	lr, r6, r2
 800088a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088e:	bf22      	ittt	cs
 8000890:	1ab6      	subcs	r6, r6, r2
 8000892:	4675      	movcs	r5, lr
 8000894:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000898:	085b      	lsrs	r3, r3, #1
 800089a:	ea4f 0232 	mov.w	r2, r2, rrx
 800089e:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a6:	bf22      	ittt	cs
 80008a8:	1ab6      	subcs	r6, r6, r2
 80008aa:	4675      	movcs	r5, lr
 80008ac:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008b0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008b4:	d018      	beq.n	80008e8 <__aeabi_ddiv+0x114>
 80008b6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008ba:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008be:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008c2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008c6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008ca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008ce:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008d2:	d1c0      	bne.n	8000856 <__aeabi_ddiv+0x82>
 80008d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008d8:	d10b      	bne.n	80008f2 <__aeabi_ddiv+0x11e>
 80008da:	ea41 0100 	orr.w	r1, r1, r0
 80008de:	f04f 0000 	mov.w	r0, #0
 80008e2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80008e6:	e7b6      	b.n	8000856 <__aeabi_ddiv+0x82>
 80008e8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008ec:	bf04      	itt	eq
 80008ee:	4301      	orreq	r1, r0
 80008f0:	2000      	moveq	r0, #0
 80008f2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80008f6:	bf88      	it	hi
 80008f8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80008fc:	f63f aeaf 	bhi.w	800065e <__aeabi_dmul+0xde>
 8000900:	ebb5 0c03 	subs.w	ip, r5, r3
 8000904:	bf04      	itt	eq
 8000906:	ebb6 0c02 	subseq.w	ip, r6, r2
 800090a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800090e:	f150 0000 	adcs.w	r0, r0, #0
 8000912:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000916:	bd70      	pop	{r4, r5, r6, pc}
 8000918:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 800091c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000920:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000924:	bfc2      	ittt	gt
 8000926:	ebd4 050c 	rsbsgt	r5, r4, ip
 800092a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800092e:	bd70      	popgt	{r4, r5, r6, pc}
 8000930:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000934:	f04f 0e00 	mov.w	lr, #0
 8000938:	3c01      	subs	r4, #1
 800093a:	e690      	b.n	800065e <__aeabi_dmul+0xde>
 800093c:	ea45 0e06 	orr.w	lr, r5, r6
 8000940:	e68d      	b.n	800065e <__aeabi_dmul+0xde>
 8000942:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000946:	ea94 0f0c 	teq	r4, ip
 800094a:	bf08      	it	eq
 800094c:	ea95 0f0c 	teqeq	r5, ip
 8000950:	f43f af3b 	beq.w	80007ca <__aeabi_dmul+0x24a>
 8000954:	ea94 0f0c 	teq	r4, ip
 8000958:	d10a      	bne.n	8000970 <__aeabi_ddiv+0x19c>
 800095a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800095e:	f47f af34 	bne.w	80007ca <__aeabi_dmul+0x24a>
 8000962:	ea95 0f0c 	teq	r5, ip
 8000966:	f47f af25 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800096a:	4610      	mov	r0, r2
 800096c:	4619      	mov	r1, r3
 800096e:	e72c      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000970:	ea95 0f0c 	teq	r5, ip
 8000974:	d106      	bne.n	8000984 <__aeabi_ddiv+0x1b0>
 8000976:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800097a:	f43f aefd 	beq.w	8000778 <__aeabi_dmul+0x1f8>
 800097e:	4610      	mov	r0, r2
 8000980:	4619      	mov	r1, r3
 8000982:	e722      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000984:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000988:	bf18      	it	ne
 800098a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800098e:	f47f aec5 	bne.w	800071c <__aeabi_dmul+0x19c>
 8000992:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000996:	f47f af0d 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800099a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800099e:	f47f aeeb 	bne.w	8000778 <__aeabi_dmul+0x1f8>
 80009a2:	e712      	b.n	80007ca <__aeabi_dmul+0x24a>

080009a4 <__gedf2>:
 80009a4:	f04f 3cff 	mov.w	ip, #4294967295
 80009a8:	e006      	b.n	80009b8 <__cmpdf2+0x4>
 80009aa:	bf00      	nop

080009ac <__ledf2>:
 80009ac:	f04f 0c01 	mov.w	ip, #1
 80009b0:	e002      	b.n	80009b8 <__cmpdf2+0x4>
 80009b2:	bf00      	nop

080009b4 <__cmpdf2>:
 80009b4:	f04f 0c01 	mov.w	ip, #1
 80009b8:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009bc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009c0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009c4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009c8:	bf18      	it	ne
 80009ca:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009ce:	d01b      	beq.n	8000a08 <__cmpdf2+0x54>
 80009d0:	b001      	add	sp, #4
 80009d2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009d6:	bf0c      	ite	eq
 80009d8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009dc:	ea91 0f03 	teqne	r1, r3
 80009e0:	bf02      	ittt	eq
 80009e2:	ea90 0f02 	teqeq	r0, r2
 80009e6:	2000      	moveq	r0, #0
 80009e8:	4770      	bxeq	lr
 80009ea:	f110 0f00 	cmn.w	r0, #0
 80009ee:	ea91 0f03 	teq	r1, r3
 80009f2:	bf58      	it	pl
 80009f4:	4299      	cmppl	r1, r3
 80009f6:	bf08      	it	eq
 80009f8:	4290      	cmpeq	r0, r2
 80009fa:	bf2c      	ite	cs
 80009fc:	17d8      	asrcs	r0, r3, #31
 80009fe:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a02:	f040 0001 	orr.w	r0, r0, #1
 8000a06:	4770      	bx	lr
 8000a08:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a0c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a10:	d102      	bne.n	8000a18 <__cmpdf2+0x64>
 8000a12:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a16:	d107      	bne.n	8000a28 <__cmpdf2+0x74>
 8000a18:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a20:	d1d6      	bne.n	80009d0 <__cmpdf2+0x1c>
 8000a22:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a26:	d0d3      	beq.n	80009d0 <__cmpdf2+0x1c>
 8000a28:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a2c:	4770      	bx	lr
 8000a2e:	bf00      	nop

08000a30 <__aeabi_cdrcmple>:
 8000a30:	4684      	mov	ip, r0
 8000a32:	4610      	mov	r0, r2
 8000a34:	4662      	mov	r2, ip
 8000a36:	468c      	mov	ip, r1
 8000a38:	4619      	mov	r1, r3
 8000a3a:	4663      	mov	r3, ip
 8000a3c:	e000      	b.n	8000a40 <__aeabi_cdcmpeq>
 8000a3e:	bf00      	nop

08000a40 <__aeabi_cdcmpeq>:
 8000a40:	b501      	push	{r0, lr}
 8000a42:	f7ff ffb7 	bl	80009b4 <__cmpdf2>
 8000a46:	2800      	cmp	r0, #0
 8000a48:	bf48      	it	mi
 8000a4a:	f110 0f00 	cmnmi.w	r0, #0
 8000a4e:	bd01      	pop	{r0, pc}

08000a50 <__aeabi_dcmpeq>:
 8000a50:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a54:	f7ff fff4 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a58:	bf0c      	ite	eq
 8000a5a:	2001      	moveq	r0, #1
 8000a5c:	2000      	movne	r0, #0
 8000a5e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a62:	bf00      	nop

08000a64 <__aeabi_dcmplt>:
 8000a64:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a68:	f7ff ffea 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a6c:	bf34      	ite	cc
 8000a6e:	2001      	movcc	r0, #1
 8000a70:	2000      	movcs	r0, #0
 8000a72:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a76:	bf00      	nop

08000a78 <__aeabi_dcmple>:
 8000a78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a7c:	f7ff ffe0 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a80:	bf94      	ite	ls
 8000a82:	2001      	movls	r0, #1
 8000a84:	2000      	movhi	r0, #0
 8000a86:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a8a:	bf00      	nop

08000a8c <__aeabi_dcmpge>:
 8000a8c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a90:	f7ff ffce 	bl	8000a30 <__aeabi_cdrcmple>
 8000a94:	bf94      	ite	ls
 8000a96:	2001      	movls	r0, #1
 8000a98:	2000      	movhi	r0, #0
 8000a9a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a9e:	bf00      	nop

08000aa0 <__aeabi_dcmpgt>:
 8000aa0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa4:	f7ff ffc4 	bl	8000a30 <__aeabi_cdrcmple>
 8000aa8:	bf34      	ite	cc
 8000aaa:	2001      	movcc	r0, #1
 8000aac:	2000      	movcs	r0, #0
 8000aae:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ab2:	bf00      	nop

08000ab4 <__aeabi_dcmpun>:
 8000ab4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000abc:	d102      	bne.n	8000ac4 <__aeabi_dcmpun+0x10>
 8000abe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ac2:	d10a      	bne.n	8000ada <__aeabi_dcmpun+0x26>
 8000ac4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000acc:	d102      	bne.n	8000ad4 <__aeabi_dcmpun+0x20>
 8000ace:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ad2:	d102      	bne.n	8000ada <__aeabi_dcmpun+0x26>
 8000ad4:	f04f 0000 	mov.w	r0, #0
 8000ad8:	4770      	bx	lr
 8000ada:	f04f 0001 	mov.w	r0, #1
 8000ade:	4770      	bx	lr

08000ae0 <__aeabi_d2iz>:
 8000ae0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ae4:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ae8:	d215      	bcs.n	8000b16 <__aeabi_d2iz+0x36>
 8000aea:	d511      	bpl.n	8000b10 <__aeabi_d2iz+0x30>
 8000aec:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000af0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000af4:	d912      	bls.n	8000b1c <__aeabi_d2iz+0x3c>
 8000af6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000afa:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000afe:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b02:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b06:	fa23 f002 	lsr.w	r0, r3, r2
 8000b0a:	bf18      	it	ne
 8000b0c:	4240      	negne	r0, r0
 8000b0e:	4770      	bx	lr
 8000b10:	f04f 0000 	mov.w	r0, #0
 8000b14:	4770      	bx	lr
 8000b16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b1a:	d105      	bne.n	8000b28 <__aeabi_d2iz+0x48>
 8000b1c:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b20:	bf08      	it	eq
 8000b22:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b26:	4770      	bx	lr
 8000b28:	f04f 0000 	mov.w	r0, #0
 8000b2c:	4770      	bx	lr
 8000b2e:	bf00      	nop

08000b30 <__aeabi_d2uiz>:
 8000b30:	004a      	lsls	r2, r1, #1
 8000b32:	d211      	bcs.n	8000b58 <__aeabi_d2uiz+0x28>
 8000b34:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b38:	d211      	bcs.n	8000b5e <__aeabi_d2uiz+0x2e>
 8000b3a:	d50d      	bpl.n	8000b58 <__aeabi_d2uiz+0x28>
 8000b3c:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b40:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b44:	d40e      	bmi.n	8000b64 <__aeabi_d2uiz+0x34>
 8000b46:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b4a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b4e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b52:	fa23 f002 	lsr.w	r0, r3, r2
 8000b56:	4770      	bx	lr
 8000b58:	f04f 0000 	mov.w	r0, #0
 8000b5c:	4770      	bx	lr
 8000b5e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b62:	d102      	bne.n	8000b6a <__aeabi_d2uiz+0x3a>
 8000b64:	f04f 30ff 	mov.w	r0, #4294967295
 8000b68:	4770      	bx	lr
 8000b6a:	f04f 0000 	mov.w	r0, #0
 8000b6e:	4770      	bx	lr

08000b70 <__aeabi_d2f>:
 8000b70:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b74:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b78:	bf24      	itt	cs
 8000b7a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b7e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b82:	d90d      	bls.n	8000ba0 <__aeabi_d2f+0x30>
 8000b84:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b88:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b8c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b90:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b94:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b98:	bf08      	it	eq
 8000b9a:	f020 0001 	biceq.w	r0, r0, #1
 8000b9e:	4770      	bx	lr
 8000ba0:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000ba4:	d121      	bne.n	8000bea <__aeabi_d2f+0x7a>
 8000ba6:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000baa:	bfbc      	itt	lt
 8000bac:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000bb0:	4770      	bxlt	lr
 8000bb2:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bb6:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bba:	f1c2 0218 	rsb	r2, r2, #24
 8000bbe:	f1c2 0c20 	rsb	ip, r2, #32
 8000bc2:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bc6:	fa20 f002 	lsr.w	r0, r0, r2
 8000bca:	bf18      	it	ne
 8000bcc:	f040 0001 	orrne.w	r0, r0, #1
 8000bd0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bd8:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bdc:	ea40 000c 	orr.w	r0, r0, ip
 8000be0:	fa23 f302 	lsr.w	r3, r3, r2
 8000be4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000be8:	e7cc      	b.n	8000b84 <__aeabi_d2f+0x14>
 8000bea:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bee:	d107      	bne.n	8000c00 <__aeabi_d2f+0x90>
 8000bf0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000bf4:	bf1e      	ittt	ne
 8000bf6:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000bfa:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000bfe:	4770      	bxne	lr
 8000c00:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c04:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c08:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c0c:	4770      	bx	lr
 8000c0e:	bf00      	nop

08000c10 <__aeabi_uldivmod>:
 8000c10:	b953      	cbnz	r3, 8000c28 <__aeabi_uldivmod+0x18>
 8000c12:	b94a      	cbnz	r2, 8000c28 <__aeabi_uldivmod+0x18>
 8000c14:	2900      	cmp	r1, #0
 8000c16:	bf08      	it	eq
 8000c18:	2800      	cmpeq	r0, #0
 8000c1a:	bf1c      	itt	ne
 8000c1c:	f04f 31ff 	movne.w	r1, #4294967295
 8000c20:	f04f 30ff 	movne.w	r0, #4294967295
 8000c24:	f000 b96a 	b.w	8000efc <__aeabi_idiv0>
 8000c28:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c2c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c30:	f000 f806 	bl	8000c40 <__udivmoddi4>
 8000c34:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c38:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c3c:	b004      	add	sp, #16
 8000c3e:	4770      	bx	lr

08000c40 <__udivmoddi4>:
 8000c40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c44:	9d08      	ldr	r5, [sp, #32]
 8000c46:	460c      	mov	r4, r1
 8000c48:	2b00      	cmp	r3, #0
 8000c4a:	d14e      	bne.n	8000cea <__udivmoddi4+0xaa>
 8000c4c:	4694      	mov	ip, r2
 8000c4e:	458c      	cmp	ip, r1
 8000c50:	4686      	mov	lr, r0
 8000c52:	fab2 f282 	clz	r2, r2
 8000c56:	d962      	bls.n	8000d1e <__udivmoddi4+0xde>
 8000c58:	b14a      	cbz	r2, 8000c6e <__udivmoddi4+0x2e>
 8000c5a:	f1c2 0320 	rsb	r3, r2, #32
 8000c5e:	4091      	lsls	r1, r2
 8000c60:	fa20 f303 	lsr.w	r3, r0, r3
 8000c64:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c68:	4319      	orrs	r1, r3
 8000c6a:	fa00 fe02 	lsl.w	lr, r0, r2
 8000c6e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c72:	fa1f f68c 	uxth.w	r6, ip
 8000c76:	fbb1 f4f7 	udiv	r4, r1, r7
 8000c7a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000c7e:	fb07 1114 	mls	r1, r7, r4, r1
 8000c82:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c86:	fb04 f106 	mul.w	r1, r4, r6
 8000c8a:	4299      	cmp	r1, r3
 8000c8c:	d90a      	bls.n	8000ca4 <__udivmoddi4+0x64>
 8000c8e:	eb1c 0303 	adds.w	r3, ip, r3
 8000c92:	f104 30ff 	add.w	r0, r4, #4294967295
 8000c96:	f080 8112 	bcs.w	8000ebe <__udivmoddi4+0x27e>
 8000c9a:	4299      	cmp	r1, r3
 8000c9c:	f240 810f 	bls.w	8000ebe <__udivmoddi4+0x27e>
 8000ca0:	3c02      	subs	r4, #2
 8000ca2:	4463      	add	r3, ip
 8000ca4:	1a59      	subs	r1, r3, r1
 8000ca6:	fa1f f38e 	uxth.w	r3, lr
 8000caa:	fbb1 f0f7 	udiv	r0, r1, r7
 8000cae:	fb07 1110 	mls	r1, r7, r0, r1
 8000cb2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cb6:	fb00 f606 	mul.w	r6, r0, r6
 8000cba:	429e      	cmp	r6, r3
 8000cbc:	d90a      	bls.n	8000cd4 <__udivmoddi4+0x94>
 8000cbe:	eb1c 0303 	adds.w	r3, ip, r3
 8000cc2:	f100 31ff 	add.w	r1, r0, #4294967295
 8000cc6:	f080 80fc 	bcs.w	8000ec2 <__udivmoddi4+0x282>
 8000cca:	429e      	cmp	r6, r3
 8000ccc:	f240 80f9 	bls.w	8000ec2 <__udivmoddi4+0x282>
 8000cd0:	4463      	add	r3, ip
 8000cd2:	3802      	subs	r0, #2
 8000cd4:	1b9b      	subs	r3, r3, r6
 8000cd6:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000cda:	2100      	movs	r1, #0
 8000cdc:	b11d      	cbz	r5, 8000ce6 <__udivmoddi4+0xa6>
 8000cde:	40d3      	lsrs	r3, r2
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	e9c5 3200 	strd	r3, r2, [r5]
 8000ce6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cea:	428b      	cmp	r3, r1
 8000cec:	d905      	bls.n	8000cfa <__udivmoddi4+0xba>
 8000cee:	b10d      	cbz	r5, 8000cf4 <__udivmoddi4+0xb4>
 8000cf0:	e9c5 0100 	strd	r0, r1, [r5]
 8000cf4:	2100      	movs	r1, #0
 8000cf6:	4608      	mov	r0, r1
 8000cf8:	e7f5      	b.n	8000ce6 <__udivmoddi4+0xa6>
 8000cfa:	fab3 f183 	clz	r1, r3
 8000cfe:	2900      	cmp	r1, #0
 8000d00:	d146      	bne.n	8000d90 <__udivmoddi4+0x150>
 8000d02:	42a3      	cmp	r3, r4
 8000d04:	d302      	bcc.n	8000d0c <__udivmoddi4+0xcc>
 8000d06:	4290      	cmp	r0, r2
 8000d08:	f0c0 80f0 	bcc.w	8000eec <__udivmoddi4+0x2ac>
 8000d0c:	1a86      	subs	r6, r0, r2
 8000d0e:	eb64 0303 	sbc.w	r3, r4, r3
 8000d12:	2001      	movs	r0, #1
 8000d14:	2d00      	cmp	r5, #0
 8000d16:	d0e6      	beq.n	8000ce6 <__udivmoddi4+0xa6>
 8000d18:	e9c5 6300 	strd	r6, r3, [r5]
 8000d1c:	e7e3      	b.n	8000ce6 <__udivmoddi4+0xa6>
 8000d1e:	2a00      	cmp	r2, #0
 8000d20:	f040 8090 	bne.w	8000e44 <__udivmoddi4+0x204>
 8000d24:	eba1 040c 	sub.w	r4, r1, ip
 8000d28:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d2c:	fa1f f78c 	uxth.w	r7, ip
 8000d30:	2101      	movs	r1, #1
 8000d32:	fbb4 f6f8 	udiv	r6, r4, r8
 8000d36:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d3a:	fb08 4416 	mls	r4, r8, r6, r4
 8000d3e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d42:	fb07 f006 	mul.w	r0, r7, r6
 8000d46:	4298      	cmp	r0, r3
 8000d48:	d908      	bls.n	8000d5c <__udivmoddi4+0x11c>
 8000d4a:	eb1c 0303 	adds.w	r3, ip, r3
 8000d4e:	f106 34ff 	add.w	r4, r6, #4294967295
 8000d52:	d202      	bcs.n	8000d5a <__udivmoddi4+0x11a>
 8000d54:	4298      	cmp	r0, r3
 8000d56:	f200 80cd 	bhi.w	8000ef4 <__udivmoddi4+0x2b4>
 8000d5a:	4626      	mov	r6, r4
 8000d5c:	1a1c      	subs	r4, r3, r0
 8000d5e:	fa1f f38e 	uxth.w	r3, lr
 8000d62:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d66:	fb08 4410 	mls	r4, r8, r0, r4
 8000d6a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d6e:	fb00 f707 	mul.w	r7, r0, r7
 8000d72:	429f      	cmp	r7, r3
 8000d74:	d908      	bls.n	8000d88 <__udivmoddi4+0x148>
 8000d76:	eb1c 0303 	adds.w	r3, ip, r3
 8000d7a:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d7e:	d202      	bcs.n	8000d86 <__udivmoddi4+0x146>
 8000d80:	429f      	cmp	r7, r3
 8000d82:	f200 80b0 	bhi.w	8000ee6 <__udivmoddi4+0x2a6>
 8000d86:	4620      	mov	r0, r4
 8000d88:	1bdb      	subs	r3, r3, r7
 8000d8a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d8e:	e7a5      	b.n	8000cdc <__udivmoddi4+0x9c>
 8000d90:	f1c1 0620 	rsb	r6, r1, #32
 8000d94:	408b      	lsls	r3, r1
 8000d96:	fa22 f706 	lsr.w	r7, r2, r6
 8000d9a:	431f      	orrs	r7, r3
 8000d9c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000da0:	fa04 f301 	lsl.w	r3, r4, r1
 8000da4:	ea43 030c 	orr.w	r3, r3, ip
 8000da8:	40f4      	lsrs	r4, r6
 8000daa:	fa00 f801 	lsl.w	r8, r0, r1
 8000dae:	0c38      	lsrs	r0, r7, #16
 8000db0:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000db4:	fbb4 fef0 	udiv	lr, r4, r0
 8000db8:	fa1f fc87 	uxth.w	ip, r7
 8000dbc:	fb00 441e 	mls	r4, r0, lr, r4
 8000dc0:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000dc4:	fb0e f90c 	mul.w	r9, lr, ip
 8000dc8:	45a1      	cmp	r9, r4
 8000dca:	fa02 f201 	lsl.w	r2, r2, r1
 8000dce:	d90a      	bls.n	8000de6 <__udivmoddi4+0x1a6>
 8000dd0:	193c      	adds	r4, r7, r4
 8000dd2:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000dd6:	f080 8084 	bcs.w	8000ee2 <__udivmoddi4+0x2a2>
 8000dda:	45a1      	cmp	r9, r4
 8000ddc:	f240 8081 	bls.w	8000ee2 <__udivmoddi4+0x2a2>
 8000de0:	f1ae 0e02 	sub.w	lr, lr, #2
 8000de4:	443c      	add	r4, r7
 8000de6:	eba4 0409 	sub.w	r4, r4, r9
 8000dea:	fa1f f983 	uxth.w	r9, r3
 8000dee:	fbb4 f3f0 	udiv	r3, r4, r0
 8000df2:	fb00 4413 	mls	r4, r0, r3, r4
 8000df6:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000dfa:	fb03 fc0c 	mul.w	ip, r3, ip
 8000dfe:	45a4      	cmp	ip, r4
 8000e00:	d907      	bls.n	8000e12 <__udivmoddi4+0x1d2>
 8000e02:	193c      	adds	r4, r7, r4
 8000e04:	f103 30ff 	add.w	r0, r3, #4294967295
 8000e08:	d267      	bcs.n	8000eda <__udivmoddi4+0x29a>
 8000e0a:	45a4      	cmp	ip, r4
 8000e0c:	d965      	bls.n	8000eda <__udivmoddi4+0x29a>
 8000e0e:	3b02      	subs	r3, #2
 8000e10:	443c      	add	r4, r7
 8000e12:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e16:	fba0 9302 	umull	r9, r3, r0, r2
 8000e1a:	eba4 040c 	sub.w	r4, r4, ip
 8000e1e:	429c      	cmp	r4, r3
 8000e20:	46ce      	mov	lr, r9
 8000e22:	469c      	mov	ip, r3
 8000e24:	d351      	bcc.n	8000eca <__udivmoddi4+0x28a>
 8000e26:	d04e      	beq.n	8000ec6 <__udivmoddi4+0x286>
 8000e28:	b155      	cbz	r5, 8000e40 <__udivmoddi4+0x200>
 8000e2a:	ebb8 030e 	subs.w	r3, r8, lr
 8000e2e:	eb64 040c 	sbc.w	r4, r4, ip
 8000e32:	fa04 f606 	lsl.w	r6, r4, r6
 8000e36:	40cb      	lsrs	r3, r1
 8000e38:	431e      	orrs	r6, r3
 8000e3a:	40cc      	lsrs	r4, r1
 8000e3c:	e9c5 6400 	strd	r6, r4, [r5]
 8000e40:	2100      	movs	r1, #0
 8000e42:	e750      	b.n	8000ce6 <__udivmoddi4+0xa6>
 8000e44:	f1c2 0320 	rsb	r3, r2, #32
 8000e48:	fa20 f103 	lsr.w	r1, r0, r3
 8000e4c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e50:	fa24 f303 	lsr.w	r3, r4, r3
 8000e54:	4094      	lsls	r4, r2
 8000e56:	430c      	orrs	r4, r1
 8000e58:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e5c:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e60:	fa1f f78c 	uxth.w	r7, ip
 8000e64:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e68:	fb08 3110 	mls	r1, r8, r0, r3
 8000e6c:	0c23      	lsrs	r3, r4, #16
 8000e6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e72:	fb00 f107 	mul.w	r1, r0, r7
 8000e76:	4299      	cmp	r1, r3
 8000e78:	d908      	bls.n	8000e8c <__udivmoddi4+0x24c>
 8000e7a:	eb1c 0303 	adds.w	r3, ip, r3
 8000e7e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000e82:	d22c      	bcs.n	8000ede <__udivmoddi4+0x29e>
 8000e84:	4299      	cmp	r1, r3
 8000e86:	d92a      	bls.n	8000ede <__udivmoddi4+0x29e>
 8000e88:	3802      	subs	r0, #2
 8000e8a:	4463      	add	r3, ip
 8000e8c:	1a5b      	subs	r3, r3, r1
 8000e8e:	b2a4      	uxth	r4, r4
 8000e90:	fbb3 f1f8 	udiv	r1, r3, r8
 8000e94:	fb08 3311 	mls	r3, r8, r1, r3
 8000e98:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e9c:	fb01 f307 	mul.w	r3, r1, r7
 8000ea0:	42a3      	cmp	r3, r4
 8000ea2:	d908      	bls.n	8000eb6 <__udivmoddi4+0x276>
 8000ea4:	eb1c 0404 	adds.w	r4, ip, r4
 8000ea8:	f101 36ff 	add.w	r6, r1, #4294967295
 8000eac:	d213      	bcs.n	8000ed6 <__udivmoddi4+0x296>
 8000eae:	42a3      	cmp	r3, r4
 8000eb0:	d911      	bls.n	8000ed6 <__udivmoddi4+0x296>
 8000eb2:	3902      	subs	r1, #2
 8000eb4:	4464      	add	r4, ip
 8000eb6:	1ae4      	subs	r4, r4, r3
 8000eb8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000ebc:	e739      	b.n	8000d32 <__udivmoddi4+0xf2>
 8000ebe:	4604      	mov	r4, r0
 8000ec0:	e6f0      	b.n	8000ca4 <__udivmoddi4+0x64>
 8000ec2:	4608      	mov	r0, r1
 8000ec4:	e706      	b.n	8000cd4 <__udivmoddi4+0x94>
 8000ec6:	45c8      	cmp	r8, r9
 8000ec8:	d2ae      	bcs.n	8000e28 <__udivmoddi4+0x1e8>
 8000eca:	ebb9 0e02 	subs.w	lr, r9, r2
 8000ece:	eb63 0c07 	sbc.w	ip, r3, r7
 8000ed2:	3801      	subs	r0, #1
 8000ed4:	e7a8      	b.n	8000e28 <__udivmoddi4+0x1e8>
 8000ed6:	4631      	mov	r1, r6
 8000ed8:	e7ed      	b.n	8000eb6 <__udivmoddi4+0x276>
 8000eda:	4603      	mov	r3, r0
 8000edc:	e799      	b.n	8000e12 <__udivmoddi4+0x1d2>
 8000ede:	4630      	mov	r0, r6
 8000ee0:	e7d4      	b.n	8000e8c <__udivmoddi4+0x24c>
 8000ee2:	46d6      	mov	lr, sl
 8000ee4:	e77f      	b.n	8000de6 <__udivmoddi4+0x1a6>
 8000ee6:	4463      	add	r3, ip
 8000ee8:	3802      	subs	r0, #2
 8000eea:	e74d      	b.n	8000d88 <__udivmoddi4+0x148>
 8000eec:	4606      	mov	r6, r0
 8000eee:	4623      	mov	r3, r4
 8000ef0:	4608      	mov	r0, r1
 8000ef2:	e70f      	b.n	8000d14 <__udivmoddi4+0xd4>
 8000ef4:	3e02      	subs	r6, #2
 8000ef6:	4463      	add	r3, ip
 8000ef8:	e730      	b.n	8000d5c <__udivmoddi4+0x11c>
 8000efa:	bf00      	nop

08000efc <__aeabi_idiv0>:
 8000efc:	4770      	bx	lr
 8000efe:	bf00      	nop

08000f00 <encoder_init>:
#include "encoder.h"
#include "main.h"
#include <math.h>

HAL_StatusTypeDef encoder_init(encoder_t *e, channel ch,
		TIM_HandleTypeDef *htim, uint32_t ppr) {
 8000f00:	b580      	push	{r7, lr}
 8000f02:	b086      	sub	sp, #24
 8000f04:	af00      	add	r7, sp, #0
 8000f06:	60f8      	str	r0, [r7, #12]
 8000f08:	607a      	str	r2, [r7, #4]
 8000f0a:	603b      	str	r3, [r7, #0]
 8000f0c:	460b      	mov	r3, r1
 8000f0e:	72fb      	strb	r3, [r7, #11]
	HAL_StatusTypeDef ret;
	ret = HAL_OK;
 8000f10:	2300      	movs	r3, #0
 8000f12:	75fb      	strb	r3, [r7, #23]
	if (htim == NULL)
 8000f14:	687b      	ldr	r3, [r7, #4]
 8000f16:	2b00      	cmp	r3, #0
 8000f18:	d101      	bne.n	8000f1e <encoder_init+0x1e>
		return HAL_ERROR;
 8000f1a:	2301      	movs	r3, #1
 8000f1c:	e02c      	b.n	8000f78 <encoder_init+0x78>

	e->tim = htim;
 8000f1e:	68fb      	ldr	r3, [r7, #12]
 8000f20:	687a      	ldr	r2, [r7, #4]
 8000f22:	601a      	str	r2, [r3, #0]
	htim->Instance->CNT = 0;
 8000f24:	687b      	ldr	r3, [r7, #4]
 8000f26:	681b      	ldr	r3, [r3, #0]
 8000f28:	2200      	movs	r2, #0
 8000f2a:	625a      	str	r2, [r3, #36]	@ 0x24
	ret = HAL_TIM_Encoder_Start(htim, ch);
 8000f2c:	7afb      	ldrb	r3, [r7, #11]
 8000f2e:	4619      	mov	r1, r3
 8000f30:	6878      	ldr	r0, [r7, #4]
 8000f32:	f004 f975 	bl	8005220 <HAL_TIM_Encoder_Start>
 8000f36:	4603      	mov	r3, r0
 8000f38:	75fb      	strb	r3, [r7, #23]
	if (ret != HAL_OK)
 8000f3a:	7dfb      	ldrb	r3, [r7, #23]
 8000f3c:	2b00      	cmp	r3, #0
 8000f3e:	d001      	beq.n	8000f44 <encoder_init+0x44>
		return ret;
 8000f40:	7dfb      	ldrb	r3, [r7, #23]
 8000f42:	e019      	b.n	8000f78 <encoder_init+0x78>

	if (ch == A || ch == B)
 8000f44:	7afb      	ldrb	r3, [r7, #11]
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d002      	beq.n	8000f50 <encoder_init+0x50>
 8000f4a:	7afb      	ldrb	r3, [r7, #11]
 8000f4c:	2b04      	cmp	r3, #4
 8000f4e:	d103      	bne.n	8000f58 <encoder_init+0x58>
		e->resolution = 2;
 8000f50:	68fb      	ldr	r3, [r7, #12]
 8000f52:	2202      	movs	r2, #2
 8000f54:	60da      	str	r2, [r3, #12]
 8000f56:	e002      	b.n	8000f5e <encoder_init+0x5e>
	else
		e->resolution = 4;
 8000f58:	68fb      	ldr	r3, [r7, #12]
 8000f5a:	2204      	movs	r2, #4
 8000f5c:	60da      	str	r2, [r3, #12]

	e->velocity_pps = 0.0;
 8000f5e:	68fb      	ldr	r3, [r7, #12]
 8000f60:	2200      	movs	r2, #0
 8000f62:	611a      	str	r2, [r3, #16]
	e->last_count = htim->Instance->CNT;
 8000f64:	687b      	ldr	r3, [r7, #4]
 8000f66:	681b      	ldr	r3, [r3, #0]
 8000f68:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000f6a:	68fb      	ldr	r3, [r7, #12]
 8000f6c:	605a      	str	r2, [r3, #4]
	e->ppr = ppr;
 8000f6e:	683b      	ldr	r3, [r7, #0]
 8000f70:	b29a      	uxth	r2, r3
 8000f72:	68fb      	ldr	r3, [r7, #12]
 8000f74:	811a      	strh	r2, [r3, #8]

	return ret;
 8000f76:	7dfb      	ldrb	r3, [r7, #23]
}
 8000f78:	4618      	mov	r0, r3
 8000f7a:	3718      	adds	r7, #24
 8000f7c:	46bd      	mov	sp, r7
 8000f7e:	bd80      	pop	{r7, pc}

08000f80 <__encoder_update>:

inline static void __encoder_update(encoder_t *e) {
 8000f80:	b5b0      	push	{r4, r5, r7, lr}
 8000f82:	b086      	sub	sp, #24
 8000f84:	af00      	add	r7, sp, #0
 8000f86:	6078      	str	r0, [r7, #4]
	uint32_t cur_cnt;
	int32_t diff, cur_velocity;

	cur_cnt = e->tim->Instance->CNT;
 8000f88:	687b      	ldr	r3, [r7, #4]
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	681b      	ldr	r3, [r3, #0]
 8000f8e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000f90:	613b      	str	r3, [r7, #16]

	// Handle overflow and underflow
	if (__HAL_TIM_IS_TIM_COUNTING_DOWN(e->tim)) {
 8000f92:	687b      	ldr	r3, [r7, #4]
 8000f94:	681b      	ldr	r3, [r3, #0]
 8000f96:	681b      	ldr	r3, [r3, #0]
 8000f98:	681b      	ldr	r3, [r3, #0]
 8000f9a:	f003 0310 	and.w	r3, r3, #16
 8000f9e:	2b10      	cmp	r3, #16
 8000fa0:	d115      	bne.n	8000fce <__encoder_update+0x4e>
		if (cur_cnt < e->last_count) // underflow
 8000fa2:	687b      	ldr	r3, [r7, #4]
 8000fa4:	685b      	ldr	r3, [r3, #4]
 8000fa6:	693a      	ldr	r2, [r7, #16]
 8000fa8:	429a      	cmp	r2, r3
 8000faa:	d205      	bcs.n	8000fb8 <__encoder_update+0x38>
			diff = e->last_count - cur_cnt;
 8000fac:	687b      	ldr	r3, [r7, #4]
 8000fae:	685a      	ldr	r2, [r3, #4]
 8000fb0:	693b      	ldr	r3, [r7, #16]
 8000fb2:	1ad3      	subs	r3, r2, r3
 8000fb4:	617b      	str	r3, [r7, #20]
 8000fb6:	e01f      	b.n	8000ff8 <__encoder_update+0x78>
		else
			diff = (e->tim->Instance->ARR - cur_cnt) + e->last_count;
 8000fb8:	687b      	ldr	r3, [r7, #4]
 8000fba:	681b      	ldr	r3, [r3, #0]
 8000fbc:	681b      	ldr	r3, [r3, #0]
 8000fbe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8000fc0:	693b      	ldr	r3, [r7, #16]
 8000fc2:	1ad2      	subs	r2, r2, r3
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	685b      	ldr	r3, [r3, #4]
 8000fc8:	4413      	add	r3, r2
 8000fca:	617b      	str	r3, [r7, #20]
 8000fcc:	e014      	b.n	8000ff8 <__encoder_update+0x78>
	} else {
		if (cur_cnt > e->last_count) // overflow
 8000fce:	687b      	ldr	r3, [r7, #4]
 8000fd0:	685b      	ldr	r3, [r3, #4]
 8000fd2:	693a      	ldr	r2, [r7, #16]
 8000fd4:	429a      	cmp	r2, r3
 8000fd6:	d905      	bls.n	8000fe4 <__encoder_update+0x64>
			diff = e->last_count - cur_cnt;
 8000fd8:	687b      	ldr	r3, [r7, #4]
 8000fda:	685a      	ldr	r2, [r3, #4]
 8000fdc:	693b      	ldr	r3, [r7, #16]
 8000fde:	1ad3      	subs	r3, r2, r3
 8000fe0:	617b      	str	r3, [r7, #20]
 8000fe2:	e009      	b.n	8000ff8 <__encoder_update+0x78>
		else
			diff = (e->tim->Instance->ARR - e->last_count) + cur_cnt;
 8000fe4:	687b      	ldr	r3, [r7, #4]
 8000fe6:	681b      	ldr	r3, [r3, #0]
 8000fe8:	681b      	ldr	r3, [r3, #0]
 8000fea:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8000fec:	687b      	ldr	r3, [r7, #4]
 8000fee:	685b      	ldr	r3, [r3, #4]
 8000ff0:	1ad2      	subs	r2, r2, r3
 8000ff2:	693b      	ldr	r3, [r7, #16]
 8000ff4:	4413      	add	r3, r2
 8000ff6:	617b      	str	r3, [r7, #20]
	}

	// velocity in pulses per second
	if (e->last_count == cur_cnt)
 8000ff8:	687b      	ldr	r3, [r7, #4]
 8000ffa:	685b      	ldr	r3, [r3, #4]
 8000ffc:	693a      	ldr	r2, [r7, #16]
 8000ffe:	429a      	cmp	r2, r3
 8001000:	d101      	bne.n	8001006 <__encoder_update+0x86>
		diff = 0;
 8001002:	2300      	movs	r3, #0
 8001004:	617b      	str	r3, [r7, #20]

	cur_velocity = (float) diff / DT / (float) e->resolution;
 8001006:	697b      	ldr	r3, [r7, #20]
 8001008:	ee07 3a90 	vmov	s15, r3
 800100c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001010:	ee17 0a90 	vmov	r0, s15
 8001014:	f7ff fa5c 	bl	80004d0 <__aeabi_f2d>
 8001018:	a327      	add	r3, pc, #156	@ (adr r3, 80010b8 <__encoder_update+0x138>)
 800101a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800101e:	f7ff fbd9 	bl	80007d4 <__aeabi_ddiv>
 8001022:	4602      	mov	r2, r0
 8001024:	460b      	mov	r3, r1
 8001026:	4614      	mov	r4, r2
 8001028:	461d      	mov	r5, r3
 800102a:	687b      	ldr	r3, [r7, #4]
 800102c:	68db      	ldr	r3, [r3, #12]
 800102e:	ee07 3a90 	vmov	s15, r3
 8001032:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001036:	ee17 0a90 	vmov	r0, s15
 800103a:	f7ff fa49 	bl	80004d0 <__aeabi_f2d>
 800103e:	4602      	mov	r2, r0
 8001040:	460b      	mov	r3, r1
 8001042:	4620      	mov	r0, r4
 8001044:	4629      	mov	r1, r5
 8001046:	f7ff fbc5 	bl	80007d4 <__aeabi_ddiv>
 800104a:	4602      	mov	r2, r0
 800104c:	460b      	mov	r3, r1
 800104e:	4610      	mov	r0, r2
 8001050:	4619      	mov	r1, r3
 8001052:	f7ff fd45 	bl	8000ae0 <__aeabi_d2iz>
 8001056:	4603      	mov	r3, r0
 8001058:	60fb      	str	r3, [r7, #12]

	// Filtering velocity
	e->velocity_pps = BETA * e->velocity_pps + (1.0 - BETA) * cur_velocity;
 800105a:	687b      	ldr	r3, [r7, #4]
 800105c:	691b      	ldr	r3, [r3, #16]
 800105e:	4618      	mov	r0, r3
 8001060:	f7ff fa24 	bl	80004ac <__aeabi_i2d>
 8001064:	a316      	add	r3, pc, #88	@ (adr r3, 80010c0 <__encoder_update+0x140>)
 8001066:	e9d3 2300 	ldrd	r2, r3, [r3]
 800106a:	f7ff fa89 	bl	8000580 <__aeabi_dmul>
 800106e:	4602      	mov	r2, r0
 8001070:	460b      	mov	r3, r1
 8001072:	4614      	mov	r4, r2
 8001074:	461d      	mov	r5, r3
 8001076:	68f8      	ldr	r0, [r7, #12]
 8001078:	f7ff fa18 	bl	80004ac <__aeabi_i2d>
 800107c:	a312      	add	r3, pc, #72	@ (adr r3, 80010c8 <__encoder_update+0x148>)
 800107e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001082:	f7ff fa7d 	bl	8000580 <__aeabi_dmul>
 8001086:	4602      	mov	r2, r0
 8001088:	460b      	mov	r3, r1
 800108a:	4620      	mov	r0, r4
 800108c:	4629      	mov	r1, r5
 800108e:	f7ff f8c1 	bl	8000214 <__adddf3>
 8001092:	4602      	mov	r2, r0
 8001094:	460b      	mov	r3, r1
 8001096:	4610      	mov	r0, r2
 8001098:	4619      	mov	r1, r3
 800109a:	f7ff fd21 	bl	8000ae0 <__aeabi_d2iz>
 800109e:	4602      	mov	r2, r0
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	611a      	str	r2, [r3, #16]
	e->last_count = cur_cnt;
 80010a4:	687b      	ldr	r3, [r7, #4]
 80010a6:	693a      	ldr	r2, [r7, #16]
 80010a8:	605a      	str	r2, [r3, #4]
}
 80010aa:	bf00      	nop
 80010ac:	3718      	adds	r7, #24
 80010ae:	46bd      	mov	sp, r7
 80010b0:	bdb0      	pop	{r4, r5, r7, pc}
 80010b2:	bf00      	nop
 80010b4:	f3af 8000 	nop.w
 80010b8:	47ae147b 	.word	0x47ae147b
 80010bc:	3f747ae1 	.word	0x3f747ae1
 80010c0:	66666666 	.word	0x66666666
 80010c4:	3fee6666 	.word	0x3fee6666
 80010c8:	999999a0 	.word	0x999999a0
 80010cc:	3fa99999 	.word	0x3fa99999

080010d0 <encoder_get_velocity_rps>:

float encoder_get_velocity_rps(encoder_t *e) {
 80010d0:	b580      	push	{r7, lr}
 80010d2:	b082      	sub	sp, #8
 80010d4:	af00      	add	r7, sp, #0
 80010d6:	6078      	str	r0, [r7, #4]
	__encoder_update(e);
 80010d8:	6878      	ldr	r0, [r7, #4]
 80010da:	f7ff ff51 	bl	8000f80 <__encoder_update>
	return e->velocity_pps / (float) e->ppr;
 80010de:	687b      	ldr	r3, [r7, #4]
 80010e0:	691b      	ldr	r3, [r3, #16]
 80010e2:	ee07 3a90 	vmov	s15, r3
 80010e6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80010ea:	687b      	ldr	r3, [r7, #4]
 80010ec:	891b      	ldrh	r3, [r3, #8]
 80010ee:	ee07 3a90 	vmov	s15, r3
 80010f2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010f6:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80010fa:	eef0 7a66 	vmov.f32	s15, s13
}
 80010fe:	eeb0 0a67 	vmov.f32	s0, s15
 8001102:	3708      	adds	r7, #8
 8001104:	46bd      	mov	sp, r7
 8001106:	bd80      	pop	{r7, pc}

08001108 <encoder_get_velocity_rpm>:

float encoder_get_velocity_rpm(encoder_t *e) {
 8001108:	b580      	push	{r7, lr}
 800110a:	b082      	sub	sp, #8
 800110c:	af00      	add	r7, sp, #0
 800110e:	6078      	str	r0, [r7, #4]
	return encoder_get_velocity_rps(e) * 60.0;
 8001110:	6878      	ldr	r0, [r7, #4]
 8001112:	f7ff ffdd 	bl	80010d0 <encoder_get_velocity_rps>
 8001116:	ee10 3a10 	vmov	r3, s0
 800111a:	4618      	mov	r0, r3
 800111c:	f7ff f9d8 	bl	80004d0 <__aeabi_f2d>
 8001120:	f04f 0200 	mov.w	r2, #0
 8001124:	4b08      	ldr	r3, [pc, #32]	@ (8001148 <encoder_get_velocity_rpm+0x40>)
 8001126:	f7ff fa2b 	bl	8000580 <__aeabi_dmul>
 800112a:	4602      	mov	r2, r0
 800112c:	460b      	mov	r3, r1
 800112e:	4610      	mov	r0, r2
 8001130:	4619      	mov	r1, r3
 8001132:	f7ff fd1d 	bl	8000b70 <__aeabi_d2f>
 8001136:	4603      	mov	r3, r0
 8001138:	ee07 3a90 	vmov	s15, r3
}
 800113c:	eeb0 0a67 	vmov.f32	s0, s15
 8001140:	3708      	adds	r7, #8
 8001142:	46bd      	mov	sp, r7
 8001144:	bd80      	pop	{r7, pc}
 8001146:	bf00      	nop
 8001148:	404e0000 	.word	0x404e0000

0800114c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 800114c:	b580      	push	{r7, lr}
 800114e:	b088      	sub	sp, #32
 8001150:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001152:	f107 030c 	add.w	r3, r7, #12
 8001156:	2200      	movs	r2, #0
 8001158:	601a      	str	r2, [r3, #0]
 800115a:	605a      	str	r2, [r3, #4]
 800115c:	609a      	str	r2, [r3, #8]
 800115e:	60da      	str	r2, [r3, #12]
 8001160:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001162:	2300      	movs	r3, #0
 8001164:	60bb      	str	r3, [r7, #8]
 8001166:	4b20      	ldr	r3, [pc, #128]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 8001168:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800116a:	4a1f      	ldr	r2, [pc, #124]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 800116c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001170:	6313      	str	r3, [r2, #48]	@ 0x30
 8001172:	4b1d      	ldr	r3, [pc, #116]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 8001174:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001176:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800117a:	60bb      	str	r3, [r7, #8]
 800117c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800117e:	2300      	movs	r3, #0
 8001180:	607b      	str	r3, [r7, #4]
 8001182:	4b19      	ldr	r3, [pc, #100]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 8001184:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001186:	4a18      	ldr	r2, [pc, #96]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 8001188:	f043 0301 	orr.w	r3, r3, #1
 800118c:	6313      	str	r3, [r2, #48]	@ 0x30
 800118e:	4b16      	ldr	r3, [pc, #88]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 8001190:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001192:	f003 0301 	and.w	r3, r3, #1
 8001196:	607b      	str	r3, [r7, #4]
 8001198:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800119a:	2300      	movs	r3, #0
 800119c:	603b      	str	r3, [r7, #0]
 800119e:	4b12      	ldr	r3, [pc, #72]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 80011a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011a2:	4a11      	ldr	r2, [pc, #68]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 80011a4:	f043 0302 	orr.w	r3, r3, #2
 80011a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80011aa:	4b0f      	ldr	r3, [pc, #60]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 80011ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011ae:	f003 0302 	and.w	r3, r3, #2
 80011b2:	603b      	str	r3, [r7, #0]
 80011b4:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Direction_GPIO_Port, Direction_Pin, GPIO_PIN_RESET);
 80011b6:	2200      	movs	r2, #0
 80011b8:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011bc:	480b      	ldr	r0, [pc, #44]	@ (80011ec <MX_GPIO_Init+0xa0>)
 80011be:	f001 fe8f 	bl	8002ee0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Direction_Pin;
 80011c2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80011c6:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80011c8:	2301      	movs	r3, #1
 80011ca:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80011cc:	2302      	movs	r3, #2
 80011ce:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011d0:	2300      	movs	r3, #0
 80011d2:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(Direction_GPIO_Port, &GPIO_InitStruct);
 80011d4:	f107 030c 	add.w	r3, r7, #12
 80011d8:	4619      	mov	r1, r3
 80011da:	4804      	ldr	r0, [pc, #16]	@ (80011ec <MX_GPIO_Init+0xa0>)
 80011dc:	f001 fcd4 	bl	8002b88 <HAL_GPIO_Init>

}
 80011e0:	bf00      	nop
 80011e2:	3720      	adds	r7, #32
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bd80      	pop	{r7, pc}
 80011e8:	40023800 	.word	0x40023800
 80011ec:	40020400 	.word	0x40020400

080011f0 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 80011f0:	b580      	push	{r7, lr}
 80011f2:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN I2C1_Init 0 */
 //To reset a previously used I2C channel
  I2C_ClearBusyBus();
 80011f4:	f000 f874 	bl	80012e0 <I2C_ClearBusyBus>
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80011f8:	4b12      	ldr	r3, [pc, #72]	@ (8001244 <MX_I2C1_Init+0x54>)
 80011fa:	4a13      	ldr	r2, [pc, #76]	@ (8001248 <MX_I2C1_Init+0x58>)
 80011fc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 80011fe:	4b11      	ldr	r3, [pc, #68]	@ (8001244 <MX_I2C1_Init+0x54>)
 8001200:	4a12      	ldr	r2, [pc, #72]	@ (800124c <MX_I2C1_Init+0x5c>)
 8001202:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001204:	4b0f      	ldr	r3, [pc, #60]	@ (8001244 <MX_I2C1_Init+0x54>)
 8001206:	2200      	movs	r2, #0
 8001208:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800120a:	4b0e      	ldr	r3, [pc, #56]	@ (8001244 <MX_I2C1_Init+0x54>)
 800120c:	2200      	movs	r2, #0
 800120e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001210:	4b0c      	ldr	r3, [pc, #48]	@ (8001244 <MX_I2C1_Init+0x54>)
 8001212:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001216:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001218:	4b0a      	ldr	r3, [pc, #40]	@ (8001244 <MX_I2C1_Init+0x54>)
 800121a:	2200      	movs	r2, #0
 800121c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800121e:	4b09      	ldr	r3, [pc, #36]	@ (8001244 <MX_I2C1_Init+0x54>)
 8001220:	2200      	movs	r2, #0
 8001222:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001224:	4b07      	ldr	r3, [pc, #28]	@ (8001244 <MX_I2C1_Init+0x54>)
 8001226:	2200      	movs	r2, #0
 8001228:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800122a:	4b06      	ldr	r3, [pc, #24]	@ (8001244 <MX_I2C1_Init+0x54>)
 800122c:	2200      	movs	r2, #0
 800122e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001230:	4804      	ldr	r0, [pc, #16]	@ (8001244 <MX_I2C1_Init+0x54>)
 8001232:	f001 fe6f 	bl	8002f14 <HAL_I2C_Init>
 8001236:	4603      	mov	r3, r0
 8001238:	2b00      	cmp	r3, #0
 800123a:	d001      	beq.n	8001240 <MX_I2C1_Init+0x50>
  {
    Error_Handler();
 800123c:	f000 fc84 	bl	8001b48 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001240:	bf00      	nop
 8001242:	bd80      	pop	{r7, pc}
 8001244:	200000b4 	.word	0x200000b4
 8001248:	40005400 	.word	0x40005400
 800124c:	00061a80 	.word	0x00061a80

08001250 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8001250:	b580      	push	{r7, lr}
 8001252:	b08a      	sub	sp, #40	@ 0x28
 8001254:	af00      	add	r7, sp, #0
 8001256:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001258:	f107 0314 	add.w	r3, r7, #20
 800125c:	2200      	movs	r2, #0
 800125e:	601a      	str	r2, [r3, #0]
 8001260:	605a      	str	r2, [r3, #4]
 8001262:	609a      	str	r2, [r3, #8]
 8001264:	60da      	str	r2, [r3, #12]
 8001266:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8001268:	687b      	ldr	r3, [r7, #4]
 800126a:	681b      	ldr	r3, [r3, #0]
 800126c:	4a19      	ldr	r2, [pc, #100]	@ (80012d4 <HAL_I2C_MspInit+0x84>)
 800126e:	4293      	cmp	r3, r2
 8001270:	d12c      	bne.n	80012cc <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001272:	2300      	movs	r3, #0
 8001274:	613b      	str	r3, [r7, #16]
 8001276:	4b18      	ldr	r3, [pc, #96]	@ (80012d8 <HAL_I2C_MspInit+0x88>)
 8001278:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800127a:	4a17      	ldr	r2, [pc, #92]	@ (80012d8 <HAL_I2C_MspInit+0x88>)
 800127c:	f043 0302 	orr.w	r3, r3, #2
 8001280:	6313      	str	r3, [r2, #48]	@ 0x30
 8001282:	4b15      	ldr	r3, [pc, #84]	@ (80012d8 <HAL_I2C_MspInit+0x88>)
 8001284:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001286:	f003 0302 	and.w	r3, r3, #2
 800128a:	613b      	str	r3, [r7, #16]
 800128c:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 800128e:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8001292:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001294:	2312      	movs	r3, #18
 8001296:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001298:	2301      	movs	r3, #1
 800129a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800129c:	2303      	movs	r3, #3
 800129e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80012a0:	2304      	movs	r3, #4
 80012a2:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80012a4:	f107 0314 	add.w	r3, r7, #20
 80012a8:	4619      	mov	r1, r3
 80012aa:	480c      	ldr	r0, [pc, #48]	@ (80012dc <HAL_I2C_MspInit+0x8c>)
 80012ac:	f001 fc6c 	bl	8002b88 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 80012b0:	2300      	movs	r3, #0
 80012b2:	60fb      	str	r3, [r7, #12]
 80012b4:	4b08      	ldr	r3, [pc, #32]	@ (80012d8 <HAL_I2C_MspInit+0x88>)
 80012b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012b8:	4a07      	ldr	r2, [pc, #28]	@ (80012d8 <HAL_I2C_MspInit+0x88>)
 80012ba:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80012be:	6413      	str	r3, [r2, #64]	@ 0x40
 80012c0:	4b05      	ldr	r3, [pc, #20]	@ (80012d8 <HAL_I2C_MspInit+0x88>)
 80012c2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012c4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80012c8:	60fb      	str	r3, [r7, #12]
 80012ca:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 80012cc:	bf00      	nop
 80012ce:	3728      	adds	r7, #40	@ 0x28
 80012d0:	46bd      	mov	sp, r7
 80012d2:	bd80      	pop	{r7, pc}
 80012d4:	40005400 	.word	0x40005400
 80012d8:	40023800 	.word	0x40023800
 80012dc:	40020400 	.word	0x40020400

080012e0 <I2C_ClearBusyBus>:
}

/* USER CODE BEGIN 1 */
/* To reset a previously used I2C channel  */
void I2C_ClearBusyBus(void)
{
 80012e0:	b580      	push	{r7, lr}
 80012e2:	b086      	sub	sp, #24
 80012e4:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012e6:	463b      	mov	r3, r7
 80012e8:	2200      	movs	r2, #0
 80012ea:	601a      	str	r2, [r3, #0]
 80012ec:	605a      	str	r2, [r3, #4]
 80012ee:	609a      	str	r2, [r3, #8]
 80012f0:	60da      	str	r2, [r3, #12]
 80012f2:	611a      	str	r2, [r3, #16]

    // Configure SCL and SDA as output for manual control
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 80012f4:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80012f8:	603b      	str	r3, [r7, #0]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80012fa:	2304      	movs	r3, #4
 80012fc:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;  // Open-drain mode
 80012fe:	2311      	movs	r3, #17
 8001300:	607b      	str	r3, [r7, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001302:	2300      	movs	r3, #0
 8001304:	60bb      	str	r3, [r7, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001306:	2302      	movs	r3, #2
 8001308:	60fb      	str	r3, [r7, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800130a:	463b      	mov	r3, r7
 800130c:	4619      	mov	r1, r3
 800130e:	4825      	ldr	r0, [pc, #148]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 8001310:	f001 fc3a 	bl	8002b88 <HAL_GPIO_Init>

    // Set both SCL and SDA to high initially
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 8001314:	2201      	movs	r2, #1
 8001316:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800131a:	4822      	ldr	r0, [pc, #136]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 800131c:	f001 fde0 	bl	8002ee0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
 8001320:	2201      	movs	r2, #1
 8001322:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001326:	481f      	ldr	r0, [pc, #124]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 8001328:	f001 fdda 	bl	8002ee0 <HAL_GPIO_WritePin>

    // Ensure SDA is high (released)
    if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_9) == GPIO_PIN_RESET)
 800132c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001330:	481c      	ldr	r0, [pc, #112]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 8001332:	f001 fdbd 	bl	8002eb0 <HAL_GPIO_ReadPin>
 8001336:	4603      	mov	r3, r0
 8001338:	2b00      	cmp	r3, #0
 800133a:	d11a      	bne.n	8001372 <I2C_ClearBusyBus+0x92>
    {
        // SDA is stuck low, so generate 9 clock pulses
        for (int i = 0; i < 9; i++)
 800133c:	2300      	movs	r3, #0
 800133e:	617b      	str	r3, [r7, #20]
 8001340:	e014      	b.n	800136c <I2C_ClearBusyBus+0x8c>
        {
            // Toggle the SCL pin to generate a clock pulse
            HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_RESET);
 8001342:	2200      	movs	r2, #0
 8001344:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001348:	4816      	ldr	r0, [pc, #88]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 800134a:	f001 fdc9 	bl	8002ee0 <HAL_GPIO_WritePin>
            HAL_Delay(1); // Small delay to simulate clock cycle
 800134e:	2001      	movs	r0, #1
 8001350:	f001 fae4 	bl	800291c <HAL_Delay>
            HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 8001354:	2201      	movs	r2, #1
 8001356:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800135a:	4812      	ldr	r0, [pc, #72]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 800135c:	f001 fdc0 	bl	8002ee0 <HAL_GPIO_WritePin>
            HAL_Delay(1);
 8001360:	2001      	movs	r0, #1
 8001362:	f001 fadb 	bl	800291c <HAL_Delay>
        for (int i = 0; i < 9; i++)
 8001366:	697b      	ldr	r3, [r7, #20]
 8001368:	3301      	adds	r3, #1
 800136a:	617b      	str	r3, [r7, #20]
 800136c:	697b      	ldr	r3, [r7, #20]
 800136e:	2b08      	cmp	r3, #8
 8001370:	dde7      	ble.n	8001342 <I2C_ClearBusyBus+0x62>
        }
    }

    // After the clock cycles, set SDA and SCL back to high
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 8001372:	2201      	movs	r2, #1
 8001374:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001378:	480a      	ldr	r0, [pc, #40]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 800137a:	f001 fdb1 	bl	8002ee0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
 800137e:	2201      	movs	r2, #1
 8001380:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001384:	4807      	ldr	r0, [pc, #28]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 8001386:	f001 fdab 	bl	8002ee0 <HAL_GPIO_WritePin>

    // Reconfigure the pins back to I2C mode
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;  // Alternate function open-drain for I2C
 800138a:	2312      	movs	r3, #18
 800138c:	607b      	str	r3, [r7, #4]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1; // Adjust according to your I2C peripheral
 800138e:	2304      	movs	r3, #4
 8001390:	613b      	str	r3, [r7, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001392:	463b      	mov	r3, r7
 8001394:	4619      	mov	r1, r3
 8001396:	4803      	ldr	r0, [pc, #12]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 8001398:	f001 fbf6 	bl	8002b88 <HAL_GPIO_Init>
}
 800139c:	bf00      	nop
 800139e:	3718      	adds	r7, #24
 80013a0:	46bd      	mov	sp, r7
 80013a2:	bd80      	pop	{r7, pc}
 80013a4:	40020400 	.word	0x40020400

080013a8 <Kalman_init>:
#include "kalman_filter.h"

Kalman filter;

void Kalman_init(Kalman* k) {
 80013a8:	b480      	push	{r7}
 80013aa:	b083      	sub	sp, #12
 80013ac:	af00      	add	r7, sp, #0
 80013ae:	6078      	str	r0, [r7, #4]
    /* We will set the variables like so, these can also be tuned by the user */
    k->Q_angle = 0.001f;
 80013b0:	687b      	ldr	r3, [r7, #4]
 80013b2:	4a13      	ldr	r2, [pc, #76]	@ (8001400 <Kalman_init+0x58>)
 80013b4:	601a      	str	r2, [r3, #0]
    k->Q_bias = 0.003f;
 80013b6:	687b      	ldr	r3, [r7, #4]
 80013b8:	4a12      	ldr	r2, [pc, #72]	@ (8001404 <Kalman_init+0x5c>)
 80013ba:	605a      	str	r2, [r3, #4]
    k->R_measure = 0.03f;
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	4a12      	ldr	r2, [pc, #72]	@ (8001408 <Kalman_init+0x60>)
 80013c0:	609a      	str	r2, [r3, #8]

    k->angle = 0.0f; // Reset the angle
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	f04f 0200 	mov.w	r2, #0
 80013c8:	60da      	str	r2, [r3, #12]
    k->bias = 0.0f;  // Reset bias
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	f04f 0200 	mov.w	r2, #0
 80013d0:	611a      	str	r2, [r3, #16]

    k->P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle, the error covariance matrix is set like so
 80013d2:	687b      	ldr	r3, [r7, #4]
 80013d4:	f04f 0200 	mov.w	r2, #0
 80013d8:	619a      	str	r2, [r3, #24]
    k->P[0][1] = 0.0f;
 80013da:	687b      	ldr	r3, [r7, #4]
 80013dc:	f04f 0200 	mov.w	r2, #0
 80013e0:	61da      	str	r2, [r3, #28]
    k->P[1][0] = 0.0f;
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	f04f 0200 	mov.w	r2, #0
 80013e8:	621a      	str	r2, [r3, #32]
    k->P[1][1] = 0.0f;
 80013ea:	687b      	ldr	r3, [r7, #4]
 80013ec:	f04f 0200 	mov.w	r2, #0
 80013f0:	625a      	str	r2, [r3, #36]	@ 0x24
}
 80013f2:	bf00      	nop
 80013f4:	370c      	adds	r7, #12
 80013f6:	46bd      	mov	sp, r7
 80013f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013fc:	4770      	bx	lr
 80013fe:	bf00      	nop
 8001400:	3a83126f 	.word	0x3a83126f
 8001404:	3b449ba6 	.word	0x3b449ba6
 8001408:	3cf5c28f 	.word	0x3cf5c28f
 800140c:	00000000 	.word	0x00000000

08001410 <Kalman_getAngle>:

// The angle should be in degrees and the rate should be in degrees per second
float Kalman_getAngle(Kalman* k, float newAngle, float newRate) {
 8001410:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001414:	b08a      	sub	sp, #40	@ 0x28
 8001416:	af00      	add	r7, sp, #0
 8001418:	60f8      	str	r0, [r7, #12]
 800141a:	ed87 0a02 	vstr	s0, [r7, #8]
 800141e:	edc7 0a01 	vstr	s1, [r7, #4]
    // Discrete Kalman filter time update equations - Time Update ("Predict")
    // Update xhat - Project the state ahead
    /* Step 1 */
    k->rate = newRate - k->bias;
 8001422:	68fb      	ldr	r3, [r7, #12]
 8001424:	edd3 7a04 	vldr	s15, [r3, #16]
 8001428:	ed97 7a01 	vldr	s14, [r7, #4]
 800142c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001430:	68fb      	ldr	r3, [r7, #12]
 8001432:	edc3 7a05 	vstr	s15, [r3, #20]
    k->angle += DT * k->rate;
 8001436:	68fb      	ldr	r3, [r7, #12]
 8001438:	68db      	ldr	r3, [r3, #12]
 800143a:	4618      	mov	r0, r3
 800143c:	f7ff f848 	bl	80004d0 <__aeabi_f2d>
 8001440:	4604      	mov	r4, r0
 8001442:	460d      	mov	r5, r1
 8001444:	68fb      	ldr	r3, [r7, #12]
 8001446:	695b      	ldr	r3, [r3, #20]
 8001448:	4618      	mov	r0, r3
 800144a:	f7ff f841 	bl	80004d0 <__aeabi_f2d>
 800144e:	a3aa      	add	r3, pc, #680	@ (adr r3, 80016f8 <Kalman_getAngle+0x2e8>)
 8001450:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001454:	f7ff f894 	bl	8000580 <__aeabi_dmul>
 8001458:	4602      	mov	r2, r0
 800145a:	460b      	mov	r3, r1
 800145c:	4620      	mov	r0, r4
 800145e:	4629      	mov	r1, r5
 8001460:	f7fe fed8 	bl	8000214 <__adddf3>
 8001464:	4602      	mov	r2, r0
 8001466:	460b      	mov	r3, r1
 8001468:	4610      	mov	r0, r2
 800146a:	4619      	mov	r1, r3
 800146c:	f7ff fb80 	bl	8000b70 <__aeabi_d2f>
 8001470:	4602      	mov	r2, r0
 8001472:	68fb      	ldr	r3, [r7, #12]
 8001474:	60da      	str	r2, [r3, #12]

    // Update estimation error covariance - Project the error covariance ahead
    /* Step 2 */
    k->P[0][0] += DT * (DT * k->P[1][1] - k->P[0][1] - k->P[1][0] + k->Q_angle);
 8001476:	68fb      	ldr	r3, [r7, #12]
 8001478:	699b      	ldr	r3, [r3, #24]
 800147a:	4618      	mov	r0, r3
 800147c:	f7ff f828 	bl	80004d0 <__aeabi_f2d>
 8001480:	4604      	mov	r4, r0
 8001482:	460d      	mov	r5, r1
 8001484:	68fb      	ldr	r3, [r7, #12]
 8001486:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001488:	4618      	mov	r0, r3
 800148a:	f7ff f821 	bl	80004d0 <__aeabi_f2d>
 800148e:	a39a      	add	r3, pc, #616	@ (adr r3, 80016f8 <Kalman_getAngle+0x2e8>)
 8001490:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001494:	f7ff f874 	bl	8000580 <__aeabi_dmul>
 8001498:	4602      	mov	r2, r0
 800149a:	460b      	mov	r3, r1
 800149c:	4690      	mov	r8, r2
 800149e:	4699      	mov	r9, r3
 80014a0:	68fb      	ldr	r3, [r7, #12]
 80014a2:	69db      	ldr	r3, [r3, #28]
 80014a4:	4618      	mov	r0, r3
 80014a6:	f7ff f813 	bl	80004d0 <__aeabi_f2d>
 80014aa:	4602      	mov	r2, r0
 80014ac:	460b      	mov	r3, r1
 80014ae:	4640      	mov	r0, r8
 80014b0:	4649      	mov	r1, r9
 80014b2:	f7fe fead 	bl	8000210 <__aeabi_dsub>
 80014b6:	4602      	mov	r2, r0
 80014b8:	460b      	mov	r3, r1
 80014ba:	4690      	mov	r8, r2
 80014bc:	4699      	mov	r9, r3
 80014be:	68fb      	ldr	r3, [r7, #12]
 80014c0:	6a1b      	ldr	r3, [r3, #32]
 80014c2:	4618      	mov	r0, r3
 80014c4:	f7ff f804 	bl	80004d0 <__aeabi_f2d>
 80014c8:	4602      	mov	r2, r0
 80014ca:	460b      	mov	r3, r1
 80014cc:	4640      	mov	r0, r8
 80014ce:	4649      	mov	r1, r9
 80014d0:	f7fe fe9e 	bl	8000210 <__aeabi_dsub>
 80014d4:	4602      	mov	r2, r0
 80014d6:	460b      	mov	r3, r1
 80014d8:	4690      	mov	r8, r2
 80014da:	4699      	mov	r9, r3
 80014dc:	68fb      	ldr	r3, [r7, #12]
 80014de:	681b      	ldr	r3, [r3, #0]
 80014e0:	4618      	mov	r0, r3
 80014e2:	f7fe fff5 	bl	80004d0 <__aeabi_f2d>
 80014e6:	4602      	mov	r2, r0
 80014e8:	460b      	mov	r3, r1
 80014ea:	4640      	mov	r0, r8
 80014ec:	4649      	mov	r1, r9
 80014ee:	f7fe fe91 	bl	8000214 <__adddf3>
 80014f2:	4602      	mov	r2, r0
 80014f4:	460b      	mov	r3, r1
 80014f6:	4610      	mov	r0, r2
 80014f8:	4619      	mov	r1, r3
 80014fa:	a37f      	add	r3, pc, #508	@ (adr r3, 80016f8 <Kalman_getAngle+0x2e8>)
 80014fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001500:	f7ff f83e 	bl	8000580 <__aeabi_dmul>
 8001504:	4602      	mov	r2, r0
 8001506:	460b      	mov	r3, r1
 8001508:	4620      	mov	r0, r4
 800150a:	4629      	mov	r1, r5
 800150c:	f7fe fe82 	bl	8000214 <__adddf3>
 8001510:	4602      	mov	r2, r0
 8001512:	460b      	mov	r3, r1
 8001514:	4610      	mov	r0, r2
 8001516:	4619      	mov	r1, r3
 8001518:	f7ff fb2a 	bl	8000b70 <__aeabi_d2f>
 800151c:	4602      	mov	r2, r0
 800151e:	68fb      	ldr	r3, [r7, #12]
 8001520:	619a      	str	r2, [r3, #24]
    k->P[0][1] -= DT * k->P[1][1];
 8001522:	68fb      	ldr	r3, [r7, #12]
 8001524:	69db      	ldr	r3, [r3, #28]
 8001526:	4618      	mov	r0, r3
 8001528:	f7fe ffd2 	bl	80004d0 <__aeabi_f2d>
 800152c:	4604      	mov	r4, r0
 800152e:	460d      	mov	r5, r1
 8001530:	68fb      	ldr	r3, [r7, #12]
 8001532:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001534:	4618      	mov	r0, r3
 8001536:	f7fe ffcb 	bl	80004d0 <__aeabi_f2d>
 800153a:	a36f      	add	r3, pc, #444	@ (adr r3, 80016f8 <Kalman_getAngle+0x2e8>)
 800153c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001540:	f7ff f81e 	bl	8000580 <__aeabi_dmul>
 8001544:	4602      	mov	r2, r0
 8001546:	460b      	mov	r3, r1
 8001548:	4620      	mov	r0, r4
 800154a:	4629      	mov	r1, r5
 800154c:	f7fe fe60 	bl	8000210 <__aeabi_dsub>
 8001550:	4602      	mov	r2, r0
 8001552:	460b      	mov	r3, r1
 8001554:	4610      	mov	r0, r2
 8001556:	4619      	mov	r1, r3
 8001558:	f7ff fb0a 	bl	8000b70 <__aeabi_d2f>
 800155c:	4602      	mov	r2, r0
 800155e:	68fb      	ldr	r3, [r7, #12]
 8001560:	61da      	str	r2, [r3, #28]
    k->P[1][0] -= DT * k->P[1][1];
 8001562:	68fb      	ldr	r3, [r7, #12]
 8001564:	6a1b      	ldr	r3, [r3, #32]
 8001566:	4618      	mov	r0, r3
 8001568:	f7fe ffb2 	bl	80004d0 <__aeabi_f2d>
 800156c:	4604      	mov	r4, r0
 800156e:	460d      	mov	r5, r1
 8001570:	68fb      	ldr	r3, [r7, #12]
 8001572:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001574:	4618      	mov	r0, r3
 8001576:	f7fe ffab 	bl	80004d0 <__aeabi_f2d>
 800157a:	a35f      	add	r3, pc, #380	@ (adr r3, 80016f8 <Kalman_getAngle+0x2e8>)
 800157c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001580:	f7fe fffe 	bl	8000580 <__aeabi_dmul>
 8001584:	4602      	mov	r2, r0
 8001586:	460b      	mov	r3, r1
 8001588:	4620      	mov	r0, r4
 800158a:	4629      	mov	r1, r5
 800158c:	f7fe fe40 	bl	8000210 <__aeabi_dsub>
 8001590:	4602      	mov	r2, r0
 8001592:	460b      	mov	r3, r1
 8001594:	4610      	mov	r0, r2
 8001596:	4619      	mov	r1, r3
 8001598:	f7ff faea 	bl	8000b70 <__aeabi_d2f>
 800159c:	4602      	mov	r2, r0
 800159e:	68fb      	ldr	r3, [r7, #12]
 80015a0:	621a      	str	r2, [r3, #32]
    k->P[1][1] += k->Q_bias * DT;
 80015a2:	68fb      	ldr	r3, [r7, #12]
 80015a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80015a6:	4618      	mov	r0, r3
 80015a8:	f7fe ff92 	bl	80004d0 <__aeabi_f2d>
 80015ac:	4604      	mov	r4, r0
 80015ae:	460d      	mov	r5, r1
 80015b0:	68fb      	ldr	r3, [r7, #12]
 80015b2:	685b      	ldr	r3, [r3, #4]
 80015b4:	4618      	mov	r0, r3
 80015b6:	f7fe ff8b 	bl	80004d0 <__aeabi_f2d>
 80015ba:	a34f      	add	r3, pc, #316	@ (adr r3, 80016f8 <Kalman_getAngle+0x2e8>)
 80015bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015c0:	f7fe ffde 	bl	8000580 <__aeabi_dmul>
 80015c4:	4602      	mov	r2, r0
 80015c6:	460b      	mov	r3, r1
 80015c8:	4620      	mov	r0, r4
 80015ca:	4629      	mov	r1, r5
 80015cc:	f7fe fe22 	bl	8000214 <__adddf3>
 80015d0:	4602      	mov	r2, r0
 80015d2:	460b      	mov	r3, r1
 80015d4:	4610      	mov	r0, r2
 80015d6:	4619      	mov	r1, r3
 80015d8:	f7ff faca 	bl	8000b70 <__aeabi_d2f>
 80015dc:	4602      	mov	r2, r0
 80015de:	68fb      	ldr	r3, [r7, #12]
 80015e0:	625a      	str	r2, [r3, #36]	@ 0x24

    // Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
    // Calculate Kalman gain - Compute the Kalman gain
    /* Step 4 */
    float S = k->P[0][0] + k->R_measure; // Estimate error
 80015e2:	68fb      	ldr	r3, [r7, #12]
 80015e4:	ed93 7a06 	vldr	s14, [r3, #24]
 80015e8:	68fb      	ldr	r3, [r7, #12]
 80015ea:	edd3 7a02 	vldr	s15, [r3, #8]
 80015ee:	ee77 7a27 	vadd.f32	s15, s14, s15
 80015f2:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24
    /* Step 5 */
    float K[2]; // Kalman gain - This is a 2x1 vector
    K[0] = k->P[0][0] / S;
 80015f6:	68fb      	ldr	r3, [r7, #12]
 80015f8:	edd3 6a06 	vldr	s13, [r3, #24]
 80015fc:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 8001600:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001604:	edc7 7a04 	vstr	s15, [r7, #16]
    K[1] = k->P[1][0] / S;
 8001608:	68fb      	ldr	r3, [r7, #12]
 800160a:	edd3 6a08 	vldr	s13, [r3, #32]
 800160e:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 8001612:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001616:	edc7 7a05 	vstr	s15, [r7, #20]

    // Calculate angle and bias - Update estimate with measurement zk (newAngle)
    /* Step 3 */
    float y = newAngle - k->angle; // Angle difference
 800161a:	68fb      	ldr	r3, [r7, #12]
 800161c:	edd3 7a03 	vldr	s15, [r3, #12]
 8001620:	ed97 7a02 	vldr	s14, [r7, #8]
 8001624:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001628:	edc7 7a08 	vstr	s15, [r7, #32]
    /* Step 6 */
    k->angle += K[0] * y;
 800162c:	68fb      	ldr	r3, [r7, #12]
 800162e:	ed93 7a03 	vldr	s14, [r3, #12]
 8001632:	edd7 6a04 	vldr	s13, [r7, #16]
 8001636:	edd7 7a08 	vldr	s15, [r7, #32]
 800163a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800163e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001642:	68fb      	ldr	r3, [r7, #12]
 8001644:	edc3 7a03 	vstr	s15, [r3, #12]
    k->bias += K[1] * y;
 8001648:	68fb      	ldr	r3, [r7, #12]
 800164a:	ed93 7a04 	vldr	s14, [r3, #16]
 800164e:	edd7 6a05 	vldr	s13, [r7, #20]
 8001652:	edd7 7a08 	vldr	s15, [r7, #32]
 8001656:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800165a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800165e:	68fb      	ldr	r3, [r7, #12]
 8001660:	edc3 7a04 	vstr	s15, [r3, #16]

    // Calculate estimation error covariance - Update the error covariance
    /* Step 7 */
    float P00_temp = k->P[0][0];
 8001664:	68fb      	ldr	r3, [r7, #12]
 8001666:	699b      	ldr	r3, [r3, #24]
 8001668:	61fb      	str	r3, [r7, #28]
    float P01_temp = k->P[0][1];
 800166a:	68fb      	ldr	r3, [r7, #12]
 800166c:	69db      	ldr	r3, [r3, #28]
 800166e:	61bb      	str	r3, [r7, #24]

    k->P[0][0] -= K[0] * P00_temp;
 8001670:	68fb      	ldr	r3, [r7, #12]
 8001672:	ed93 7a06 	vldr	s14, [r3, #24]
 8001676:	edd7 6a04 	vldr	s13, [r7, #16]
 800167a:	edd7 7a07 	vldr	s15, [r7, #28]
 800167e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001682:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001686:	68fb      	ldr	r3, [r7, #12]
 8001688:	edc3 7a06 	vstr	s15, [r3, #24]
    k->P[0][1] -= K[0] * P01_temp;
 800168c:	68fb      	ldr	r3, [r7, #12]
 800168e:	ed93 7a07 	vldr	s14, [r3, #28]
 8001692:	edd7 6a04 	vldr	s13, [r7, #16]
 8001696:	edd7 7a06 	vldr	s15, [r7, #24]
 800169a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800169e:	ee77 7a67 	vsub.f32	s15, s14, s15
 80016a2:	68fb      	ldr	r3, [r7, #12]
 80016a4:	edc3 7a07 	vstr	s15, [r3, #28]
    k->P[1][0] -= K[1] * P00_temp;
 80016a8:	68fb      	ldr	r3, [r7, #12]
 80016aa:	ed93 7a08 	vldr	s14, [r3, #32]
 80016ae:	edd7 6a05 	vldr	s13, [r7, #20]
 80016b2:	edd7 7a07 	vldr	s15, [r7, #28]
 80016b6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80016ba:	ee77 7a67 	vsub.f32	s15, s14, s15
 80016be:	68fb      	ldr	r3, [r7, #12]
 80016c0:	edc3 7a08 	vstr	s15, [r3, #32]
    k->P[1][1] -= K[1] * P01_temp;
 80016c4:	68fb      	ldr	r3, [r7, #12]
 80016c6:	ed93 7a09 	vldr	s14, [r3, #36]	@ 0x24
 80016ca:	edd7 6a05 	vldr	s13, [r7, #20]
 80016ce:	edd7 7a06 	vldr	s15, [r7, #24]
 80016d2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80016d6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80016da:	68fb      	ldr	r3, [r7, #12]
 80016dc:	edc3 7a09 	vstr	s15, [r3, #36]	@ 0x24

    return k->angle;
 80016e0:	68fb      	ldr	r3, [r7, #12]
 80016e2:	68db      	ldr	r3, [r3, #12]
 80016e4:	ee07 3a90 	vmov	s15, r3
}
 80016e8:	eeb0 0a67 	vmov.f32	s0, s15
 80016ec:	3728      	adds	r7, #40	@ 0x28
 80016ee:	46bd      	mov	sp, r7
 80016f0:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80016f4:	f3af 8000 	nop.w
 80016f8:	47ae147b 	.word	0x47ae147b
 80016fc:	3f747ae1 	.word	0x3f747ae1

08001700 <Kalman_setAngle>:

void Kalman_setAngle(Kalman* k, float angle) { k->angle = angle; }
 8001700:	b480      	push	{r7}
 8001702:	b083      	sub	sp, #12
 8001704:	af00      	add	r7, sp, #0
 8001706:	6078      	str	r0, [r7, #4]
 8001708:	ed87 0a00 	vstr	s0, [r7]
 800170c:	687b      	ldr	r3, [r7, #4]
 800170e:	683a      	ldr	r2, [r7, #0]
 8001710:	60da      	str	r2, [r3, #12]
 8001712:	bf00      	nop
 8001714:	370c      	adds	r7, #12
 8001716:	46bd      	mov	sp, r7
 8001718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800171c:	4770      	bx	lr
	...

08001720 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8001720:	b580      	push	{r7, lr}
 8001722:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 8001724:	f001 f888 	bl	8002838 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 8001728:	f000 f894 	bl	8001854 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 800172c:	f7ff fd0e 	bl	800114c <MX_GPIO_Init>
	MX_TIM5_Init();
 8001730:	f000 ff16 	bl	8002560 <MX_TIM5_Init>
	MX_I2C1_Init();
 8001734:	f7ff fd5c 	bl	80011f0 <MX_I2C1_Init>
	MX_TIM3_Init();
 8001738:	f000 fec4 	bl	80024c4 <MX_TIM3_Init>
	MX_TIM1_Init();
 800173c:	f000 fe1c 	bl	8002378 <MX_TIM1_Init>
	MX_TIM2_Init();
 8001740:	f000 fe72 	bl	8002428 <MX_TIM2_Init>
	/* USER CODE BEGIN 2 */
	pid_init(&pid_in, Kp_in, Ki_in, Kd_in, -max_pwm, max_pwm);
 8001744:	4b31      	ldr	r3, [pc, #196]	@ (800180c <main+0xec>)
 8001746:	ed93 7a00 	vldr	s14, [r3]
 800174a:	4b31      	ldr	r3, [pc, #196]	@ (8001810 <main+0xf0>)
 800174c:	edd3 6a00 	vldr	s13, [r3]
 8001750:	4b30      	ldr	r3, [pc, #192]	@ (8001814 <main+0xf4>)
 8001752:	ed93 6a00 	vldr	s12, [r3]
 8001756:	4b30      	ldr	r3, [pc, #192]	@ (8001818 <main+0xf8>)
 8001758:	edd3 7a00 	vldr	s15, [r3]
 800175c:	eef1 7a67 	vneg.f32	s15, s15
 8001760:	4b2d      	ldr	r3, [pc, #180]	@ (8001818 <main+0xf8>)
 8001762:	edd3 5a00 	vldr	s11, [r3]
 8001766:	eeb0 2a65 	vmov.f32	s4, s11
 800176a:	eef0 1a67 	vmov.f32	s3, s15
 800176e:	eeb0 1a46 	vmov.f32	s2, s12
 8001772:	eef0 0a66 	vmov.f32	s1, s13
 8001776:	eeb0 0a47 	vmov.f32	s0, s14
 800177a:	4828      	ldr	r0, [pc, #160]	@ (800181c <main+0xfc>)
 800177c:	f000 fc06 	bl	8001f8c <pid_init>
	pid_init(&pid_ex, Kp_ex, Ki_ex, Kd_ex, -max_rpm, max_rpm);
 8001780:	4b27      	ldr	r3, [pc, #156]	@ (8001820 <main+0x100>)
 8001782:	ed93 7a00 	vldr	s14, [r3]
 8001786:	4b27      	ldr	r3, [pc, #156]	@ (8001824 <main+0x104>)
 8001788:	edd3 6a00 	vldr	s13, [r3]
 800178c:	4b26      	ldr	r3, [pc, #152]	@ (8001828 <main+0x108>)
 800178e:	ed93 6a00 	vldr	s12, [r3]
 8001792:	4b26      	ldr	r3, [pc, #152]	@ (800182c <main+0x10c>)
 8001794:	edd3 7a00 	vldr	s15, [r3]
 8001798:	eef1 7a67 	vneg.f32	s15, s15
 800179c:	4b23      	ldr	r3, [pc, #140]	@ (800182c <main+0x10c>)
 800179e:	edd3 5a00 	vldr	s11, [r3]
 80017a2:	eeb0 2a65 	vmov.f32	s4, s11
 80017a6:	eef0 1a67 	vmov.f32	s3, s15
 80017aa:	eeb0 1a46 	vmov.f32	s2, s12
 80017ae:	eef0 0a66 	vmov.f32	s1, s13
 80017b2:	eeb0 0a47 	vmov.f32	s0, s14
 80017b6:	481e      	ldr	r0, [pc, #120]	@ (8001830 <main+0x110>)
 80017b8:	f000 fbe8 	bl	8001f8c <pid_init>
	 pid_ex.pos_deadzone = set_point_angle + 0.4;
	 pid_ex.neg_deadzone = -15;
	 pid_ex.pos_deadzone = set_point_angle + 15;
	 */

	pid_set_setpoint(&pid_ex, set_point_angle);
 80017bc:	4b1d      	ldr	r3, [pc, #116]	@ (8001834 <main+0x114>)
 80017be:	edd3 7a00 	vldr	s15, [r3]
 80017c2:	eeb0 0a67 	vmov.f32	s0, s15
 80017c6:	481a      	ldr	r0, [pc, #104]	@ (8001830 <main+0x110>)
 80017c8:	f000 fc0e 	bl	8001fe8 <pid_set_setpoint>
	status = mpu6050_init();
 80017cc:	f000 f9c2 	bl	8001b54 <mpu6050_init>
 80017d0:	4603      	mov	r3, r0
 80017d2:	461a      	mov	r2, r3
 80017d4:	4b18      	ldr	r3, [pc, #96]	@ (8001838 <main+0x118>)
 80017d6:	701a      	strb	r2, [r3, #0]

	//kalman filter
	Kalman_init(&filter);
 80017d8:	4818      	ldr	r0, [pc, #96]	@ (800183c <main+0x11c>)
 80017da:	f7ff fde5 	bl	80013a8 <Kalman_init>
	Kalman_setAngle(&filter, 0);
 80017de:	ed9f 0a18 	vldr	s0, [pc, #96]	@ 8001840 <main+0x120>
 80017e2:	4816      	ldr	r0, [pc, #88]	@ (800183c <main+0x11c>)
 80017e4:	f7ff ff8c 	bl	8001700 <Kalman_setAngle>

	nidec_h24_init();
 80017e8:	f000 fb22 	bl	8001e30 <nidec_h24_init>
	encoder_init(&enc, AB, &htim1, 100);
 80017ec:	2364      	movs	r3, #100	@ 0x64
 80017ee:	4a15      	ldr	r2, [pc, #84]	@ (8001844 <main+0x124>)
 80017f0:	213c      	movs	r1, #60	@ 0x3c
 80017f2:	4815      	ldr	r0, [pc, #84]	@ (8001848 <main+0x128>)
 80017f4:	f7ff fb84 	bl	8000f00 <encoder_init>
	HAL_TIM_Base_Start_IT(&htim2);
 80017f8:	4814      	ldr	r0, [pc, #80]	@ (800184c <main+0x12c>)
 80017fa:	f003 fae3 	bl	8004dc4 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start_IT(&htim3);
 80017fe:	4814      	ldr	r0, [pc, #80]	@ (8001850 <main+0x130>)
 8001800:	f003 fae0 	bl	8004dc4 <HAL_TIM_Base_Start_IT>
	/* USER CODE END 2 */

	/* Infinite loop */
	/* USER CODE BEGIN WHILE */
	while (1) {
		HAL_Delay(1);
 8001804:	2001      	movs	r0, #1
 8001806:	f001 f889 	bl	800291c <HAL_Delay>
 800180a:	e7fb      	b.n	8001804 <main+0xe4>
 800180c:	20000000 	.word	0x20000000
 8001810:	20000004 	.word	0x20000004
 8001814:	20000008 	.word	0x20000008
 8001818:	20000024 	.word	0x20000024
 800181c:	20000168 	.word	0x20000168
 8001820:	2000000c 	.word	0x2000000c
 8001824:	20000010 	.word	0x20000010
 8001828:	200001d8 	.word	0x200001d8
 800182c:	20000020 	.word	0x20000020
 8001830:	200001a0 	.word	0x200001a0
 8001834:	20000014 	.word	0x20000014
 8001838:	20000150 	.word	0x20000150
 800183c:	20000108 	.word	0x20000108
 8001840:	00000000 	.word	0x00000000
 8001844:	20000204 	.word	0x20000204
 8001848:	20000154 	.word	0x20000154
 800184c:	2000024c 	.word	0x2000024c
 8001850:	20000294 	.word	0x20000294

08001854 <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 8001854:	b580      	push	{r7, lr}
 8001856:	b094      	sub	sp, #80	@ 0x50
 8001858:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 800185a:	f107 031c 	add.w	r3, r7, #28
 800185e:	2234      	movs	r2, #52	@ 0x34
 8001860:	2100      	movs	r1, #0
 8001862:	4618      	mov	r0, r3
 8001864:	f004 fbb8 	bl	8005fd8 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8001868:	f107 0308 	add.w	r3, r7, #8
 800186c:	2200      	movs	r2, #0
 800186e:	601a      	str	r2, [r3, #0]
 8001870:	605a      	str	r2, [r3, #4]
 8001872:	609a      	str	r2, [r3, #8]
 8001874:	60da      	str	r2, [r3, #12]
 8001876:	611a      	str	r2, [r3, #16]

	/** Configure the main internal regulator output voltage
	 */
	__HAL_RCC_PWR_CLK_ENABLE();
 8001878:	2300      	movs	r3, #0
 800187a:	607b      	str	r3, [r7, #4]
 800187c:	4b29      	ldr	r3, [pc, #164]	@ (8001924 <SystemClock_Config+0xd0>)
 800187e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001880:	4a28      	ldr	r2, [pc, #160]	@ (8001924 <SystemClock_Config+0xd0>)
 8001882:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001886:	6413      	str	r3, [r2, #64]	@ 0x40
 8001888:	4b26      	ldr	r3, [pc, #152]	@ (8001924 <SystemClock_Config+0xd0>)
 800188a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800188c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001890:	607b      	str	r3, [r7, #4]
 8001892:	687b      	ldr	r3, [r7, #4]
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001894:	2300      	movs	r3, #0
 8001896:	603b      	str	r3, [r7, #0]
 8001898:	4b23      	ldr	r3, [pc, #140]	@ (8001928 <SystemClock_Config+0xd4>)
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 80018a0:	4a21      	ldr	r2, [pc, #132]	@ (8001928 <SystemClock_Config+0xd4>)
 80018a2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80018a6:	6013      	str	r3, [r2, #0]
 80018a8:	4b1f      	ldr	r3, [pc, #124]	@ (8001928 <SystemClock_Config+0xd4>)
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80018b0:	603b      	str	r3, [r7, #0]
 80018b2:	683b      	ldr	r3, [r7, #0]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80018b4:	2302      	movs	r3, #2
 80018b6:	61fb      	str	r3, [r7, #28]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80018b8:	2301      	movs	r3, #1
 80018ba:	62bb      	str	r3, [r7, #40]	@ 0x28
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80018bc:	2310      	movs	r3, #16
 80018be:	62fb      	str	r3, [r7, #44]	@ 0x2c
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80018c0:	2302      	movs	r3, #2
 80018c2:	637b      	str	r3, [r7, #52]	@ 0x34
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80018c4:	2300      	movs	r3, #0
 80018c6:	63bb      	str	r3, [r7, #56]	@ 0x38
	RCC_OscInitStruct.PLL.PLLM = 8;
 80018c8:	2308      	movs	r3, #8
 80018ca:	63fb      	str	r3, [r7, #60]	@ 0x3c
	RCC_OscInitStruct.PLL.PLLN = 84;
 80018cc:	2354      	movs	r3, #84	@ 0x54
 80018ce:	643b      	str	r3, [r7, #64]	@ 0x40
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80018d0:	2302      	movs	r3, #2
 80018d2:	647b      	str	r3, [r7, #68]	@ 0x44
	RCC_OscInitStruct.PLL.PLLQ = 2;
 80018d4:	2302      	movs	r3, #2
 80018d6:	64bb      	str	r3, [r7, #72]	@ 0x48
	RCC_OscInitStruct.PLL.PLLR = 2;
 80018d8:	2302      	movs	r3, #2
 80018da:	64fb      	str	r3, [r7, #76]	@ 0x4c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 80018dc:	f107 031c 	add.w	r3, r7, #28
 80018e0:	4618      	mov	r0, r3
 80018e2:	f002 ff19 	bl	8004718 <HAL_RCC_OscConfig>
 80018e6:	4603      	mov	r3, r0
 80018e8:	2b00      	cmp	r3, #0
 80018ea:	d001      	beq.n	80018f0 <SystemClock_Config+0x9c>
		Error_Handler();
 80018ec:	f000 f92c 	bl	8001b48 <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 80018f0:	230f      	movs	r3, #15
 80018f2:	60bb      	str	r3, [r7, #8]
			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80018f4:	2302      	movs	r3, #2
 80018f6:	60fb      	str	r3, [r7, #12]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80018f8:	2300      	movs	r3, #0
 80018fa:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80018fc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001900:	617b      	str	r3, [r7, #20]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001902:	2300      	movs	r3, #0
 8001904:	61bb      	str	r3, [r7, #24]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 8001906:	f107 0308 	add.w	r3, r7, #8
 800190a:	2102      	movs	r1, #2
 800190c:	4618      	mov	r0, r3
 800190e:	f002 fc53 	bl	80041b8 <HAL_RCC_ClockConfig>
 8001912:	4603      	mov	r3, r0
 8001914:	2b00      	cmp	r3, #0
 8001916:	d001      	beq.n	800191c <SystemClock_Config+0xc8>
		Error_Handler();
 8001918:	f000 f916 	bl	8001b48 <Error_Handler>
	}
}
 800191c:	bf00      	nop
 800191e:	3750      	adds	r7, #80	@ 0x50
 8001920:	46bd      	mov	sp, r7
 8001922:	bd80      	pop	{r7, pc}
 8001924:	40023800 	.word	0x40023800
 8001928:	40007000 	.word	0x40007000
 800192c:	00000000 	.word	0x00000000

08001930 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 8001930:	b5b0      	push	{r4, r5, r7, lr}
 8001932:	b088      	sub	sp, #32
 8001934:	af00      	add	r7, sp, #0
 8001936:	61f8      	str	r0, [r7, #28]
	if (htim->Instance == TIM3) {
 8001938:	69fb      	ldr	r3, [r7, #28]
 800193a:	681b      	ldr	r3, [r3, #0]
 800193c:	4a72      	ldr	r2, [pc, #456]	@ (8001b08 <HAL_TIM_PeriodElapsedCallback+0x1d8>)
 800193e:	4293      	cmp	r3, r2
 8001940:	f040 80af 	bne.w	8001aa2 <HAL_TIM_PeriodElapsedCallback+0x172>
		data = mpu6050_data();
 8001944:	4c71      	ldr	r4, [pc, #452]	@ (8001b0c <HAL_TIM_PeriodElapsedCallback+0x1dc>)
 8001946:	463b      	mov	r3, r7
 8001948:	4618      	mov	r0, r3
 800194a:	f000 f9ad 	bl	8001ca8 <mpu6050_data>
 800194e:	4625      	mov	r5, r4
 8001950:	463c      	mov	r4, r7
 8001952:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001954:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001956:	e894 0003 	ldmia.w	r4, {r0, r1}
 800195a:	e885 0003 	stmia.w	r5, {r0, r1}
		new_angle = atan(data.ax / sqrt(data.ay * data.ay + data.az * data.az))
 800195e:	4b6b      	ldr	r3, [pc, #428]	@ (8001b0c <HAL_TIM_PeriodElapsedCallback+0x1dc>)
 8001960:	681b      	ldr	r3, [r3, #0]
 8001962:	4618      	mov	r0, r3
 8001964:	f7fe fdb4 	bl	80004d0 <__aeabi_f2d>
 8001968:	4604      	mov	r4, r0
 800196a:	460d      	mov	r5, r1
 800196c:	4b67      	ldr	r3, [pc, #412]	@ (8001b0c <HAL_TIM_PeriodElapsedCallback+0x1dc>)
 800196e:	ed93 7a01 	vldr	s14, [r3, #4]
 8001972:	4b66      	ldr	r3, [pc, #408]	@ (8001b0c <HAL_TIM_PeriodElapsedCallback+0x1dc>)
 8001974:	edd3 7a01 	vldr	s15, [r3, #4]
 8001978:	ee27 7a27 	vmul.f32	s14, s14, s15
 800197c:	4b63      	ldr	r3, [pc, #396]	@ (8001b0c <HAL_TIM_PeriodElapsedCallback+0x1dc>)
 800197e:	edd3 6a02 	vldr	s13, [r3, #8]
 8001982:	4b62      	ldr	r3, [pc, #392]	@ (8001b0c <HAL_TIM_PeriodElapsedCallback+0x1dc>)
 8001984:	edd3 7a02 	vldr	s15, [r3, #8]
 8001988:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800198c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001990:	ee17 0a90 	vmov	r0, s15
 8001994:	f7fe fd9c 	bl	80004d0 <__aeabi_f2d>
 8001998:	4602      	mov	r2, r0
 800199a:	460b      	mov	r3, r1
 800199c:	ec43 2b10 	vmov	d0, r2, r3
 80019a0:	f004 fb4c 	bl	800603c <sqrt>
 80019a4:	ec53 2b10 	vmov	r2, r3, d0
 80019a8:	4620      	mov	r0, r4
 80019aa:	4629      	mov	r1, r5
 80019ac:	f7fe ff12 	bl	80007d4 <__aeabi_ddiv>
 80019b0:	4602      	mov	r2, r0
 80019b2:	460b      	mov	r3, r1
 80019b4:	ec43 2b17 	vmov	d7, r2, r3
 80019b8:	eeb0 0a47 	vmov.f32	s0, s14
 80019bc:	eef0 0a67 	vmov.f32	s1, s15
 80019c0:	f004 fb6a 	bl	8006098 <atan>
 80019c4:	ec51 0b10 	vmov	r0, r1, d0
				* 180 / M_PI;
 80019c8:	f04f 0200 	mov.w	r2, #0
 80019cc:	4b50      	ldr	r3, [pc, #320]	@ (8001b10 <HAL_TIM_PeriodElapsedCallback+0x1e0>)
 80019ce:	f7fe fdd7 	bl	8000580 <__aeabi_dmul>
 80019d2:	4602      	mov	r2, r0
 80019d4:	460b      	mov	r3, r1
 80019d6:	4610      	mov	r0, r2
 80019d8:	4619      	mov	r1, r3
 80019da:	a349      	add	r3, pc, #292	@ (adr r3, 8001b00 <HAL_TIM_PeriodElapsedCallback+0x1d0>)
 80019dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019e0:	f7fe fef8 	bl	80007d4 <__aeabi_ddiv>
 80019e4:	4602      	mov	r2, r0
 80019e6:	460b      	mov	r3, r1
 80019e8:	4610      	mov	r0, r2
 80019ea:	4619      	mov	r1, r3
 80019ec:	f7ff f8c0 	bl	8000b70 <__aeabi_d2f>
 80019f0:	4603      	mov	r3, r0
		new_angle = atan(data.ax / sqrt(data.ay * data.ay + data.az * data.az))
 80019f2:	4a48      	ldr	r2, [pc, #288]	@ (8001b14 <HAL_TIM_PeriodElapsedCallback+0x1e4>)
 80019f4:	6013      	str	r3, [r2, #0]
		pitch = Kalman_getAngle(&filter, new_angle, data.gx);
 80019f6:	4b47      	ldr	r3, [pc, #284]	@ (8001b14 <HAL_TIM_PeriodElapsedCallback+0x1e4>)
 80019f8:	edd3 7a00 	vldr	s15, [r3]
 80019fc:	4b43      	ldr	r3, [pc, #268]	@ (8001b0c <HAL_TIM_PeriodElapsedCallback+0x1dc>)
 80019fe:	ed93 7a03 	vldr	s14, [r3, #12]
 8001a02:	eef0 0a47 	vmov.f32	s1, s14
 8001a06:	eeb0 0a67 	vmov.f32	s0, s15
 8001a0a:	4843      	ldr	r0, [pc, #268]	@ (8001b18 <HAL_TIM_PeriodElapsedCallback+0x1e8>)
 8001a0c:	f7ff fd00 	bl	8001410 <Kalman_getAngle>
 8001a10:	eef0 7a40 	vmov.f32	s15, s0
 8001a14:	4b41      	ldr	r3, [pc, #260]	@ (8001b1c <HAL_TIM_PeriodElapsedCallback+0x1ec>)
 8001a16:	edc3 7a00 	vstr	s15, [r3]
		rpm_r = pid_compute_control_action(&pid_ex, pitch);
 8001a1a:	4b40      	ldr	r3, [pc, #256]	@ (8001b1c <HAL_TIM_PeriodElapsedCallback+0x1ec>)
 8001a1c:	edd3 7a00 	vldr	s15, [r3]
 8001a20:	eeb0 0a67 	vmov.f32	s0, s15
 8001a24:	483e      	ldr	r0, [pc, #248]	@ (8001b20 <HAL_TIM_PeriodElapsedCallback+0x1f0>)
 8001a26:	f000 faef 	bl	8002008 <pid_compute_control_action>
 8001a2a:	eef0 7a40 	vmov.f32	s15, s0
 8001a2e:	4b3d      	ldr	r3, [pc, #244]	@ (8001b24 <HAL_TIM_PeriodElapsedCallback+0x1f4>)
 8001a30:	edc3 7a00 	vstr	s15, [r3]

		if (fabs(pitch - set_point_angle) < max_angle
 8001a34:	4b39      	ldr	r3, [pc, #228]	@ (8001b1c <HAL_TIM_PeriodElapsedCallback+0x1ec>)
 8001a36:	ed93 7a00 	vldr	s14, [r3]
 8001a3a:	4b3b      	ldr	r3, [pc, #236]	@ (8001b28 <HAL_TIM_PeriodElapsedCallback+0x1f8>)
 8001a3c:	edd3 7a00 	vldr	s15, [r3]
 8001a40:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001a44:	eeb0 7ae7 	vabs.f32	s14, s15
 8001a48:	4b38      	ldr	r3, [pc, #224]	@ (8001b2c <HAL_TIM_PeriodElapsedCallback+0x1fc>)
 8001a4a:	edd3 7a00 	vldr	s15, [r3]
 8001a4e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001a52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a56:	d51f      	bpl.n	8001a98 <HAL_TIM_PeriodElapsedCallback+0x168>
				&& fabs(set_point_angle - pitch) > min_angle) {
 8001a58:	4b33      	ldr	r3, [pc, #204]	@ (8001b28 <HAL_TIM_PeriodElapsedCallback+0x1f8>)
 8001a5a:	ed93 7a00 	vldr	s14, [r3]
 8001a5e:	4b2f      	ldr	r3, [pc, #188]	@ (8001b1c <HAL_TIM_PeriodElapsedCallback+0x1ec>)
 8001a60:	edd3 7a00 	vldr	s15, [r3]
 8001a64:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001a68:	eeb0 7ae7 	vabs.f32	s14, s15
 8001a6c:	4b30      	ldr	r3, [pc, #192]	@ (8001b30 <HAL_TIM_PeriodElapsedCallback+0x200>)
 8001a6e:	edd3 7a00 	vldr	s15, [r3]
 8001a72:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001a76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a7a:	dd0d      	ble.n	8001a98 <HAL_TIM_PeriodElapsedCallback+0x168>
			rpm_r = pid_compute_control_action(&pid_ex, pitch);
 8001a7c:	4b27      	ldr	r3, [pc, #156]	@ (8001b1c <HAL_TIM_PeriodElapsedCallback+0x1ec>)
 8001a7e:	edd3 7a00 	vldr	s15, [r3]
 8001a82:	eeb0 0a67 	vmov.f32	s0, s15
 8001a86:	4826      	ldr	r0, [pc, #152]	@ (8001b20 <HAL_TIM_PeriodElapsedCallback+0x1f0>)
 8001a88:	f000 fabe 	bl	8002008 <pid_compute_control_action>
 8001a8c:	eef0 7a40 	vmov.f32	s15, s0
 8001a90:	4b24      	ldr	r3, [pc, #144]	@ (8001b24 <HAL_TIM_PeriodElapsedCallback+0x1f4>)
 8001a92:	edc3 7a00 	vstr	s15, [r3]
 8001a96:	e004      	b.n	8001aa2 <HAL_TIM_PeriodElapsedCallback+0x172>
		} else {
			nidec_h24_Move(0, 0);
 8001a98:	2000      	movs	r0, #0
 8001a9a:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 8001b34 <HAL_TIM_PeriodElapsedCallback+0x204>
 8001a9e:	f000 fa1b 	bl	8001ed8 <nidec_h24_Move>
		}

	}
	if (htim->Instance == TIM2) {
 8001aa2:	69fb      	ldr	r3, [r7, #28]
 8001aa4:	681b      	ldr	r3, [r3, #0]
 8001aa6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001aaa:	d124      	bne.n	8001af6 <HAL_TIM_PeriodElapsedCallback+0x1c6>
		rpm_y = encoder_get_velocity_rpm(&enc);
 8001aac:	4822      	ldr	r0, [pc, #136]	@ (8001b38 <HAL_TIM_PeriodElapsedCallback+0x208>)
 8001aae:	f7ff fb2b 	bl	8001108 <encoder_get_velocity_rpm>
 8001ab2:	eef0 7a40 	vmov.f32	s15, s0
 8001ab6:	4b21      	ldr	r3, [pc, #132]	@ (8001b3c <HAL_TIM_PeriodElapsedCallback+0x20c>)
 8001ab8:	edc3 7a00 	vstr	s15, [r3]
		pid_set_setpoint(&pid_in, rpm_r);
 8001abc:	4b19      	ldr	r3, [pc, #100]	@ (8001b24 <HAL_TIM_PeriodElapsedCallback+0x1f4>)
 8001abe:	edd3 7a00 	vldr	s15, [r3]
 8001ac2:	eeb0 0a67 	vmov.f32	s0, s15
 8001ac6:	481e      	ldr	r0, [pc, #120]	@ (8001b40 <HAL_TIM_PeriodElapsedCallback+0x210>)
 8001ac8:	f000 fa8e 	bl	8001fe8 <pid_set_setpoint>
		pwm = pid_compute_control_action(&pid_in, rpm_y);
 8001acc:	4b1b      	ldr	r3, [pc, #108]	@ (8001b3c <HAL_TIM_PeriodElapsedCallback+0x20c>)
 8001ace:	edd3 7a00 	vldr	s15, [r3]
 8001ad2:	eeb0 0a67 	vmov.f32	s0, s15
 8001ad6:	481a      	ldr	r0, [pc, #104]	@ (8001b40 <HAL_TIM_PeriodElapsedCallback+0x210>)
 8001ad8:	f000 fa96 	bl	8002008 <pid_compute_control_action>
 8001adc:	eef0 7a40 	vmov.f32	s15, s0
 8001ae0:	4b18      	ldr	r3, [pc, #96]	@ (8001b44 <HAL_TIM_PeriodElapsedCallback+0x214>)
 8001ae2:	edc3 7a00 	vstr	s15, [r3]
		nidec_h24_Move(pwm, 1);
 8001ae6:	4b17      	ldr	r3, [pc, #92]	@ (8001b44 <HAL_TIM_PeriodElapsedCallback+0x214>)
 8001ae8:	edd3 7a00 	vldr	s15, [r3]
 8001aec:	2001      	movs	r0, #1
 8001aee:	eeb0 0a67 	vmov.f32	s0, s15
 8001af2:	f000 f9f1 	bl	8001ed8 <nidec_h24_Move>
		 nidec_h24_Move(pwm, 1);
		 else
		 nidec_h24_Move(0, 0);
		 */
	}
}
 8001af6:	bf00      	nop
 8001af8:	3720      	adds	r7, #32
 8001afa:	46bd      	mov	sp, r7
 8001afc:	bdb0      	pop	{r4, r5, r7, pc}
 8001afe:	bf00      	nop
 8001b00:	54442d18 	.word	0x54442d18
 8001b04:	400921fb 	.word	0x400921fb
 8001b08:	40000400 	.word	0x40000400
 8001b0c:	20000138 	.word	0x20000138
 8001b10:	40668000 	.word	0x40668000
 8001b14:	20000134 	.word	0x20000134
 8001b18:	20000108 	.word	0x20000108
 8001b1c:	20000130 	.word	0x20000130
 8001b20:	200001a0 	.word	0x200001a0
 8001b24:	200001e4 	.word	0x200001e4
 8001b28:	20000014 	.word	0x20000014
 8001b2c:	2000001c 	.word	0x2000001c
 8001b30:	20000018 	.word	0x20000018
 8001b34:	00000000 	.word	0x00000000
 8001b38:	20000154 	.word	0x20000154
 8001b3c:	200001e0 	.word	0x200001e0
 8001b40:	20000168 	.word	0x20000168
 8001b44:	200001dc 	.word	0x200001dc

08001b48 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8001b48:	b480      	push	{r7}
 8001b4a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001b4c:	b672      	cpsid	i
}
 8001b4e:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8001b50:	bf00      	nop
 8001b52:	e7fd      	b.n	8001b50 <Error_Handler+0x8>

08001b54 <mpu6050_init>:
short gx_bias = 0;
short gy_bias = 0;
short gz_bias = 0;

/*mpu6050 initialization*/
HAL_StatusTypeDef mpu6050_init(){
 8001b54:	b580      	push	{r7, lr}
 8001b56:	b086      	sub	sp, #24
 8001b58:	af04      	add	r7, sp, #16
	HAL_StatusTypeDef status = HAL_I2C_IsDeviceReady(&hi2c1, IMU_ADDR, 1, 100);
 8001b5a:	2364      	movs	r3, #100	@ 0x64
 8001b5c:	2201      	movs	r2, #1
 8001b5e:	21d0      	movs	r1, #208	@ 0xd0
 8001b60:	4823      	ldr	r0, [pc, #140]	@ (8001bf0 <mpu6050_init+0x9c>)
 8001b62:	f001 fe47 	bl	80037f4 <HAL_I2C_IsDeviceReady>
 8001b66:	4603      	mov	r3, r0
 8001b68:	71fb      	strb	r3, [r7, #7]
		if (status == HAL_OK) {
 8001b6a:	79fb      	ldrb	r3, [r7, #7]
 8001b6c:	2b00      	cmp	r3, #0
 8001b6e:	d139      	bne.n	8001be4 <mpu6050_init+0x90>
			uint8_t data;

			/* power management register 0X6B must be all 0s to wake the sensor up */
			data = 0;
 8001b70:	2300      	movs	r3, #0
 8001b72:	71bb      	strb	r3, [r7, #6]
			HAL_I2C_Mem_Write(&hi2c1, IMU_ADDR, PWR_MGMT_1_REG, 1, &data, 1, 100);
 8001b74:	2364      	movs	r3, #100	@ 0x64
 8001b76:	9302      	str	r3, [sp, #8]
 8001b78:	2301      	movs	r3, #1
 8001b7a:	9301      	str	r3, [sp, #4]
 8001b7c:	1dbb      	adds	r3, r7, #6
 8001b7e:	9300      	str	r3, [sp, #0]
 8001b80:	2301      	movs	r3, #1
 8001b82:	226b      	movs	r2, #107	@ 0x6b
 8001b84:	21d0      	movs	r1, #208	@ 0xd0
 8001b86:	481a      	ldr	r0, [pc, #104]	@ (8001bf0 <mpu6050_init+0x9c>)
 8001b88:	f001 fb08 	bl	800319c <HAL_I2C_Mem_Write>

			/* Set DATA RATE of 1KHz by writing SMPLRT_DIV register */
			data = 0x07;
 8001b8c:	2307      	movs	r3, #7
 8001b8e:	71bb      	strb	r3, [r7, #6]
			HAL_I2C_Mem_Write(&hi2c1, IMU_ADDR, SMPLRT_DIV_REG, 1, &data, 1, 100);
 8001b90:	2364      	movs	r3, #100	@ 0x64
 8001b92:	9302      	str	r3, [sp, #8]
 8001b94:	2301      	movs	r3, #1
 8001b96:	9301      	str	r3, [sp, #4]
 8001b98:	1dbb      	adds	r3, r7, #6
 8001b9a:	9300      	str	r3, [sp, #0]
 8001b9c:	2301      	movs	r3, #1
 8001b9e:	2219      	movs	r2, #25
 8001ba0:	21d0      	movs	r1, #208	@ 0xd0
 8001ba2:	4813      	ldr	r0, [pc, #76]	@ (8001bf0 <mpu6050_init+0x9c>)
 8001ba4:	f001 fafa 	bl	800319c <HAL_I2C_Mem_Write>

			/*  Set accelerometer configuration in ACCEL_CONFIG Register */
			/* XA_ST=0,YA_ST=0,ZA_ST=0, FS_SEL=0 ->  2g */
			data = FS_ACC_2G;
 8001ba8:	2300      	movs	r3, #0
 8001baa:	71bb      	strb	r3, [r7, #6]
			HAL_I2C_Mem_Write(&hi2c1, IMU_ADDR, ACCEL_CONFIG_REG, 1, &data, 1, 100);
 8001bac:	2364      	movs	r3, #100	@ 0x64
 8001bae:	9302      	str	r3, [sp, #8]
 8001bb0:	2301      	movs	r3, #1
 8001bb2:	9301      	str	r3, [sp, #4]
 8001bb4:	1dbb      	adds	r3, r7, #6
 8001bb6:	9300      	str	r3, [sp, #0]
 8001bb8:	2301      	movs	r3, #1
 8001bba:	221c      	movs	r2, #28
 8001bbc:	21d0      	movs	r1, #208	@ 0xd0
 8001bbe:	480c      	ldr	r0, [pc, #48]	@ (8001bf0 <mpu6050_init+0x9c>)
 8001bc0:	f001 faec 	bl	800319c <HAL_I2C_Mem_Write>

			/* Set Gyroscope configuration in GYRO_CONFIG Register */
			/* XG_ST=0,YG_ST=0,ZG_ST=0, FS_SEL=0 ->  250 deg/s */
			data = FS_GYRO_1000;
 8001bc4:	2309      	movs	r3, #9
 8001bc6:	71bb      	strb	r3, [r7, #6]
			HAL_I2C_Mem_Write(&hi2c1, IMU_ADDR, GYRO_CONFIG_REG, 1, &data, 1, 100);
 8001bc8:	2364      	movs	r3, #100	@ 0x64
 8001bca:	9302      	str	r3, [sp, #8]
 8001bcc:	2301      	movs	r3, #1
 8001bce:	9301      	str	r3, [sp, #4]
 8001bd0:	1dbb      	adds	r3, r7, #6
 8001bd2:	9300      	str	r3, [sp, #0]
 8001bd4:	2301      	movs	r3, #1
 8001bd6:	221b      	movs	r2, #27
 8001bd8:	21d0      	movs	r1, #208	@ 0xd0
 8001bda:	4805      	ldr	r0, [pc, #20]	@ (8001bf0 <mpu6050_init+0x9c>)
 8001bdc:	f001 fade 	bl	800319c <HAL_I2C_Mem_Write>

			calculate_gyroscope_bias();
 8001be0:	f000 f808 	bl	8001bf4 <calculate_gyroscope_bias>
		}
		return status;
 8001be4:	79fb      	ldrb	r3, [r7, #7]
}
 8001be6:	4618      	mov	r0, r3
 8001be8:	3708      	adds	r7, #8
 8001bea:	46bd      	mov	sp, r7
 8001bec:	bd80      	pop	{r7, pc}
 8001bee:	bf00      	nop
 8001bf0:	200000b4 	.word	0x200000b4

08001bf4 <calculate_gyroscope_bias>:

/*Gyroscope bias calculate*/
void calculate_gyroscope_bias() {
 8001bf4:	b580      	push	{r7, lr}
 8001bf6:	b08e      	sub	sp, #56	@ 0x38
 8001bf8:	af04      	add	r7, sp, #16
	// Number of samples to average
    int num_samples = 1000;
 8001bfa:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001bfe:	617b      	str	r3, [r7, #20]
    long gx_sum = 0;
 8001c00:	2300      	movs	r3, #0
 8001c02:	627b      	str	r3, [r7, #36]	@ 0x24
    long gy_sum = 0;
 8001c04:	2300      	movs	r3, #0
 8001c06:	623b      	str	r3, [r7, #32]
    long gz_sum = 0;
 8001c08:	2300      	movs	r3, #0
 8001c0a:	61fb      	str	r3, [r7, #28]

    for (int i = 0; i < num_samples; i++) {
 8001c0c:	2300      	movs	r3, #0
 8001c0e:	61bb      	str	r3, [r7, #24]
 8001c10:	e023      	b.n	8001c5a <calculate_gyroscope_bias+0x66>
    	uint8_t buffer[14];
    	HAL_I2C_Mem_Read(&hi2c1, IMU_ADDR, ACCEL_XOUT_H_REG, I2C_MEMADD_SIZE_8BIT, buffer, 14, 100);
 8001c12:	2364      	movs	r3, #100	@ 0x64
 8001c14:	9302      	str	r3, [sp, #8]
 8001c16:	230e      	movs	r3, #14
 8001c18:	9301      	str	r3, [sp, #4]
 8001c1a:	1d3b      	adds	r3, r7, #4
 8001c1c:	9300      	str	r3, [sp, #0]
 8001c1e:	2301      	movs	r3, #1
 8001c20:	223b      	movs	r2, #59	@ 0x3b
 8001c22:	21d0      	movs	r1, #208	@ 0xd0
 8001c24:	481b      	ldr	r0, [pc, #108]	@ (8001c94 <calculate_gyroscope_bias+0xa0>)
 8001c26:	f001 fbb3 	bl	8003390 <HAL_I2C_Mem_Read>
    	gx_sum += buffer[8] << 8  | buffer[9];
 8001c2a:	7b3b      	ldrb	r3, [r7, #12]
 8001c2c:	021b      	lsls	r3, r3, #8
 8001c2e:	7b7a      	ldrb	r2, [r7, #13]
 8001c30:	4313      	orrs	r3, r2
 8001c32:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001c34:	4413      	add	r3, r2
 8001c36:	627b      	str	r3, [r7, #36]	@ 0x24
    	gy_sum += buffer[10] << 8  | buffer[11];
 8001c38:	7bbb      	ldrb	r3, [r7, #14]
 8001c3a:	021b      	lsls	r3, r3, #8
 8001c3c:	7bfa      	ldrb	r2, [r7, #15]
 8001c3e:	4313      	orrs	r3, r2
 8001c40:	6a3a      	ldr	r2, [r7, #32]
 8001c42:	4413      	add	r3, r2
 8001c44:	623b      	str	r3, [r7, #32]
    	gz_sum += buffer[12] << 8  | buffer[13];
 8001c46:	7c3b      	ldrb	r3, [r7, #16]
 8001c48:	021b      	lsls	r3, r3, #8
 8001c4a:	7c7a      	ldrb	r2, [r7, #17]
 8001c4c:	4313      	orrs	r3, r2
 8001c4e:	69fa      	ldr	r2, [r7, #28]
 8001c50:	4413      	add	r3, r2
 8001c52:	61fb      	str	r3, [r7, #28]
    for (int i = 0; i < num_samples; i++) {
 8001c54:	69bb      	ldr	r3, [r7, #24]
 8001c56:	3301      	adds	r3, #1
 8001c58:	61bb      	str	r3, [r7, #24]
 8001c5a:	69ba      	ldr	r2, [r7, #24]
 8001c5c:	697b      	ldr	r3, [r7, #20]
 8001c5e:	429a      	cmp	r2, r3
 8001c60:	dbd7      	blt.n	8001c12 <calculate_gyroscope_bias+0x1e>
    }

    gx_bias = gx_sum / num_samples;
 8001c62:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001c64:	697b      	ldr	r3, [r7, #20]
 8001c66:	fb92 f3f3 	sdiv	r3, r2, r3
 8001c6a:	b21a      	sxth	r2, r3
 8001c6c:	4b0a      	ldr	r3, [pc, #40]	@ (8001c98 <calculate_gyroscope_bias+0xa4>)
 8001c6e:	801a      	strh	r2, [r3, #0]
    gy_bias = gy_sum / num_samples;
 8001c70:	6a3a      	ldr	r2, [r7, #32]
 8001c72:	697b      	ldr	r3, [r7, #20]
 8001c74:	fb92 f3f3 	sdiv	r3, r2, r3
 8001c78:	b21a      	sxth	r2, r3
 8001c7a:	4b08      	ldr	r3, [pc, #32]	@ (8001c9c <calculate_gyroscope_bias+0xa8>)
 8001c7c:	801a      	strh	r2, [r3, #0]
    gz_bias = gz_sum / num_samples;
 8001c7e:	69fa      	ldr	r2, [r7, #28]
 8001c80:	697b      	ldr	r3, [r7, #20]
 8001c82:	fb92 f3f3 	sdiv	r3, r2, r3
 8001c86:	b21a      	sxth	r2, r3
 8001c88:	4b05      	ldr	r3, [pc, #20]	@ (8001ca0 <calculate_gyroscope_bias+0xac>)
 8001c8a:	801a      	strh	r2, [r3, #0]
}
 8001c8c:	bf00      	nop
 8001c8e:	3728      	adds	r7, #40	@ 0x28
 8001c90:	46bd      	mov	sp, r7
 8001c92:	bd80      	pop	{r7, pc}
 8001c94:	200000b4 	.word	0x200000b4
 8001c98:	200001e8 	.word	0x200001e8
 8001c9c:	200001ea 	.word	0x200001ea
 8001ca0:	200001ec 	.word	0x200001ec
 8001ca4:	00000000 	.word	0x00000000

08001ca8 <mpu6050_data>:
	res.data = (imu_data - gz_bias) / GYRO_SCALE;
	return res;
}

/* All data reading MPU6050 */
mpu_data mpu6050_data() {
 8001ca8:	b5b0      	push	{r4, r5, r7, lr}
 8001caa:	b090      	sub	sp, #64	@ 0x40
 8001cac:	af04      	add	r7, sp, #16
 8001cae:	6078      	str	r0, [r7, #4]
	uint8_t buffer[14];
	 HAL_I2C_Mem_Read(&hi2c1, IMU_ADDR, ACCEL_XOUT_H_REG, I2C_MEMADD_SIZE_8BIT, buffer, 14, 100);
 8001cb0:	2364      	movs	r3, #100	@ 0x64
 8001cb2:	9302      	str	r3, [sp, #8]
 8001cb4:	230e      	movs	r3, #14
 8001cb6:	9301      	str	r3, [sp, #4]
 8001cb8:	f107 0320 	add.w	r3, r7, #32
 8001cbc:	9300      	str	r3, [sp, #0]
 8001cbe:	2301      	movs	r3, #1
 8001cc0:	223b      	movs	r2, #59	@ 0x3b
 8001cc2:	21d0      	movs	r1, #208	@ 0xd0
 8001cc4:	4858      	ldr	r0, [pc, #352]	@ (8001e28 <mpu6050_data+0x180>)
 8001cc6:	f001 fb63 	bl	8003390 <HAL_I2C_Mem_Read>
	 mpu_data data;
	 data.ax = (int16_t)(buffer[0] << 8 | buffer[1]) / ACC_SCALE;
 8001cca:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001cce:	021b      	lsls	r3, r3, #8
 8001cd0:	b21a      	sxth	r2, r3
 8001cd2:	f897 3021 	ldrb.w	r3, [r7, #33]	@ 0x21
 8001cd6:	b21b      	sxth	r3, r3
 8001cd8:	4313      	orrs	r3, r2
 8001cda:	b21b      	sxth	r3, r3
 8001cdc:	4618      	mov	r0, r3
 8001cde:	f7fe fbe5 	bl	80004ac <__aeabi_i2d>
 8001ce2:	f04f 0200 	mov.w	r2, #0
 8001ce6:	4b51      	ldr	r3, [pc, #324]	@ (8001e2c <mpu6050_data+0x184>)
 8001ce8:	f7fe fd74 	bl	80007d4 <__aeabi_ddiv>
 8001cec:	4602      	mov	r2, r0
 8001cee:	460b      	mov	r3, r1
 8001cf0:	4610      	mov	r0, r2
 8001cf2:	4619      	mov	r1, r3
 8001cf4:	f7fe ff3c 	bl	8000b70 <__aeabi_d2f>
 8001cf8:	4603      	mov	r3, r0
 8001cfa:	60bb      	str	r3, [r7, #8]
	 data.ay = (int16_t)(buffer[2] << 8 | buffer[3]) / ACC_SCALE;
 8001cfc:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 8001d00:	021b      	lsls	r3, r3, #8
 8001d02:	b21a      	sxth	r2, r3
 8001d04:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8001d08:	b21b      	sxth	r3, r3
 8001d0a:	4313      	orrs	r3, r2
 8001d0c:	b21b      	sxth	r3, r3
 8001d0e:	4618      	mov	r0, r3
 8001d10:	f7fe fbcc 	bl	80004ac <__aeabi_i2d>
 8001d14:	f04f 0200 	mov.w	r2, #0
 8001d18:	4b44      	ldr	r3, [pc, #272]	@ (8001e2c <mpu6050_data+0x184>)
 8001d1a:	f7fe fd5b 	bl	80007d4 <__aeabi_ddiv>
 8001d1e:	4602      	mov	r2, r0
 8001d20:	460b      	mov	r3, r1
 8001d22:	4610      	mov	r0, r2
 8001d24:	4619      	mov	r1, r3
 8001d26:	f7fe ff23 	bl	8000b70 <__aeabi_d2f>
 8001d2a:	4603      	mov	r3, r0
 8001d2c:	60fb      	str	r3, [r7, #12]
	 data.az = (int16_t)(buffer[4] << 8 | buffer[5]) / ACC_SCALE_Z;
 8001d2e:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8001d32:	021b      	lsls	r3, r3, #8
 8001d34:	b21a      	sxth	r2, r3
 8001d36:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 8001d3a:	b21b      	sxth	r3, r3
 8001d3c:	4313      	orrs	r3, r2
 8001d3e:	b21b      	sxth	r3, r3
 8001d40:	4618      	mov	r0, r3
 8001d42:	f7fe fbb3 	bl	80004ac <__aeabi_i2d>
 8001d46:	a334      	add	r3, pc, #208	@ (adr r3, 8001e18 <mpu6050_data+0x170>)
 8001d48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d4c:	f7fe fd42 	bl	80007d4 <__aeabi_ddiv>
 8001d50:	4602      	mov	r2, r0
 8001d52:	460b      	mov	r3, r1
 8001d54:	4610      	mov	r0, r2
 8001d56:	4619      	mov	r1, r3
 8001d58:	f7fe ff0a 	bl	8000b70 <__aeabi_d2f>
 8001d5c:	4603      	mov	r3, r0
 8001d5e:	613b      	str	r3, [r7, #16]
	 data.gx = (int16_t)(buffer[8] << 8 | buffer[9]) / GYRO_SCALE;
 8001d60:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8001d64:	021b      	lsls	r3, r3, #8
 8001d66:	b21a      	sxth	r2, r3
 8001d68:	f897 3029 	ldrb.w	r3, [r7, #41]	@ 0x29
 8001d6c:	b21b      	sxth	r3, r3
 8001d6e:	4313      	orrs	r3, r2
 8001d70:	b21b      	sxth	r3, r3
 8001d72:	4618      	mov	r0, r3
 8001d74:	f7fe fb9a 	bl	80004ac <__aeabi_i2d>
 8001d78:	a329      	add	r3, pc, #164	@ (adr r3, 8001e20 <mpu6050_data+0x178>)
 8001d7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d7e:	f7fe fd29 	bl	80007d4 <__aeabi_ddiv>
 8001d82:	4602      	mov	r2, r0
 8001d84:	460b      	mov	r3, r1
 8001d86:	4610      	mov	r0, r2
 8001d88:	4619      	mov	r1, r3
 8001d8a:	f7fe fef1 	bl	8000b70 <__aeabi_d2f>
 8001d8e:	4603      	mov	r3, r0
 8001d90:	617b      	str	r3, [r7, #20]
	 data.gy = (int16_t)(buffer[10] << 8 | buffer[11]) / GYRO_SCALE;
 8001d92:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8001d96:	021b      	lsls	r3, r3, #8
 8001d98:	b21a      	sxth	r2, r3
 8001d9a:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 8001d9e:	b21b      	sxth	r3, r3
 8001da0:	4313      	orrs	r3, r2
 8001da2:	b21b      	sxth	r3, r3
 8001da4:	4618      	mov	r0, r3
 8001da6:	f7fe fb81 	bl	80004ac <__aeabi_i2d>
 8001daa:	a31d      	add	r3, pc, #116	@ (adr r3, 8001e20 <mpu6050_data+0x178>)
 8001dac:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001db0:	f7fe fd10 	bl	80007d4 <__aeabi_ddiv>
 8001db4:	4602      	mov	r2, r0
 8001db6:	460b      	mov	r3, r1
 8001db8:	4610      	mov	r0, r2
 8001dba:	4619      	mov	r1, r3
 8001dbc:	f7fe fed8 	bl	8000b70 <__aeabi_d2f>
 8001dc0:	4603      	mov	r3, r0
 8001dc2:	61bb      	str	r3, [r7, #24]
	 data.gz = (int16_t)(buffer[12] << 8 | buffer[13]) / GYRO_SCALE;
 8001dc4:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8001dc8:	021b      	lsls	r3, r3, #8
 8001dca:	b21a      	sxth	r2, r3
 8001dcc:	f897 302d 	ldrb.w	r3, [r7, #45]	@ 0x2d
 8001dd0:	b21b      	sxth	r3, r3
 8001dd2:	4313      	orrs	r3, r2
 8001dd4:	b21b      	sxth	r3, r3
 8001dd6:	4618      	mov	r0, r3
 8001dd8:	f7fe fb68 	bl	80004ac <__aeabi_i2d>
 8001ddc:	a310      	add	r3, pc, #64	@ (adr r3, 8001e20 <mpu6050_data+0x178>)
 8001dde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001de2:	f7fe fcf7 	bl	80007d4 <__aeabi_ddiv>
 8001de6:	4602      	mov	r2, r0
 8001de8:	460b      	mov	r3, r1
 8001dea:	4610      	mov	r0, r2
 8001dec:	4619      	mov	r1, r3
 8001dee:	f7fe febf 	bl	8000b70 <__aeabi_d2f>
 8001df2:	4603      	mov	r3, r0
 8001df4:	61fb      	str	r3, [r7, #28]
	 return data;
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	461d      	mov	r5, r3
 8001dfa:	f107 0408 	add.w	r4, r7, #8
 8001dfe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001e00:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001e02:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001e06:	e885 0003 	stmia.w	r5, {r0, r1}
}
 8001e0a:	6878      	ldr	r0, [r7, #4]
 8001e0c:	3730      	adds	r7, #48	@ 0x30
 8001e0e:	46bd      	mov	sp, r7
 8001e10:	bdb0      	pop	{r4, r5, r7, pc}
 8001e12:	bf00      	nop
 8001e14:	f3af 8000 	nop.w
 8001e18:	00000000 	.word	0x00000000
 8001e1c:	40cc2900 	.word	0x40cc2900
 8001e20:	66666666 	.word	0x66666666
 8001e24:	40406666 	.word	0x40406666
 8001e28:	200000b4 	.word	0x200000b4
 8001e2c:	40d00000 	.word	0x40d00000

08001e30 <nidec_h24_init>:

/*Default timer settings*/
extern  TIM_HandleTypeDef htim5;

/* To initialize the PWM and direction pins of the motor */
void nidec_h24_init(){
 8001e30:	b580      	push	{r7, lr}
 8001e32:	b086      	sub	sp, #24
 8001e34:	af00      	add	r7, sp, #0

    GPIO_InitTypeDef GPIO_InitStruct = {0};  // Declare the GPIO init struct
 8001e36:	1d3b      	adds	r3, r7, #4
 8001e38:	2200      	movs	r2, #0
 8001e3a:	601a      	str	r2, [r3, #0]
 8001e3c:	605a      	str	r2, [r3, #4]
 8001e3e:	609a      	str	r2, [r3, #8]
 8001e40:	60da      	str	r2, [r3, #12]
 8001e42:	611a      	str	r2, [r3, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001e44:	2300      	movs	r3, #0
 8001e46:	603b      	str	r3, [r7, #0]
 8001e48:	4b1f      	ldr	r3, [pc, #124]	@ (8001ec8 <nidec_h24_init+0x98>)
 8001e4a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e4c:	4a1e      	ldr	r2, [pc, #120]	@ (8001ec8 <nidec_h24_init+0x98>)
 8001e4e:	f043 0302 	orr.w	r3, r3, #2
 8001e52:	6313      	str	r3, [r2, #48]	@ 0x30
 8001e54:	4b1c      	ldr	r3, [pc, #112]	@ (8001ec8 <nidec_h24_init+0x98>)
 8001e56:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e58:	f003 0302 	and.w	r3, r3, #2
 8001e5c:	603b      	str	r3, [r7, #0]
 8001e5e:	683b      	ldr	r3, [r7, #0]

	/*Configure GPIO pin : Direction_Pin */
	GPIO_InitStruct.Pin = DIRECTION_PIN;
 8001e60:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001e64:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e66:	2301      	movs	r3, #1
 8001e68:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8001e6a:	2302      	movs	r3, #2
 8001e6c:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e6e:	2300      	movs	r3, #0
 8001e70:	613b      	str	r3, [r7, #16]
	HAL_GPIO_Init(DIRECTION_PORT, &GPIO_InitStruct);
 8001e72:	1d3b      	adds	r3, r7, #4
 8001e74:	4619      	mov	r1, r3
 8001e76:	4815      	ldr	r0, [pc, #84]	@ (8001ecc <nidec_h24_init+0x9c>)
 8001e78:	f000 fe86 	bl	8002b88 <HAL_GPIO_Init>

    /*Configure GPIO pin : Brake_Pin */
	GPIO_InitStruct.Pin = BRAKE_PIN;
 8001e7c:	2310      	movs	r3, #16
 8001e7e:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e80:	2301      	movs	r3, #1
 8001e82:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8001e84:	2302      	movs	r3, #2
 8001e86:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e88:	2300      	movs	r3, #0
 8001e8a:	613b      	str	r3, [r7, #16]
	HAL_GPIO_Init(BRAKE_PORT, &GPIO_InitStruct);
 8001e8c:	1d3b      	adds	r3, r7, #4
 8001e8e:	4619      	mov	r1, r3
 8001e90:	480e      	ldr	r0, [pc, #56]	@ (8001ecc <nidec_h24_init+0x9c>)
 8001e92:	f000 fe79 	bl	8002b88 <HAL_GPIO_Init>

	// Set the direction pin to low initially
	HAL_GPIO_WritePin(DIRECTION_PORT, DIRECTION_PIN, GPIO_PIN_RESET);
 8001e96:	2200      	movs	r2, #0
 8001e98:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001e9c:	480b      	ldr	r0, [pc, #44]	@ (8001ecc <nidec_h24_init+0x9c>)
 8001e9e:	f001 f81f 	bl	8002ee0 <HAL_GPIO_WritePin>
    
	// Set the brake pin to low initially
	HAL_GPIO_WritePin(BRAKE_PORT, BRAKE_PIN, GPIO_PIN_RESET);
 8001ea2:	2200      	movs	r2, #0
 8001ea4:	2110      	movs	r1, #16
 8001ea6:	4809      	ldr	r0, [pc, #36]	@ (8001ecc <nidec_h24_init+0x9c>)
 8001ea8:	f001 f81a 	bl	8002ee0 <HAL_GPIO_WritePin>

	// Start PWM on the specified timer and channel
	TIM5->CCR1 = 0;
 8001eac:	4b08      	ldr	r3, [pc, #32]	@ (8001ed0 <nidec_h24_init+0xa0>)
 8001eae:	2200      	movs	r2, #0
 8001eb0:	635a      	str	r2, [r3, #52]	@ 0x34
    HAL_TIM_Base_Start(&htim5);
 8001eb2:	4808      	ldr	r0, [pc, #32]	@ (8001ed4 <nidec_h24_init+0xa4>)
 8001eb4:	f002 ff1e 	bl	8004cf4 <HAL_TIM_Base_Start>
	HAL_TIM_PWM_Start(&htim5, CHANNEL);
 8001eb8:	2100      	movs	r1, #0
 8001eba:	4806      	ldr	r0, [pc, #24]	@ (8001ed4 <nidec_h24_init+0xa4>)
 8001ebc:	f003 f842 	bl	8004f44 <HAL_TIM_PWM_Start>
}
 8001ec0:	bf00      	nop
 8001ec2:	3718      	adds	r7, #24
 8001ec4:	46bd      	mov	sp, r7
 8001ec6:	bd80      	pop	{r7, pc}
 8001ec8:	40023800 	.word	0x40023800
 8001ecc:	40020400 	.word	0x40020400
 8001ed0:	40000c00 	.word	0x40000c00
 8001ed4:	200002dc 	.word	0x200002dc

08001ed8 <nidec_h24_Move>:

/* To make the motor turn based on the input */
void nidec_h24_Move(float dutyCycle, uint8_t brk){
 8001ed8:	b5b0      	push	{r4, r5, r7, lr}
 8001eda:	b082      	sub	sp, #8
 8001edc:	af00      	add	r7, sp, #0
 8001ede:	ed87 0a01 	vstr	s0, [r7, #4]
 8001ee2:	4603      	mov	r3, r0
 8001ee4:	70fb      	strb	r3, [r7, #3]

    // Set the PWM duty cycle
	TIM5->CCR1 = htim5.Instance->ARR*(1 - fabs(dutyCycle)/100);
 8001ee6:	4b24      	ldr	r3, [pc, #144]	@ (8001f78 <nidec_h24_Move+0xa0>)
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001eec:	4618      	mov	r0, r3
 8001eee:	f7fe facd 	bl	800048c <__aeabi_ui2d>
 8001ef2:	4604      	mov	r4, r0
 8001ef4:	460d      	mov	r5, r1
 8001ef6:	edd7 7a01 	vldr	s15, [r7, #4]
 8001efa:	eef0 7ae7 	vabs.f32	s15, s15
 8001efe:	ee17 0a90 	vmov	r0, s15
 8001f02:	f7fe fae5 	bl	80004d0 <__aeabi_f2d>
 8001f06:	f04f 0200 	mov.w	r2, #0
 8001f0a:	4b1c      	ldr	r3, [pc, #112]	@ (8001f7c <nidec_h24_Move+0xa4>)
 8001f0c:	f7fe fc62 	bl	80007d4 <__aeabi_ddiv>
 8001f10:	4602      	mov	r2, r0
 8001f12:	460b      	mov	r3, r1
 8001f14:	f04f 0000 	mov.w	r0, #0
 8001f18:	4919      	ldr	r1, [pc, #100]	@ (8001f80 <nidec_h24_Move+0xa8>)
 8001f1a:	f7fe f979 	bl	8000210 <__aeabi_dsub>
 8001f1e:	4602      	mov	r2, r0
 8001f20:	460b      	mov	r3, r1
 8001f22:	4620      	mov	r0, r4
 8001f24:	4629      	mov	r1, r5
 8001f26:	f7fe fb2b 	bl	8000580 <__aeabi_dmul>
 8001f2a:	4602      	mov	r2, r0
 8001f2c:	460b      	mov	r3, r1
 8001f2e:	4c15      	ldr	r4, [pc, #84]	@ (8001f84 <nidec_h24_Move+0xac>)
 8001f30:	4610      	mov	r0, r2
 8001f32:	4619      	mov	r1, r3
 8001f34:	f7fe fdfc 	bl	8000b30 <__aeabi_d2uiz>
 8001f38:	4603      	mov	r3, r0
 8001f3a:	6363      	str	r3, [r4, #52]	@ 0x34

    if (dutyCycle > 0) {
 8001f3c:	edd7 7a01 	vldr	s15, [r7, #4]
 8001f40:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001f44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f48:	dd06      	ble.n	8001f58 <nidec_h24_Move+0x80>
        // counter-clockwise
        HAL_GPIO_WritePin(DIRECTION_PORT, DIRECTION_PIN, GPIO_PIN_RESET);
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001f50:	480d      	ldr	r0, [pc, #52]	@ (8001f88 <nidec_h24_Move+0xb0>)
 8001f52:	f000 ffc5 	bl	8002ee0 <HAL_GPIO_WritePin>
 8001f56:	e005      	b.n	8001f64 <nidec_h24_Move+0x8c>
    }else{
        // clockwise
        HAL_GPIO_WritePin(DIRECTION_PORT, DIRECTION_PIN, GPIO_PIN_SET);
 8001f58:	2201      	movs	r2, #1
 8001f5a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001f5e:	480a      	ldr	r0, [pc, #40]	@ (8001f88 <nidec_h24_Move+0xb0>)
 8001f60:	f000 ffbe 	bl	8002ee0 <HAL_GPIO_WritePin>
    }

    // brk -> 0: brakes
    HAL_GPIO_WritePin(BRAKE_PORT, BRAKE_PIN, brk);
 8001f64:	78fb      	ldrb	r3, [r7, #3]
 8001f66:	461a      	mov	r2, r3
 8001f68:	2110      	movs	r1, #16
 8001f6a:	4807      	ldr	r0, [pc, #28]	@ (8001f88 <nidec_h24_Move+0xb0>)
 8001f6c:	f000 ffb8 	bl	8002ee0 <HAL_GPIO_WritePin>

    // Generate an update event to reload the value immediately
}
 8001f70:	bf00      	nop
 8001f72:	3708      	adds	r7, #8
 8001f74:	46bd      	mov	sp, r7
 8001f76:	bdb0      	pop	{r4, r5, r7, pc}
 8001f78:	200002dc 	.word	0x200002dc
 8001f7c:	40590000 	.word	0x40590000
 8001f80:	3ff00000 	.word	0x3ff00000
 8001f84:	40000c00 	.word	0x40000c00
 8001f88:	40020400 	.word	0x40020400

08001f8c <pid_init>:

float p_action, i_action, d_action, error_debug;
static float last_u;

void pid_init(PID_t *p, float k_p, float k_i, float k_d, float min_out,
		float max_out) {
 8001f8c:	b480      	push	{r7}
 8001f8e:	b087      	sub	sp, #28
 8001f90:	af00      	add	r7, sp, #0
 8001f92:	6178      	str	r0, [r7, #20]
 8001f94:	ed87 0a04 	vstr	s0, [r7, #16]
 8001f98:	edc7 0a03 	vstr	s1, [r7, #12]
 8001f9c:	ed87 1a02 	vstr	s2, [r7, #8]
 8001fa0:	edc7 1a01 	vstr	s3, [r7, #4]
 8001fa4:	ed87 2a00 	vstr	s4, [r7]
	p->k_p = k_p;
 8001fa8:	697b      	ldr	r3, [r7, #20]
 8001faa:	693a      	ldr	r2, [r7, #16]
 8001fac:	611a      	str	r2, [r3, #16]
	p->k_i = k_i;
 8001fae:	697b      	ldr	r3, [r7, #20]
 8001fb0:	68fa      	ldr	r2, [r7, #12]
 8001fb2:	615a      	str	r2, [r3, #20]
	p->k_d = k_d;
 8001fb4:	697b      	ldr	r3, [r7, #20]
 8001fb6:	68ba      	ldr	r2, [r7, #8]
 8001fb8:	619a      	str	r2, [r3, #24]
	p->integral_error = 0;
 8001fba:	697b      	ldr	r3, [r7, #20]
 8001fbc:	f04f 0200 	mov.w	r2, #0
 8001fc0:	609a      	str	r2, [r3, #8]
	p->last_error = 0;
 8001fc2:	697b      	ldr	r3, [r7, #20]
 8001fc4:	f04f 0200 	mov.w	r2, #0
 8001fc8:	60da      	str	r2, [r3, #12]
	p->last_updated_ts = 0;
 8001fca:	697b      	ldr	r3, [r7, #20]
 8001fcc:	2200      	movs	r2, #0
 8001fce:	601a      	str	r2, [r3, #0]
	p->min_output = min_out;
 8001fd0:	697b      	ldr	r3, [r7, #20]
 8001fd2:	687a      	ldr	r2, [r7, #4]
 8001fd4:	621a      	str	r2, [r3, #32]
	p->max_output = max_out;
 8001fd6:	697b      	ldr	r3, [r7, #20]
 8001fd8:	683a      	ldr	r2, [r7, #0]
 8001fda:	61da      	str	r2, [r3, #28]
}
 8001fdc:	bf00      	nop
 8001fde:	371c      	adds	r7, #28
 8001fe0:	46bd      	mov	sp, r7
 8001fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fe6:	4770      	bx	lr

08001fe8 <pid_set_setpoint>:

void pid_set_setpoint(PID_t *p, float set_point) {
 8001fe8:	b480      	push	{r7}
 8001fea:	b083      	sub	sp, #12
 8001fec:	af00      	add	r7, sp, #0
 8001fee:	6078      	str	r0, [r7, #4]
 8001ff0:	ed87 0a00 	vstr	s0, [r7]
	p->set_point = set_point;
 8001ff4:	687b      	ldr	r3, [r7, #4]
 8001ff6:	683a      	ldr	r2, [r7, #0]
 8001ff8:	605a      	str	r2, [r3, #4]
}
 8001ffa:	bf00      	nop
 8001ffc:	370c      	adds	r7, #12
 8001ffe:	46bd      	mov	sp, r7
 8002000:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002004:	4770      	bx	lr
	...

08002008 <pid_compute_control_action>:

float pid_compute_control_action(PID_t *p, float est_output) {
 8002008:	b580      	push	{r7, lr}
 800200a:	b08a      	sub	sp, #40	@ 0x28
 800200c:	af00      	add	r7, sp, #0
 800200e:	6078      	str	r0, [r7, #4]
 8002010:	ed87 0a00 	vstr	s0, [r7]
	float error, integral_error, u, derivative, delta_T;
	float alpha = 0.9;
 8002014:	4b70      	ldr	r3, [pc, #448]	@ (80021d8 <pid_compute_control_action+0x1d0>)
 8002016:	61bb      	str	r3, [r7, #24]
	float k_p = p->k_p;
 8002018:	687b      	ldr	r3, [r7, #4]
 800201a:	691b      	ldr	r3, [r3, #16]
 800201c:	617b      	str	r3, [r7, #20]

	error = pid_get_setpoint(p) - est_output;
 800201e:	6878      	ldr	r0, [r7, #4]
 8002020:	f000 f8e6 	bl	80021f0 <pid_get_setpoint>
 8002024:	eeb0 7a40 	vmov.f32	s14, s0
 8002028:	edd7 7a00 	vldr	s15, [r7]
 800202c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002030:	edc7 7a04 	vstr	s15, [r7, #16]

	delta_T = pid_get_current_sampling_time(p);
 8002034:	6878      	ldr	r0, [r7, #4]
 8002036:	f000 f8eb 	bl	8002210 <pid_get_current_sampling_time>
 800203a:	ed87 0a03 	vstr	s0, [r7, #12]

	if (delta_T > 0.0 && p->k_d != 0.0) {
 800203e:	edd7 7a03 	vldr	s15, [r7, #12]
 8002042:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002046:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800204a:	dd26      	ble.n	800209a <pid_compute_control_action+0x92>
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	edd3 7a06 	vldr	s15, [r3, #24]
 8002052:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002056:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800205a:	d01e      	beq.n	800209a <pid_compute_control_action+0x92>
		// Apply the low-pass filter to the derivative
		derivative = alpha * p->d_term + (1 - alpha) * (error - p->last_error) / delta_T;
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	ed93 7a0d 	vldr	s14, [r3, #52]	@ 0x34
 8002062:	edd7 7a06 	vldr	s15, [r7, #24]
 8002066:	ee27 7a27 	vmul.f32	s14, s14, s15
 800206a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800206e:	edd7 7a06 	vldr	s15, [r7, #24]
 8002072:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8002076:	687b      	ldr	r3, [r7, #4]
 8002078:	edd3 7a03 	vldr	s15, [r3, #12]
 800207c:	ed97 6a04 	vldr	s12, [r7, #16]
 8002080:	ee76 7a67 	vsub.f32	s15, s12, s15
 8002084:	ee26 6aa7 	vmul.f32	s12, s13, s15
 8002088:	edd7 6a03 	vldr	s13, [r7, #12]
 800208c:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8002090:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002094:	edc7 7a07 	vstr	s15, [r7, #28]
 8002098:	e002      	b.n	80020a0 <pid_compute_control_action+0x98>
	} else {
		derivative = 0;
 800209a:	f04f 0300 	mov.w	r3, #0
 800209e:	61fb      	str	r3, [r7, #28]
	}

	if (error > p->pos_deadzone || error < p->neg_deadzone) {
 80020a0:	687b      	ldr	r3, [r7, #4]
 80020a2:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 80020a6:	ed97 7a04 	vldr	s14, [r7, #16]
 80020aa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80020ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80020b2:	dc09      	bgt.n	80020c8 <pid_compute_control_action+0xc0>
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 80020ba:	ed97 7a04 	vldr	s14, [r7, #16]
 80020be:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80020c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80020c6:	d50d      	bpl.n	80020e4 <pid_compute_control_action+0xdc>
		integral_error = p->integral_error + delta_T * error;
 80020c8:	687b      	ldr	r3, [r7, #4]
 80020ca:	ed93 7a02 	vldr	s14, [r3, #8]
 80020ce:	edd7 6a03 	vldr	s13, [r7, #12]
 80020d2:	edd7 7a04 	vldr	s15, [r7, #16]
 80020d6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80020da:	ee77 7a27 	vadd.f32	s15, s14, s15
 80020de:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24
 80020e2:	e002      	b.n	80020ea <pid_compute_control_action+0xe2>
	} else {
		integral_error = p->integral_error;
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	689b      	ldr	r3, [r3, #8]
 80020e8:	627b      	str	r3, [r7, #36]	@ 0x24
	}

	u = k_p * error + p->k_i * integral_error + p->k_d * derivative;
 80020ea:	ed97 7a05 	vldr	s14, [r7, #20]
 80020ee:	edd7 7a04 	vldr	s15, [r7, #16]
 80020f2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80020f6:	687b      	ldr	r3, [r7, #4]
 80020f8:	edd3 6a05 	vldr	s13, [r3, #20]
 80020fc:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 8002100:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002104:	ee37 7a27 	vadd.f32	s14, s14, s15
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	edd3 6a06 	vldr	s13, [r3, #24]
 800210e:	edd7 7a07 	vldr	s15, [r7, #28]
 8002112:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002116:	ee77 7a27 	vadd.f32	s15, s14, s15
 800211a:	edc7 7a08 	vstr	s15, [r7, #32]
	p->p_term = k_p * error;
 800211e:	ed97 7a05 	vldr	s14, [r7, #20]
 8002122:	edd7 7a04 	vldr	s15, [r7, #16]
 8002126:	ee67 7a27 	vmul.f32	s15, s14, s15
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	edc3 7a0b 	vstr	s15, [r3, #44]	@ 0x2c
	p->i_term = p->k_i * integral_error;
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	ed93 7a05 	vldr	s14, [r3, #20]
 8002136:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800213a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800213e:	687b      	ldr	r3, [r7, #4]
 8002140:	edc3 7a0c 	vstr	s15, [r3, #48]	@ 0x30
	p->d_term = p->k_d * derivative;
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	ed93 7a06 	vldr	s14, [r3, #24]
 800214a:	edd7 7a07 	vldr	s15, [r7, #28]
 800214e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002152:	687b      	ldr	r3, [r7, #4]
 8002154:	edc3 7a0d 	vstr	s15, [r3, #52]	@ 0x34

	p_action = p->p_term;
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800215c:	4a1f      	ldr	r2, [pc, #124]	@ (80021dc <pid_compute_control_action+0x1d4>)
 800215e:	6013      	str	r3, [r2, #0]
	i_action = p->i_term;
 8002160:	687b      	ldr	r3, [r7, #4]
 8002162:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002164:	4a1e      	ldr	r2, [pc, #120]	@ (80021e0 <pid_compute_control_action+0x1d8>)
 8002166:	6013      	str	r3, [r2, #0]
	d_action = p->d_term;
 8002168:	687b      	ldr	r3, [r7, #4]
 800216a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800216c:	4a1d      	ldr	r2, [pc, #116]	@ (80021e4 <pid_compute_control_action+0x1dc>)
 800216e:	6013      	str	r3, [r2, #0]

	// reset wind-up
	if (u < p->min_output) {
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	edd3 7a08 	vldr	s15, [r3, #32]
 8002176:	ed97 7a08 	vldr	s14, [r7, #32]
 800217a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800217e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002182:	d503      	bpl.n	800218c <pid_compute_control_action+0x184>
		u = p->min_output;
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	6a1b      	ldr	r3, [r3, #32]
 8002188:	623b      	str	r3, [r7, #32]
 800218a:	e010      	b.n	80021ae <pid_compute_control_action+0x1a6>
	} else if (u > p->max_output) {
 800218c:	687b      	ldr	r3, [r7, #4]
 800218e:	edd3 7a07 	vldr	s15, [r3, #28]
 8002192:	ed97 7a08 	vldr	s14, [r7, #32]
 8002196:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800219a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800219e:	dd03      	ble.n	80021a8 <pid_compute_control_action+0x1a0>
		u = p->max_output;
 80021a0:	687b      	ldr	r3, [r7, #4]
 80021a2:	69db      	ldr	r3, [r3, #28]
 80021a4:	623b      	str	r3, [r7, #32]
 80021a6:	e002      	b.n	80021ae <pid_compute_control_action+0x1a6>
	} else {
		p->integral_error = integral_error;
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80021ac:	609a      	str	r2, [r3, #8]
	}

	last_u = u;
 80021ae:	4a0e      	ldr	r2, [pc, #56]	@ (80021e8 <pid_compute_control_action+0x1e0>)
 80021b0:	6a3b      	ldr	r3, [r7, #32]
 80021b2:	6013      	str	r3, [r2, #0]

	p->last_error = error;
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	693a      	ldr	r2, [r7, #16]
 80021b8:	60da      	str	r2, [r3, #12]
	error_debug = error;
 80021ba:	4a0c      	ldr	r2, [pc, #48]	@ (80021ec <pid_compute_control_action+0x1e4>)
 80021bc:	693b      	ldr	r3, [r7, #16]
 80021be:	6013      	str	r3, [r2, #0]
	pid_update_ts(p);
 80021c0:	6878      	ldr	r0, [r7, #4]
 80021c2:	f000 f84d 	bl	8002260 <pid_update_ts>
	return u;
 80021c6:	6a3b      	ldr	r3, [r7, #32]
 80021c8:	ee07 3a90 	vmov	s15, r3
}
 80021cc:	eeb0 0a67 	vmov.f32	s0, s15
 80021d0:	3728      	adds	r7, #40	@ 0x28
 80021d2:	46bd      	mov	sp, r7
 80021d4:	bd80      	pop	{r7, pc}
 80021d6:	bf00      	nop
 80021d8:	3f666666 	.word	0x3f666666
 80021dc:	200001f0 	.word	0x200001f0
 80021e0:	200001f4 	.word	0x200001f4
 80021e4:	200001f8 	.word	0x200001f8
 80021e8:	20000200 	.word	0x20000200
 80021ec:	200001fc 	.word	0x200001fc

080021f0 <pid_get_setpoint>:

float pid_get_error(PID_t *p) {
	return p->last_error;
}

float pid_get_setpoint(PID_t *p) {
 80021f0:	b480      	push	{r7}
 80021f2:	b083      	sub	sp, #12
 80021f4:	af00      	add	r7, sp, #0
 80021f6:	6078      	str	r0, [r7, #4]
	return p->set_point;
 80021f8:	687b      	ldr	r3, [r7, #4]
 80021fa:	685b      	ldr	r3, [r3, #4]
 80021fc:	ee07 3a90 	vmov	s15, r3
}
 8002200:	eeb0 0a67 	vmov.f32	s0, s15
 8002204:	370c      	adds	r7, #12
 8002206:	46bd      	mov	sp, r7
 8002208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800220c:	4770      	bx	lr
	...

08002210 <pid_get_current_sampling_time>:

static float pid_get_current_sampling_time(PID_t *p) {
 8002210:	b580      	push	{r7, lr}
 8002212:	b082      	sub	sp, #8
 8002214:	af00      	add	r7, sp, #0
 8002216:	6078      	str	r0, [r7, #4]
	return (float) (HAL_GetTick() - p->last_updated_ts) / 1000.0;
 8002218:	f000 fb74 	bl	8002904 <HAL_GetTick>
 800221c:	4602      	mov	r2, r0
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	681b      	ldr	r3, [r3, #0]
 8002222:	1ad3      	subs	r3, r2, r3
 8002224:	ee07 3a90 	vmov	s15, r3
 8002228:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800222c:	ee17 0a90 	vmov	r0, s15
 8002230:	f7fe f94e 	bl	80004d0 <__aeabi_f2d>
 8002234:	f04f 0200 	mov.w	r2, #0
 8002238:	4b08      	ldr	r3, [pc, #32]	@ (800225c <pid_get_current_sampling_time+0x4c>)
 800223a:	f7fe facb 	bl	80007d4 <__aeabi_ddiv>
 800223e:	4602      	mov	r2, r0
 8002240:	460b      	mov	r3, r1
 8002242:	4610      	mov	r0, r2
 8002244:	4619      	mov	r1, r3
 8002246:	f7fe fc93 	bl	8000b70 <__aeabi_d2f>
 800224a:	4603      	mov	r3, r0
 800224c:	ee07 3a90 	vmov	s15, r3
}
 8002250:	eeb0 0a67 	vmov.f32	s0, s15
 8002254:	3708      	adds	r7, #8
 8002256:	46bd      	mov	sp, r7
 8002258:	bd80      	pop	{r7, pc}
 800225a:	bf00      	nop
 800225c:	408f4000 	.word	0x408f4000

08002260 <pid_update_ts>:

void pid_update_ts(PID_t *p) {
 8002260:	b580      	push	{r7, lr}
 8002262:	b082      	sub	sp, #8
 8002264:	af00      	add	r7, sp, #0
 8002266:	6078      	str	r0, [r7, #4]
	p->last_updated_ts = HAL_GetTick();
 8002268:	f000 fb4c 	bl	8002904 <HAL_GetTick>
 800226c:	4602      	mov	r2, r0
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	601a      	str	r2, [r3, #0]
}
 8002272:	bf00      	nop
 8002274:	3708      	adds	r7, #8
 8002276:	46bd      	mov	sp, r7
 8002278:	bd80      	pop	{r7, pc}
	...

0800227c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800227c:	b480      	push	{r7}
 800227e:	b083      	sub	sp, #12
 8002280:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002282:	2300      	movs	r3, #0
 8002284:	607b      	str	r3, [r7, #4]
 8002286:	4b10      	ldr	r3, [pc, #64]	@ (80022c8 <HAL_MspInit+0x4c>)
 8002288:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800228a:	4a0f      	ldr	r2, [pc, #60]	@ (80022c8 <HAL_MspInit+0x4c>)
 800228c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002290:	6453      	str	r3, [r2, #68]	@ 0x44
 8002292:	4b0d      	ldr	r3, [pc, #52]	@ (80022c8 <HAL_MspInit+0x4c>)
 8002294:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002296:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800229a:	607b      	str	r3, [r7, #4]
 800229c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800229e:	2300      	movs	r3, #0
 80022a0:	603b      	str	r3, [r7, #0]
 80022a2:	4b09      	ldr	r3, [pc, #36]	@ (80022c8 <HAL_MspInit+0x4c>)
 80022a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022a6:	4a08      	ldr	r2, [pc, #32]	@ (80022c8 <HAL_MspInit+0x4c>)
 80022a8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80022ac:	6413      	str	r3, [r2, #64]	@ 0x40
 80022ae:	4b06      	ldr	r3, [pc, #24]	@ (80022c8 <HAL_MspInit+0x4c>)
 80022b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022b2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80022b6:	603b      	str	r3, [r7, #0]
 80022b8:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80022ba:	bf00      	nop
 80022bc:	370c      	adds	r7, #12
 80022be:	46bd      	mov	sp, r7
 80022c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022c4:	4770      	bx	lr
 80022c6:	bf00      	nop
 80022c8:	40023800 	.word	0x40023800

080022cc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80022cc:	b480      	push	{r7}
 80022ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80022d0:	bf00      	nop
 80022d2:	e7fd      	b.n	80022d0 <NMI_Handler+0x4>

080022d4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80022d4:	b480      	push	{r7}
 80022d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80022d8:	bf00      	nop
 80022da:	e7fd      	b.n	80022d8 <HardFault_Handler+0x4>

080022dc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80022dc:	b480      	push	{r7}
 80022de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80022e0:	bf00      	nop
 80022e2:	e7fd      	b.n	80022e0 <MemManage_Handler+0x4>

080022e4 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80022e4:	b480      	push	{r7}
 80022e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80022e8:	bf00      	nop
 80022ea:	e7fd      	b.n	80022e8 <BusFault_Handler+0x4>

080022ec <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80022ec:	b480      	push	{r7}
 80022ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80022f0:	bf00      	nop
 80022f2:	e7fd      	b.n	80022f0 <UsageFault_Handler+0x4>

080022f4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80022f4:	b480      	push	{r7}
 80022f6:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80022f8:	bf00      	nop
 80022fa:	46bd      	mov	sp, r7
 80022fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002300:	4770      	bx	lr

08002302 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002302:	b480      	push	{r7}
 8002304:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002306:	bf00      	nop
 8002308:	46bd      	mov	sp, r7
 800230a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800230e:	4770      	bx	lr

08002310 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002310:	b480      	push	{r7}
 8002312:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002314:	bf00      	nop
 8002316:	46bd      	mov	sp, r7
 8002318:	f85d 7b04 	ldr.w	r7, [sp], #4
 800231c:	4770      	bx	lr

0800231e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800231e:	b580      	push	{r7, lr}
 8002320:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002322:	f000 fadb 	bl	80028dc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002326:	bf00      	nop
 8002328:	bd80      	pop	{r7, pc}
	...

0800232c <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 800232c:	b580      	push	{r7, lr}
 800232e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8002330:	4802      	ldr	r0, [pc, #8]	@ (800233c <TIM2_IRQHandler+0x10>)
 8002332:	f003 f803 	bl	800533c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8002336:	bf00      	nop
 8002338:	bd80      	pop	{r7, pc}
 800233a:	bf00      	nop
 800233c:	2000024c 	.word	0x2000024c

08002340 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8002340:	b580      	push	{r7, lr}
 8002342:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8002344:	4802      	ldr	r0, [pc, #8]	@ (8002350 <TIM3_IRQHandler+0x10>)
 8002346:	f002 fff9 	bl	800533c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 800234a:	bf00      	nop
 800234c:	bd80      	pop	{r7, pc}
 800234e:	bf00      	nop
 8002350:	20000294 	.word	0x20000294

08002354 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002354:	b480      	push	{r7}
 8002356:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002358:	4b06      	ldr	r3, [pc, #24]	@ (8002374 <SystemInit+0x20>)
 800235a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800235e:	4a05      	ldr	r2, [pc, #20]	@ (8002374 <SystemInit+0x20>)
 8002360:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002364:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002368:	bf00      	nop
 800236a:	46bd      	mov	sp, r7
 800236c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002370:	4770      	bx	lr
 8002372:	bf00      	nop
 8002374:	e000ed00 	.word	0xe000ed00

08002378 <MX_TIM1_Init>:
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim5;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 8002378:	b580      	push	{r7, lr}
 800237a:	b08c      	sub	sp, #48	@ 0x30
 800237c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 800237e:	f107 030c 	add.w	r3, r7, #12
 8002382:	2224      	movs	r2, #36	@ 0x24
 8002384:	2100      	movs	r1, #0
 8002386:	4618      	mov	r0, r3
 8002388:	f003 fe26 	bl	8005fd8 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800238c:	1d3b      	adds	r3, r7, #4
 800238e:	2200      	movs	r2, #0
 8002390:	601a      	str	r2, [r3, #0]
 8002392:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8002394:	4b22      	ldr	r3, [pc, #136]	@ (8002420 <MX_TIM1_Init+0xa8>)
 8002396:	4a23      	ldr	r2, [pc, #140]	@ (8002424 <MX_TIM1_Init+0xac>)
 8002398:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 800239a:	4b21      	ldr	r3, [pc, #132]	@ (8002420 <MX_TIM1_Init+0xa8>)
 800239c:	2200      	movs	r2, #0
 800239e:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80023a0:	4b1f      	ldr	r3, [pc, #124]	@ (8002420 <MX_TIM1_Init+0xa8>)
 80023a2:	2200      	movs	r2, #0
 80023a4:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 80023a6:	4b1e      	ldr	r3, [pc, #120]	@ (8002420 <MX_TIM1_Init+0xa8>)
 80023a8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80023ac:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80023ae:	4b1c      	ldr	r3, [pc, #112]	@ (8002420 <MX_TIM1_Init+0xa8>)
 80023b0:	2200      	movs	r2, #0
 80023b2:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80023b4:	4b1a      	ldr	r3, [pc, #104]	@ (8002420 <MX_TIM1_Init+0xa8>)
 80023b6:	2200      	movs	r2, #0
 80023b8:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80023ba:	4b19      	ldr	r3, [pc, #100]	@ (8002420 <MX_TIM1_Init+0xa8>)
 80023bc:	2200      	movs	r2, #0
 80023be:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 80023c0:	2303      	movs	r3, #3
 80023c2:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80023c4:	2300      	movs	r3, #0
 80023c6:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80023c8:	2301      	movs	r3, #1
 80023ca:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80023cc:	2300      	movs	r3, #0
 80023ce:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 80023d0:	2300      	movs	r3, #0
 80023d2:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80023d4:	2300      	movs	r3, #0
 80023d6:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80023d8:	2301      	movs	r3, #1
 80023da:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80023dc:	2300      	movs	r3, #0
 80023de:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 80023e0:	2300      	movs	r3, #0
 80023e2:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK)
 80023e4:	f107 030c 	add.w	r3, r7, #12
 80023e8:	4619      	mov	r1, r3
 80023ea:	480d      	ldr	r0, [pc, #52]	@ (8002420 <MX_TIM1_Init+0xa8>)
 80023ec:	f002 fe72 	bl	80050d4 <HAL_TIM_Encoder_Init>
 80023f0:	4603      	mov	r3, r0
 80023f2:	2b00      	cmp	r3, #0
 80023f4:	d001      	beq.n	80023fa <MX_TIM1_Init+0x82>
  {
    Error_Handler();
 80023f6:	f7ff fba7 	bl	8001b48 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80023fa:	2300      	movs	r3, #0
 80023fc:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80023fe:	2300      	movs	r3, #0
 8002400:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8002402:	1d3b      	adds	r3, r7, #4
 8002404:	4619      	mov	r1, r3
 8002406:	4806      	ldr	r0, [pc, #24]	@ (8002420 <MX_TIM1_Init+0xa8>)
 8002408:	f003 fd56 	bl	8005eb8 <HAL_TIMEx_MasterConfigSynchronization>
 800240c:	4603      	mov	r3, r0
 800240e:	2b00      	cmp	r3, #0
 8002410:	d001      	beq.n	8002416 <MX_TIM1_Init+0x9e>
  {
    Error_Handler();
 8002412:	f7ff fb99 	bl	8001b48 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8002416:	bf00      	nop
 8002418:	3730      	adds	r7, #48	@ 0x30
 800241a:	46bd      	mov	sp, r7
 800241c:	bd80      	pop	{r7, pc}
 800241e:	bf00      	nop
 8002420:	20000204 	.word	0x20000204
 8002424:	40010000 	.word	0x40010000

08002428 <MX_TIM2_Init>:
/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8002428:	b580      	push	{r7, lr}
 800242a:	b086      	sub	sp, #24
 800242c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800242e:	f107 0308 	add.w	r3, r7, #8
 8002432:	2200      	movs	r2, #0
 8002434:	601a      	str	r2, [r3, #0]
 8002436:	605a      	str	r2, [r3, #4]
 8002438:	609a      	str	r2, [r3, #8]
 800243a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800243c:	463b      	mov	r3, r7
 800243e:	2200      	movs	r2, #0
 8002440:	601a      	str	r2, [r3, #0]
 8002442:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8002444:	4b1d      	ldr	r3, [pc, #116]	@ (80024bc <MX_TIM2_Init+0x94>)
 8002446:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800244a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 800244c:	4b1b      	ldr	r3, [pc, #108]	@ (80024bc <MX_TIM2_Init+0x94>)
 800244e:	2200      	movs	r2, #0
 8002450:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002452:	4b1a      	ldr	r3, [pc, #104]	@ (80024bc <MX_TIM2_Init+0x94>)
 8002454:	2200      	movs	r2, #0
 8002456:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 420000-1;
 8002458:	4b18      	ldr	r3, [pc, #96]	@ (80024bc <MX_TIM2_Init+0x94>)
 800245a:	4a19      	ldr	r2, [pc, #100]	@ (80024c0 <MX_TIM2_Init+0x98>)
 800245c:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800245e:	4b17      	ldr	r3, [pc, #92]	@ (80024bc <MX_TIM2_Init+0x94>)
 8002460:	2200      	movs	r2, #0
 8002462:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002464:	4b15      	ldr	r3, [pc, #84]	@ (80024bc <MX_TIM2_Init+0x94>)
 8002466:	2200      	movs	r2, #0
 8002468:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800246a:	4814      	ldr	r0, [pc, #80]	@ (80024bc <MX_TIM2_Init+0x94>)
 800246c:	f002 fbf2 	bl	8004c54 <HAL_TIM_Base_Init>
 8002470:	4603      	mov	r3, r0
 8002472:	2b00      	cmp	r3, #0
 8002474:	d001      	beq.n	800247a <MX_TIM2_Init+0x52>
  {
    Error_Handler();
 8002476:	f7ff fb67 	bl	8001b48 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800247a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800247e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8002480:	f107 0308 	add.w	r3, r7, #8
 8002484:	4619      	mov	r1, r3
 8002486:	480d      	ldr	r0, [pc, #52]	@ (80024bc <MX_TIM2_Init+0x94>)
 8002488:	f003 f90a 	bl	80056a0 <HAL_TIM_ConfigClockSource>
 800248c:	4603      	mov	r3, r0
 800248e:	2b00      	cmp	r3, #0
 8002490:	d001      	beq.n	8002496 <MX_TIM2_Init+0x6e>
  {
    Error_Handler();
 8002492:	f7ff fb59 	bl	8001b48 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002496:	2300      	movs	r3, #0
 8002498:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800249a:	2300      	movs	r3, #0
 800249c:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800249e:	463b      	mov	r3, r7
 80024a0:	4619      	mov	r1, r3
 80024a2:	4806      	ldr	r0, [pc, #24]	@ (80024bc <MX_TIM2_Init+0x94>)
 80024a4:	f003 fd08 	bl	8005eb8 <HAL_TIMEx_MasterConfigSynchronization>
 80024a8:	4603      	mov	r3, r0
 80024aa:	2b00      	cmp	r3, #0
 80024ac:	d001      	beq.n	80024b2 <MX_TIM2_Init+0x8a>
  {
    Error_Handler();
 80024ae:	f7ff fb4b 	bl	8001b48 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80024b2:	bf00      	nop
 80024b4:	3718      	adds	r7, #24
 80024b6:	46bd      	mov	sp, r7
 80024b8:	bd80      	pop	{r7, pc}
 80024ba:	bf00      	nop
 80024bc:	2000024c 	.word	0x2000024c
 80024c0:	0006689f 	.word	0x0006689f

080024c4 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 80024c4:	b580      	push	{r7, lr}
 80024c6:	b086      	sub	sp, #24
 80024c8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80024ca:	f107 0308 	add.w	r3, r7, #8
 80024ce:	2200      	movs	r2, #0
 80024d0:	601a      	str	r2, [r3, #0]
 80024d2:	605a      	str	r2, [r3, #4]
 80024d4:	609a      	str	r2, [r3, #8]
 80024d6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80024d8:	463b      	mov	r3, r7
 80024da:	2200      	movs	r2, #0
 80024dc:	601a      	str	r2, [r3, #0]
 80024de:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80024e0:	4b1d      	ldr	r3, [pc, #116]	@ (8002558 <MX_TIM3_Init+0x94>)
 80024e2:	4a1e      	ldr	r2, [pc, #120]	@ (800255c <MX_TIM3_Init+0x98>)
 80024e4:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 50-1;
 80024e6:	4b1c      	ldr	r3, [pc, #112]	@ (8002558 <MX_TIM3_Init+0x94>)
 80024e8:	2231      	movs	r2, #49	@ 0x31
 80024ea:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80024ec:	4b1a      	ldr	r3, [pc, #104]	@ (8002558 <MX_TIM3_Init+0x94>)
 80024ee:	2200      	movs	r2, #0
 80024f0:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 42000-1;
 80024f2:	4b19      	ldr	r3, [pc, #100]	@ (8002558 <MX_TIM3_Init+0x94>)
 80024f4:	f24a 420f 	movw	r2, #41999	@ 0xa40f
 80024f8:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80024fa:	4b17      	ldr	r3, [pc, #92]	@ (8002558 <MX_TIM3_Init+0x94>)
 80024fc:	2200      	movs	r2, #0
 80024fe:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002500:	4b15      	ldr	r3, [pc, #84]	@ (8002558 <MX_TIM3_Init+0x94>)
 8002502:	2280      	movs	r2, #128	@ 0x80
 8002504:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8002506:	4814      	ldr	r0, [pc, #80]	@ (8002558 <MX_TIM3_Init+0x94>)
 8002508:	f002 fba4 	bl	8004c54 <HAL_TIM_Base_Init>
 800250c:	4603      	mov	r3, r0
 800250e:	2b00      	cmp	r3, #0
 8002510:	d001      	beq.n	8002516 <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 8002512:	f7ff fb19 	bl	8001b48 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002516:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800251a:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800251c:	f107 0308 	add.w	r3, r7, #8
 8002520:	4619      	mov	r1, r3
 8002522:	480d      	ldr	r0, [pc, #52]	@ (8002558 <MX_TIM3_Init+0x94>)
 8002524:	f003 f8bc 	bl	80056a0 <HAL_TIM_ConfigClockSource>
 8002528:	4603      	mov	r3, r0
 800252a:	2b00      	cmp	r3, #0
 800252c:	d001      	beq.n	8002532 <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 800252e:	f7ff fb0b 	bl	8001b48 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002532:	2300      	movs	r3, #0
 8002534:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002536:	2300      	movs	r3, #0
 8002538:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800253a:	463b      	mov	r3, r7
 800253c:	4619      	mov	r1, r3
 800253e:	4806      	ldr	r0, [pc, #24]	@ (8002558 <MX_TIM3_Init+0x94>)
 8002540:	f003 fcba 	bl	8005eb8 <HAL_TIMEx_MasterConfigSynchronization>
 8002544:	4603      	mov	r3, r0
 8002546:	2b00      	cmp	r3, #0
 8002548:	d001      	beq.n	800254e <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 800254a:	f7ff fafd 	bl	8001b48 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 800254e:	bf00      	nop
 8002550:	3718      	adds	r7, #24
 8002552:	46bd      	mov	sp, r7
 8002554:	bd80      	pop	{r7, pc}
 8002556:	bf00      	nop
 8002558:	20000294 	.word	0x20000294
 800255c:	40000400 	.word	0x40000400

08002560 <MX_TIM5_Init>:
/* TIM5 init function */
void MX_TIM5_Init(void)
{
 8002560:	b580      	push	{r7, lr}
 8002562:	b08a      	sub	sp, #40	@ 0x28
 8002564:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002566:	f107 0320 	add.w	r3, r7, #32
 800256a:	2200      	movs	r2, #0
 800256c:	601a      	str	r2, [r3, #0]
 800256e:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002570:	1d3b      	adds	r3, r7, #4
 8002572:	2200      	movs	r2, #0
 8002574:	601a      	str	r2, [r3, #0]
 8002576:	605a      	str	r2, [r3, #4]
 8002578:	609a      	str	r2, [r3, #8]
 800257a:	60da      	str	r2, [r3, #12]
 800257c:	611a      	str	r2, [r3, #16]
 800257e:	615a      	str	r2, [r3, #20]
 8002580:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8002582:	4b22      	ldr	r3, [pc, #136]	@ (800260c <MX_TIM5_Init+0xac>)
 8002584:	4a22      	ldr	r2, [pc, #136]	@ (8002610 <MX_TIM5_Init+0xb0>)
 8002586:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 0;
 8002588:	4b20      	ldr	r3, [pc, #128]	@ (800260c <MX_TIM5_Init+0xac>)
 800258a:	2200      	movs	r2, #0
 800258c:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 800258e:	4b1f      	ldr	r3, [pc, #124]	@ (800260c <MX_TIM5_Init+0xac>)
 8002590:	2200      	movs	r2, #0
 8002592:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4199;
 8002594:	4b1d      	ldr	r3, [pc, #116]	@ (800260c <MX_TIM5_Init+0xac>)
 8002596:	f241 0267 	movw	r2, #4199	@ 0x1067
 800259a:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800259c:	4b1b      	ldr	r3, [pc, #108]	@ (800260c <MX_TIM5_Init+0xac>)
 800259e:	2200      	movs	r2, #0
 80025a0:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80025a2:	4b1a      	ldr	r3, [pc, #104]	@ (800260c <MX_TIM5_Init+0xac>)
 80025a4:	2280      	movs	r2, #128	@ 0x80
 80025a6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 80025a8:	4818      	ldr	r0, [pc, #96]	@ (800260c <MX_TIM5_Init+0xac>)
 80025aa:	f002 fc7b 	bl	8004ea4 <HAL_TIM_PWM_Init>
 80025ae:	4603      	mov	r3, r0
 80025b0:	2b00      	cmp	r3, #0
 80025b2:	d001      	beq.n	80025b8 <MX_TIM5_Init+0x58>
  {
    Error_Handler();
 80025b4:	f7ff fac8 	bl	8001b48 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80025b8:	2300      	movs	r3, #0
 80025ba:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80025bc:	2300      	movs	r3, #0
 80025be:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80025c0:	f107 0320 	add.w	r3, r7, #32
 80025c4:	4619      	mov	r1, r3
 80025c6:	4811      	ldr	r0, [pc, #68]	@ (800260c <MX_TIM5_Init+0xac>)
 80025c8:	f003 fc76 	bl	8005eb8 <HAL_TIMEx_MasterConfigSynchronization>
 80025cc:	4603      	mov	r3, r0
 80025ce:	2b00      	cmp	r3, #0
 80025d0:	d001      	beq.n	80025d6 <MX_TIM5_Init+0x76>
  {
    Error_Handler();
 80025d2:	f7ff fab9 	bl	8001b48 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80025d6:	2360      	movs	r3, #96	@ 0x60
 80025d8:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80025da:	2300      	movs	r3, #0
 80025dc:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80025de:	2300      	movs	r3, #0
 80025e0:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80025e2:	2300      	movs	r3, #0
 80025e4:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80025e6:	1d3b      	adds	r3, r7, #4
 80025e8:	2200      	movs	r2, #0
 80025ea:	4619      	mov	r1, r3
 80025ec:	4807      	ldr	r0, [pc, #28]	@ (800260c <MX_TIM5_Init+0xac>)
 80025ee:	f002 ff95 	bl	800551c <HAL_TIM_PWM_ConfigChannel>
 80025f2:	4603      	mov	r3, r0
 80025f4:	2b00      	cmp	r3, #0
 80025f6:	d001      	beq.n	80025fc <MX_TIM5_Init+0x9c>
  {
    Error_Handler();
 80025f8:	f7ff faa6 	bl	8001b48 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */
  HAL_TIM_MspPostInit(&htim5);
 80025fc:	4803      	ldr	r0, [pc, #12]	@ (800260c <MX_TIM5_Init+0xac>)
 80025fe:	f000 f8b7 	bl	8002770 <HAL_TIM_MspPostInit>

}
 8002602:	bf00      	nop
 8002604:	3728      	adds	r7, #40	@ 0x28
 8002606:	46bd      	mov	sp, r7
 8002608:	bd80      	pop	{r7, pc}
 800260a:	bf00      	nop
 800260c:	200002dc 	.word	0x200002dc
 8002610:	40000c00 	.word	0x40000c00

08002614 <HAL_TIM_Encoder_MspInit>:

void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
{
 8002614:	b580      	push	{r7, lr}
 8002616:	b08a      	sub	sp, #40	@ 0x28
 8002618:	af00      	add	r7, sp, #0
 800261a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800261c:	f107 0314 	add.w	r3, r7, #20
 8002620:	2200      	movs	r2, #0
 8002622:	601a      	str	r2, [r3, #0]
 8002624:	605a      	str	r2, [r3, #4]
 8002626:	609a      	str	r2, [r3, #8]
 8002628:	60da      	str	r2, [r3, #12]
 800262a:	611a      	str	r2, [r3, #16]
  if(tim_encoderHandle->Instance==TIM1)
 800262c:	687b      	ldr	r3, [r7, #4]
 800262e:	681b      	ldr	r3, [r3, #0]
 8002630:	4a19      	ldr	r2, [pc, #100]	@ (8002698 <HAL_TIM_Encoder_MspInit+0x84>)
 8002632:	4293      	cmp	r3, r2
 8002634:	d12c      	bne.n	8002690 <HAL_TIM_Encoder_MspInit+0x7c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002636:	2300      	movs	r3, #0
 8002638:	613b      	str	r3, [r7, #16]
 800263a:	4b18      	ldr	r3, [pc, #96]	@ (800269c <HAL_TIM_Encoder_MspInit+0x88>)
 800263c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800263e:	4a17      	ldr	r2, [pc, #92]	@ (800269c <HAL_TIM_Encoder_MspInit+0x88>)
 8002640:	f043 0301 	orr.w	r3, r3, #1
 8002644:	6453      	str	r3, [r2, #68]	@ 0x44
 8002646:	4b15      	ldr	r3, [pc, #84]	@ (800269c <HAL_TIM_Encoder_MspInit+0x88>)
 8002648:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800264a:	f003 0301 	and.w	r3, r3, #1
 800264e:	613b      	str	r3, [r7, #16]
 8002650:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002652:	2300      	movs	r3, #0
 8002654:	60fb      	str	r3, [r7, #12]
 8002656:	4b11      	ldr	r3, [pc, #68]	@ (800269c <HAL_TIM_Encoder_MspInit+0x88>)
 8002658:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800265a:	4a10      	ldr	r2, [pc, #64]	@ (800269c <HAL_TIM_Encoder_MspInit+0x88>)
 800265c:	f043 0301 	orr.w	r3, r3, #1
 8002660:	6313      	str	r3, [r2, #48]	@ 0x30
 8002662:	4b0e      	ldr	r3, [pc, #56]	@ (800269c <HAL_TIM_Encoder_MspInit+0x88>)
 8002664:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002666:	f003 0301 	and.w	r3, r3, #1
 800266a:	60fb      	str	r3, [r7, #12]
 800266c:	68fb      	ldr	r3, [r7, #12]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA9     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 800266e:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8002672:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002674:	2302      	movs	r3, #2
 8002676:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002678:	2301      	movs	r3, #1
 800267a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800267c:	2300      	movs	r3, #0
 800267e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8002680:	2301      	movs	r3, #1
 8002682:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002684:	f107 0314 	add.w	r3, r7, #20
 8002688:	4619      	mov	r1, r3
 800268a:	4805      	ldr	r0, [pc, #20]	@ (80026a0 <HAL_TIM_Encoder_MspInit+0x8c>)
 800268c:	f000 fa7c 	bl	8002b88 <HAL_GPIO_Init>

  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
}
 8002690:	bf00      	nop
 8002692:	3728      	adds	r7, #40	@ 0x28
 8002694:	46bd      	mov	sp, r7
 8002696:	bd80      	pop	{r7, pc}
 8002698:	40010000 	.word	0x40010000
 800269c:	40023800 	.word	0x40023800
 80026a0:	40020000 	.word	0x40020000

080026a4 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 80026a4:	b580      	push	{r7, lr}
 80026a6:	b084      	sub	sp, #16
 80026a8:	af00      	add	r7, sp, #0
 80026aa:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	681b      	ldr	r3, [r3, #0]
 80026b0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80026b4:	d116      	bne.n	80026e4 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80026b6:	2300      	movs	r3, #0
 80026b8:	60fb      	str	r3, [r7, #12]
 80026ba:	4b1a      	ldr	r3, [pc, #104]	@ (8002724 <HAL_TIM_Base_MspInit+0x80>)
 80026bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80026be:	4a19      	ldr	r2, [pc, #100]	@ (8002724 <HAL_TIM_Base_MspInit+0x80>)
 80026c0:	f043 0301 	orr.w	r3, r3, #1
 80026c4:	6413      	str	r3, [r2, #64]	@ 0x40
 80026c6:	4b17      	ldr	r3, [pc, #92]	@ (8002724 <HAL_TIM_Base_MspInit+0x80>)
 80026c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80026ca:	f003 0301 	and.w	r3, r3, #1
 80026ce:	60fb      	str	r3, [r7, #12]
 80026d0:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 80026d2:	2200      	movs	r2, #0
 80026d4:	2100      	movs	r1, #0
 80026d6:	201c      	movs	r0, #28
 80026d8:	f000 fa1f 	bl	8002b1a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80026dc:	201c      	movs	r0, #28
 80026de:	f000 fa38 	bl	8002b52 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
}
 80026e2:	e01a      	b.n	800271a <HAL_TIM_Base_MspInit+0x76>
  else if(tim_baseHandle->Instance==TIM3)
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	681b      	ldr	r3, [r3, #0]
 80026e8:	4a0f      	ldr	r2, [pc, #60]	@ (8002728 <HAL_TIM_Base_MspInit+0x84>)
 80026ea:	4293      	cmp	r3, r2
 80026ec:	d115      	bne.n	800271a <HAL_TIM_Base_MspInit+0x76>
    __HAL_RCC_TIM3_CLK_ENABLE();
 80026ee:	2300      	movs	r3, #0
 80026f0:	60bb      	str	r3, [r7, #8]
 80026f2:	4b0c      	ldr	r3, [pc, #48]	@ (8002724 <HAL_TIM_Base_MspInit+0x80>)
 80026f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80026f6:	4a0b      	ldr	r2, [pc, #44]	@ (8002724 <HAL_TIM_Base_MspInit+0x80>)
 80026f8:	f043 0302 	orr.w	r3, r3, #2
 80026fc:	6413      	str	r3, [r2, #64]	@ 0x40
 80026fe:	4b09      	ldr	r3, [pc, #36]	@ (8002724 <HAL_TIM_Base_MspInit+0x80>)
 8002700:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002702:	f003 0302 	and.w	r3, r3, #2
 8002706:	60bb      	str	r3, [r7, #8]
 8002708:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 800270a:	2200      	movs	r2, #0
 800270c:	2100      	movs	r1, #0
 800270e:	201d      	movs	r0, #29
 8002710:	f000 fa03 	bl	8002b1a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8002714:	201d      	movs	r0, #29
 8002716:	f000 fa1c 	bl	8002b52 <HAL_NVIC_EnableIRQ>
}
 800271a:	bf00      	nop
 800271c:	3710      	adds	r7, #16
 800271e:	46bd      	mov	sp, r7
 8002720:	bd80      	pop	{r7, pc}
 8002722:	bf00      	nop
 8002724:	40023800 	.word	0x40023800
 8002728:	40000400 	.word	0x40000400

0800272c <HAL_TIM_PWM_MspInit>:

void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
{
 800272c:	b480      	push	{r7}
 800272e:	b085      	sub	sp, #20
 8002730:	af00      	add	r7, sp, #0
 8002732:	6078      	str	r0, [r7, #4]

  if(tim_pwmHandle->Instance==TIM5)
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	4a0b      	ldr	r2, [pc, #44]	@ (8002768 <HAL_TIM_PWM_MspInit+0x3c>)
 800273a:	4293      	cmp	r3, r2
 800273c:	d10d      	bne.n	800275a <HAL_TIM_PWM_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM5_MspInit 0 */

  /* USER CODE END TIM5_MspInit 0 */
    /* TIM5 clock enable */
    __HAL_RCC_TIM5_CLK_ENABLE();
 800273e:	2300      	movs	r3, #0
 8002740:	60fb      	str	r3, [r7, #12]
 8002742:	4b0a      	ldr	r3, [pc, #40]	@ (800276c <HAL_TIM_PWM_MspInit+0x40>)
 8002744:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002746:	4a09      	ldr	r2, [pc, #36]	@ (800276c <HAL_TIM_PWM_MspInit+0x40>)
 8002748:	f043 0308 	orr.w	r3, r3, #8
 800274c:	6413      	str	r3, [r2, #64]	@ 0x40
 800274e:	4b07      	ldr	r3, [pc, #28]	@ (800276c <HAL_TIM_PWM_MspInit+0x40>)
 8002750:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002752:	f003 0308 	and.w	r3, r3, #8
 8002756:	60fb      	str	r3, [r7, #12]
 8002758:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }
}
 800275a:	bf00      	nop
 800275c:	3714      	adds	r7, #20
 800275e:	46bd      	mov	sp, r7
 8002760:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002764:	4770      	bx	lr
 8002766:	bf00      	nop
 8002768:	40000c00 	.word	0x40000c00
 800276c:	40023800 	.word	0x40023800

08002770 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8002770:	b580      	push	{r7, lr}
 8002772:	b088      	sub	sp, #32
 8002774:	af00      	add	r7, sp, #0
 8002776:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002778:	f107 030c 	add.w	r3, r7, #12
 800277c:	2200      	movs	r2, #0
 800277e:	601a      	str	r2, [r3, #0]
 8002780:	605a      	str	r2, [r3, #4]
 8002782:	609a      	str	r2, [r3, #8]
 8002784:	60da      	str	r2, [r3, #12]
 8002786:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM5)
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	4a12      	ldr	r2, [pc, #72]	@ (80027d8 <HAL_TIM_MspPostInit+0x68>)
 800278e:	4293      	cmp	r3, r2
 8002790:	d11d      	bne.n	80027ce <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM5_MspPostInit 0 */

  /* USER CODE END TIM5_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002792:	2300      	movs	r3, #0
 8002794:	60bb      	str	r3, [r7, #8]
 8002796:	4b11      	ldr	r3, [pc, #68]	@ (80027dc <HAL_TIM_MspPostInit+0x6c>)
 8002798:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800279a:	4a10      	ldr	r2, [pc, #64]	@ (80027dc <HAL_TIM_MspPostInit+0x6c>)
 800279c:	f043 0301 	orr.w	r3, r3, #1
 80027a0:	6313      	str	r3, [r2, #48]	@ 0x30
 80027a2:	4b0e      	ldr	r3, [pc, #56]	@ (80027dc <HAL_TIM_MspPostInit+0x6c>)
 80027a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80027a6:	f003 0301 	and.w	r3, r3, #1
 80027aa:	60bb      	str	r3, [r7, #8]
 80027ac:	68bb      	ldr	r3, [r7, #8]
    /**TIM5 GPIO Configuration
    PA0-WKUP     ------> TIM5_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80027ae:	2301      	movs	r3, #1
 80027b0:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027b2:	2302      	movs	r3, #2
 80027b4:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80027b6:	2300      	movs	r3, #0
 80027b8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80027ba:	2300      	movs	r3, #0
 80027bc:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 80027be:	2302      	movs	r3, #2
 80027c0:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80027c2:	f107 030c 	add.w	r3, r7, #12
 80027c6:	4619      	mov	r1, r3
 80027c8:	4805      	ldr	r0, [pc, #20]	@ (80027e0 <HAL_TIM_MspPostInit+0x70>)
 80027ca:	f000 f9dd 	bl	8002b88 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM5_MspPostInit 1 */

  /* USER CODE END TIM5_MspPostInit 1 */
  }

}
 80027ce:	bf00      	nop
 80027d0:	3720      	adds	r7, #32
 80027d2:	46bd      	mov	sp, r7
 80027d4:	bd80      	pop	{r7, pc}
 80027d6:	bf00      	nop
 80027d8:	40000c00 	.word	0x40000c00
 80027dc:	40023800 	.word	0x40023800
 80027e0:	40020000 	.word	0x40020000

080027e4 <Reset_Handler>:
 80027e4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 800281c <LoopFillZerobss+0xe>
 80027e8:	f7ff fdb4 	bl	8002354 <SystemInit>
 80027ec:	480c      	ldr	r0, [pc, #48]	@ (8002820 <LoopFillZerobss+0x12>)
 80027ee:	490d      	ldr	r1, [pc, #52]	@ (8002824 <LoopFillZerobss+0x16>)
 80027f0:	4a0d      	ldr	r2, [pc, #52]	@ (8002828 <LoopFillZerobss+0x1a>)
 80027f2:	2300      	movs	r3, #0
 80027f4:	e002      	b.n	80027fc <LoopCopyDataInit>

080027f6 <CopyDataInit>:
 80027f6:	58d4      	ldr	r4, [r2, r3]
 80027f8:	50c4      	str	r4, [r0, r3]
 80027fa:	3304      	adds	r3, #4

080027fc <LoopCopyDataInit>:
 80027fc:	18c4      	adds	r4, r0, r3
 80027fe:	428c      	cmp	r4, r1
 8002800:	d3f9      	bcc.n	80027f6 <CopyDataInit>
 8002802:	4a0a      	ldr	r2, [pc, #40]	@ (800282c <LoopFillZerobss+0x1e>)
 8002804:	4c0a      	ldr	r4, [pc, #40]	@ (8002830 <LoopFillZerobss+0x22>)
 8002806:	2300      	movs	r3, #0
 8002808:	e001      	b.n	800280e <LoopFillZerobss>

0800280a <FillZerobss>:
 800280a:	6013      	str	r3, [r2, #0]
 800280c:	3204      	adds	r2, #4

0800280e <LoopFillZerobss>:
 800280e:	42a2      	cmp	r2, r4
 8002810:	d3fb      	bcc.n	800280a <FillZerobss>
 8002812:	f003 fbef 	bl	8005ff4 <__libc_init_array>
 8002816:	f7fe ff83 	bl	8001720 <main>
 800281a:	4770      	bx	lr
 800281c:	20020000 	.word	0x20020000
 8002820:	20000000 	.word	0x20000000
 8002824:	20000098 	.word	0x20000098
 8002828:	08006610 	.word	0x08006610
 800282c:	20000098 	.word	0x20000098
 8002830:	20000460 	.word	0x20000460

08002834 <ADC_IRQHandler>:
 8002834:	e7fe      	b.n	8002834 <ADC_IRQHandler>
	...

08002838 <HAL_Init>:
 8002838:	b580      	push	{r7, lr}
 800283a:	af00      	add	r7, sp, #0
 800283c:	4b0e      	ldr	r3, [pc, #56]	@ (8002878 <HAL_Init+0x40>)
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	4a0d      	ldr	r2, [pc, #52]	@ (8002878 <HAL_Init+0x40>)
 8002842:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002846:	6013      	str	r3, [r2, #0]
 8002848:	4b0b      	ldr	r3, [pc, #44]	@ (8002878 <HAL_Init+0x40>)
 800284a:	681b      	ldr	r3, [r3, #0]
 800284c:	4a0a      	ldr	r2, [pc, #40]	@ (8002878 <HAL_Init+0x40>)
 800284e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002852:	6013      	str	r3, [r2, #0]
 8002854:	4b08      	ldr	r3, [pc, #32]	@ (8002878 <HAL_Init+0x40>)
 8002856:	681b      	ldr	r3, [r3, #0]
 8002858:	4a07      	ldr	r2, [pc, #28]	@ (8002878 <HAL_Init+0x40>)
 800285a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800285e:	6013      	str	r3, [r2, #0]
 8002860:	2003      	movs	r0, #3
 8002862:	f000 f94f 	bl	8002b04 <HAL_NVIC_SetPriorityGrouping>
 8002866:	200f      	movs	r0, #15
 8002868:	f000 f808 	bl	800287c <HAL_InitTick>
 800286c:	f7ff fd06 	bl	800227c <HAL_MspInit>
 8002870:	2300      	movs	r3, #0
 8002872:	4618      	mov	r0, r3
 8002874:	bd80      	pop	{r7, pc}
 8002876:	bf00      	nop
 8002878:	40023c00 	.word	0x40023c00

0800287c <HAL_InitTick>:
 800287c:	b580      	push	{r7, lr}
 800287e:	b082      	sub	sp, #8
 8002880:	af00      	add	r7, sp, #0
 8002882:	6078      	str	r0, [r7, #4]
 8002884:	4b12      	ldr	r3, [pc, #72]	@ (80028d0 <HAL_InitTick+0x54>)
 8002886:	681a      	ldr	r2, [r3, #0]
 8002888:	4b12      	ldr	r3, [pc, #72]	@ (80028d4 <HAL_InitTick+0x58>)
 800288a:	781b      	ldrb	r3, [r3, #0]
 800288c:	4619      	mov	r1, r3
 800288e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002892:	fbb3 f3f1 	udiv	r3, r3, r1
 8002896:	fbb2 f3f3 	udiv	r3, r2, r3
 800289a:	4618      	mov	r0, r3
 800289c:	f000 f967 	bl	8002b6e <HAL_SYSTICK_Config>
 80028a0:	4603      	mov	r3, r0
 80028a2:	2b00      	cmp	r3, #0
 80028a4:	d001      	beq.n	80028aa <HAL_InitTick+0x2e>
 80028a6:	2301      	movs	r3, #1
 80028a8:	e00e      	b.n	80028c8 <HAL_InitTick+0x4c>
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	2b0f      	cmp	r3, #15
 80028ae:	d80a      	bhi.n	80028c6 <HAL_InitTick+0x4a>
 80028b0:	2200      	movs	r2, #0
 80028b2:	6879      	ldr	r1, [r7, #4]
 80028b4:	f04f 30ff 	mov.w	r0, #4294967295
 80028b8:	f000 f92f 	bl	8002b1a <HAL_NVIC_SetPriority>
 80028bc:	4a06      	ldr	r2, [pc, #24]	@ (80028d8 <HAL_InitTick+0x5c>)
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	6013      	str	r3, [r2, #0]
 80028c2:	2300      	movs	r3, #0
 80028c4:	e000      	b.n	80028c8 <HAL_InitTick+0x4c>
 80028c6:	2301      	movs	r3, #1
 80028c8:	4618      	mov	r0, r3
 80028ca:	3708      	adds	r7, #8
 80028cc:	46bd      	mov	sp, r7
 80028ce:	bd80      	pop	{r7, pc}
 80028d0:	20000028 	.word	0x20000028
 80028d4:	20000030 	.word	0x20000030
 80028d8:	2000002c 	.word	0x2000002c

080028dc <HAL_IncTick>:
 80028dc:	b480      	push	{r7}
 80028de:	af00      	add	r7, sp, #0
 80028e0:	4b06      	ldr	r3, [pc, #24]	@ (80028fc <HAL_IncTick+0x20>)
 80028e2:	781b      	ldrb	r3, [r3, #0]
 80028e4:	461a      	mov	r2, r3
 80028e6:	4b06      	ldr	r3, [pc, #24]	@ (8002900 <HAL_IncTick+0x24>)
 80028e8:	681b      	ldr	r3, [r3, #0]
 80028ea:	4413      	add	r3, r2
 80028ec:	4a04      	ldr	r2, [pc, #16]	@ (8002900 <HAL_IncTick+0x24>)
 80028ee:	6013      	str	r3, [r2, #0]
 80028f0:	bf00      	nop
 80028f2:	46bd      	mov	sp, r7
 80028f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028f8:	4770      	bx	lr
 80028fa:	bf00      	nop
 80028fc:	20000030 	.word	0x20000030
 8002900:	20000324 	.word	0x20000324

08002904 <HAL_GetTick>:
 8002904:	b480      	push	{r7}
 8002906:	af00      	add	r7, sp, #0
 8002908:	4b03      	ldr	r3, [pc, #12]	@ (8002918 <HAL_GetTick+0x14>)
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	4618      	mov	r0, r3
 800290e:	46bd      	mov	sp, r7
 8002910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002914:	4770      	bx	lr
 8002916:	bf00      	nop
 8002918:	20000324 	.word	0x20000324

0800291c <HAL_Delay>:
 800291c:	b580      	push	{r7, lr}
 800291e:	b084      	sub	sp, #16
 8002920:	af00      	add	r7, sp, #0
 8002922:	6078      	str	r0, [r7, #4]
 8002924:	f7ff ffee 	bl	8002904 <HAL_GetTick>
 8002928:	60b8      	str	r0, [r7, #8]
 800292a:	687b      	ldr	r3, [r7, #4]
 800292c:	60fb      	str	r3, [r7, #12]
 800292e:	68fb      	ldr	r3, [r7, #12]
 8002930:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002934:	d005      	beq.n	8002942 <HAL_Delay+0x26>
 8002936:	4b0a      	ldr	r3, [pc, #40]	@ (8002960 <HAL_Delay+0x44>)
 8002938:	781b      	ldrb	r3, [r3, #0]
 800293a:	461a      	mov	r2, r3
 800293c:	68fb      	ldr	r3, [r7, #12]
 800293e:	4413      	add	r3, r2
 8002940:	60fb      	str	r3, [r7, #12]
 8002942:	bf00      	nop
 8002944:	f7ff ffde 	bl	8002904 <HAL_GetTick>
 8002948:	4602      	mov	r2, r0
 800294a:	68bb      	ldr	r3, [r7, #8]
 800294c:	1ad3      	subs	r3, r2, r3
 800294e:	68fa      	ldr	r2, [r7, #12]
 8002950:	429a      	cmp	r2, r3
 8002952:	d8f7      	bhi.n	8002944 <HAL_Delay+0x28>
 8002954:	bf00      	nop
 8002956:	bf00      	nop
 8002958:	3710      	adds	r7, #16
 800295a:	46bd      	mov	sp, r7
 800295c:	bd80      	pop	{r7, pc}
 800295e:	bf00      	nop
 8002960:	20000030 	.word	0x20000030

08002964 <__NVIC_SetPriorityGrouping>:
 8002964:	b480      	push	{r7}
 8002966:	b085      	sub	sp, #20
 8002968:	af00      	add	r7, sp, #0
 800296a:	6078      	str	r0, [r7, #4]
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	f003 0307 	and.w	r3, r3, #7
 8002972:	60fb      	str	r3, [r7, #12]
 8002974:	4b0c      	ldr	r3, [pc, #48]	@ (80029a8 <__NVIC_SetPriorityGrouping+0x44>)
 8002976:	68db      	ldr	r3, [r3, #12]
 8002978:	60bb      	str	r3, [r7, #8]
 800297a:	68ba      	ldr	r2, [r7, #8]
 800297c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002980:	4013      	ands	r3, r2
 8002982:	60bb      	str	r3, [r7, #8]
 8002984:	68fb      	ldr	r3, [r7, #12]
 8002986:	021a      	lsls	r2, r3, #8
 8002988:	68bb      	ldr	r3, [r7, #8]
 800298a:	4313      	orrs	r3, r2
 800298c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002990:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002994:	60bb      	str	r3, [r7, #8]
 8002996:	4a04      	ldr	r2, [pc, #16]	@ (80029a8 <__NVIC_SetPriorityGrouping+0x44>)
 8002998:	68bb      	ldr	r3, [r7, #8]
 800299a:	60d3      	str	r3, [r2, #12]
 800299c:	bf00      	nop
 800299e:	3714      	adds	r7, #20
 80029a0:	46bd      	mov	sp, r7
 80029a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029a6:	4770      	bx	lr
 80029a8:	e000ed00 	.word	0xe000ed00

080029ac <__NVIC_GetPriorityGrouping>:
 80029ac:	b480      	push	{r7}
 80029ae:	af00      	add	r7, sp, #0
 80029b0:	4b04      	ldr	r3, [pc, #16]	@ (80029c4 <__NVIC_GetPriorityGrouping+0x18>)
 80029b2:	68db      	ldr	r3, [r3, #12]
 80029b4:	0a1b      	lsrs	r3, r3, #8
 80029b6:	f003 0307 	and.w	r3, r3, #7
 80029ba:	4618      	mov	r0, r3
 80029bc:	46bd      	mov	sp, r7
 80029be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029c2:	4770      	bx	lr
 80029c4:	e000ed00 	.word	0xe000ed00

080029c8 <__NVIC_EnableIRQ>:
 80029c8:	b480      	push	{r7}
 80029ca:	b083      	sub	sp, #12
 80029cc:	af00      	add	r7, sp, #0
 80029ce:	4603      	mov	r3, r0
 80029d0:	71fb      	strb	r3, [r7, #7]
 80029d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029d6:	2b00      	cmp	r3, #0
 80029d8:	db0b      	blt.n	80029f2 <__NVIC_EnableIRQ+0x2a>
 80029da:	79fb      	ldrb	r3, [r7, #7]
 80029dc:	f003 021f 	and.w	r2, r3, #31
 80029e0:	4907      	ldr	r1, [pc, #28]	@ (8002a00 <__NVIC_EnableIRQ+0x38>)
 80029e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029e6:	095b      	lsrs	r3, r3, #5
 80029e8:	2001      	movs	r0, #1
 80029ea:	fa00 f202 	lsl.w	r2, r0, r2
 80029ee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80029f2:	bf00      	nop
 80029f4:	370c      	adds	r7, #12
 80029f6:	46bd      	mov	sp, r7
 80029f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029fc:	4770      	bx	lr
 80029fe:	bf00      	nop
 8002a00:	e000e100 	.word	0xe000e100

08002a04 <__NVIC_SetPriority>:
 8002a04:	b480      	push	{r7}
 8002a06:	b083      	sub	sp, #12
 8002a08:	af00      	add	r7, sp, #0
 8002a0a:	4603      	mov	r3, r0
 8002a0c:	6039      	str	r1, [r7, #0]
 8002a0e:	71fb      	strb	r3, [r7, #7]
 8002a10:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a14:	2b00      	cmp	r3, #0
 8002a16:	db0a      	blt.n	8002a2e <__NVIC_SetPriority+0x2a>
 8002a18:	683b      	ldr	r3, [r7, #0]
 8002a1a:	b2da      	uxtb	r2, r3
 8002a1c:	490c      	ldr	r1, [pc, #48]	@ (8002a50 <__NVIC_SetPriority+0x4c>)
 8002a1e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a22:	0112      	lsls	r2, r2, #4
 8002a24:	b2d2      	uxtb	r2, r2
 8002a26:	440b      	add	r3, r1
 8002a28:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002a2c:	e00a      	b.n	8002a44 <__NVIC_SetPriority+0x40>
 8002a2e:	683b      	ldr	r3, [r7, #0]
 8002a30:	b2da      	uxtb	r2, r3
 8002a32:	4908      	ldr	r1, [pc, #32]	@ (8002a54 <__NVIC_SetPriority+0x50>)
 8002a34:	79fb      	ldrb	r3, [r7, #7]
 8002a36:	f003 030f 	and.w	r3, r3, #15
 8002a3a:	3b04      	subs	r3, #4
 8002a3c:	0112      	lsls	r2, r2, #4
 8002a3e:	b2d2      	uxtb	r2, r2
 8002a40:	440b      	add	r3, r1
 8002a42:	761a      	strb	r2, [r3, #24]
 8002a44:	bf00      	nop
 8002a46:	370c      	adds	r7, #12
 8002a48:	46bd      	mov	sp, r7
 8002a4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a4e:	4770      	bx	lr
 8002a50:	e000e100 	.word	0xe000e100
 8002a54:	e000ed00 	.word	0xe000ed00

08002a58 <NVIC_EncodePriority>:
 8002a58:	b480      	push	{r7}
 8002a5a:	b089      	sub	sp, #36	@ 0x24
 8002a5c:	af00      	add	r7, sp, #0
 8002a5e:	60f8      	str	r0, [r7, #12]
 8002a60:	60b9      	str	r1, [r7, #8]
 8002a62:	607a      	str	r2, [r7, #4]
 8002a64:	68fb      	ldr	r3, [r7, #12]
 8002a66:	f003 0307 	and.w	r3, r3, #7
 8002a6a:	61fb      	str	r3, [r7, #28]
 8002a6c:	69fb      	ldr	r3, [r7, #28]
 8002a6e:	f1c3 0307 	rsb	r3, r3, #7
 8002a72:	2b04      	cmp	r3, #4
 8002a74:	bf28      	it	cs
 8002a76:	2304      	movcs	r3, #4
 8002a78:	61bb      	str	r3, [r7, #24]
 8002a7a:	69fb      	ldr	r3, [r7, #28]
 8002a7c:	3304      	adds	r3, #4
 8002a7e:	2b06      	cmp	r3, #6
 8002a80:	d902      	bls.n	8002a88 <NVIC_EncodePriority+0x30>
 8002a82:	69fb      	ldr	r3, [r7, #28]
 8002a84:	3b03      	subs	r3, #3
 8002a86:	e000      	b.n	8002a8a <NVIC_EncodePriority+0x32>
 8002a88:	2300      	movs	r3, #0
 8002a8a:	617b      	str	r3, [r7, #20]
 8002a8c:	f04f 32ff 	mov.w	r2, #4294967295
 8002a90:	69bb      	ldr	r3, [r7, #24]
 8002a92:	fa02 f303 	lsl.w	r3, r2, r3
 8002a96:	43da      	mvns	r2, r3
 8002a98:	68bb      	ldr	r3, [r7, #8]
 8002a9a:	401a      	ands	r2, r3
 8002a9c:	697b      	ldr	r3, [r7, #20]
 8002a9e:	409a      	lsls	r2, r3
 8002aa0:	f04f 31ff 	mov.w	r1, #4294967295
 8002aa4:	697b      	ldr	r3, [r7, #20]
 8002aa6:	fa01 f303 	lsl.w	r3, r1, r3
 8002aaa:	43d9      	mvns	r1, r3
 8002aac:	687b      	ldr	r3, [r7, #4]
 8002aae:	400b      	ands	r3, r1
 8002ab0:	4313      	orrs	r3, r2
 8002ab2:	4618      	mov	r0, r3
 8002ab4:	3724      	adds	r7, #36	@ 0x24
 8002ab6:	46bd      	mov	sp, r7
 8002ab8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002abc:	4770      	bx	lr
	...

08002ac0 <SysTick_Config>:
 8002ac0:	b580      	push	{r7, lr}
 8002ac2:	b082      	sub	sp, #8
 8002ac4:	af00      	add	r7, sp, #0
 8002ac6:	6078      	str	r0, [r7, #4]
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	3b01      	subs	r3, #1
 8002acc:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002ad0:	d301      	bcc.n	8002ad6 <SysTick_Config+0x16>
 8002ad2:	2301      	movs	r3, #1
 8002ad4:	e00f      	b.n	8002af6 <SysTick_Config+0x36>
 8002ad6:	4a0a      	ldr	r2, [pc, #40]	@ (8002b00 <SysTick_Config+0x40>)
 8002ad8:	687b      	ldr	r3, [r7, #4]
 8002ada:	3b01      	subs	r3, #1
 8002adc:	6053      	str	r3, [r2, #4]
 8002ade:	210f      	movs	r1, #15
 8002ae0:	f04f 30ff 	mov.w	r0, #4294967295
 8002ae4:	f7ff ff8e 	bl	8002a04 <__NVIC_SetPriority>
 8002ae8:	4b05      	ldr	r3, [pc, #20]	@ (8002b00 <SysTick_Config+0x40>)
 8002aea:	2200      	movs	r2, #0
 8002aec:	609a      	str	r2, [r3, #8]
 8002aee:	4b04      	ldr	r3, [pc, #16]	@ (8002b00 <SysTick_Config+0x40>)
 8002af0:	2207      	movs	r2, #7
 8002af2:	601a      	str	r2, [r3, #0]
 8002af4:	2300      	movs	r3, #0
 8002af6:	4618      	mov	r0, r3
 8002af8:	3708      	adds	r7, #8
 8002afa:	46bd      	mov	sp, r7
 8002afc:	bd80      	pop	{r7, pc}
 8002afe:	bf00      	nop
 8002b00:	e000e010 	.word	0xe000e010

08002b04 <HAL_NVIC_SetPriorityGrouping>:
 8002b04:	b580      	push	{r7, lr}
 8002b06:	b082      	sub	sp, #8
 8002b08:	af00      	add	r7, sp, #0
 8002b0a:	6078      	str	r0, [r7, #4]
 8002b0c:	6878      	ldr	r0, [r7, #4]
 8002b0e:	f7ff ff29 	bl	8002964 <__NVIC_SetPriorityGrouping>
 8002b12:	bf00      	nop
 8002b14:	3708      	adds	r7, #8
 8002b16:	46bd      	mov	sp, r7
 8002b18:	bd80      	pop	{r7, pc}

08002b1a <HAL_NVIC_SetPriority>:
 8002b1a:	b580      	push	{r7, lr}
 8002b1c:	b086      	sub	sp, #24
 8002b1e:	af00      	add	r7, sp, #0
 8002b20:	4603      	mov	r3, r0
 8002b22:	60b9      	str	r1, [r7, #8]
 8002b24:	607a      	str	r2, [r7, #4]
 8002b26:	73fb      	strb	r3, [r7, #15]
 8002b28:	2300      	movs	r3, #0
 8002b2a:	617b      	str	r3, [r7, #20]
 8002b2c:	f7ff ff3e 	bl	80029ac <__NVIC_GetPriorityGrouping>
 8002b30:	6178      	str	r0, [r7, #20]
 8002b32:	687a      	ldr	r2, [r7, #4]
 8002b34:	68b9      	ldr	r1, [r7, #8]
 8002b36:	6978      	ldr	r0, [r7, #20]
 8002b38:	f7ff ff8e 	bl	8002a58 <NVIC_EncodePriority>
 8002b3c:	4602      	mov	r2, r0
 8002b3e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002b42:	4611      	mov	r1, r2
 8002b44:	4618      	mov	r0, r3
 8002b46:	f7ff ff5d 	bl	8002a04 <__NVIC_SetPriority>
 8002b4a:	bf00      	nop
 8002b4c:	3718      	adds	r7, #24
 8002b4e:	46bd      	mov	sp, r7
 8002b50:	bd80      	pop	{r7, pc}

08002b52 <HAL_NVIC_EnableIRQ>:
 8002b52:	b580      	push	{r7, lr}
 8002b54:	b082      	sub	sp, #8
 8002b56:	af00      	add	r7, sp, #0
 8002b58:	4603      	mov	r3, r0
 8002b5a:	71fb      	strb	r3, [r7, #7]
 8002b5c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002b60:	4618      	mov	r0, r3
 8002b62:	f7ff ff31 	bl	80029c8 <__NVIC_EnableIRQ>
 8002b66:	bf00      	nop
 8002b68:	3708      	adds	r7, #8
 8002b6a:	46bd      	mov	sp, r7
 8002b6c:	bd80      	pop	{r7, pc}

08002b6e <HAL_SYSTICK_Config>:
 8002b6e:	b580      	push	{r7, lr}
 8002b70:	b082      	sub	sp, #8
 8002b72:	af00      	add	r7, sp, #0
 8002b74:	6078      	str	r0, [r7, #4]
 8002b76:	6878      	ldr	r0, [r7, #4]
 8002b78:	f7ff ffa2 	bl	8002ac0 <SysTick_Config>
 8002b7c:	4603      	mov	r3, r0
 8002b7e:	4618      	mov	r0, r3
 8002b80:	3708      	adds	r7, #8
 8002b82:	46bd      	mov	sp, r7
 8002b84:	bd80      	pop	{r7, pc}
	...

08002b88 <HAL_GPIO_Init>:
 8002b88:	b480      	push	{r7}
 8002b8a:	b089      	sub	sp, #36	@ 0x24
 8002b8c:	af00      	add	r7, sp, #0
 8002b8e:	6078      	str	r0, [r7, #4]
 8002b90:	6039      	str	r1, [r7, #0]
 8002b92:	2300      	movs	r3, #0
 8002b94:	617b      	str	r3, [r7, #20]
 8002b96:	2300      	movs	r3, #0
 8002b98:	613b      	str	r3, [r7, #16]
 8002b9a:	2300      	movs	r3, #0
 8002b9c:	61bb      	str	r3, [r7, #24]
 8002b9e:	2300      	movs	r3, #0
 8002ba0:	61fb      	str	r3, [r7, #28]
 8002ba2:	e165      	b.n	8002e70 <HAL_GPIO_Init+0x2e8>
 8002ba4:	2201      	movs	r2, #1
 8002ba6:	69fb      	ldr	r3, [r7, #28]
 8002ba8:	fa02 f303 	lsl.w	r3, r2, r3
 8002bac:	617b      	str	r3, [r7, #20]
 8002bae:	683b      	ldr	r3, [r7, #0]
 8002bb0:	681b      	ldr	r3, [r3, #0]
 8002bb2:	697a      	ldr	r2, [r7, #20]
 8002bb4:	4013      	ands	r3, r2
 8002bb6:	613b      	str	r3, [r7, #16]
 8002bb8:	693a      	ldr	r2, [r7, #16]
 8002bba:	697b      	ldr	r3, [r7, #20]
 8002bbc:	429a      	cmp	r2, r3
 8002bbe:	f040 8154 	bne.w	8002e6a <HAL_GPIO_Init+0x2e2>
 8002bc2:	683b      	ldr	r3, [r7, #0]
 8002bc4:	685b      	ldr	r3, [r3, #4]
 8002bc6:	f003 0303 	and.w	r3, r3, #3
 8002bca:	2b01      	cmp	r3, #1
 8002bcc:	d005      	beq.n	8002bda <HAL_GPIO_Init+0x52>
 8002bce:	683b      	ldr	r3, [r7, #0]
 8002bd0:	685b      	ldr	r3, [r3, #4]
 8002bd2:	f003 0303 	and.w	r3, r3, #3
 8002bd6:	2b02      	cmp	r3, #2
 8002bd8:	d130      	bne.n	8002c3c <HAL_GPIO_Init+0xb4>
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	689b      	ldr	r3, [r3, #8]
 8002bde:	61bb      	str	r3, [r7, #24]
 8002be0:	69fb      	ldr	r3, [r7, #28]
 8002be2:	005b      	lsls	r3, r3, #1
 8002be4:	2203      	movs	r2, #3
 8002be6:	fa02 f303 	lsl.w	r3, r2, r3
 8002bea:	43db      	mvns	r3, r3
 8002bec:	69ba      	ldr	r2, [r7, #24]
 8002bee:	4013      	ands	r3, r2
 8002bf0:	61bb      	str	r3, [r7, #24]
 8002bf2:	683b      	ldr	r3, [r7, #0]
 8002bf4:	68da      	ldr	r2, [r3, #12]
 8002bf6:	69fb      	ldr	r3, [r7, #28]
 8002bf8:	005b      	lsls	r3, r3, #1
 8002bfa:	fa02 f303 	lsl.w	r3, r2, r3
 8002bfe:	69ba      	ldr	r2, [r7, #24]
 8002c00:	4313      	orrs	r3, r2
 8002c02:	61bb      	str	r3, [r7, #24]
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	69ba      	ldr	r2, [r7, #24]
 8002c08:	609a      	str	r2, [r3, #8]
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	685b      	ldr	r3, [r3, #4]
 8002c0e:	61bb      	str	r3, [r7, #24]
 8002c10:	2201      	movs	r2, #1
 8002c12:	69fb      	ldr	r3, [r7, #28]
 8002c14:	fa02 f303 	lsl.w	r3, r2, r3
 8002c18:	43db      	mvns	r3, r3
 8002c1a:	69ba      	ldr	r2, [r7, #24]
 8002c1c:	4013      	ands	r3, r2
 8002c1e:	61bb      	str	r3, [r7, #24]
 8002c20:	683b      	ldr	r3, [r7, #0]
 8002c22:	685b      	ldr	r3, [r3, #4]
 8002c24:	091b      	lsrs	r3, r3, #4
 8002c26:	f003 0201 	and.w	r2, r3, #1
 8002c2a:	69fb      	ldr	r3, [r7, #28]
 8002c2c:	fa02 f303 	lsl.w	r3, r2, r3
 8002c30:	69ba      	ldr	r2, [r7, #24]
 8002c32:	4313      	orrs	r3, r2
 8002c34:	61bb      	str	r3, [r7, #24]
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	69ba      	ldr	r2, [r7, #24]
 8002c3a:	605a      	str	r2, [r3, #4]
 8002c3c:	683b      	ldr	r3, [r7, #0]
 8002c3e:	685b      	ldr	r3, [r3, #4]
 8002c40:	f003 0303 	and.w	r3, r3, #3
 8002c44:	2b03      	cmp	r3, #3
 8002c46:	d017      	beq.n	8002c78 <HAL_GPIO_Init+0xf0>
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	68db      	ldr	r3, [r3, #12]
 8002c4c:	61bb      	str	r3, [r7, #24]
 8002c4e:	69fb      	ldr	r3, [r7, #28]
 8002c50:	005b      	lsls	r3, r3, #1
 8002c52:	2203      	movs	r2, #3
 8002c54:	fa02 f303 	lsl.w	r3, r2, r3
 8002c58:	43db      	mvns	r3, r3
 8002c5a:	69ba      	ldr	r2, [r7, #24]
 8002c5c:	4013      	ands	r3, r2
 8002c5e:	61bb      	str	r3, [r7, #24]
 8002c60:	683b      	ldr	r3, [r7, #0]
 8002c62:	689a      	ldr	r2, [r3, #8]
 8002c64:	69fb      	ldr	r3, [r7, #28]
 8002c66:	005b      	lsls	r3, r3, #1
 8002c68:	fa02 f303 	lsl.w	r3, r2, r3
 8002c6c:	69ba      	ldr	r2, [r7, #24]
 8002c6e:	4313      	orrs	r3, r2
 8002c70:	61bb      	str	r3, [r7, #24]
 8002c72:	687b      	ldr	r3, [r7, #4]
 8002c74:	69ba      	ldr	r2, [r7, #24]
 8002c76:	60da      	str	r2, [r3, #12]
 8002c78:	683b      	ldr	r3, [r7, #0]
 8002c7a:	685b      	ldr	r3, [r3, #4]
 8002c7c:	f003 0303 	and.w	r3, r3, #3
 8002c80:	2b02      	cmp	r3, #2
 8002c82:	d123      	bne.n	8002ccc <HAL_GPIO_Init+0x144>
 8002c84:	69fb      	ldr	r3, [r7, #28]
 8002c86:	08da      	lsrs	r2, r3, #3
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	3208      	adds	r2, #8
 8002c8c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002c90:	61bb      	str	r3, [r7, #24]
 8002c92:	69fb      	ldr	r3, [r7, #28]
 8002c94:	f003 0307 	and.w	r3, r3, #7
 8002c98:	009b      	lsls	r3, r3, #2
 8002c9a:	220f      	movs	r2, #15
 8002c9c:	fa02 f303 	lsl.w	r3, r2, r3
 8002ca0:	43db      	mvns	r3, r3
 8002ca2:	69ba      	ldr	r2, [r7, #24]
 8002ca4:	4013      	ands	r3, r2
 8002ca6:	61bb      	str	r3, [r7, #24]
 8002ca8:	683b      	ldr	r3, [r7, #0]
 8002caa:	691a      	ldr	r2, [r3, #16]
 8002cac:	69fb      	ldr	r3, [r7, #28]
 8002cae:	f003 0307 	and.w	r3, r3, #7
 8002cb2:	009b      	lsls	r3, r3, #2
 8002cb4:	fa02 f303 	lsl.w	r3, r2, r3
 8002cb8:	69ba      	ldr	r2, [r7, #24]
 8002cba:	4313      	orrs	r3, r2
 8002cbc:	61bb      	str	r3, [r7, #24]
 8002cbe:	69fb      	ldr	r3, [r7, #28]
 8002cc0:	08da      	lsrs	r2, r3, #3
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	3208      	adds	r2, #8
 8002cc6:	69b9      	ldr	r1, [r7, #24]
 8002cc8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	681b      	ldr	r3, [r3, #0]
 8002cd0:	61bb      	str	r3, [r7, #24]
 8002cd2:	69fb      	ldr	r3, [r7, #28]
 8002cd4:	005b      	lsls	r3, r3, #1
 8002cd6:	2203      	movs	r2, #3
 8002cd8:	fa02 f303 	lsl.w	r3, r2, r3
 8002cdc:	43db      	mvns	r3, r3
 8002cde:	69ba      	ldr	r2, [r7, #24]
 8002ce0:	4013      	ands	r3, r2
 8002ce2:	61bb      	str	r3, [r7, #24]
 8002ce4:	683b      	ldr	r3, [r7, #0]
 8002ce6:	685b      	ldr	r3, [r3, #4]
 8002ce8:	f003 0203 	and.w	r2, r3, #3
 8002cec:	69fb      	ldr	r3, [r7, #28]
 8002cee:	005b      	lsls	r3, r3, #1
 8002cf0:	fa02 f303 	lsl.w	r3, r2, r3
 8002cf4:	69ba      	ldr	r2, [r7, #24]
 8002cf6:	4313      	orrs	r3, r2
 8002cf8:	61bb      	str	r3, [r7, #24]
 8002cfa:	687b      	ldr	r3, [r7, #4]
 8002cfc:	69ba      	ldr	r2, [r7, #24]
 8002cfe:	601a      	str	r2, [r3, #0]
 8002d00:	683b      	ldr	r3, [r7, #0]
 8002d02:	685b      	ldr	r3, [r3, #4]
 8002d04:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002d08:	2b00      	cmp	r3, #0
 8002d0a:	f000 80ae 	beq.w	8002e6a <HAL_GPIO_Init+0x2e2>
 8002d0e:	2300      	movs	r3, #0
 8002d10:	60fb      	str	r3, [r7, #12]
 8002d12:	4b5d      	ldr	r3, [pc, #372]	@ (8002e88 <HAL_GPIO_Init+0x300>)
 8002d14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002d16:	4a5c      	ldr	r2, [pc, #368]	@ (8002e88 <HAL_GPIO_Init+0x300>)
 8002d18:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002d1c:	6453      	str	r3, [r2, #68]	@ 0x44
 8002d1e:	4b5a      	ldr	r3, [pc, #360]	@ (8002e88 <HAL_GPIO_Init+0x300>)
 8002d20:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002d22:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002d26:	60fb      	str	r3, [r7, #12]
 8002d28:	68fb      	ldr	r3, [r7, #12]
 8002d2a:	4a58      	ldr	r2, [pc, #352]	@ (8002e8c <HAL_GPIO_Init+0x304>)
 8002d2c:	69fb      	ldr	r3, [r7, #28]
 8002d2e:	089b      	lsrs	r3, r3, #2
 8002d30:	3302      	adds	r3, #2
 8002d32:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002d36:	61bb      	str	r3, [r7, #24]
 8002d38:	69fb      	ldr	r3, [r7, #28]
 8002d3a:	f003 0303 	and.w	r3, r3, #3
 8002d3e:	009b      	lsls	r3, r3, #2
 8002d40:	220f      	movs	r2, #15
 8002d42:	fa02 f303 	lsl.w	r3, r2, r3
 8002d46:	43db      	mvns	r3, r3
 8002d48:	69ba      	ldr	r2, [r7, #24]
 8002d4a:	4013      	ands	r3, r2
 8002d4c:	61bb      	str	r3, [r7, #24]
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	4a4f      	ldr	r2, [pc, #316]	@ (8002e90 <HAL_GPIO_Init+0x308>)
 8002d52:	4293      	cmp	r3, r2
 8002d54:	d025      	beq.n	8002da2 <HAL_GPIO_Init+0x21a>
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	4a4e      	ldr	r2, [pc, #312]	@ (8002e94 <HAL_GPIO_Init+0x30c>)
 8002d5a:	4293      	cmp	r3, r2
 8002d5c:	d01f      	beq.n	8002d9e <HAL_GPIO_Init+0x216>
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	4a4d      	ldr	r2, [pc, #308]	@ (8002e98 <HAL_GPIO_Init+0x310>)
 8002d62:	4293      	cmp	r3, r2
 8002d64:	d019      	beq.n	8002d9a <HAL_GPIO_Init+0x212>
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	4a4c      	ldr	r2, [pc, #304]	@ (8002e9c <HAL_GPIO_Init+0x314>)
 8002d6a:	4293      	cmp	r3, r2
 8002d6c:	d013      	beq.n	8002d96 <HAL_GPIO_Init+0x20e>
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	4a4b      	ldr	r2, [pc, #300]	@ (8002ea0 <HAL_GPIO_Init+0x318>)
 8002d72:	4293      	cmp	r3, r2
 8002d74:	d00d      	beq.n	8002d92 <HAL_GPIO_Init+0x20a>
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	4a4a      	ldr	r2, [pc, #296]	@ (8002ea4 <HAL_GPIO_Init+0x31c>)
 8002d7a:	4293      	cmp	r3, r2
 8002d7c:	d007      	beq.n	8002d8e <HAL_GPIO_Init+0x206>
 8002d7e:	687b      	ldr	r3, [r7, #4]
 8002d80:	4a49      	ldr	r2, [pc, #292]	@ (8002ea8 <HAL_GPIO_Init+0x320>)
 8002d82:	4293      	cmp	r3, r2
 8002d84:	d101      	bne.n	8002d8a <HAL_GPIO_Init+0x202>
 8002d86:	2306      	movs	r3, #6
 8002d88:	e00c      	b.n	8002da4 <HAL_GPIO_Init+0x21c>
 8002d8a:	2307      	movs	r3, #7
 8002d8c:	e00a      	b.n	8002da4 <HAL_GPIO_Init+0x21c>
 8002d8e:	2305      	movs	r3, #5
 8002d90:	e008      	b.n	8002da4 <HAL_GPIO_Init+0x21c>
 8002d92:	2304      	movs	r3, #4
 8002d94:	e006      	b.n	8002da4 <HAL_GPIO_Init+0x21c>
 8002d96:	2303      	movs	r3, #3
 8002d98:	e004      	b.n	8002da4 <HAL_GPIO_Init+0x21c>
 8002d9a:	2302      	movs	r3, #2
 8002d9c:	e002      	b.n	8002da4 <HAL_GPIO_Init+0x21c>
 8002d9e:	2301      	movs	r3, #1
 8002da0:	e000      	b.n	8002da4 <HAL_GPIO_Init+0x21c>
 8002da2:	2300      	movs	r3, #0
 8002da4:	69fa      	ldr	r2, [r7, #28]
 8002da6:	f002 0203 	and.w	r2, r2, #3
 8002daa:	0092      	lsls	r2, r2, #2
 8002dac:	4093      	lsls	r3, r2
 8002dae:	69ba      	ldr	r2, [r7, #24]
 8002db0:	4313      	orrs	r3, r2
 8002db2:	61bb      	str	r3, [r7, #24]
 8002db4:	4935      	ldr	r1, [pc, #212]	@ (8002e8c <HAL_GPIO_Init+0x304>)
 8002db6:	69fb      	ldr	r3, [r7, #28]
 8002db8:	089b      	lsrs	r3, r3, #2
 8002dba:	3302      	adds	r3, #2
 8002dbc:	69ba      	ldr	r2, [r7, #24]
 8002dbe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002dc2:	4b3a      	ldr	r3, [pc, #232]	@ (8002eac <HAL_GPIO_Init+0x324>)
 8002dc4:	689b      	ldr	r3, [r3, #8]
 8002dc6:	61bb      	str	r3, [r7, #24]
 8002dc8:	693b      	ldr	r3, [r7, #16]
 8002dca:	43db      	mvns	r3, r3
 8002dcc:	69ba      	ldr	r2, [r7, #24]
 8002dce:	4013      	ands	r3, r2
 8002dd0:	61bb      	str	r3, [r7, #24]
 8002dd2:	683b      	ldr	r3, [r7, #0]
 8002dd4:	685b      	ldr	r3, [r3, #4]
 8002dd6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	d003      	beq.n	8002de6 <HAL_GPIO_Init+0x25e>
 8002dde:	69ba      	ldr	r2, [r7, #24]
 8002de0:	693b      	ldr	r3, [r7, #16]
 8002de2:	4313      	orrs	r3, r2
 8002de4:	61bb      	str	r3, [r7, #24]
 8002de6:	4a31      	ldr	r2, [pc, #196]	@ (8002eac <HAL_GPIO_Init+0x324>)
 8002de8:	69bb      	ldr	r3, [r7, #24]
 8002dea:	6093      	str	r3, [r2, #8]
 8002dec:	4b2f      	ldr	r3, [pc, #188]	@ (8002eac <HAL_GPIO_Init+0x324>)
 8002dee:	68db      	ldr	r3, [r3, #12]
 8002df0:	61bb      	str	r3, [r7, #24]
 8002df2:	693b      	ldr	r3, [r7, #16]
 8002df4:	43db      	mvns	r3, r3
 8002df6:	69ba      	ldr	r2, [r7, #24]
 8002df8:	4013      	ands	r3, r2
 8002dfa:	61bb      	str	r3, [r7, #24]
 8002dfc:	683b      	ldr	r3, [r7, #0]
 8002dfe:	685b      	ldr	r3, [r3, #4]
 8002e00:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002e04:	2b00      	cmp	r3, #0
 8002e06:	d003      	beq.n	8002e10 <HAL_GPIO_Init+0x288>
 8002e08:	69ba      	ldr	r2, [r7, #24]
 8002e0a:	693b      	ldr	r3, [r7, #16]
 8002e0c:	4313      	orrs	r3, r2
 8002e0e:	61bb      	str	r3, [r7, #24]
 8002e10:	4a26      	ldr	r2, [pc, #152]	@ (8002eac <HAL_GPIO_Init+0x324>)
 8002e12:	69bb      	ldr	r3, [r7, #24]
 8002e14:	60d3      	str	r3, [r2, #12]
 8002e16:	4b25      	ldr	r3, [pc, #148]	@ (8002eac <HAL_GPIO_Init+0x324>)
 8002e18:	685b      	ldr	r3, [r3, #4]
 8002e1a:	61bb      	str	r3, [r7, #24]
 8002e1c:	693b      	ldr	r3, [r7, #16]
 8002e1e:	43db      	mvns	r3, r3
 8002e20:	69ba      	ldr	r2, [r7, #24]
 8002e22:	4013      	ands	r3, r2
 8002e24:	61bb      	str	r3, [r7, #24]
 8002e26:	683b      	ldr	r3, [r7, #0]
 8002e28:	685b      	ldr	r3, [r3, #4]
 8002e2a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002e2e:	2b00      	cmp	r3, #0
 8002e30:	d003      	beq.n	8002e3a <HAL_GPIO_Init+0x2b2>
 8002e32:	69ba      	ldr	r2, [r7, #24]
 8002e34:	693b      	ldr	r3, [r7, #16]
 8002e36:	4313      	orrs	r3, r2
 8002e38:	61bb      	str	r3, [r7, #24]
 8002e3a:	4a1c      	ldr	r2, [pc, #112]	@ (8002eac <HAL_GPIO_Init+0x324>)
 8002e3c:	69bb      	ldr	r3, [r7, #24]
 8002e3e:	6053      	str	r3, [r2, #4]
 8002e40:	4b1a      	ldr	r3, [pc, #104]	@ (8002eac <HAL_GPIO_Init+0x324>)
 8002e42:	681b      	ldr	r3, [r3, #0]
 8002e44:	61bb      	str	r3, [r7, #24]
 8002e46:	693b      	ldr	r3, [r7, #16]
 8002e48:	43db      	mvns	r3, r3
 8002e4a:	69ba      	ldr	r2, [r7, #24]
 8002e4c:	4013      	ands	r3, r2
 8002e4e:	61bb      	str	r3, [r7, #24]
 8002e50:	683b      	ldr	r3, [r7, #0]
 8002e52:	685b      	ldr	r3, [r3, #4]
 8002e54:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002e58:	2b00      	cmp	r3, #0
 8002e5a:	d003      	beq.n	8002e64 <HAL_GPIO_Init+0x2dc>
 8002e5c:	69ba      	ldr	r2, [r7, #24]
 8002e5e:	693b      	ldr	r3, [r7, #16]
 8002e60:	4313      	orrs	r3, r2
 8002e62:	61bb      	str	r3, [r7, #24]
 8002e64:	4a11      	ldr	r2, [pc, #68]	@ (8002eac <HAL_GPIO_Init+0x324>)
 8002e66:	69bb      	ldr	r3, [r7, #24]
 8002e68:	6013      	str	r3, [r2, #0]
 8002e6a:	69fb      	ldr	r3, [r7, #28]
 8002e6c:	3301      	adds	r3, #1
 8002e6e:	61fb      	str	r3, [r7, #28]
 8002e70:	69fb      	ldr	r3, [r7, #28]
 8002e72:	2b0f      	cmp	r3, #15
 8002e74:	f67f ae96 	bls.w	8002ba4 <HAL_GPIO_Init+0x1c>
 8002e78:	bf00      	nop
 8002e7a:	bf00      	nop
 8002e7c:	3724      	adds	r7, #36	@ 0x24
 8002e7e:	46bd      	mov	sp, r7
 8002e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e84:	4770      	bx	lr
 8002e86:	bf00      	nop
 8002e88:	40023800 	.word	0x40023800
 8002e8c:	40013800 	.word	0x40013800
 8002e90:	40020000 	.word	0x40020000
 8002e94:	40020400 	.word	0x40020400
 8002e98:	40020800 	.word	0x40020800
 8002e9c:	40020c00 	.word	0x40020c00
 8002ea0:	40021000 	.word	0x40021000
 8002ea4:	40021400 	.word	0x40021400
 8002ea8:	40021800 	.word	0x40021800
 8002eac:	40013c00 	.word	0x40013c00

08002eb0 <HAL_GPIO_ReadPin>:
 8002eb0:	b480      	push	{r7}
 8002eb2:	b085      	sub	sp, #20
 8002eb4:	af00      	add	r7, sp, #0
 8002eb6:	6078      	str	r0, [r7, #4]
 8002eb8:	460b      	mov	r3, r1
 8002eba:	807b      	strh	r3, [r7, #2]
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	691a      	ldr	r2, [r3, #16]
 8002ec0:	887b      	ldrh	r3, [r7, #2]
 8002ec2:	4013      	ands	r3, r2
 8002ec4:	2b00      	cmp	r3, #0
 8002ec6:	d002      	beq.n	8002ece <HAL_GPIO_ReadPin+0x1e>
 8002ec8:	2301      	movs	r3, #1
 8002eca:	73fb      	strb	r3, [r7, #15]
 8002ecc:	e001      	b.n	8002ed2 <HAL_GPIO_ReadPin+0x22>
 8002ece:	2300      	movs	r3, #0
 8002ed0:	73fb      	strb	r3, [r7, #15]
 8002ed2:	7bfb      	ldrb	r3, [r7, #15]
 8002ed4:	4618      	mov	r0, r3
 8002ed6:	3714      	adds	r7, #20
 8002ed8:	46bd      	mov	sp, r7
 8002eda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ede:	4770      	bx	lr

08002ee0 <HAL_GPIO_WritePin>:
 8002ee0:	b480      	push	{r7}
 8002ee2:	b083      	sub	sp, #12
 8002ee4:	af00      	add	r7, sp, #0
 8002ee6:	6078      	str	r0, [r7, #4]
 8002ee8:	460b      	mov	r3, r1
 8002eea:	807b      	strh	r3, [r7, #2]
 8002eec:	4613      	mov	r3, r2
 8002eee:	707b      	strb	r3, [r7, #1]
 8002ef0:	787b      	ldrb	r3, [r7, #1]
 8002ef2:	2b00      	cmp	r3, #0
 8002ef4:	d003      	beq.n	8002efe <HAL_GPIO_WritePin+0x1e>
 8002ef6:	887a      	ldrh	r2, [r7, #2]
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	619a      	str	r2, [r3, #24]
 8002efc:	e003      	b.n	8002f06 <HAL_GPIO_WritePin+0x26>
 8002efe:	887b      	ldrh	r3, [r7, #2]
 8002f00:	041a      	lsls	r2, r3, #16
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	619a      	str	r2, [r3, #24]
 8002f06:	bf00      	nop
 8002f08:	370c      	adds	r7, #12
 8002f0a:	46bd      	mov	sp, r7
 8002f0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f10:	4770      	bx	lr
	...

08002f14 <HAL_I2C_Init>:
 8002f14:	b580      	push	{r7, lr}
 8002f16:	b084      	sub	sp, #16
 8002f18:	af00      	add	r7, sp, #0
 8002f1a:	6078      	str	r0, [r7, #4]
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	2b00      	cmp	r3, #0
 8002f20:	d101      	bne.n	8002f26 <HAL_I2C_Init+0x12>
 8002f22:	2301      	movs	r3, #1
 8002f24:	e12b      	b.n	800317e <HAL_I2C_Init+0x26a>
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002f2c:	b2db      	uxtb	r3, r3
 8002f2e:	2b00      	cmp	r3, #0
 8002f30:	d106      	bne.n	8002f40 <HAL_I2C_Init+0x2c>
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	2200      	movs	r2, #0
 8002f36:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002f3a:	6878      	ldr	r0, [r7, #4]
 8002f3c:	f7fe f988 	bl	8001250 <HAL_I2C_MspInit>
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	2224      	movs	r2, #36	@ 0x24
 8002f44:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	681a      	ldr	r2, [r3, #0]
 8002f4e:	687b      	ldr	r3, [r7, #4]
 8002f50:	681b      	ldr	r3, [r3, #0]
 8002f52:	f022 0201 	bic.w	r2, r2, #1
 8002f56:	601a      	str	r2, [r3, #0]
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	681a      	ldr	r2, [r3, #0]
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8002f66:	601a      	str	r2, [r3, #0]
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	681a      	ldr	r2, [r3, #0]
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	681b      	ldr	r3, [r3, #0]
 8002f72:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002f76:	601a      	str	r2, [r3, #0]
 8002f78:	f001 fa10 	bl	800439c <HAL_RCC_GetPCLK1Freq>
 8002f7c:	60f8      	str	r0, [r7, #12]
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	685b      	ldr	r3, [r3, #4]
 8002f82:	4a81      	ldr	r2, [pc, #516]	@ (8003188 <HAL_I2C_Init+0x274>)
 8002f84:	4293      	cmp	r3, r2
 8002f86:	d807      	bhi.n	8002f98 <HAL_I2C_Init+0x84>
 8002f88:	68fb      	ldr	r3, [r7, #12]
 8002f8a:	4a80      	ldr	r2, [pc, #512]	@ (800318c <HAL_I2C_Init+0x278>)
 8002f8c:	4293      	cmp	r3, r2
 8002f8e:	bf94      	ite	ls
 8002f90:	2301      	movls	r3, #1
 8002f92:	2300      	movhi	r3, #0
 8002f94:	b2db      	uxtb	r3, r3
 8002f96:	e006      	b.n	8002fa6 <HAL_I2C_Init+0x92>
 8002f98:	68fb      	ldr	r3, [r7, #12]
 8002f9a:	4a7d      	ldr	r2, [pc, #500]	@ (8003190 <HAL_I2C_Init+0x27c>)
 8002f9c:	4293      	cmp	r3, r2
 8002f9e:	bf94      	ite	ls
 8002fa0:	2301      	movls	r3, #1
 8002fa2:	2300      	movhi	r3, #0
 8002fa4:	b2db      	uxtb	r3, r3
 8002fa6:	2b00      	cmp	r3, #0
 8002fa8:	d001      	beq.n	8002fae <HAL_I2C_Init+0x9a>
 8002faa:	2301      	movs	r3, #1
 8002fac:	e0e7      	b.n	800317e <HAL_I2C_Init+0x26a>
 8002fae:	68fb      	ldr	r3, [r7, #12]
 8002fb0:	4a78      	ldr	r2, [pc, #480]	@ (8003194 <HAL_I2C_Init+0x280>)
 8002fb2:	fba2 2303 	umull	r2, r3, r2, r3
 8002fb6:	0c9b      	lsrs	r3, r3, #18
 8002fb8:	60bb      	str	r3, [r7, #8]
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	681b      	ldr	r3, [r3, #0]
 8002fbe:	685b      	ldr	r3, [r3, #4]
 8002fc0:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	68ba      	ldr	r2, [r7, #8]
 8002fca:	430a      	orrs	r2, r1
 8002fcc:	605a      	str	r2, [r3, #4]
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	6a1b      	ldr	r3, [r3, #32]
 8002fd4:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	685b      	ldr	r3, [r3, #4]
 8002fdc:	4a6a      	ldr	r2, [pc, #424]	@ (8003188 <HAL_I2C_Init+0x274>)
 8002fde:	4293      	cmp	r3, r2
 8002fe0:	d802      	bhi.n	8002fe8 <HAL_I2C_Init+0xd4>
 8002fe2:	68bb      	ldr	r3, [r7, #8]
 8002fe4:	3301      	adds	r3, #1
 8002fe6:	e009      	b.n	8002ffc <HAL_I2C_Init+0xe8>
 8002fe8:	68bb      	ldr	r3, [r7, #8]
 8002fea:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8002fee:	fb02 f303 	mul.w	r3, r2, r3
 8002ff2:	4a69      	ldr	r2, [pc, #420]	@ (8003198 <HAL_I2C_Init+0x284>)
 8002ff4:	fba2 2303 	umull	r2, r3, r2, r3
 8002ff8:	099b      	lsrs	r3, r3, #6
 8002ffa:	3301      	adds	r3, #1
 8002ffc:	687a      	ldr	r2, [r7, #4]
 8002ffe:	6812      	ldr	r2, [r2, #0]
 8003000:	430b      	orrs	r3, r1
 8003002:	6213      	str	r3, [r2, #32]
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	69db      	ldr	r3, [r3, #28]
 800300a:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800300e:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	685b      	ldr	r3, [r3, #4]
 8003016:	495c      	ldr	r1, [pc, #368]	@ (8003188 <HAL_I2C_Init+0x274>)
 8003018:	428b      	cmp	r3, r1
 800301a:	d819      	bhi.n	8003050 <HAL_I2C_Init+0x13c>
 800301c:	68fb      	ldr	r3, [r7, #12]
 800301e:	1e59      	subs	r1, r3, #1
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	685b      	ldr	r3, [r3, #4]
 8003024:	005b      	lsls	r3, r3, #1
 8003026:	fbb1 f3f3 	udiv	r3, r1, r3
 800302a:	1c59      	adds	r1, r3, #1
 800302c:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8003030:	400b      	ands	r3, r1
 8003032:	2b00      	cmp	r3, #0
 8003034:	d00a      	beq.n	800304c <HAL_I2C_Init+0x138>
 8003036:	68fb      	ldr	r3, [r7, #12]
 8003038:	1e59      	subs	r1, r3, #1
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	685b      	ldr	r3, [r3, #4]
 800303e:	005b      	lsls	r3, r3, #1
 8003040:	fbb1 f3f3 	udiv	r3, r1, r3
 8003044:	3301      	adds	r3, #1
 8003046:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800304a:	e051      	b.n	80030f0 <HAL_I2C_Init+0x1dc>
 800304c:	2304      	movs	r3, #4
 800304e:	e04f      	b.n	80030f0 <HAL_I2C_Init+0x1dc>
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	689b      	ldr	r3, [r3, #8]
 8003054:	2b00      	cmp	r3, #0
 8003056:	d111      	bne.n	800307c <HAL_I2C_Init+0x168>
 8003058:	68fb      	ldr	r3, [r7, #12]
 800305a:	1e58      	subs	r0, r3, #1
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	6859      	ldr	r1, [r3, #4]
 8003060:	460b      	mov	r3, r1
 8003062:	005b      	lsls	r3, r3, #1
 8003064:	440b      	add	r3, r1
 8003066:	fbb0 f3f3 	udiv	r3, r0, r3
 800306a:	3301      	adds	r3, #1
 800306c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003070:	2b00      	cmp	r3, #0
 8003072:	bf0c      	ite	eq
 8003074:	2301      	moveq	r3, #1
 8003076:	2300      	movne	r3, #0
 8003078:	b2db      	uxtb	r3, r3
 800307a:	e012      	b.n	80030a2 <HAL_I2C_Init+0x18e>
 800307c:	68fb      	ldr	r3, [r7, #12]
 800307e:	1e58      	subs	r0, r3, #1
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	6859      	ldr	r1, [r3, #4]
 8003084:	460b      	mov	r3, r1
 8003086:	009b      	lsls	r3, r3, #2
 8003088:	440b      	add	r3, r1
 800308a:	0099      	lsls	r1, r3, #2
 800308c:	440b      	add	r3, r1
 800308e:	fbb0 f3f3 	udiv	r3, r0, r3
 8003092:	3301      	adds	r3, #1
 8003094:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003098:	2b00      	cmp	r3, #0
 800309a:	bf0c      	ite	eq
 800309c:	2301      	moveq	r3, #1
 800309e:	2300      	movne	r3, #0
 80030a0:	b2db      	uxtb	r3, r3
 80030a2:	2b00      	cmp	r3, #0
 80030a4:	d001      	beq.n	80030aa <HAL_I2C_Init+0x196>
 80030a6:	2301      	movs	r3, #1
 80030a8:	e022      	b.n	80030f0 <HAL_I2C_Init+0x1dc>
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	689b      	ldr	r3, [r3, #8]
 80030ae:	2b00      	cmp	r3, #0
 80030b0:	d10e      	bne.n	80030d0 <HAL_I2C_Init+0x1bc>
 80030b2:	68fb      	ldr	r3, [r7, #12]
 80030b4:	1e58      	subs	r0, r3, #1
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	6859      	ldr	r1, [r3, #4]
 80030ba:	460b      	mov	r3, r1
 80030bc:	005b      	lsls	r3, r3, #1
 80030be:	440b      	add	r3, r1
 80030c0:	fbb0 f3f3 	udiv	r3, r0, r3
 80030c4:	3301      	adds	r3, #1
 80030c6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80030ca:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80030ce:	e00f      	b.n	80030f0 <HAL_I2C_Init+0x1dc>
 80030d0:	68fb      	ldr	r3, [r7, #12]
 80030d2:	1e58      	subs	r0, r3, #1
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	6859      	ldr	r1, [r3, #4]
 80030d8:	460b      	mov	r3, r1
 80030da:	009b      	lsls	r3, r3, #2
 80030dc:	440b      	add	r3, r1
 80030de:	0099      	lsls	r1, r3, #2
 80030e0:	440b      	add	r3, r1
 80030e2:	fbb0 f3f3 	udiv	r3, r0, r3
 80030e6:	3301      	adds	r3, #1
 80030e8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80030ec:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80030f0:	6879      	ldr	r1, [r7, #4]
 80030f2:	6809      	ldr	r1, [r1, #0]
 80030f4:	4313      	orrs	r3, r2
 80030f6:	61cb      	str	r3, [r1, #28]
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	681b      	ldr	r3, [r3, #0]
 80030fc:	681b      	ldr	r3, [r3, #0]
 80030fe:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	69da      	ldr	r2, [r3, #28]
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	6a1b      	ldr	r3, [r3, #32]
 800310a:	431a      	orrs	r2, r3
 800310c:	687b      	ldr	r3, [r7, #4]
 800310e:	681b      	ldr	r3, [r3, #0]
 8003110:	430a      	orrs	r2, r1
 8003112:	601a      	str	r2, [r3, #0]
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	689b      	ldr	r3, [r3, #8]
 800311a:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800311e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8003122:	687a      	ldr	r2, [r7, #4]
 8003124:	6911      	ldr	r1, [r2, #16]
 8003126:	687a      	ldr	r2, [r7, #4]
 8003128:	68d2      	ldr	r2, [r2, #12]
 800312a:	4311      	orrs	r1, r2
 800312c:	687a      	ldr	r2, [r7, #4]
 800312e:	6812      	ldr	r2, [r2, #0]
 8003130:	430b      	orrs	r3, r1
 8003132:	6093      	str	r3, [r2, #8]
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	681b      	ldr	r3, [r3, #0]
 8003138:	68db      	ldr	r3, [r3, #12]
 800313a:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	695a      	ldr	r2, [r3, #20]
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	699b      	ldr	r3, [r3, #24]
 8003146:	431a      	orrs	r2, r3
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	430a      	orrs	r2, r1
 800314e:	60da      	str	r2, [r3, #12]
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	681a      	ldr	r2, [r3, #0]
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	f042 0201 	orr.w	r2, r2, #1
 800315e:	601a      	str	r2, [r3, #0]
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	2200      	movs	r2, #0
 8003164:	641a      	str	r2, [r3, #64]	@ 0x40
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	2220      	movs	r2, #32
 800316a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	2200      	movs	r2, #0
 8003172:	631a      	str	r2, [r3, #48]	@ 0x30
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	2200      	movs	r2, #0
 8003178:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800317c:	2300      	movs	r3, #0
 800317e:	4618      	mov	r0, r3
 8003180:	3710      	adds	r7, #16
 8003182:	46bd      	mov	sp, r7
 8003184:	bd80      	pop	{r7, pc}
 8003186:	bf00      	nop
 8003188:	000186a0 	.word	0x000186a0
 800318c:	001e847f 	.word	0x001e847f
 8003190:	003d08ff 	.word	0x003d08ff
 8003194:	431bde83 	.word	0x431bde83
 8003198:	10624dd3 	.word	0x10624dd3

0800319c <HAL_I2C_Mem_Write>:
 800319c:	b580      	push	{r7, lr}
 800319e:	b088      	sub	sp, #32
 80031a0:	af02      	add	r7, sp, #8
 80031a2:	60f8      	str	r0, [r7, #12]
 80031a4:	4608      	mov	r0, r1
 80031a6:	4611      	mov	r1, r2
 80031a8:	461a      	mov	r2, r3
 80031aa:	4603      	mov	r3, r0
 80031ac:	817b      	strh	r3, [r7, #10]
 80031ae:	460b      	mov	r3, r1
 80031b0:	813b      	strh	r3, [r7, #8]
 80031b2:	4613      	mov	r3, r2
 80031b4:	80fb      	strh	r3, [r7, #6]
 80031b6:	f7ff fba5 	bl	8002904 <HAL_GetTick>
 80031ba:	6178      	str	r0, [r7, #20]
 80031bc:	68fb      	ldr	r3, [r7, #12]
 80031be:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80031c2:	b2db      	uxtb	r3, r3
 80031c4:	2b20      	cmp	r3, #32
 80031c6:	f040 80d9 	bne.w	800337c <HAL_I2C_Mem_Write+0x1e0>
 80031ca:	697b      	ldr	r3, [r7, #20]
 80031cc:	9300      	str	r3, [sp, #0]
 80031ce:	2319      	movs	r3, #25
 80031d0:	2201      	movs	r2, #1
 80031d2:	496d      	ldr	r1, [pc, #436]	@ (8003388 <HAL_I2C_Mem_Write+0x1ec>)
 80031d4:	68f8      	ldr	r0, [r7, #12]
 80031d6:	f000 fdb9 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 80031da:	4603      	mov	r3, r0
 80031dc:	2b00      	cmp	r3, #0
 80031de:	d001      	beq.n	80031e4 <HAL_I2C_Mem_Write+0x48>
 80031e0:	2302      	movs	r3, #2
 80031e2:	e0cc      	b.n	800337e <HAL_I2C_Mem_Write+0x1e2>
 80031e4:	68fb      	ldr	r3, [r7, #12]
 80031e6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80031ea:	2b01      	cmp	r3, #1
 80031ec:	d101      	bne.n	80031f2 <HAL_I2C_Mem_Write+0x56>
 80031ee:	2302      	movs	r3, #2
 80031f0:	e0c5      	b.n	800337e <HAL_I2C_Mem_Write+0x1e2>
 80031f2:	68fb      	ldr	r3, [r7, #12]
 80031f4:	2201      	movs	r2, #1
 80031f6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80031fa:	68fb      	ldr	r3, [r7, #12]
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	f003 0301 	and.w	r3, r3, #1
 8003204:	2b01      	cmp	r3, #1
 8003206:	d007      	beq.n	8003218 <HAL_I2C_Mem_Write+0x7c>
 8003208:	68fb      	ldr	r3, [r7, #12]
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	681a      	ldr	r2, [r3, #0]
 800320e:	68fb      	ldr	r3, [r7, #12]
 8003210:	681b      	ldr	r3, [r3, #0]
 8003212:	f042 0201 	orr.w	r2, r2, #1
 8003216:	601a      	str	r2, [r3, #0]
 8003218:	68fb      	ldr	r3, [r7, #12]
 800321a:	681b      	ldr	r3, [r3, #0]
 800321c:	681a      	ldr	r2, [r3, #0]
 800321e:	68fb      	ldr	r3, [r7, #12]
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003226:	601a      	str	r2, [r3, #0]
 8003228:	68fb      	ldr	r3, [r7, #12]
 800322a:	2221      	movs	r2, #33	@ 0x21
 800322c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003230:	68fb      	ldr	r3, [r7, #12]
 8003232:	2240      	movs	r2, #64	@ 0x40
 8003234:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003238:	68fb      	ldr	r3, [r7, #12]
 800323a:	2200      	movs	r2, #0
 800323c:	641a      	str	r2, [r3, #64]	@ 0x40
 800323e:	68fb      	ldr	r3, [r7, #12]
 8003240:	6a3a      	ldr	r2, [r7, #32]
 8003242:	625a      	str	r2, [r3, #36]	@ 0x24
 8003244:	68fb      	ldr	r3, [r7, #12]
 8003246:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8003248:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800324a:	68fb      	ldr	r3, [r7, #12]
 800324c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800324e:	b29a      	uxth	r2, r3
 8003250:	68fb      	ldr	r3, [r7, #12]
 8003252:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003254:	68fb      	ldr	r3, [r7, #12]
 8003256:	4a4d      	ldr	r2, [pc, #308]	@ (800338c <HAL_I2C_Mem_Write+0x1f0>)
 8003258:	62da      	str	r2, [r3, #44]	@ 0x2c
 800325a:	88f8      	ldrh	r0, [r7, #6]
 800325c:	893a      	ldrh	r2, [r7, #8]
 800325e:	8979      	ldrh	r1, [r7, #10]
 8003260:	697b      	ldr	r3, [r7, #20]
 8003262:	9301      	str	r3, [sp, #4]
 8003264:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003266:	9300      	str	r3, [sp, #0]
 8003268:	4603      	mov	r3, r0
 800326a:	68f8      	ldr	r0, [r7, #12]
 800326c:	f000 fbf0 	bl	8003a50 <I2C_RequestMemoryWrite>
 8003270:	4603      	mov	r3, r0
 8003272:	2b00      	cmp	r3, #0
 8003274:	d052      	beq.n	800331c <HAL_I2C_Mem_Write+0x180>
 8003276:	2301      	movs	r3, #1
 8003278:	e081      	b.n	800337e <HAL_I2C_Mem_Write+0x1e2>
 800327a:	697a      	ldr	r2, [r7, #20]
 800327c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800327e:	68f8      	ldr	r0, [r7, #12]
 8003280:	f000 fe7e 	bl	8003f80 <I2C_WaitOnTXEFlagUntilTimeout>
 8003284:	4603      	mov	r3, r0
 8003286:	2b00      	cmp	r3, #0
 8003288:	d00d      	beq.n	80032a6 <HAL_I2C_Mem_Write+0x10a>
 800328a:	68fb      	ldr	r3, [r7, #12]
 800328c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800328e:	2b04      	cmp	r3, #4
 8003290:	d107      	bne.n	80032a2 <HAL_I2C_Mem_Write+0x106>
 8003292:	68fb      	ldr	r3, [r7, #12]
 8003294:	681b      	ldr	r3, [r3, #0]
 8003296:	681a      	ldr	r2, [r3, #0]
 8003298:	68fb      	ldr	r3, [r7, #12]
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80032a0:	601a      	str	r2, [r3, #0]
 80032a2:	2301      	movs	r3, #1
 80032a4:	e06b      	b.n	800337e <HAL_I2C_Mem_Write+0x1e2>
 80032a6:	68fb      	ldr	r3, [r7, #12]
 80032a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032aa:	781a      	ldrb	r2, [r3, #0]
 80032ac:	68fb      	ldr	r3, [r7, #12]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	611a      	str	r2, [r3, #16]
 80032b2:	68fb      	ldr	r3, [r7, #12]
 80032b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032b6:	1c5a      	adds	r2, r3, #1
 80032b8:	68fb      	ldr	r3, [r7, #12]
 80032ba:	625a      	str	r2, [r3, #36]	@ 0x24
 80032bc:	68fb      	ldr	r3, [r7, #12]
 80032be:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032c0:	3b01      	subs	r3, #1
 80032c2:	b29a      	uxth	r2, r3
 80032c4:	68fb      	ldr	r3, [r7, #12]
 80032c6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80032c8:	68fb      	ldr	r3, [r7, #12]
 80032ca:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80032cc:	b29b      	uxth	r3, r3
 80032ce:	3b01      	subs	r3, #1
 80032d0:	b29a      	uxth	r2, r3
 80032d2:	68fb      	ldr	r3, [r7, #12]
 80032d4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80032d6:	68fb      	ldr	r3, [r7, #12]
 80032d8:	681b      	ldr	r3, [r3, #0]
 80032da:	695b      	ldr	r3, [r3, #20]
 80032dc:	f003 0304 	and.w	r3, r3, #4
 80032e0:	2b04      	cmp	r3, #4
 80032e2:	d11b      	bne.n	800331c <HAL_I2C_Mem_Write+0x180>
 80032e4:	68fb      	ldr	r3, [r7, #12]
 80032e6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032e8:	2b00      	cmp	r3, #0
 80032ea:	d017      	beq.n	800331c <HAL_I2C_Mem_Write+0x180>
 80032ec:	68fb      	ldr	r3, [r7, #12]
 80032ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032f0:	781a      	ldrb	r2, [r3, #0]
 80032f2:	68fb      	ldr	r3, [r7, #12]
 80032f4:	681b      	ldr	r3, [r3, #0]
 80032f6:	611a      	str	r2, [r3, #16]
 80032f8:	68fb      	ldr	r3, [r7, #12]
 80032fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032fc:	1c5a      	adds	r2, r3, #1
 80032fe:	68fb      	ldr	r3, [r7, #12]
 8003300:	625a      	str	r2, [r3, #36]	@ 0x24
 8003302:	68fb      	ldr	r3, [r7, #12]
 8003304:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003306:	3b01      	subs	r3, #1
 8003308:	b29a      	uxth	r2, r3
 800330a:	68fb      	ldr	r3, [r7, #12]
 800330c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800330e:	68fb      	ldr	r3, [r7, #12]
 8003310:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003312:	b29b      	uxth	r3, r3
 8003314:	3b01      	subs	r3, #1
 8003316:	b29a      	uxth	r2, r3
 8003318:	68fb      	ldr	r3, [r7, #12]
 800331a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800331c:	68fb      	ldr	r3, [r7, #12]
 800331e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003320:	2b00      	cmp	r3, #0
 8003322:	d1aa      	bne.n	800327a <HAL_I2C_Mem_Write+0xde>
 8003324:	697a      	ldr	r2, [r7, #20]
 8003326:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003328:	68f8      	ldr	r0, [r7, #12]
 800332a:	f000 fe71 	bl	8004010 <I2C_WaitOnBTFFlagUntilTimeout>
 800332e:	4603      	mov	r3, r0
 8003330:	2b00      	cmp	r3, #0
 8003332:	d00d      	beq.n	8003350 <HAL_I2C_Mem_Write+0x1b4>
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003338:	2b04      	cmp	r3, #4
 800333a:	d107      	bne.n	800334c <HAL_I2C_Mem_Write+0x1b0>
 800333c:	68fb      	ldr	r3, [r7, #12]
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	681a      	ldr	r2, [r3, #0]
 8003342:	68fb      	ldr	r3, [r7, #12]
 8003344:	681b      	ldr	r3, [r3, #0]
 8003346:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800334a:	601a      	str	r2, [r3, #0]
 800334c:	2301      	movs	r3, #1
 800334e:	e016      	b.n	800337e <HAL_I2C_Mem_Write+0x1e2>
 8003350:	68fb      	ldr	r3, [r7, #12]
 8003352:	681b      	ldr	r3, [r3, #0]
 8003354:	681a      	ldr	r2, [r3, #0]
 8003356:	68fb      	ldr	r3, [r7, #12]
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800335e:	601a      	str	r2, [r3, #0]
 8003360:	68fb      	ldr	r3, [r7, #12]
 8003362:	2220      	movs	r2, #32
 8003364:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003368:	68fb      	ldr	r3, [r7, #12]
 800336a:	2200      	movs	r2, #0
 800336c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003370:	68fb      	ldr	r3, [r7, #12]
 8003372:	2200      	movs	r2, #0
 8003374:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003378:	2300      	movs	r3, #0
 800337a:	e000      	b.n	800337e <HAL_I2C_Mem_Write+0x1e2>
 800337c:	2302      	movs	r3, #2
 800337e:	4618      	mov	r0, r3
 8003380:	3718      	adds	r7, #24
 8003382:	46bd      	mov	sp, r7
 8003384:	bd80      	pop	{r7, pc}
 8003386:	bf00      	nop
 8003388:	00100002 	.word	0x00100002
 800338c:	ffff0000 	.word	0xffff0000

08003390 <HAL_I2C_Mem_Read>:
 8003390:	b580      	push	{r7, lr}
 8003392:	b08c      	sub	sp, #48	@ 0x30
 8003394:	af02      	add	r7, sp, #8
 8003396:	60f8      	str	r0, [r7, #12]
 8003398:	4608      	mov	r0, r1
 800339a:	4611      	mov	r1, r2
 800339c:	461a      	mov	r2, r3
 800339e:	4603      	mov	r3, r0
 80033a0:	817b      	strh	r3, [r7, #10]
 80033a2:	460b      	mov	r3, r1
 80033a4:	813b      	strh	r3, [r7, #8]
 80033a6:	4613      	mov	r3, r2
 80033a8:	80fb      	strh	r3, [r7, #6]
 80033aa:	f7ff faab 	bl	8002904 <HAL_GetTick>
 80033ae:	6278      	str	r0, [r7, #36]	@ 0x24
 80033b0:	68fb      	ldr	r3, [r7, #12]
 80033b2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80033b6:	b2db      	uxtb	r3, r3
 80033b8:	2b20      	cmp	r3, #32
 80033ba:	f040 8214 	bne.w	80037e6 <HAL_I2C_Mem_Read+0x456>
 80033be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80033c0:	9300      	str	r3, [sp, #0]
 80033c2:	2319      	movs	r3, #25
 80033c4:	2201      	movs	r2, #1
 80033c6:	497b      	ldr	r1, [pc, #492]	@ (80035b4 <HAL_I2C_Mem_Read+0x224>)
 80033c8:	68f8      	ldr	r0, [r7, #12]
 80033ca:	f000 fcbf 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 80033ce:	4603      	mov	r3, r0
 80033d0:	2b00      	cmp	r3, #0
 80033d2:	d001      	beq.n	80033d8 <HAL_I2C_Mem_Read+0x48>
 80033d4:	2302      	movs	r3, #2
 80033d6:	e207      	b.n	80037e8 <HAL_I2C_Mem_Read+0x458>
 80033d8:	68fb      	ldr	r3, [r7, #12]
 80033da:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80033de:	2b01      	cmp	r3, #1
 80033e0:	d101      	bne.n	80033e6 <HAL_I2C_Mem_Read+0x56>
 80033e2:	2302      	movs	r3, #2
 80033e4:	e200      	b.n	80037e8 <HAL_I2C_Mem_Read+0x458>
 80033e6:	68fb      	ldr	r3, [r7, #12]
 80033e8:	2201      	movs	r2, #1
 80033ea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80033ee:	68fb      	ldr	r3, [r7, #12]
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	681b      	ldr	r3, [r3, #0]
 80033f4:	f003 0301 	and.w	r3, r3, #1
 80033f8:	2b01      	cmp	r3, #1
 80033fa:	d007      	beq.n	800340c <HAL_I2C_Mem_Read+0x7c>
 80033fc:	68fb      	ldr	r3, [r7, #12]
 80033fe:	681b      	ldr	r3, [r3, #0]
 8003400:	681a      	ldr	r2, [r3, #0]
 8003402:	68fb      	ldr	r3, [r7, #12]
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	f042 0201 	orr.w	r2, r2, #1
 800340a:	601a      	str	r2, [r3, #0]
 800340c:	68fb      	ldr	r3, [r7, #12]
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	681a      	ldr	r2, [r3, #0]
 8003412:	68fb      	ldr	r3, [r7, #12]
 8003414:	681b      	ldr	r3, [r3, #0]
 8003416:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800341a:	601a      	str	r2, [r3, #0]
 800341c:	68fb      	ldr	r3, [r7, #12]
 800341e:	2222      	movs	r2, #34	@ 0x22
 8003420:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003424:	68fb      	ldr	r3, [r7, #12]
 8003426:	2240      	movs	r2, #64	@ 0x40
 8003428:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800342c:	68fb      	ldr	r3, [r7, #12]
 800342e:	2200      	movs	r2, #0
 8003430:	641a      	str	r2, [r3, #64]	@ 0x40
 8003432:	68fb      	ldr	r3, [r7, #12]
 8003434:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003436:	625a      	str	r2, [r3, #36]	@ 0x24
 8003438:	68fb      	ldr	r3, [r7, #12]
 800343a:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 800343c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800343e:	68fb      	ldr	r3, [r7, #12]
 8003440:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003442:	b29a      	uxth	r2, r3
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003448:	68fb      	ldr	r3, [r7, #12]
 800344a:	4a5b      	ldr	r2, [pc, #364]	@ (80035b8 <HAL_I2C_Mem_Read+0x228>)
 800344c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800344e:	88f8      	ldrh	r0, [r7, #6]
 8003450:	893a      	ldrh	r2, [r7, #8]
 8003452:	8979      	ldrh	r1, [r7, #10]
 8003454:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003456:	9301      	str	r3, [sp, #4]
 8003458:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800345a:	9300      	str	r3, [sp, #0]
 800345c:	4603      	mov	r3, r0
 800345e:	68f8      	ldr	r0, [r7, #12]
 8003460:	f000 fb8c 	bl	8003b7c <I2C_RequestMemoryRead>
 8003464:	4603      	mov	r3, r0
 8003466:	2b00      	cmp	r3, #0
 8003468:	d001      	beq.n	800346e <HAL_I2C_Mem_Read+0xde>
 800346a:	2301      	movs	r3, #1
 800346c:	e1bc      	b.n	80037e8 <HAL_I2C_Mem_Read+0x458>
 800346e:	68fb      	ldr	r3, [r7, #12]
 8003470:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003472:	2b00      	cmp	r3, #0
 8003474:	d113      	bne.n	800349e <HAL_I2C_Mem_Read+0x10e>
 8003476:	2300      	movs	r3, #0
 8003478:	623b      	str	r3, [r7, #32]
 800347a:	68fb      	ldr	r3, [r7, #12]
 800347c:	681b      	ldr	r3, [r3, #0]
 800347e:	695b      	ldr	r3, [r3, #20]
 8003480:	623b      	str	r3, [r7, #32]
 8003482:	68fb      	ldr	r3, [r7, #12]
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	699b      	ldr	r3, [r3, #24]
 8003488:	623b      	str	r3, [r7, #32]
 800348a:	6a3b      	ldr	r3, [r7, #32]
 800348c:	68fb      	ldr	r3, [r7, #12]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	681a      	ldr	r2, [r3, #0]
 8003492:	68fb      	ldr	r3, [r7, #12]
 8003494:	681b      	ldr	r3, [r3, #0]
 8003496:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800349a:	601a      	str	r2, [r3, #0]
 800349c:	e190      	b.n	80037c0 <HAL_I2C_Mem_Read+0x430>
 800349e:	68fb      	ldr	r3, [r7, #12]
 80034a0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034a2:	2b01      	cmp	r3, #1
 80034a4:	d11b      	bne.n	80034de <HAL_I2C_Mem_Read+0x14e>
 80034a6:	68fb      	ldr	r3, [r7, #12]
 80034a8:	681b      	ldr	r3, [r3, #0]
 80034aa:	681a      	ldr	r2, [r3, #0]
 80034ac:	68fb      	ldr	r3, [r7, #12]
 80034ae:	681b      	ldr	r3, [r3, #0]
 80034b0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80034b4:	601a      	str	r2, [r3, #0]
 80034b6:	2300      	movs	r3, #0
 80034b8:	61fb      	str	r3, [r7, #28]
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	681b      	ldr	r3, [r3, #0]
 80034be:	695b      	ldr	r3, [r3, #20]
 80034c0:	61fb      	str	r3, [r7, #28]
 80034c2:	68fb      	ldr	r3, [r7, #12]
 80034c4:	681b      	ldr	r3, [r3, #0]
 80034c6:	699b      	ldr	r3, [r3, #24]
 80034c8:	61fb      	str	r3, [r7, #28]
 80034ca:	69fb      	ldr	r3, [r7, #28]
 80034cc:	68fb      	ldr	r3, [r7, #12]
 80034ce:	681b      	ldr	r3, [r3, #0]
 80034d0:	681a      	ldr	r2, [r3, #0]
 80034d2:	68fb      	ldr	r3, [r7, #12]
 80034d4:	681b      	ldr	r3, [r3, #0]
 80034d6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80034da:	601a      	str	r2, [r3, #0]
 80034dc:	e170      	b.n	80037c0 <HAL_I2C_Mem_Read+0x430>
 80034de:	68fb      	ldr	r3, [r7, #12]
 80034e0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034e2:	2b02      	cmp	r3, #2
 80034e4:	d11b      	bne.n	800351e <HAL_I2C_Mem_Read+0x18e>
 80034e6:	68fb      	ldr	r3, [r7, #12]
 80034e8:	681b      	ldr	r3, [r3, #0]
 80034ea:	681a      	ldr	r2, [r3, #0]
 80034ec:	68fb      	ldr	r3, [r7, #12]
 80034ee:	681b      	ldr	r3, [r3, #0]
 80034f0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80034f4:	601a      	str	r2, [r3, #0]
 80034f6:	68fb      	ldr	r3, [r7, #12]
 80034f8:	681b      	ldr	r3, [r3, #0]
 80034fa:	681a      	ldr	r2, [r3, #0]
 80034fc:	68fb      	ldr	r3, [r7, #12]
 80034fe:	681b      	ldr	r3, [r3, #0]
 8003500:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003504:	601a      	str	r2, [r3, #0]
 8003506:	2300      	movs	r3, #0
 8003508:	61bb      	str	r3, [r7, #24]
 800350a:	68fb      	ldr	r3, [r7, #12]
 800350c:	681b      	ldr	r3, [r3, #0]
 800350e:	695b      	ldr	r3, [r3, #20]
 8003510:	61bb      	str	r3, [r7, #24]
 8003512:	68fb      	ldr	r3, [r7, #12]
 8003514:	681b      	ldr	r3, [r3, #0]
 8003516:	699b      	ldr	r3, [r3, #24]
 8003518:	61bb      	str	r3, [r7, #24]
 800351a:	69bb      	ldr	r3, [r7, #24]
 800351c:	e150      	b.n	80037c0 <HAL_I2C_Mem_Read+0x430>
 800351e:	2300      	movs	r3, #0
 8003520:	617b      	str	r3, [r7, #20]
 8003522:	68fb      	ldr	r3, [r7, #12]
 8003524:	681b      	ldr	r3, [r3, #0]
 8003526:	695b      	ldr	r3, [r3, #20]
 8003528:	617b      	str	r3, [r7, #20]
 800352a:	68fb      	ldr	r3, [r7, #12]
 800352c:	681b      	ldr	r3, [r3, #0]
 800352e:	699b      	ldr	r3, [r3, #24]
 8003530:	617b      	str	r3, [r7, #20]
 8003532:	697b      	ldr	r3, [r7, #20]
 8003534:	e144      	b.n	80037c0 <HAL_I2C_Mem_Read+0x430>
 8003536:	68fb      	ldr	r3, [r7, #12]
 8003538:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800353a:	2b03      	cmp	r3, #3
 800353c:	f200 80f1 	bhi.w	8003722 <HAL_I2C_Mem_Read+0x392>
 8003540:	68fb      	ldr	r3, [r7, #12]
 8003542:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003544:	2b01      	cmp	r3, #1
 8003546:	d123      	bne.n	8003590 <HAL_I2C_Mem_Read+0x200>
 8003548:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800354a:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800354c:	68f8      	ldr	r0, [r7, #12]
 800354e:	f000 fda7 	bl	80040a0 <I2C_WaitOnRXNEFlagUntilTimeout>
 8003552:	4603      	mov	r3, r0
 8003554:	2b00      	cmp	r3, #0
 8003556:	d001      	beq.n	800355c <HAL_I2C_Mem_Read+0x1cc>
 8003558:	2301      	movs	r3, #1
 800355a:	e145      	b.n	80037e8 <HAL_I2C_Mem_Read+0x458>
 800355c:	68fb      	ldr	r3, [r7, #12]
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	691a      	ldr	r2, [r3, #16]
 8003562:	68fb      	ldr	r3, [r7, #12]
 8003564:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003566:	b2d2      	uxtb	r2, r2
 8003568:	701a      	strb	r2, [r3, #0]
 800356a:	68fb      	ldr	r3, [r7, #12]
 800356c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800356e:	1c5a      	adds	r2, r3, #1
 8003570:	68fb      	ldr	r3, [r7, #12]
 8003572:	625a      	str	r2, [r3, #36]	@ 0x24
 8003574:	68fb      	ldr	r3, [r7, #12]
 8003576:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003578:	3b01      	subs	r3, #1
 800357a:	b29a      	uxth	r2, r3
 800357c:	68fb      	ldr	r3, [r7, #12]
 800357e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003580:	68fb      	ldr	r3, [r7, #12]
 8003582:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003584:	b29b      	uxth	r3, r3
 8003586:	3b01      	subs	r3, #1
 8003588:	b29a      	uxth	r2, r3
 800358a:	68fb      	ldr	r3, [r7, #12]
 800358c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800358e:	e117      	b.n	80037c0 <HAL_I2C_Mem_Read+0x430>
 8003590:	68fb      	ldr	r3, [r7, #12]
 8003592:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003594:	2b02      	cmp	r3, #2
 8003596:	d14e      	bne.n	8003636 <HAL_I2C_Mem_Read+0x2a6>
 8003598:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800359a:	9300      	str	r3, [sp, #0]
 800359c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800359e:	2200      	movs	r2, #0
 80035a0:	4906      	ldr	r1, [pc, #24]	@ (80035bc <HAL_I2C_Mem_Read+0x22c>)
 80035a2:	68f8      	ldr	r0, [r7, #12]
 80035a4:	f000 fbd2 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 80035a8:	4603      	mov	r3, r0
 80035aa:	2b00      	cmp	r3, #0
 80035ac:	d008      	beq.n	80035c0 <HAL_I2C_Mem_Read+0x230>
 80035ae:	2301      	movs	r3, #1
 80035b0:	e11a      	b.n	80037e8 <HAL_I2C_Mem_Read+0x458>
 80035b2:	bf00      	nop
 80035b4:	00100002 	.word	0x00100002
 80035b8:	ffff0000 	.word	0xffff0000
 80035bc:	00010004 	.word	0x00010004
 80035c0:	68fb      	ldr	r3, [r7, #12]
 80035c2:	681b      	ldr	r3, [r3, #0]
 80035c4:	681a      	ldr	r2, [r3, #0]
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80035ce:	601a      	str	r2, [r3, #0]
 80035d0:	68fb      	ldr	r3, [r7, #12]
 80035d2:	681b      	ldr	r3, [r3, #0]
 80035d4:	691a      	ldr	r2, [r3, #16]
 80035d6:	68fb      	ldr	r3, [r7, #12]
 80035d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035da:	b2d2      	uxtb	r2, r2
 80035dc:	701a      	strb	r2, [r3, #0]
 80035de:	68fb      	ldr	r3, [r7, #12]
 80035e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035e2:	1c5a      	adds	r2, r3, #1
 80035e4:	68fb      	ldr	r3, [r7, #12]
 80035e6:	625a      	str	r2, [r3, #36]	@ 0x24
 80035e8:	68fb      	ldr	r3, [r7, #12]
 80035ea:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80035ec:	3b01      	subs	r3, #1
 80035ee:	b29a      	uxth	r2, r3
 80035f0:	68fb      	ldr	r3, [r7, #12]
 80035f2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80035f4:	68fb      	ldr	r3, [r7, #12]
 80035f6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80035f8:	b29b      	uxth	r3, r3
 80035fa:	3b01      	subs	r3, #1
 80035fc:	b29a      	uxth	r2, r3
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003602:	68fb      	ldr	r3, [r7, #12]
 8003604:	681b      	ldr	r3, [r3, #0]
 8003606:	691a      	ldr	r2, [r3, #16]
 8003608:	68fb      	ldr	r3, [r7, #12]
 800360a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800360c:	b2d2      	uxtb	r2, r2
 800360e:	701a      	strb	r2, [r3, #0]
 8003610:	68fb      	ldr	r3, [r7, #12]
 8003612:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003614:	1c5a      	adds	r2, r3, #1
 8003616:	68fb      	ldr	r3, [r7, #12]
 8003618:	625a      	str	r2, [r3, #36]	@ 0x24
 800361a:	68fb      	ldr	r3, [r7, #12]
 800361c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800361e:	3b01      	subs	r3, #1
 8003620:	b29a      	uxth	r2, r3
 8003622:	68fb      	ldr	r3, [r7, #12]
 8003624:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003626:	68fb      	ldr	r3, [r7, #12]
 8003628:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800362a:	b29b      	uxth	r3, r3
 800362c:	3b01      	subs	r3, #1
 800362e:	b29a      	uxth	r2, r3
 8003630:	68fb      	ldr	r3, [r7, #12]
 8003632:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003634:	e0c4      	b.n	80037c0 <HAL_I2C_Mem_Read+0x430>
 8003636:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003638:	9300      	str	r3, [sp, #0]
 800363a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800363c:	2200      	movs	r2, #0
 800363e:	496c      	ldr	r1, [pc, #432]	@ (80037f0 <HAL_I2C_Mem_Read+0x460>)
 8003640:	68f8      	ldr	r0, [r7, #12]
 8003642:	f000 fb83 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 8003646:	4603      	mov	r3, r0
 8003648:	2b00      	cmp	r3, #0
 800364a:	d001      	beq.n	8003650 <HAL_I2C_Mem_Read+0x2c0>
 800364c:	2301      	movs	r3, #1
 800364e:	e0cb      	b.n	80037e8 <HAL_I2C_Mem_Read+0x458>
 8003650:	68fb      	ldr	r3, [r7, #12]
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	681a      	ldr	r2, [r3, #0]
 8003656:	68fb      	ldr	r3, [r7, #12]
 8003658:	681b      	ldr	r3, [r3, #0]
 800365a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800365e:	601a      	str	r2, [r3, #0]
 8003660:	68fb      	ldr	r3, [r7, #12]
 8003662:	681b      	ldr	r3, [r3, #0]
 8003664:	691a      	ldr	r2, [r3, #16]
 8003666:	68fb      	ldr	r3, [r7, #12]
 8003668:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800366a:	b2d2      	uxtb	r2, r2
 800366c:	701a      	strb	r2, [r3, #0]
 800366e:	68fb      	ldr	r3, [r7, #12]
 8003670:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003672:	1c5a      	adds	r2, r3, #1
 8003674:	68fb      	ldr	r3, [r7, #12]
 8003676:	625a      	str	r2, [r3, #36]	@ 0x24
 8003678:	68fb      	ldr	r3, [r7, #12]
 800367a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800367c:	3b01      	subs	r3, #1
 800367e:	b29a      	uxth	r2, r3
 8003680:	68fb      	ldr	r3, [r7, #12]
 8003682:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003684:	68fb      	ldr	r3, [r7, #12]
 8003686:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003688:	b29b      	uxth	r3, r3
 800368a:	3b01      	subs	r3, #1
 800368c:	b29a      	uxth	r2, r3
 800368e:	68fb      	ldr	r3, [r7, #12]
 8003690:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003692:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003694:	9300      	str	r3, [sp, #0]
 8003696:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003698:	2200      	movs	r2, #0
 800369a:	4955      	ldr	r1, [pc, #340]	@ (80037f0 <HAL_I2C_Mem_Read+0x460>)
 800369c:	68f8      	ldr	r0, [r7, #12]
 800369e:	f000 fb55 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 80036a2:	4603      	mov	r3, r0
 80036a4:	2b00      	cmp	r3, #0
 80036a6:	d001      	beq.n	80036ac <HAL_I2C_Mem_Read+0x31c>
 80036a8:	2301      	movs	r3, #1
 80036aa:	e09d      	b.n	80037e8 <HAL_I2C_Mem_Read+0x458>
 80036ac:	68fb      	ldr	r3, [r7, #12]
 80036ae:	681b      	ldr	r3, [r3, #0]
 80036b0:	681a      	ldr	r2, [r3, #0]
 80036b2:	68fb      	ldr	r3, [r7, #12]
 80036b4:	681b      	ldr	r3, [r3, #0]
 80036b6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80036ba:	601a      	str	r2, [r3, #0]
 80036bc:	68fb      	ldr	r3, [r7, #12]
 80036be:	681b      	ldr	r3, [r3, #0]
 80036c0:	691a      	ldr	r2, [r3, #16]
 80036c2:	68fb      	ldr	r3, [r7, #12]
 80036c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036c6:	b2d2      	uxtb	r2, r2
 80036c8:	701a      	strb	r2, [r3, #0]
 80036ca:	68fb      	ldr	r3, [r7, #12]
 80036cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036ce:	1c5a      	adds	r2, r3, #1
 80036d0:	68fb      	ldr	r3, [r7, #12]
 80036d2:	625a      	str	r2, [r3, #36]	@ 0x24
 80036d4:	68fb      	ldr	r3, [r7, #12]
 80036d6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80036d8:	3b01      	subs	r3, #1
 80036da:	b29a      	uxth	r2, r3
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	851a      	strh	r2, [r3, #40]	@ 0x28
 80036e0:	68fb      	ldr	r3, [r7, #12]
 80036e2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80036e4:	b29b      	uxth	r3, r3
 80036e6:	3b01      	subs	r3, #1
 80036e8:	b29a      	uxth	r2, r3
 80036ea:	68fb      	ldr	r3, [r7, #12]
 80036ec:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80036ee:	68fb      	ldr	r3, [r7, #12]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	691a      	ldr	r2, [r3, #16]
 80036f4:	68fb      	ldr	r3, [r7, #12]
 80036f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036f8:	b2d2      	uxtb	r2, r2
 80036fa:	701a      	strb	r2, [r3, #0]
 80036fc:	68fb      	ldr	r3, [r7, #12]
 80036fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003700:	1c5a      	adds	r2, r3, #1
 8003702:	68fb      	ldr	r3, [r7, #12]
 8003704:	625a      	str	r2, [r3, #36]	@ 0x24
 8003706:	68fb      	ldr	r3, [r7, #12]
 8003708:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800370a:	3b01      	subs	r3, #1
 800370c:	b29a      	uxth	r2, r3
 800370e:	68fb      	ldr	r3, [r7, #12]
 8003710:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003712:	68fb      	ldr	r3, [r7, #12]
 8003714:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003716:	b29b      	uxth	r3, r3
 8003718:	3b01      	subs	r3, #1
 800371a:	b29a      	uxth	r2, r3
 800371c:	68fb      	ldr	r3, [r7, #12]
 800371e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003720:	e04e      	b.n	80037c0 <HAL_I2C_Mem_Read+0x430>
 8003722:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003724:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8003726:	68f8      	ldr	r0, [r7, #12]
 8003728:	f000 fcba 	bl	80040a0 <I2C_WaitOnRXNEFlagUntilTimeout>
 800372c:	4603      	mov	r3, r0
 800372e:	2b00      	cmp	r3, #0
 8003730:	d001      	beq.n	8003736 <HAL_I2C_Mem_Read+0x3a6>
 8003732:	2301      	movs	r3, #1
 8003734:	e058      	b.n	80037e8 <HAL_I2C_Mem_Read+0x458>
 8003736:	68fb      	ldr	r3, [r7, #12]
 8003738:	681b      	ldr	r3, [r3, #0]
 800373a:	691a      	ldr	r2, [r3, #16]
 800373c:	68fb      	ldr	r3, [r7, #12]
 800373e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003740:	b2d2      	uxtb	r2, r2
 8003742:	701a      	strb	r2, [r3, #0]
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003748:	1c5a      	adds	r2, r3, #1
 800374a:	68fb      	ldr	r3, [r7, #12]
 800374c:	625a      	str	r2, [r3, #36]	@ 0x24
 800374e:	68fb      	ldr	r3, [r7, #12]
 8003750:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003752:	3b01      	subs	r3, #1
 8003754:	b29a      	uxth	r2, r3
 8003756:	68fb      	ldr	r3, [r7, #12]
 8003758:	851a      	strh	r2, [r3, #40]	@ 0x28
 800375a:	68fb      	ldr	r3, [r7, #12]
 800375c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800375e:	b29b      	uxth	r3, r3
 8003760:	3b01      	subs	r3, #1
 8003762:	b29a      	uxth	r2, r3
 8003764:	68fb      	ldr	r3, [r7, #12]
 8003766:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003768:	68fb      	ldr	r3, [r7, #12]
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	695b      	ldr	r3, [r3, #20]
 800376e:	f003 0304 	and.w	r3, r3, #4
 8003772:	2b04      	cmp	r3, #4
 8003774:	d124      	bne.n	80037c0 <HAL_I2C_Mem_Read+0x430>
 8003776:	68fb      	ldr	r3, [r7, #12]
 8003778:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800377a:	2b03      	cmp	r3, #3
 800377c:	d107      	bne.n	800378e <HAL_I2C_Mem_Read+0x3fe>
 800377e:	68fb      	ldr	r3, [r7, #12]
 8003780:	681b      	ldr	r3, [r3, #0]
 8003782:	681a      	ldr	r2, [r3, #0]
 8003784:	68fb      	ldr	r3, [r7, #12]
 8003786:	681b      	ldr	r3, [r3, #0]
 8003788:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800378c:	601a      	str	r2, [r3, #0]
 800378e:	68fb      	ldr	r3, [r7, #12]
 8003790:	681b      	ldr	r3, [r3, #0]
 8003792:	691a      	ldr	r2, [r3, #16]
 8003794:	68fb      	ldr	r3, [r7, #12]
 8003796:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003798:	b2d2      	uxtb	r2, r2
 800379a:	701a      	strb	r2, [r3, #0]
 800379c:	68fb      	ldr	r3, [r7, #12]
 800379e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80037a0:	1c5a      	adds	r2, r3, #1
 80037a2:	68fb      	ldr	r3, [r7, #12]
 80037a4:	625a      	str	r2, [r3, #36]	@ 0x24
 80037a6:	68fb      	ldr	r3, [r7, #12]
 80037a8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80037aa:	3b01      	subs	r3, #1
 80037ac:	b29a      	uxth	r2, r3
 80037ae:	68fb      	ldr	r3, [r7, #12]
 80037b0:	851a      	strh	r2, [r3, #40]	@ 0x28
 80037b2:	68fb      	ldr	r3, [r7, #12]
 80037b4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80037b6:	b29b      	uxth	r3, r3
 80037b8:	3b01      	subs	r3, #1
 80037ba:	b29a      	uxth	r2, r3
 80037bc:	68fb      	ldr	r3, [r7, #12]
 80037be:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80037c0:	68fb      	ldr	r3, [r7, #12]
 80037c2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80037c4:	2b00      	cmp	r3, #0
 80037c6:	f47f aeb6 	bne.w	8003536 <HAL_I2C_Mem_Read+0x1a6>
 80037ca:	68fb      	ldr	r3, [r7, #12]
 80037cc:	2220      	movs	r2, #32
 80037ce:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80037d2:	68fb      	ldr	r3, [r7, #12]
 80037d4:	2200      	movs	r2, #0
 80037d6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80037da:	68fb      	ldr	r3, [r7, #12]
 80037dc:	2200      	movs	r2, #0
 80037de:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80037e2:	2300      	movs	r3, #0
 80037e4:	e000      	b.n	80037e8 <HAL_I2C_Mem_Read+0x458>
 80037e6:	2302      	movs	r3, #2
 80037e8:	4618      	mov	r0, r3
 80037ea:	3728      	adds	r7, #40	@ 0x28
 80037ec:	46bd      	mov	sp, r7
 80037ee:	bd80      	pop	{r7, pc}
 80037f0:	00010004 	.word	0x00010004

080037f4 <HAL_I2C_IsDeviceReady>:
 80037f4:	b580      	push	{r7, lr}
 80037f6:	b08a      	sub	sp, #40	@ 0x28
 80037f8:	af02      	add	r7, sp, #8
 80037fa:	60f8      	str	r0, [r7, #12]
 80037fc:	607a      	str	r2, [r7, #4]
 80037fe:	603b      	str	r3, [r7, #0]
 8003800:	460b      	mov	r3, r1
 8003802:	817b      	strh	r3, [r7, #10]
 8003804:	f7ff f87e 	bl	8002904 <HAL_GetTick>
 8003808:	61f8      	str	r0, [r7, #28]
 800380a:	2300      	movs	r3, #0
 800380c:	61bb      	str	r3, [r7, #24]
 800380e:	68fb      	ldr	r3, [r7, #12]
 8003810:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003814:	b2db      	uxtb	r3, r3
 8003816:	2b20      	cmp	r3, #32
 8003818:	f040 8111 	bne.w	8003a3e <HAL_I2C_IsDeviceReady+0x24a>
 800381c:	69fb      	ldr	r3, [r7, #28]
 800381e:	9300      	str	r3, [sp, #0]
 8003820:	2319      	movs	r3, #25
 8003822:	2201      	movs	r2, #1
 8003824:	4988      	ldr	r1, [pc, #544]	@ (8003a48 <HAL_I2C_IsDeviceReady+0x254>)
 8003826:	68f8      	ldr	r0, [r7, #12]
 8003828:	f000 fa90 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 800382c:	4603      	mov	r3, r0
 800382e:	2b00      	cmp	r3, #0
 8003830:	d001      	beq.n	8003836 <HAL_I2C_IsDeviceReady+0x42>
 8003832:	2302      	movs	r3, #2
 8003834:	e104      	b.n	8003a40 <HAL_I2C_IsDeviceReady+0x24c>
 8003836:	68fb      	ldr	r3, [r7, #12]
 8003838:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800383c:	2b01      	cmp	r3, #1
 800383e:	d101      	bne.n	8003844 <HAL_I2C_IsDeviceReady+0x50>
 8003840:	2302      	movs	r3, #2
 8003842:	e0fd      	b.n	8003a40 <HAL_I2C_IsDeviceReady+0x24c>
 8003844:	68fb      	ldr	r3, [r7, #12]
 8003846:	2201      	movs	r2, #1
 8003848:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800384c:	68fb      	ldr	r3, [r7, #12]
 800384e:	681b      	ldr	r3, [r3, #0]
 8003850:	681b      	ldr	r3, [r3, #0]
 8003852:	f003 0301 	and.w	r3, r3, #1
 8003856:	2b01      	cmp	r3, #1
 8003858:	d007      	beq.n	800386a <HAL_I2C_IsDeviceReady+0x76>
 800385a:	68fb      	ldr	r3, [r7, #12]
 800385c:	681b      	ldr	r3, [r3, #0]
 800385e:	681a      	ldr	r2, [r3, #0]
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	f042 0201 	orr.w	r2, r2, #1
 8003868:	601a      	str	r2, [r3, #0]
 800386a:	68fb      	ldr	r3, [r7, #12]
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	681a      	ldr	r2, [r3, #0]
 8003870:	68fb      	ldr	r3, [r7, #12]
 8003872:	681b      	ldr	r3, [r3, #0]
 8003874:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003878:	601a      	str	r2, [r3, #0]
 800387a:	68fb      	ldr	r3, [r7, #12]
 800387c:	2224      	movs	r2, #36	@ 0x24
 800387e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003882:	68fb      	ldr	r3, [r7, #12]
 8003884:	2200      	movs	r2, #0
 8003886:	641a      	str	r2, [r3, #64]	@ 0x40
 8003888:	68fb      	ldr	r3, [r7, #12]
 800388a:	4a70      	ldr	r2, [pc, #448]	@ (8003a4c <HAL_I2C_IsDeviceReady+0x258>)
 800388c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800388e:	68fb      	ldr	r3, [r7, #12]
 8003890:	681b      	ldr	r3, [r3, #0]
 8003892:	681a      	ldr	r2, [r3, #0]
 8003894:	68fb      	ldr	r3, [r7, #12]
 8003896:	681b      	ldr	r3, [r3, #0]
 8003898:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800389c:	601a      	str	r2, [r3, #0]
 800389e:	69fb      	ldr	r3, [r7, #28]
 80038a0:	9300      	str	r3, [sp, #0]
 80038a2:	683b      	ldr	r3, [r7, #0]
 80038a4:	2200      	movs	r2, #0
 80038a6:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80038aa:	68f8      	ldr	r0, [r7, #12]
 80038ac:	f000 fa4e 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 80038b0:	4603      	mov	r3, r0
 80038b2:	2b00      	cmp	r3, #0
 80038b4:	d00d      	beq.n	80038d2 <HAL_I2C_IsDeviceReady+0xde>
 80038b6:	68fb      	ldr	r3, [r7, #12]
 80038b8:	681b      	ldr	r3, [r3, #0]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80038c0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80038c4:	d103      	bne.n	80038ce <HAL_I2C_IsDeviceReady+0xda>
 80038c6:	68fb      	ldr	r3, [r7, #12]
 80038c8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80038cc:	641a      	str	r2, [r3, #64]	@ 0x40
 80038ce:	2303      	movs	r3, #3
 80038d0:	e0b6      	b.n	8003a40 <HAL_I2C_IsDeviceReady+0x24c>
 80038d2:	897b      	ldrh	r3, [r7, #10]
 80038d4:	b2db      	uxtb	r3, r3
 80038d6:	461a      	mov	r2, r3
 80038d8:	68fb      	ldr	r3, [r7, #12]
 80038da:	681b      	ldr	r3, [r3, #0]
 80038dc:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 80038e0:	611a      	str	r2, [r3, #16]
 80038e2:	f7ff f80f 	bl	8002904 <HAL_GetTick>
 80038e6:	61f8      	str	r0, [r7, #28]
 80038e8:	68fb      	ldr	r3, [r7, #12]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	695b      	ldr	r3, [r3, #20]
 80038ee:	f003 0302 	and.w	r3, r3, #2
 80038f2:	2b02      	cmp	r3, #2
 80038f4:	bf0c      	ite	eq
 80038f6:	2301      	moveq	r3, #1
 80038f8:	2300      	movne	r3, #0
 80038fa:	b2db      	uxtb	r3, r3
 80038fc:	75fb      	strb	r3, [r7, #23]
 80038fe:	68fb      	ldr	r3, [r7, #12]
 8003900:	681b      	ldr	r3, [r3, #0]
 8003902:	695b      	ldr	r3, [r3, #20]
 8003904:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003908:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800390c:	bf0c      	ite	eq
 800390e:	2301      	moveq	r3, #1
 8003910:	2300      	movne	r3, #0
 8003912:	b2db      	uxtb	r3, r3
 8003914:	75bb      	strb	r3, [r7, #22]
 8003916:	e025      	b.n	8003964 <HAL_I2C_IsDeviceReady+0x170>
 8003918:	f7fe fff4 	bl	8002904 <HAL_GetTick>
 800391c:	4602      	mov	r2, r0
 800391e:	69fb      	ldr	r3, [r7, #28]
 8003920:	1ad3      	subs	r3, r2, r3
 8003922:	683a      	ldr	r2, [r7, #0]
 8003924:	429a      	cmp	r2, r3
 8003926:	d302      	bcc.n	800392e <HAL_I2C_IsDeviceReady+0x13a>
 8003928:	683b      	ldr	r3, [r7, #0]
 800392a:	2b00      	cmp	r3, #0
 800392c:	d103      	bne.n	8003936 <HAL_I2C_IsDeviceReady+0x142>
 800392e:	68fb      	ldr	r3, [r7, #12]
 8003930:	22a0      	movs	r2, #160	@ 0xa0
 8003932:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003936:	68fb      	ldr	r3, [r7, #12]
 8003938:	681b      	ldr	r3, [r3, #0]
 800393a:	695b      	ldr	r3, [r3, #20]
 800393c:	f003 0302 	and.w	r3, r3, #2
 8003940:	2b02      	cmp	r3, #2
 8003942:	bf0c      	ite	eq
 8003944:	2301      	moveq	r3, #1
 8003946:	2300      	movne	r3, #0
 8003948:	b2db      	uxtb	r3, r3
 800394a:	75fb      	strb	r3, [r7, #23]
 800394c:	68fb      	ldr	r3, [r7, #12]
 800394e:	681b      	ldr	r3, [r3, #0]
 8003950:	695b      	ldr	r3, [r3, #20]
 8003952:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003956:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800395a:	bf0c      	ite	eq
 800395c:	2301      	moveq	r3, #1
 800395e:	2300      	movne	r3, #0
 8003960:	b2db      	uxtb	r3, r3
 8003962:	75bb      	strb	r3, [r7, #22]
 8003964:	68fb      	ldr	r3, [r7, #12]
 8003966:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800396a:	b2db      	uxtb	r3, r3
 800396c:	2ba0      	cmp	r3, #160	@ 0xa0
 800396e:	d005      	beq.n	800397c <HAL_I2C_IsDeviceReady+0x188>
 8003970:	7dfb      	ldrb	r3, [r7, #23]
 8003972:	2b00      	cmp	r3, #0
 8003974:	d102      	bne.n	800397c <HAL_I2C_IsDeviceReady+0x188>
 8003976:	7dbb      	ldrb	r3, [r7, #22]
 8003978:	2b00      	cmp	r3, #0
 800397a:	d0cd      	beq.n	8003918 <HAL_I2C_IsDeviceReady+0x124>
 800397c:	68fb      	ldr	r3, [r7, #12]
 800397e:	2220      	movs	r2, #32
 8003980:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003984:	68fb      	ldr	r3, [r7, #12]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	695b      	ldr	r3, [r3, #20]
 800398a:	f003 0302 	and.w	r3, r3, #2
 800398e:	2b02      	cmp	r3, #2
 8003990:	d129      	bne.n	80039e6 <HAL_I2C_IsDeviceReady+0x1f2>
 8003992:	68fb      	ldr	r3, [r7, #12]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	681a      	ldr	r2, [r3, #0]
 8003998:	68fb      	ldr	r3, [r7, #12]
 800399a:	681b      	ldr	r3, [r3, #0]
 800399c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80039a0:	601a      	str	r2, [r3, #0]
 80039a2:	2300      	movs	r3, #0
 80039a4:	613b      	str	r3, [r7, #16]
 80039a6:	68fb      	ldr	r3, [r7, #12]
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	695b      	ldr	r3, [r3, #20]
 80039ac:	613b      	str	r3, [r7, #16]
 80039ae:	68fb      	ldr	r3, [r7, #12]
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	699b      	ldr	r3, [r3, #24]
 80039b4:	613b      	str	r3, [r7, #16]
 80039b6:	693b      	ldr	r3, [r7, #16]
 80039b8:	69fb      	ldr	r3, [r7, #28]
 80039ba:	9300      	str	r3, [sp, #0]
 80039bc:	2319      	movs	r3, #25
 80039be:	2201      	movs	r2, #1
 80039c0:	4921      	ldr	r1, [pc, #132]	@ (8003a48 <HAL_I2C_IsDeviceReady+0x254>)
 80039c2:	68f8      	ldr	r0, [r7, #12]
 80039c4:	f000 f9c2 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 80039c8:	4603      	mov	r3, r0
 80039ca:	2b00      	cmp	r3, #0
 80039cc:	d001      	beq.n	80039d2 <HAL_I2C_IsDeviceReady+0x1de>
 80039ce:	2301      	movs	r3, #1
 80039d0:	e036      	b.n	8003a40 <HAL_I2C_IsDeviceReady+0x24c>
 80039d2:	68fb      	ldr	r3, [r7, #12]
 80039d4:	2220      	movs	r2, #32
 80039d6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80039da:	68fb      	ldr	r3, [r7, #12]
 80039dc:	2200      	movs	r2, #0
 80039de:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80039e2:	2300      	movs	r3, #0
 80039e4:	e02c      	b.n	8003a40 <HAL_I2C_IsDeviceReady+0x24c>
 80039e6:	68fb      	ldr	r3, [r7, #12]
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	681a      	ldr	r2, [r3, #0]
 80039ec:	68fb      	ldr	r3, [r7, #12]
 80039ee:	681b      	ldr	r3, [r3, #0]
 80039f0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80039f4:	601a      	str	r2, [r3, #0]
 80039f6:	68fb      	ldr	r3, [r7, #12]
 80039f8:	681b      	ldr	r3, [r3, #0]
 80039fa:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80039fe:	615a      	str	r2, [r3, #20]
 8003a00:	69fb      	ldr	r3, [r7, #28]
 8003a02:	9300      	str	r3, [sp, #0]
 8003a04:	2319      	movs	r3, #25
 8003a06:	2201      	movs	r2, #1
 8003a08:	490f      	ldr	r1, [pc, #60]	@ (8003a48 <HAL_I2C_IsDeviceReady+0x254>)
 8003a0a:	68f8      	ldr	r0, [r7, #12]
 8003a0c:	f000 f99e 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 8003a10:	4603      	mov	r3, r0
 8003a12:	2b00      	cmp	r3, #0
 8003a14:	d001      	beq.n	8003a1a <HAL_I2C_IsDeviceReady+0x226>
 8003a16:	2301      	movs	r3, #1
 8003a18:	e012      	b.n	8003a40 <HAL_I2C_IsDeviceReady+0x24c>
 8003a1a:	69bb      	ldr	r3, [r7, #24]
 8003a1c:	3301      	adds	r3, #1
 8003a1e:	61bb      	str	r3, [r7, #24]
 8003a20:	69ba      	ldr	r2, [r7, #24]
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	429a      	cmp	r2, r3
 8003a26:	f4ff af32 	bcc.w	800388e <HAL_I2C_IsDeviceReady+0x9a>
 8003a2a:	68fb      	ldr	r3, [r7, #12]
 8003a2c:	2220      	movs	r2, #32
 8003a2e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003a32:	68fb      	ldr	r3, [r7, #12]
 8003a34:	2200      	movs	r2, #0
 8003a36:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003a3a:	2301      	movs	r3, #1
 8003a3c:	e000      	b.n	8003a40 <HAL_I2C_IsDeviceReady+0x24c>
 8003a3e:	2302      	movs	r3, #2
 8003a40:	4618      	mov	r0, r3
 8003a42:	3720      	adds	r7, #32
 8003a44:	46bd      	mov	sp, r7
 8003a46:	bd80      	pop	{r7, pc}
 8003a48:	00100002 	.word	0x00100002
 8003a4c:	ffff0000 	.word	0xffff0000

08003a50 <I2C_RequestMemoryWrite>:
 8003a50:	b580      	push	{r7, lr}
 8003a52:	b088      	sub	sp, #32
 8003a54:	af02      	add	r7, sp, #8
 8003a56:	60f8      	str	r0, [r7, #12]
 8003a58:	4608      	mov	r0, r1
 8003a5a:	4611      	mov	r1, r2
 8003a5c:	461a      	mov	r2, r3
 8003a5e:	4603      	mov	r3, r0
 8003a60:	817b      	strh	r3, [r7, #10]
 8003a62:	460b      	mov	r3, r1
 8003a64:	813b      	strh	r3, [r7, #8]
 8003a66:	4613      	mov	r3, r2
 8003a68:	80fb      	strh	r3, [r7, #6]
 8003a6a:	68fb      	ldr	r3, [r7, #12]
 8003a6c:	681b      	ldr	r3, [r3, #0]
 8003a6e:	681a      	ldr	r2, [r3, #0]
 8003a70:	68fb      	ldr	r3, [r7, #12]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003a78:	601a      	str	r2, [r3, #0]
 8003a7a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003a7c:	9300      	str	r3, [sp, #0]
 8003a7e:	6a3b      	ldr	r3, [r7, #32]
 8003a80:	2200      	movs	r2, #0
 8003a82:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003a86:	68f8      	ldr	r0, [r7, #12]
 8003a88:	f000 f960 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 8003a8c:	4603      	mov	r3, r0
 8003a8e:	2b00      	cmp	r3, #0
 8003a90:	d00d      	beq.n	8003aae <I2C_RequestMemoryWrite+0x5e>
 8003a92:	68fb      	ldr	r3, [r7, #12]
 8003a94:	681b      	ldr	r3, [r3, #0]
 8003a96:	681b      	ldr	r3, [r3, #0]
 8003a98:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003a9c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003aa0:	d103      	bne.n	8003aaa <I2C_RequestMemoryWrite+0x5a>
 8003aa2:	68fb      	ldr	r3, [r7, #12]
 8003aa4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003aa8:	641a      	str	r2, [r3, #64]	@ 0x40
 8003aaa:	2303      	movs	r3, #3
 8003aac:	e05f      	b.n	8003b6e <I2C_RequestMemoryWrite+0x11e>
 8003aae:	897b      	ldrh	r3, [r7, #10]
 8003ab0:	b2db      	uxtb	r3, r3
 8003ab2:	461a      	mov	r2, r3
 8003ab4:	68fb      	ldr	r3, [r7, #12]
 8003ab6:	681b      	ldr	r3, [r3, #0]
 8003ab8:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8003abc:	611a      	str	r2, [r3, #16]
 8003abe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003ac0:	6a3a      	ldr	r2, [r7, #32]
 8003ac2:	492d      	ldr	r1, [pc, #180]	@ (8003b78 <I2C_RequestMemoryWrite+0x128>)
 8003ac4:	68f8      	ldr	r0, [r7, #12]
 8003ac6:	f000 f9bb 	bl	8003e40 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003aca:	4603      	mov	r3, r0
 8003acc:	2b00      	cmp	r3, #0
 8003ace:	d001      	beq.n	8003ad4 <I2C_RequestMemoryWrite+0x84>
 8003ad0:	2301      	movs	r3, #1
 8003ad2:	e04c      	b.n	8003b6e <I2C_RequestMemoryWrite+0x11e>
 8003ad4:	2300      	movs	r3, #0
 8003ad6:	617b      	str	r3, [r7, #20]
 8003ad8:	68fb      	ldr	r3, [r7, #12]
 8003ada:	681b      	ldr	r3, [r3, #0]
 8003adc:	695b      	ldr	r3, [r3, #20]
 8003ade:	617b      	str	r3, [r7, #20]
 8003ae0:	68fb      	ldr	r3, [r7, #12]
 8003ae2:	681b      	ldr	r3, [r3, #0]
 8003ae4:	699b      	ldr	r3, [r3, #24]
 8003ae6:	617b      	str	r3, [r7, #20]
 8003ae8:	697b      	ldr	r3, [r7, #20]
 8003aea:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003aec:	6a39      	ldr	r1, [r7, #32]
 8003aee:	68f8      	ldr	r0, [r7, #12]
 8003af0:	f000 fa46 	bl	8003f80 <I2C_WaitOnTXEFlagUntilTimeout>
 8003af4:	4603      	mov	r3, r0
 8003af6:	2b00      	cmp	r3, #0
 8003af8:	d00d      	beq.n	8003b16 <I2C_RequestMemoryWrite+0xc6>
 8003afa:	68fb      	ldr	r3, [r7, #12]
 8003afc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003afe:	2b04      	cmp	r3, #4
 8003b00:	d107      	bne.n	8003b12 <I2C_RequestMemoryWrite+0xc2>
 8003b02:	68fb      	ldr	r3, [r7, #12]
 8003b04:	681b      	ldr	r3, [r3, #0]
 8003b06:	681a      	ldr	r2, [r3, #0]
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	681b      	ldr	r3, [r3, #0]
 8003b0c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003b10:	601a      	str	r2, [r3, #0]
 8003b12:	2301      	movs	r3, #1
 8003b14:	e02b      	b.n	8003b6e <I2C_RequestMemoryWrite+0x11e>
 8003b16:	88fb      	ldrh	r3, [r7, #6]
 8003b18:	2b01      	cmp	r3, #1
 8003b1a:	d105      	bne.n	8003b28 <I2C_RequestMemoryWrite+0xd8>
 8003b1c:	893b      	ldrh	r3, [r7, #8]
 8003b1e:	b2da      	uxtb	r2, r3
 8003b20:	68fb      	ldr	r3, [r7, #12]
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	611a      	str	r2, [r3, #16]
 8003b26:	e021      	b.n	8003b6c <I2C_RequestMemoryWrite+0x11c>
 8003b28:	893b      	ldrh	r3, [r7, #8]
 8003b2a:	0a1b      	lsrs	r3, r3, #8
 8003b2c:	b29b      	uxth	r3, r3
 8003b2e:	b2da      	uxtb	r2, r3
 8003b30:	68fb      	ldr	r3, [r7, #12]
 8003b32:	681b      	ldr	r3, [r3, #0]
 8003b34:	611a      	str	r2, [r3, #16]
 8003b36:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003b38:	6a39      	ldr	r1, [r7, #32]
 8003b3a:	68f8      	ldr	r0, [r7, #12]
 8003b3c:	f000 fa20 	bl	8003f80 <I2C_WaitOnTXEFlagUntilTimeout>
 8003b40:	4603      	mov	r3, r0
 8003b42:	2b00      	cmp	r3, #0
 8003b44:	d00d      	beq.n	8003b62 <I2C_RequestMemoryWrite+0x112>
 8003b46:	68fb      	ldr	r3, [r7, #12]
 8003b48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b4a:	2b04      	cmp	r3, #4
 8003b4c:	d107      	bne.n	8003b5e <I2C_RequestMemoryWrite+0x10e>
 8003b4e:	68fb      	ldr	r3, [r7, #12]
 8003b50:	681b      	ldr	r3, [r3, #0]
 8003b52:	681a      	ldr	r2, [r3, #0]
 8003b54:	68fb      	ldr	r3, [r7, #12]
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003b5c:	601a      	str	r2, [r3, #0]
 8003b5e:	2301      	movs	r3, #1
 8003b60:	e005      	b.n	8003b6e <I2C_RequestMemoryWrite+0x11e>
 8003b62:	893b      	ldrh	r3, [r7, #8]
 8003b64:	b2da      	uxtb	r2, r3
 8003b66:	68fb      	ldr	r3, [r7, #12]
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	611a      	str	r2, [r3, #16]
 8003b6c:	2300      	movs	r3, #0
 8003b6e:	4618      	mov	r0, r3
 8003b70:	3718      	adds	r7, #24
 8003b72:	46bd      	mov	sp, r7
 8003b74:	bd80      	pop	{r7, pc}
 8003b76:	bf00      	nop
 8003b78:	00010002 	.word	0x00010002

08003b7c <I2C_RequestMemoryRead>:
 8003b7c:	b580      	push	{r7, lr}
 8003b7e:	b088      	sub	sp, #32
 8003b80:	af02      	add	r7, sp, #8
 8003b82:	60f8      	str	r0, [r7, #12]
 8003b84:	4608      	mov	r0, r1
 8003b86:	4611      	mov	r1, r2
 8003b88:	461a      	mov	r2, r3
 8003b8a:	4603      	mov	r3, r0
 8003b8c:	817b      	strh	r3, [r7, #10]
 8003b8e:	460b      	mov	r3, r1
 8003b90:	813b      	strh	r3, [r7, #8]
 8003b92:	4613      	mov	r3, r2
 8003b94:	80fb      	strh	r3, [r7, #6]
 8003b96:	68fb      	ldr	r3, [r7, #12]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	681a      	ldr	r2, [r3, #0]
 8003b9c:	68fb      	ldr	r3, [r7, #12]
 8003b9e:	681b      	ldr	r3, [r3, #0]
 8003ba0:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003ba4:	601a      	str	r2, [r3, #0]
 8003ba6:	68fb      	ldr	r3, [r7, #12]
 8003ba8:	681b      	ldr	r3, [r3, #0]
 8003baa:	681a      	ldr	r2, [r3, #0]
 8003bac:	68fb      	ldr	r3, [r7, #12]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003bb4:	601a      	str	r2, [r3, #0]
 8003bb6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003bb8:	9300      	str	r3, [sp, #0]
 8003bba:	6a3b      	ldr	r3, [r7, #32]
 8003bbc:	2200      	movs	r2, #0
 8003bbe:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003bc2:	68f8      	ldr	r0, [r7, #12]
 8003bc4:	f000 f8c2 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 8003bc8:	4603      	mov	r3, r0
 8003bca:	2b00      	cmp	r3, #0
 8003bcc:	d00d      	beq.n	8003bea <I2C_RequestMemoryRead+0x6e>
 8003bce:	68fb      	ldr	r3, [r7, #12]
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	681b      	ldr	r3, [r3, #0]
 8003bd4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003bd8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003bdc:	d103      	bne.n	8003be6 <I2C_RequestMemoryRead+0x6a>
 8003bde:	68fb      	ldr	r3, [r7, #12]
 8003be0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003be4:	641a      	str	r2, [r3, #64]	@ 0x40
 8003be6:	2303      	movs	r3, #3
 8003be8:	e0aa      	b.n	8003d40 <I2C_RequestMemoryRead+0x1c4>
 8003bea:	897b      	ldrh	r3, [r7, #10]
 8003bec:	b2db      	uxtb	r3, r3
 8003bee:	461a      	mov	r2, r3
 8003bf0:	68fb      	ldr	r3, [r7, #12]
 8003bf2:	681b      	ldr	r3, [r3, #0]
 8003bf4:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8003bf8:	611a      	str	r2, [r3, #16]
 8003bfa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003bfc:	6a3a      	ldr	r2, [r7, #32]
 8003bfe:	4952      	ldr	r1, [pc, #328]	@ (8003d48 <I2C_RequestMemoryRead+0x1cc>)
 8003c00:	68f8      	ldr	r0, [r7, #12]
 8003c02:	f000 f91d 	bl	8003e40 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003c06:	4603      	mov	r3, r0
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	d001      	beq.n	8003c10 <I2C_RequestMemoryRead+0x94>
 8003c0c:	2301      	movs	r3, #1
 8003c0e:	e097      	b.n	8003d40 <I2C_RequestMemoryRead+0x1c4>
 8003c10:	2300      	movs	r3, #0
 8003c12:	617b      	str	r3, [r7, #20]
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	681b      	ldr	r3, [r3, #0]
 8003c18:	695b      	ldr	r3, [r3, #20]
 8003c1a:	617b      	str	r3, [r7, #20]
 8003c1c:	68fb      	ldr	r3, [r7, #12]
 8003c1e:	681b      	ldr	r3, [r3, #0]
 8003c20:	699b      	ldr	r3, [r3, #24]
 8003c22:	617b      	str	r3, [r7, #20]
 8003c24:	697b      	ldr	r3, [r7, #20]
 8003c26:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003c28:	6a39      	ldr	r1, [r7, #32]
 8003c2a:	68f8      	ldr	r0, [r7, #12]
 8003c2c:	f000 f9a8 	bl	8003f80 <I2C_WaitOnTXEFlagUntilTimeout>
 8003c30:	4603      	mov	r3, r0
 8003c32:	2b00      	cmp	r3, #0
 8003c34:	d00d      	beq.n	8003c52 <I2C_RequestMemoryRead+0xd6>
 8003c36:	68fb      	ldr	r3, [r7, #12]
 8003c38:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c3a:	2b04      	cmp	r3, #4
 8003c3c:	d107      	bne.n	8003c4e <I2C_RequestMemoryRead+0xd2>
 8003c3e:	68fb      	ldr	r3, [r7, #12]
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	681a      	ldr	r2, [r3, #0]
 8003c44:	68fb      	ldr	r3, [r7, #12]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003c4c:	601a      	str	r2, [r3, #0]
 8003c4e:	2301      	movs	r3, #1
 8003c50:	e076      	b.n	8003d40 <I2C_RequestMemoryRead+0x1c4>
 8003c52:	88fb      	ldrh	r3, [r7, #6]
 8003c54:	2b01      	cmp	r3, #1
 8003c56:	d105      	bne.n	8003c64 <I2C_RequestMemoryRead+0xe8>
 8003c58:	893b      	ldrh	r3, [r7, #8]
 8003c5a:	b2da      	uxtb	r2, r3
 8003c5c:	68fb      	ldr	r3, [r7, #12]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	611a      	str	r2, [r3, #16]
 8003c62:	e021      	b.n	8003ca8 <I2C_RequestMemoryRead+0x12c>
 8003c64:	893b      	ldrh	r3, [r7, #8]
 8003c66:	0a1b      	lsrs	r3, r3, #8
 8003c68:	b29b      	uxth	r3, r3
 8003c6a:	b2da      	uxtb	r2, r3
 8003c6c:	68fb      	ldr	r3, [r7, #12]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	611a      	str	r2, [r3, #16]
 8003c72:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003c74:	6a39      	ldr	r1, [r7, #32]
 8003c76:	68f8      	ldr	r0, [r7, #12]
 8003c78:	f000 f982 	bl	8003f80 <I2C_WaitOnTXEFlagUntilTimeout>
 8003c7c:	4603      	mov	r3, r0
 8003c7e:	2b00      	cmp	r3, #0
 8003c80:	d00d      	beq.n	8003c9e <I2C_RequestMemoryRead+0x122>
 8003c82:	68fb      	ldr	r3, [r7, #12]
 8003c84:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c86:	2b04      	cmp	r3, #4
 8003c88:	d107      	bne.n	8003c9a <I2C_RequestMemoryRead+0x11e>
 8003c8a:	68fb      	ldr	r3, [r7, #12]
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	681a      	ldr	r2, [r3, #0]
 8003c90:	68fb      	ldr	r3, [r7, #12]
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003c98:	601a      	str	r2, [r3, #0]
 8003c9a:	2301      	movs	r3, #1
 8003c9c:	e050      	b.n	8003d40 <I2C_RequestMemoryRead+0x1c4>
 8003c9e:	893b      	ldrh	r3, [r7, #8]
 8003ca0:	b2da      	uxtb	r2, r3
 8003ca2:	68fb      	ldr	r3, [r7, #12]
 8003ca4:	681b      	ldr	r3, [r3, #0]
 8003ca6:	611a      	str	r2, [r3, #16]
 8003ca8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003caa:	6a39      	ldr	r1, [r7, #32]
 8003cac:	68f8      	ldr	r0, [r7, #12]
 8003cae:	f000 f967 	bl	8003f80 <I2C_WaitOnTXEFlagUntilTimeout>
 8003cb2:	4603      	mov	r3, r0
 8003cb4:	2b00      	cmp	r3, #0
 8003cb6:	d00d      	beq.n	8003cd4 <I2C_RequestMemoryRead+0x158>
 8003cb8:	68fb      	ldr	r3, [r7, #12]
 8003cba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003cbc:	2b04      	cmp	r3, #4
 8003cbe:	d107      	bne.n	8003cd0 <I2C_RequestMemoryRead+0x154>
 8003cc0:	68fb      	ldr	r3, [r7, #12]
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	681a      	ldr	r2, [r3, #0]
 8003cc6:	68fb      	ldr	r3, [r7, #12]
 8003cc8:	681b      	ldr	r3, [r3, #0]
 8003cca:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003cce:	601a      	str	r2, [r3, #0]
 8003cd0:	2301      	movs	r3, #1
 8003cd2:	e035      	b.n	8003d40 <I2C_RequestMemoryRead+0x1c4>
 8003cd4:	68fb      	ldr	r3, [r7, #12]
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	681a      	ldr	r2, [r3, #0]
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003ce2:	601a      	str	r2, [r3, #0]
 8003ce4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003ce6:	9300      	str	r3, [sp, #0]
 8003ce8:	6a3b      	ldr	r3, [r7, #32]
 8003cea:	2200      	movs	r2, #0
 8003cec:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003cf0:	68f8      	ldr	r0, [r7, #12]
 8003cf2:	f000 f82b 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 8003cf6:	4603      	mov	r3, r0
 8003cf8:	2b00      	cmp	r3, #0
 8003cfa:	d00d      	beq.n	8003d18 <I2C_RequestMemoryRead+0x19c>
 8003cfc:	68fb      	ldr	r3, [r7, #12]
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	681b      	ldr	r3, [r3, #0]
 8003d02:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003d06:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003d0a:	d103      	bne.n	8003d14 <I2C_RequestMemoryRead+0x198>
 8003d0c:	68fb      	ldr	r3, [r7, #12]
 8003d0e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003d12:	641a      	str	r2, [r3, #64]	@ 0x40
 8003d14:	2303      	movs	r3, #3
 8003d16:	e013      	b.n	8003d40 <I2C_RequestMemoryRead+0x1c4>
 8003d18:	897b      	ldrh	r3, [r7, #10]
 8003d1a:	b2db      	uxtb	r3, r3
 8003d1c:	f043 0301 	orr.w	r3, r3, #1
 8003d20:	b2da      	uxtb	r2, r3
 8003d22:	68fb      	ldr	r3, [r7, #12]
 8003d24:	681b      	ldr	r3, [r3, #0]
 8003d26:	611a      	str	r2, [r3, #16]
 8003d28:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003d2a:	6a3a      	ldr	r2, [r7, #32]
 8003d2c:	4906      	ldr	r1, [pc, #24]	@ (8003d48 <I2C_RequestMemoryRead+0x1cc>)
 8003d2e:	68f8      	ldr	r0, [r7, #12]
 8003d30:	f000 f886 	bl	8003e40 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003d34:	4603      	mov	r3, r0
 8003d36:	2b00      	cmp	r3, #0
 8003d38:	d001      	beq.n	8003d3e <I2C_RequestMemoryRead+0x1c2>
 8003d3a:	2301      	movs	r3, #1
 8003d3c:	e000      	b.n	8003d40 <I2C_RequestMemoryRead+0x1c4>
 8003d3e:	2300      	movs	r3, #0
 8003d40:	4618      	mov	r0, r3
 8003d42:	3718      	adds	r7, #24
 8003d44:	46bd      	mov	sp, r7
 8003d46:	bd80      	pop	{r7, pc}
 8003d48:	00010002 	.word	0x00010002

08003d4c <I2C_WaitOnFlagUntilTimeout>:
 8003d4c:	b580      	push	{r7, lr}
 8003d4e:	b084      	sub	sp, #16
 8003d50:	af00      	add	r7, sp, #0
 8003d52:	60f8      	str	r0, [r7, #12]
 8003d54:	60b9      	str	r1, [r7, #8]
 8003d56:	603b      	str	r3, [r7, #0]
 8003d58:	4613      	mov	r3, r2
 8003d5a:	71fb      	strb	r3, [r7, #7]
 8003d5c:	e048      	b.n	8003df0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003d5e:	683b      	ldr	r3, [r7, #0]
 8003d60:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003d64:	d044      	beq.n	8003df0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003d66:	f7fe fdcd 	bl	8002904 <HAL_GetTick>
 8003d6a:	4602      	mov	r2, r0
 8003d6c:	69bb      	ldr	r3, [r7, #24]
 8003d6e:	1ad3      	subs	r3, r2, r3
 8003d70:	683a      	ldr	r2, [r7, #0]
 8003d72:	429a      	cmp	r2, r3
 8003d74:	d302      	bcc.n	8003d7c <I2C_WaitOnFlagUntilTimeout+0x30>
 8003d76:	683b      	ldr	r3, [r7, #0]
 8003d78:	2b00      	cmp	r3, #0
 8003d7a:	d139      	bne.n	8003df0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003d7c:	68bb      	ldr	r3, [r7, #8]
 8003d7e:	0c1b      	lsrs	r3, r3, #16
 8003d80:	b2db      	uxtb	r3, r3
 8003d82:	2b01      	cmp	r3, #1
 8003d84:	d10d      	bne.n	8003da2 <I2C_WaitOnFlagUntilTimeout+0x56>
 8003d86:	68fb      	ldr	r3, [r7, #12]
 8003d88:	681b      	ldr	r3, [r3, #0]
 8003d8a:	695b      	ldr	r3, [r3, #20]
 8003d8c:	43da      	mvns	r2, r3
 8003d8e:	68bb      	ldr	r3, [r7, #8]
 8003d90:	4013      	ands	r3, r2
 8003d92:	b29b      	uxth	r3, r3
 8003d94:	2b00      	cmp	r3, #0
 8003d96:	bf0c      	ite	eq
 8003d98:	2301      	moveq	r3, #1
 8003d9a:	2300      	movne	r3, #0
 8003d9c:	b2db      	uxtb	r3, r3
 8003d9e:	461a      	mov	r2, r3
 8003da0:	e00c      	b.n	8003dbc <I2C_WaitOnFlagUntilTimeout+0x70>
 8003da2:	68fb      	ldr	r3, [r7, #12]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	699b      	ldr	r3, [r3, #24]
 8003da8:	43da      	mvns	r2, r3
 8003daa:	68bb      	ldr	r3, [r7, #8]
 8003dac:	4013      	ands	r3, r2
 8003dae:	b29b      	uxth	r3, r3
 8003db0:	2b00      	cmp	r3, #0
 8003db2:	bf0c      	ite	eq
 8003db4:	2301      	moveq	r3, #1
 8003db6:	2300      	movne	r3, #0
 8003db8:	b2db      	uxtb	r3, r3
 8003dba:	461a      	mov	r2, r3
 8003dbc:	79fb      	ldrb	r3, [r7, #7]
 8003dbe:	429a      	cmp	r2, r3
 8003dc0:	d116      	bne.n	8003df0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003dc2:	68fb      	ldr	r3, [r7, #12]
 8003dc4:	2200      	movs	r2, #0
 8003dc6:	631a      	str	r2, [r3, #48]	@ 0x30
 8003dc8:	68fb      	ldr	r3, [r7, #12]
 8003dca:	2220      	movs	r2, #32
 8003dcc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003dd0:	68fb      	ldr	r3, [r7, #12]
 8003dd2:	2200      	movs	r2, #0
 8003dd4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003dd8:	68fb      	ldr	r3, [r7, #12]
 8003dda:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ddc:	f043 0220 	orr.w	r2, r3, #32
 8003de0:	68fb      	ldr	r3, [r7, #12]
 8003de2:	641a      	str	r2, [r3, #64]	@ 0x40
 8003de4:	68fb      	ldr	r3, [r7, #12]
 8003de6:	2200      	movs	r2, #0
 8003de8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003dec:	2301      	movs	r3, #1
 8003dee:	e023      	b.n	8003e38 <I2C_WaitOnFlagUntilTimeout+0xec>
 8003df0:	68bb      	ldr	r3, [r7, #8]
 8003df2:	0c1b      	lsrs	r3, r3, #16
 8003df4:	b2db      	uxtb	r3, r3
 8003df6:	2b01      	cmp	r3, #1
 8003df8:	d10d      	bne.n	8003e16 <I2C_WaitOnFlagUntilTimeout+0xca>
 8003dfa:	68fb      	ldr	r3, [r7, #12]
 8003dfc:	681b      	ldr	r3, [r3, #0]
 8003dfe:	695b      	ldr	r3, [r3, #20]
 8003e00:	43da      	mvns	r2, r3
 8003e02:	68bb      	ldr	r3, [r7, #8]
 8003e04:	4013      	ands	r3, r2
 8003e06:	b29b      	uxth	r3, r3
 8003e08:	2b00      	cmp	r3, #0
 8003e0a:	bf0c      	ite	eq
 8003e0c:	2301      	moveq	r3, #1
 8003e0e:	2300      	movne	r3, #0
 8003e10:	b2db      	uxtb	r3, r3
 8003e12:	461a      	mov	r2, r3
 8003e14:	e00c      	b.n	8003e30 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8003e16:	68fb      	ldr	r3, [r7, #12]
 8003e18:	681b      	ldr	r3, [r3, #0]
 8003e1a:	699b      	ldr	r3, [r3, #24]
 8003e1c:	43da      	mvns	r2, r3
 8003e1e:	68bb      	ldr	r3, [r7, #8]
 8003e20:	4013      	ands	r3, r2
 8003e22:	b29b      	uxth	r3, r3
 8003e24:	2b00      	cmp	r3, #0
 8003e26:	bf0c      	ite	eq
 8003e28:	2301      	moveq	r3, #1
 8003e2a:	2300      	movne	r3, #0
 8003e2c:	b2db      	uxtb	r3, r3
 8003e2e:	461a      	mov	r2, r3
 8003e30:	79fb      	ldrb	r3, [r7, #7]
 8003e32:	429a      	cmp	r2, r3
 8003e34:	d093      	beq.n	8003d5e <I2C_WaitOnFlagUntilTimeout+0x12>
 8003e36:	2300      	movs	r3, #0
 8003e38:	4618      	mov	r0, r3
 8003e3a:	3710      	adds	r7, #16
 8003e3c:	46bd      	mov	sp, r7
 8003e3e:	bd80      	pop	{r7, pc}

08003e40 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8003e40:	b580      	push	{r7, lr}
 8003e42:	b084      	sub	sp, #16
 8003e44:	af00      	add	r7, sp, #0
 8003e46:	60f8      	str	r0, [r7, #12]
 8003e48:	60b9      	str	r1, [r7, #8]
 8003e4a:	607a      	str	r2, [r7, #4]
 8003e4c:	603b      	str	r3, [r7, #0]
 8003e4e:	e071      	b.n	8003f34 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003e50:	68fb      	ldr	r3, [r7, #12]
 8003e52:	681b      	ldr	r3, [r3, #0]
 8003e54:	695b      	ldr	r3, [r3, #20]
 8003e56:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003e5a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003e5e:	d123      	bne.n	8003ea8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8003e60:	68fb      	ldr	r3, [r7, #12]
 8003e62:	681b      	ldr	r3, [r3, #0]
 8003e64:	681a      	ldr	r2, [r3, #0]
 8003e66:	68fb      	ldr	r3, [r7, #12]
 8003e68:	681b      	ldr	r3, [r3, #0]
 8003e6a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003e6e:	601a      	str	r2, [r3, #0]
 8003e70:	68fb      	ldr	r3, [r7, #12]
 8003e72:	681b      	ldr	r3, [r3, #0]
 8003e74:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8003e78:	615a      	str	r2, [r3, #20]
 8003e7a:	68fb      	ldr	r3, [r7, #12]
 8003e7c:	2200      	movs	r2, #0
 8003e7e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003e80:	68fb      	ldr	r3, [r7, #12]
 8003e82:	2220      	movs	r2, #32
 8003e84:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003e88:	68fb      	ldr	r3, [r7, #12]
 8003e8a:	2200      	movs	r2, #0
 8003e8c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003e90:	68fb      	ldr	r3, [r7, #12]
 8003e92:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003e94:	f043 0204 	orr.w	r2, r3, #4
 8003e98:	68fb      	ldr	r3, [r7, #12]
 8003e9a:	641a      	str	r2, [r3, #64]	@ 0x40
 8003e9c:	68fb      	ldr	r3, [r7, #12]
 8003e9e:	2200      	movs	r2, #0
 8003ea0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003ea4:	2301      	movs	r3, #1
 8003ea6:	e067      	b.n	8003f78 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003eae:	d041      	beq.n	8003f34 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003eb0:	f7fe fd28 	bl	8002904 <HAL_GetTick>
 8003eb4:	4602      	mov	r2, r0
 8003eb6:	683b      	ldr	r3, [r7, #0]
 8003eb8:	1ad3      	subs	r3, r2, r3
 8003eba:	687a      	ldr	r2, [r7, #4]
 8003ebc:	429a      	cmp	r2, r3
 8003ebe:	d302      	bcc.n	8003ec6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8003ec0:	687b      	ldr	r3, [r7, #4]
 8003ec2:	2b00      	cmp	r3, #0
 8003ec4:	d136      	bne.n	8003f34 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003ec6:	68bb      	ldr	r3, [r7, #8]
 8003ec8:	0c1b      	lsrs	r3, r3, #16
 8003eca:	b2db      	uxtb	r3, r3
 8003ecc:	2b01      	cmp	r3, #1
 8003ece:	d10c      	bne.n	8003eea <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8003ed0:	68fb      	ldr	r3, [r7, #12]
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	695b      	ldr	r3, [r3, #20]
 8003ed6:	43da      	mvns	r2, r3
 8003ed8:	68bb      	ldr	r3, [r7, #8]
 8003eda:	4013      	ands	r3, r2
 8003edc:	b29b      	uxth	r3, r3
 8003ede:	2b00      	cmp	r3, #0
 8003ee0:	bf14      	ite	ne
 8003ee2:	2301      	movne	r3, #1
 8003ee4:	2300      	moveq	r3, #0
 8003ee6:	b2db      	uxtb	r3, r3
 8003ee8:	e00b      	b.n	8003f02 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8003eea:	68fb      	ldr	r3, [r7, #12]
 8003eec:	681b      	ldr	r3, [r3, #0]
 8003eee:	699b      	ldr	r3, [r3, #24]
 8003ef0:	43da      	mvns	r2, r3
 8003ef2:	68bb      	ldr	r3, [r7, #8]
 8003ef4:	4013      	ands	r3, r2
 8003ef6:	b29b      	uxth	r3, r3
 8003ef8:	2b00      	cmp	r3, #0
 8003efa:	bf14      	ite	ne
 8003efc:	2301      	movne	r3, #1
 8003efe:	2300      	moveq	r3, #0
 8003f00:	b2db      	uxtb	r3, r3
 8003f02:	2b00      	cmp	r3, #0
 8003f04:	d016      	beq.n	8003f34 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003f06:	68fb      	ldr	r3, [r7, #12]
 8003f08:	2200      	movs	r2, #0
 8003f0a:	631a      	str	r2, [r3, #48]	@ 0x30
 8003f0c:	68fb      	ldr	r3, [r7, #12]
 8003f0e:	2220      	movs	r2, #32
 8003f10:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003f14:	68fb      	ldr	r3, [r7, #12]
 8003f16:	2200      	movs	r2, #0
 8003f18:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003f1c:	68fb      	ldr	r3, [r7, #12]
 8003f1e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003f20:	f043 0220 	orr.w	r2, r3, #32
 8003f24:	68fb      	ldr	r3, [r7, #12]
 8003f26:	641a      	str	r2, [r3, #64]	@ 0x40
 8003f28:	68fb      	ldr	r3, [r7, #12]
 8003f2a:	2200      	movs	r2, #0
 8003f2c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003f30:	2301      	movs	r3, #1
 8003f32:	e021      	b.n	8003f78 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003f34:	68bb      	ldr	r3, [r7, #8]
 8003f36:	0c1b      	lsrs	r3, r3, #16
 8003f38:	b2db      	uxtb	r3, r3
 8003f3a:	2b01      	cmp	r3, #1
 8003f3c:	d10c      	bne.n	8003f58 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8003f3e:	68fb      	ldr	r3, [r7, #12]
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	695b      	ldr	r3, [r3, #20]
 8003f44:	43da      	mvns	r2, r3
 8003f46:	68bb      	ldr	r3, [r7, #8]
 8003f48:	4013      	ands	r3, r2
 8003f4a:	b29b      	uxth	r3, r3
 8003f4c:	2b00      	cmp	r3, #0
 8003f4e:	bf14      	ite	ne
 8003f50:	2301      	movne	r3, #1
 8003f52:	2300      	moveq	r3, #0
 8003f54:	b2db      	uxtb	r3, r3
 8003f56:	e00b      	b.n	8003f70 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8003f58:	68fb      	ldr	r3, [r7, #12]
 8003f5a:	681b      	ldr	r3, [r3, #0]
 8003f5c:	699b      	ldr	r3, [r3, #24]
 8003f5e:	43da      	mvns	r2, r3
 8003f60:	68bb      	ldr	r3, [r7, #8]
 8003f62:	4013      	ands	r3, r2
 8003f64:	b29b      	uxth	r3, r3
 8003f66:	2b00      	cmp	r3, #0
 8003f68:	bf14      	ite	ne
 8003f6a:	2301      	movne	r3, #1
 8003f6c:	2300      	moveq	r3, #0
 8003f6e:	b2db      	uxtb	r3, r3
 8003f70:	2b00      	cmp	r3, #0
 8003f72:	f47f af6d 	bne.w	8003e50 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8003f76:	2300      	movs	r3, #0
 8003f78:	4618      	mov	r0, r3
 8003f7a:	3710      	adds	r7, #16
 8003f7c:	46bd      	mov	sp, r7
 8003f7e:	bd80      	pop	{r7, pc}

08003f80 <I2C_WaitOnTXEFlagUntilTimeout>:
 8003f80:	b580      	push	{r7, lr}
 8003f82:	b084      	sub	sp, #16
 8003f84:	af00      	add	r7, sp, #0
 8003f86:	60f8      	str	r0, [r7, #12]
 8003f88:	60b9      	str	r1, [r7, #8]
 8003f8a:	607a      	str	r2, [r7, #4]
 8003f8c:	e034      	b.n	8003ff8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003f8e:	68f8      	ldr	r0, [r7, #12]
 8003f90:	f000 f8e3 	bl	800415a <I2C_IsAcknowledgeFailed>
 8003f94:	4603      	mov	r3, r0
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	d001      	beq.n	8003f9e <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8003f9a:	2301      	movs	r3, #1
 8003f9c:	e034      	b.n	8004008 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003f9e:	68bb      	ldr	r3, [r7, #8]
 8003fa0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003fa4:	d028      	beq.n	8003ff8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003fa6:	f7fe fcad 	bl	8002904 <HAL_GetTick>
 8003faa:	4602      	mov	r2, r0
 8003fac:	687b      	ldr	r3, [r7, #4]
 8003fae:	1ad3      	subs	r3, r2, r3
 8003fb0:	68ba      	ldr	r2, [r7, #8]
 8003fb2:	429a      	cmp	r2, r3
 8003fb4:	d302      	bcc.n	8003fbc <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8003fb6:	68bb      	ldr	r3, [r7, #8]
 8003fb8:	2b00      	cmp	r3, #0
 8003fba:	d11d      	bne.n	8003ff8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003fbc:	68fb      	ldr	r3, [r7, #12]
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	695b      	ldr	r3, [r3, #20]
 8003fc2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003fc6:	2b80      	cmp	r3, #128	@ 0x80
 8003fc8:	d016      	beq.n	8003ff8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003fca:	68fb      	ldr	r3, [r7, #12]
 8003fcc:	2200      	movs	r2, #0
 8003fce:	631a      	str	r2, [r3, #48]	@ 0x30
 8003fd0:	68fb      	ldr	r3, [r7, #12]
 8003fd2:	2220      	movs	r2, #32
 8003fd4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003fd8:	68fb      	ldr	r3, [r7, #12]
 8003fda:	2200      	movs	r2, #0
 8003fdc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003fe0:	68fb      	ldr	r3, [r7, #12]
 8003fe2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003fe4:	f043 0220 	orr.w	r2, r3, #32
 8003fe8:	68fb      	ldr	r3, [r7, #12]
 8003fea:	641a      	str	r2, [r3, #64]	@ 0x40
 8003fec:	68fb      	ldr	r3, [r7, #12]
 8003fee:	2200      	movs	r2, #0
 8003ff0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003ff4:	2301      	movs	r3, #1
 8003ff6:	e007      	b.n	8004008 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003ff8:	68fb      	ldr	r3, [r7, #12]
 8003ffa:	681b      	ldr	r3, [r3, #0]
 8003ffc:	695b      	ldr	r3, [r3, #20]
 8003ffe:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004002:	2b80      	cmp	r3, #128	@ 0x80
 8004004:	d1c3      	bne.n	8003f8e <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8004006:	2300      	movs	r3, #0
 8004008:	4618      	mov	r0, r3
 800400a:	3710      	adds	r7, #16
 800400c:	46bd      	mov	sp, r7
 800400e:	bd80      	pop	{r7, pc}

08004010 <I2C_WaitOnBTFFlagUntilTimeout>:
 8004010:	b580      	push	{r7, lr}
 8004012:	b084      	sub	sp, #16
 8004014:	af00      	add	r7, sp, #0
 8004016:	60f8      	str	r0, [r7, #12]
 8004018:	60b9      	str	r1, [r7, #8]
 800401a:	607a      	str	r2, [r7, #4]
 800401c:	e034      	b.n	8004088 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800401e:	68f8      	ldr	r0, [r7, #12]
 8004020:	f000 f89b 	bl	800415a <I2C_IsAcknowledgeFailed>
 8004024:	4603      	mov	r3, r0
 8004026:	2b00      	cmp	r3, #0
 8004028:	d001      	beq.n	800402e <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800402a:	2301      	movs	r3, #1
 800402c:	e034      	b.n	8004098 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 800402e:	68bb      	ldr	r3, [r7, #8]
 8004030:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004034:	d028      	beq.n	8004088 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8004036:	f7fe fc65 	bl	8002904 <HAL_GetTick>
 800403a:	4602      	mov	r2, r0
 800403c:	687b      	ldr	r3, [r7, #4]
 800403e:	1ad3      	subs	r3, r2, r3
 8004040:	68ba      	ldr	r2, [r7, #8]
 8004042:	429a      	cmp	r2, r3
 8004044:	d302      	bcc.n	800404c <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8004046:	68bb      	ldr	r3, [r7, #8]
 8004048:	2b00      	cmp	r3, #0
 800404a:	d11d      	bne.n	8004088 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800404c:	68fb      	ldr	r3, [r7, #12]
 800404e:	681b      	ldr	r3, [r3, #0]
 8004050:	695b      	ldr	r3, [r3, #20]
 8004052:	f003 0304 	and.w	r3, r3, #4
 8004056:	2b04      	cmp	r3, #4
 8004058:	d016      	beq.n	8004088 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	2200      	movs	r2, #0
 800405e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004060:	68fb      	ldr	r3, [r7, #12]
 8004062:	2220      	movs	r2, #32
 8004064:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004068:	68fb      	ldr	r3, [r7, #12]
 800406a:	2200      	movs	r2, #0
 800406c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004070:	68fb      	ldr	r3, [r7, #12]
 8004072:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004074:	f043 0220 	orr.w	r2, r3, #32
 8004078:	68fb      	ldr	r3, [r7, #12]
 800407a:	641a      	str	r2, [r3, #64]	@ 0x40
 800407c:	68fb      	ldr	r3, [r7, #12]
 800407e:	2200      	movs	r2, #0
 8004080:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004084:	2301      	movs	r3, #1
 8004086:	e007      	b.n	8004098 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8004088:	68fb      	ldr	r3, [r7, #12]
 800408a:	681b      	ldr	r3, [r3, #0]
 800408c:	695b      	ldr	r3, [r3, #20]
 800408e:	f003 0304 	and.w	r3, r3, #4
 8004092:	2b04      	cmp	r3, #4
 8004094:	d1c3      	bne.n	800401e <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8004096:	2300      	movs	r3, #0
 8004098:	4618      	mov	r0, r3
 800409a:	3710      	adds	r7, #16
 800409c:	46bd      	mov	sp, r7
 800409e:	bd80      	pop	{r7, pc}

080040a0 <I2C_WaitOnRXNEFlagUntilTimeout>:
 80040a0:	b580      	push	{r7, lr}
 80040a2:	b084      	sub	sp, #16
 80040a4:	af00      	add	r7, sp, #0
 80040a6:	60f8      	str	r0, [r7, #12]
 80040a8:	60b9      	str	r1, [r7, #8]
 80040aa:	607a      	str	r2, [r7, #4]
 80040ac:	e049      	b.n	8004142 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 80040ae:	68fb      	ldr	r3, [r7, #12]
 80040b0:	681b      	ldr	r3, [r3, #0]
 80040b2:	695b      	ldr	r3, [r3, #20]
 80040b4:	f003 0310 	and.w	r3, r3, #16
 80040b8:	2b10      	cmp	r3, #16
 80040ba:	d119      	bne.n	80040f0 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 80040bc:	68fb      	ldr	r3, [r7, #12]
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	f06f 0210 	mvn.w	r2, #16
 80040c4:	615a      	str	r2, [r3, #20]
 80040c6:	68fb      	ldr	r3, [r7, #12]
 80040c8:	2200      	movs	r2, #0
 80040ca:	631a      	str	r2, [r3, #48]	@ 0x30
 80040cc:	68fb      	ldr	r3, [r7, #12]
 80040ce:	2220      	movs	r2, #32
 80040d0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80040d4:	68fb      	ldr	r3, [r7, #12]
 80040d6:	2200      	movs	r2, #0
 80040d8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80040dc:	68fb      	ldr	r3, [r7, #12]
 80040de:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80040e0:	68fb      	ldr	r3, [r7, #12]
 80040e2:	641a      	str	r2, [r3, #64]	@ 0x40
 80040e4:	68fb      	ldr	r3, [r7, #12]
 80040e6:	2200      	movs	r2, #0
 80040e8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80040ec:	2301      	movs	r3, #1
 80040ee:	e030      	b.n	8004152 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 80040f0:	f7fe fc08 	bl	8002904 <HAL_GetTick>
 80040f4:	4602      	mov	r2, r0
 80040f6:	687b      	ldr	r3, [r7, #4]
 80040f8:	1ad3      	subs	r3, r2, r3
 80040fa:	68ba      	ldr	r2, [r7, #8]
 80040fc:	429a      	cmp	r2, r3
 80040fe:	d302      	bcc.n	8004106 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8004100:	68bb      	ldr	r3, [r7, #8]
 8004102:	2b00      	cmp	r3, #0
 8004104:	d11d      	bne.n	8004142 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8004106:	68fb      	ldr	r3, [r7, #12]
 8004108:	681b      	ldr	r3, [r3, #0]
 800410a:	695b      	ldr	r3, [r3, #20]
 800410c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004110:	2b40      	cmp	r3, #64	@ 0x40
 8004112:	d016      	beq.n	8004142 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8004114:	68fb      	ldr	r3, [r7, #12]
 8004116:	2200      	movs	r2, #0
 8004118:	631a      	str	r2, [r3, #48]	@ 0x30
 800411a:	68fb      	ldr	r3, [r7, #12]
 800411c:	2220      	movs	r2, #32
 800411e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004122:	68fb      	ldr	r3, [r7, #12]
 8004124:	2200      	movs	r2, #0
 8004126:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800412a:	68fb      	ldr	r3, [r7, #12]
 800412c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800412e:	f043 0220 	orr.w	r2, r3, #32
 8004132:	68fb      	ldr	r3, [r7, #12]
 8004134:	641a      	str	r2, [r3, #64]	@ 0x40
 8004136:	68fb      	ldr	r3, [r7, #12]
 8004138:	2200      	movs	r2, #0
 800413a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800413e:	2301      	movs	r3, #1
 8004140:	e007      	b.n	8004152 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8004142:	68fb      	ldr	r3, [r7, #12]
 8004144:	681b      	ldr	r3, [r3, #0]
 8004146:	695b      	ldr	r3, [r3, #20]
 8004148:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800414c:	2b40      	cmp	r3, #64	@ 0x40
 800414e:	d1ae      	bne.n	80040ae <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8004150:	2300      	movs	r3, #0
 8004152:	4618      	mov	r0, r3
 8004154:	3710      	adds	r7, #16
 8004156:	46bd      	mov	sp, r7
 8004158:	bd80      	pop	{r7, pc}

0800415a <I2C_IsAcknowledgeFailed>:
 800415a:	b480      	push	{r7}
 800415c:	b083      	sub	sp, #12
 800415e:	af00      	add	r7, sp, #0
 8004160:	6078      	str	r0, [r7, #4]
 8004162:	687b      	ldr	r3, [r7, #4]
 8004164:	681b      	ldr	r3, [r3, #0]
 8004166:	695b      	ldr	r3, [r3, #20]
 8004168:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800416c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004170:	d11b      	bne.n	80041aa <I2C_IsAcknowledgeFailed+0x50>
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	681b      	ldr	r3, [r3, #0]
 8004176:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800417a:	615a      	str	r2, [r3, #20]
 800417c:	687b      	ldr	r3, [r7, #4]
 800417e:	2200      	movs	r2, #0
 8004180:	631a      	str	r2, [r3, #48]	@ 0x30
 8004182:	687b      	ldr	r3, [r7, #4]
 8004184:	2220      	movs	r2, #32
 8004186:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800418a:	687b      	ldr	r3, [r7, #4]
 800418c:	2200      	movs	r2, #0
 800418e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004192:	687b      	ldr	r3, [r7, #4]
 8004194:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004196:	f043 0204 	orr.w	r2, r3, #4
 800419a:	687b      	ldr	r3, [r7, #4]
 800419c:	641a      	str	r2, [r3, #64]	@ 0x40
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	2200      	movs	r2, #0
 80041a2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80041a6:	2301      	movs	r3, #1
 80041a8:	e000      	b.n	80041ac <I2C_IsAcknowledgeFailed+0x52>
 80041aa:	2300      	movs	r3, #0
 80041ac:	4618      	mov	r0, r3
 80041ae:	370c      	adds	r7, #12
 80041b0:	46bd      	mov	sp, r7
 80041b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041b6:	4770      	bx	lr

080041b8 <HAL_RCC_ClockConfig>:
 80041b8:	b580      	push	{r7, lr}
 80041ba:	b084      	sub	sp, #16
 80041bc:	af00      	add	r7, sp, #0
 80041be:	6078      	str	r0, [r7, #4]
 80041c0:	6039      	str	r1, [r7, #0]
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	2b00      	cmp	r3, #0
 80041c6:	d101      	bne.n	80041cc <HAL_RCC_ClockConfig+0x14>
 80041c8:	2301      	movs	r3, #1
 80041ca:	e0cc      	b.n	8004366 <HAL_RCC_ClockConfig+0x1ae>
 80041cc:	4b68      	ldr	r3, [pc, #416]	@ (8004370 <HAL_RCC_ClockConfig+0x1b8>)
 80041ce:	681b      	ldr	r3, [r3, #0]
 80041d0:	f003 030f 	and.w	r3, r3, #15
 80041d4:	683a      	ldr	r2, [r7, #0]
 80041d6:	429a      	cmp	r2, r3
 80041d8:	d90c      	bls.n	80041f4 <HAL_RCC_ClockConfig+0x3c>
 80041da:	4b65      	ldr	r3, [pc, #404]	@ (8004370 <HAL_RCC_ClockConfig+0x1b8>)
 80041dc:	683a      	ldr	r2, [r7, #0]
 80041de:	b2d2      	uxtb	r2, r2
 80041e0:	701a      	strb	r2, [r3, #0]
 80041e2:	4b63      	ldr	r3, [pc, #396]	@ (8004370 <HAL_RCC_ClockConfig+0x1b8>)
 80041e4:	681b      	ldr	r3, [r3, #0]
 80041e6:	f003 030f 	and.w	r3, r3, #15
 80041ea:	683a      	ldr	r2, [r7, #0]
 80041ec:	429a      	cmp	r2, r3
 80041ee:	d001      	beq.n	80041f4 <HAL_RCC_ClockConfig+0x3c>
 80041f0:	2301      	movs	r3, #1
 80041f2:	e0b8      	b.n	8004366 <HAL_RCC_ClockConfig+0x1ae>
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	681b      	ldr	r3, [r3, #0]
 80041f8:	f003 0302 	and.w	r3, r3, #2
 80041fc:	2b00      	cmp	r3, #0
 80041fe:	d020      	beq.n	8004242 <HAL_RCC_ClockConfig+0x8a>
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	681b      	ldr	r3, [r3, #0]
 8004204:	f003 0304 	and.w	r3, r3, #4
 8004208:	2b00      	cmp	r3, #0
 800420a:	d005      	beq.n	8004218 <HAL_RCC_ClockConfig+0x60>
 800420c:	4b59      	ldr	r3, [pc, #356]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 800420e:	689b      	ldr	r3, [r3, #8]
 8004210:	4a58      	ldr	r2, [pc, #352]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 8004212:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8004216:	6093      	str	r3, [r2, #8]
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	681b      	ldr	r3, [r3, #0]
 800421c:	f003 0308 	and.w	r3, r3, #8
 8004220:	2b00      	cmp	r3, #0
 8004222:	d005      	beq.n	8004230 <HAL_RCC_ClockConfig+0x78>
 8004224:	4b53      	ldr	r3, [pc, #332]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 8004226:	689b      	ldr	r3, [r3, #8]
 8004228:	4a52      	ldr	r2, [pc, #328]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 800422a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800422e:	6093      	str	r3, [r2, #8]
 8004230:	4b50      	ldr	r3, [pc, #320]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 8004232:	689b      	ldr	r3, [r3, #8]
 8004234:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	689b      	ldr	r3, [r3, #8]
 800423c:	494d      	ldr	r1, [pc, #308]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 800423e:	4313      	orrs	r3, r2
 8004240:	608b      	str	r3, [r1, #8]
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	681b      	ldr	r3, [r3, #0]
 8004246:	f003 0301 	and.w	r3, r3, #1
 800424a:	2b00      	cmp	r3, #0
 800424c:	d044      	beq.n	80042d8 <HAL_RCC_ClockConfig+0x120>
 800424e:	687b      	ldr	r3, [r7, #4]
 8004250:	685b      	ldr	r3, [r3, #4]
 8004252:	2b01      	cmp	r3, #1
 8004254:	d107      	bne.n	8004266 <HAL_RCC_ClockConfig+0xae>
 8004256:	4b47      	ldr	r3, [pc, #284]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 8004258:	681b      	ldr	r3, [r3, #0]
 800425a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800425e:	2b00      	cmp	r3, #0
 8004260:	d119      	bne.n	8004296 <HAL_RCC_ClockConfig+0xde>
 8004262:	2301      	movs	r3, #1
 8004264:	e07f      	b.n	8004366 <HAL_RCC_ClockConfig+0x1ae>
 8004266:	687b      	ldr	r3, [r7, #4]
 8004268:	685b      	ldr	r3, [r3, #4]
 800426a:	2b02      	cmp	r3, #2
 800426c:	d003      	beq.n	8004276 <HAL_RCC_ClockConfig+0xbe>
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	685b      	ldr	r3, [r3, #4]
 8004272:	2b03      	cmp	r3, #3
 8004274:	d107      	bne.n	8004286 <HAL_RCC_ClockConfig+0xce>
 8004276:	4b3f      	ldr	r3, [pc, #252]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800427e:	2b00      	cmp	r3, #0
 8004280:	d109      	bne.n	8004296 <HAL_RCC_ClockConfig+0xde>
 8004282:	2301      	movs	r3, #1
 8004284:	e06f      	b.n	8004366 <HAL_RCC_ClockConfig+0x1ae>
 8004286:	4b3b      	ldr	r3, [pc, #236]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 8004288:	681b      	ldr	r3, [r3, #0]
 800428a:	f003 0302 	and.w	r3, r3, #2
 800428e:	2b00      	cmp	r3, #0
 8004290:	d101      	bne.n	8004296 <HAL_RCC_ClockConfig+0xde>
 8004292:	2301      	movs	r3, #1
 8004294:	e067      	b.n	8004366 <HAL_RCC_ClockConfig+0x1ae>
 8004296:	4b37      	ldr	r3, [pc, #220]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 8004298:	689b      	ldr	r3, [r3, #8]
 800429a:	f023 0203 	bic.w	r2, r3, #3
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	685b      	ldr	r3, [r3, #4]
 80042a2:	4934      	ldr	r1, [pc, #208]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 80042a4:	4313      	orrs	r3, r2
 80042a6:	608b      	str	r3, [r1, #8]
 80042a8:	f7fe fb2c 	bl	8002904 <HAL_GetTick>
 80042ac:	60f8      	str	r0, [r7, #12]
 80042ae:	e00a      	b.n	80042c6 <HAL_RCC_ClockConfig+0x10e>
 80042b0:	f7fe fb28 	bl	8002904 <HAL_GetTick>
 80042b4:	4602      	mov	r2, r0
 80042b6:	68fb      	ldr	r3, [r7, #12]
 80042b8:	1ad3      	subs	r3, r2, r3
 80042ba:	f241 3288 	movw	r2, #5000	@ 0x1388
 80042be:	4293      	cmp	r3, r2
 80042c0:	d901      	bls.n	80042c6 <HAL_RCC_ClockConfig+0x10e>
 80042c2:	2303      	movs	r3, #3
 80042c4:	e04f      	b.n	8004366 <HAL_RCC_ClockConfig+0x1ae>
 80042c6:	4b2b      	ldr	r3, [pc, #172]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 80042c8:	689b      	ldr	r3, [r3, #8]
 80042ca:	f003 020c 	and.w	r2, r3, #12
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	685b      	ldr	r3, [r3, #4]
 80042d2:	009b      	lsls	r3, r3, #2
 80042d4:	429a      	cmp	r2, r3
 80042d6:	d1eb      	bne.n	80042b0 <HAL_RCC_ClockConfig+0xf8>
 80042d8:	4b25      	ldr	r3, [pc, #148]	@ (8004370 <HAL_RCC_ClockConfig+0x1b8>)
 80042da:	681b      	ldr	r3, [r3, #0]
 80042dc:	f003 030f 	and.w	r3, r3, #15
 80042e0:	683a      	ldr	r2, [r7, #0]
 80042e2:	429a      	cmp	r2, r3
 80042e4:	d20c      	bcs.n	8004300 <HAL_RCC_ClockConfig+0x148>
 80042e6:	4b22      	ldr	r3, [pc, #136]	@ (8004370 <HAL_RCC_ClockConfig+0x1b8>)
 80042e8:	683a      	ldr	r2, [r7, #0]
 80042ea:	b2d2      	uxtb	r2, r2
 80042ec:	701a      	strb	r2, [r3, #0]
 80042ee:	4b20      	ldr	r3, [pc, #128]	@ (8004370 <HAL_RCC_ClockConfig+0x1b8>)
 80042f0:	681b      	ldr	r3, [r3, #0]
 80042f2:	f003 030f 	and.w	r3, r3, #15
 80042f6:	683a      	ldr	r2, [r7, #0]
 80042f8:	429a      	cmp	r2, r3
 80042fa:	d001      	beq.n	8004300 <HAL_RCC_ClockConfig+0x148>
 80042fc:	2301      	movs	r3, #1
 80042fe:	e032      	b.n	8004366 <HAL_RCC_ClockConfig+0x1ae>
 8004300:	687b      	ldr	r3, [r7, #4]
 8004302:	681b      	ldr	r3, [r3, #0]
 8004304:	f003 0304 	and.w	r3, r3, #4
 8004308:	2b00      	cmp	r3, #0
 800430a:	d008      	beq.n	800431e <HAL_RCC_ClockConfig+0x166>
 800430c:	4b19      	ldr	r3, [pc, #100]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 800430e:	689b      	ldr	r3, [r3, #8]
 8004310:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	68db      	ldr	r3, [r3, #12]
 8004318:	4916      	ldr	r1, [pc, #88]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 800431a:	4313      	orrs	r3, r2
 800431c:	608b      	str	r3, [r1, #8]
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	f003 0308 	and.w	r3, r3, #8
 8004326:	2b00      	cmp	r3, #0
 8004328:	d009      	beq.n	800433e <HAL_RCC_ClockConfig+0x186>
 800432a:	4b12      	ldr	r3, [pc, #72]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 800432c:	689b      	ldr	r3, [r3, #8]
 800432e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004332:	687b      	ldr	r3, [r7, #4]
 8004334:	691b      	ldr	r3, [r3, #16]
 8004336:	00db      	lsls	r3, r3, #3
 8004338:	490e      	ldr	r1, [pc, #56]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 800433a:	4313      	orrs	r3, r2
 800433c:	608b      	str	r3, [r1, #8]
 800433e:	f000 f841 	bl	80043c4 <HAL_RCC_GetSysClockFreq>
 8004342:	4602      	mov	r2, r0
 8004344:	4b0b      	ldr	r3, [pc, #44]	@ (8004374 <HAL_RCC_ClockConfig+0x1bc>)
 8004346:	689b      	ldr	r3, [r3, #8]
 8004348:	091b      	lsrs	r3, r3, #4
 800434a:	f003 030f 	and.w	r3, r3, #15
 800434e:	490a      	ldr	r1, [pc, #40]	@ (8004378 <HAL_RCC_ClockConfig+0x1c0>)
 8004350:	5ccb      	ldrb	r3, [r1, r3]
 8004352:	fa22 f303 	lsr.w	r3, r2, r3
 8004356:	4a09      	ldr	r2, [pc, #36]	@ (800437c <HAL_RCC_ClockConfig+0x1c4>)
 8004358:	6013      	str	r3, [r2, #0]
 800435a:	4b09      	ldr	r3, [pc, #36]	@ (8004380 <HAL_RCC_ClockConfig+0x1c8>)
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	4618      	mov	r0, r3
 8004360:	f7fe fa8c 	bl	800287c <HAL_InitTick>
 8004364:	2300      	movs	r3, #0
 8004366:	4618      	mov	r0, r3
 8004368:	3710      	adds	r7, #16
 800436a:	46bd      	mov	sp, r7
 800436c:	bd80      	pop	{r7, pc}
 800436e:	bf00      	nop
 8004370:	40023c00 	.word	0x40023c00
 8004374:	40023800 	.word	0x40023800
 8004378:	080065a8 	.word	0x080065a8
 800437c:	20000028 	.word	0x20000028
 8004380:	2000002c 	.word	0x2000002c

08004384 <HAL_RCC_GetHCLKFreq>:
 8004384:	b480      	push	{r7}
 8004386:	af00      	add	r7, sp, #0
 8004388:	4b03      	ldr	r3, [pc, #12]	@ (8004398 <HAL_RCC_GetHCLKFreq+0x14>)
 800438a:	681b      	ldr	r3, [r3, #0]
 800438c:	4618      	mov	r0, r3
 800438e:	46bd      	mov	sp, r7
 8004390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004394:	4770      	bx	lr
 8004396:	bf00      	nop
 8004398:	20000028 	.word	0x20000028

0800439c <HAL_RCC_GetPCLK1Freq>:
 800439c:	b580      	push	{r7, lr}
 800439e:	af00      	add	r7, sp, #0
 80043a0:	f7ff fff0 	bl	8004384 <HAL_RCC_GetHCLKFreq>
 80043a4:	4602      	mov	r2, r0
 80043a6:	4b05      	ldr	r3, [pc, #20]	@ (80043bc <HAL_RCC_GetPCLK1Freq+0x20>)
 80043a8:	689b      	ldr	r3, [r3, #8]
 80043aa:	0a9b      	lsrs	r3, r3, #10
 80043ac:	f003 0307 	and.w	r3, r3, #7
 80043b0:	4903      	ldr	r1, [pc, #12]	@ (80043c0 <HAL_RCC_GetPCLK1Freq+0x24>)
 80043b2:	5ccb      	ldrb	r3, [r1, r3]
 80043b4:	fa22 f303 	lsr.w	r3, r2, r3
 80043b8:	4618      	mov	r0, r3
 80043ba:	bd80      	pop	{r7, pc}
 80043bc:	40023800 	.word	0x40023800
 80043c0:	080065b8 	.word	0x080065b8

080043c4 <HAL_RCC_GetSysClockFreq>:
 80043c4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80043c8:	b0a6      	sub	sp, #152	@ 0x98
 80043ca:	af00      	add	r7, sp, #0
 80043cc:	2300      	movs	r3, #0
 80043ce:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80043d2:	2300      	movs	r3, #0
 80043d4:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80043d8:	2300      	movs	r3, #0
 80043da:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80043de:	2300      	movs	r3, #0
 80043e0:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80043e4:	2300      	movs	r3, #0
 80043e6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80043ea:	4bc8      	ldr	r3, [pc, #800]	@ (800470c <HAL_RCC_GetSysClockFreq+0x348>)
 80043ec:	689b      	ldr	r3, [r3, #8]
 80043ee:	f003 030c 	and.w	r3, r3, #12
 80043f2:	2b0c      	cmp	r3, #12
 80043f4:	f200 817e 	bhi.w	80046f4 <HAL_RCC_GetSysClockFreq+0x330>
 80043f8:	a201      	add	r2, pc, #4	@ (adr r2, 8004400 <HAL_RCC_GetSysClockFreq+0x3c>)
 80043fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80043fe:	bf00      	nop
 8004400:	08004435 	.word	0x08004435
 8004404:	080046f5 	.word	0x080046f5
 8004408:	080046f5 	.word	0x080046f5
 800440c:	080046f5 	.word	0x080046f5
 8004410:	0800443d 	.word	0x0800443d
 8004414:	080046f5 	.word	0x080046f5
 8004418:	080046f5 	.word	0x080046f5
 800441c:	080046f5 	.word	0x080046f5
 8004420:	08004445 	.word	0x08004445
 8004424:	080046f5 	.word	0x080046f5
 8004428:	080046f5 	.word	0x080046f5
 800442c:	080046f5 	.word	0x080046f5
 8004430:	080045af 	.word	0x080045af
 8004434:	4bb6      	ldr	r3, [pc, #728]	@ (8004710 <HAL_RCC_GetSysClockFreq+0x34c>)
 8004436:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800443a:	e15f      	b.n	80046fc <HAL_RCC_GetSysClockFreq+0x338>
 800443c:	4bb5      	ldr	r3, [pc, #724]	@ (8004714 <HAL_RCC_GetSysClockFreq+0x350>)
 800443e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004442:	e15b      	b.n	80046fc <HAL_RCC_GetSysClockFreq+0x338>
 8004444:	4bb1      	ldr	r3, [pc, #708]	@ (800470c <HAL_RCC_GetSysClockFreq+0x348>)
 8004446:	685b      	ldr	r3, [r3, #4]
 8004448:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800444c:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004450:	4bae      	ldr	r3, [pc, #696]	@ (800470c <HAL_RCC_GetSysClockFreq+0x348>)
 8004452:	685b      	ldr	r3, [r3, #4]
 8004454:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004458:	2b00      	cmp	r3, #0
 800445a:	d031      	beq.n	80044c0 <HAL_RCC_GetSysClockFreq+0xfc>
 800445c:	4bab      	ldr	r3, [pc, #684]	@ (800470c <HAL_RCC_GetSysClockFreq+0x348>)
 800445e:	685b      	ldr	r3, [r3, #4]
 8004460:	099b      	lsrs	r3, r3, #6
 8004462:	2200      	movs	r2, #0
 8004464:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004466:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8004468:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800446a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800446e:	663b      	str	r3, [r7, #96]	@ 0x60
 8004470:	2300      	movs	r3, #0
 8004472:	667b      	str	r3, [r7, #100]	@ 0x64
 8004474:	4ba7      	ldr	r3, [pc, #668]	@ (8004714 <HAL_RCC_GetSysClockFreq+0x350>)
 8004476:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 800447a:	462a      	mov	r2, r5
 800447c:	fb03 f202 	mul.w	r2, r3, r2
 8004480:	2300      	movs	r3, #0
 8004482:	4621      	mov	r1, r4
 8004484:	fb01 f303 	mul.w	r3, r1, r3
 8004488:	4413      	add	r3, r2
 800448a:	4aa2      	ldr	r2, [pc, #648]	@ (8004714 <HAL_RCC_GetSysClockFreq+0x350>)
 800448c:	4621      	mov	r1, r4
 800448e:	fba1 1202 	umull	r1, r2, r1, r2
 8004492:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8004494:	460a      	mov	r2, r1
 8004496:	67ba      	str	r2, [r7, #120]	@ 0x78
 8004498:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 800449a:	4413      	add	r3, r2
 800449c:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800449e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80044a2:	2200      	movs	r2, #0
 80044a4:	65bb      	str	r3, [r7, #88]	@ 0x58
 80044a6:	65fa      	str	r2, [r7, #92]	@ 0x5c
 80044a8:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80044ac:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 80044b0:	f7fc fbae 	bl	8000c10 <__aeabi_uldivmod>
 80044b4:	4602      	mov	r2, r0
 80044b6:	460b      	mov	r3, r1
 80044b8:	4613      	mov	r3, r2
 80044ba:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80044be:	e064      	b.n	800458a <HAL_RCC_GetSysClockFreq+0x1c6>
 80044c0:	4b92      	ldr	r3, [pc, #584]	@ (800470c <HAL_RCC_GetSysClockFreq+0x348>)
 80044c2:	685b      	ldr	r3, [r3, #4]
 80044c4:	099b      	lsrs	r3, r3, #6
 80044c6:	2200      	movs	r2, #0
 80044c8:	653b      	str	r3, [r7, #80]	@ 0x50
 80044ca:	657a      	str	r2, [r7, #84]	@ 0x54
 80044cc:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80044ce:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80044d2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80044d4:	2300      	movs	r3, #0
 80044d6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80044d8:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	@ 0x48
 80044dc:	4622      	mov	r2, r4
 80044de:	462b      	mov	r3, r5
 80044e0:	f04f 0000 	mov.w	r0, #0
 80044e4:	f04f 0100 	mov.w	r1, #0
 80044e8:	0159      	lsls	r1, r3, #5
 80044ea:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80044ee:	0150      	lsls	r0, r2, #5
 80044f0:	4602      	mov	r2, r0
 80044f2:	460b      	mov	r3, r1
 80044f4:	4621      	mov	r1, r4
 80044f6:	1a51      	subs	r1, r2, r1
 80044f8:	6139      	str	r1, [r7, #16]
 80044fa:	4629      	mov	r1, r5
 80044fc:	eb63 0301 	sbc.w	r3, r3, r1
 8004500:	617b      	str	r3, [r7, #20]
 8004502:	f04f 0200 	mov.w	r2, #0
 8004506:	f04f 0300 	mov.w	r3, #0
 800450a:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800450e:	4659      	mov	r1, fp
 8004510:	018b      	lsls	r3, r1, #6
 8004512:	4651      	mov	r1, sl
 8004514:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004518:	4651      	mov	r1, sl
 800451a:	018a      	lsls	r2, r1, #6
 800451c:	4651      	mov	r1, sl
 800451e:	ebb2 0801 	subs.w	r8, r2, r1
 8004522:	4659      	mov	r1, fp
 8004524:	eb63 0901 	sbc.w	r9, r3, r1
 8004528:	f04f 0200 	mov.w	r2, #0
 800452c:	f04f 0300 	mov.w	r3, #0
 8004530:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004534:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004538:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800453c:	4690      	mov	r8, r2
 800453e:	4699      	mov	r9, r3
 8004540:	4623      	mov	r3, r4
 8004542:	eb18 0303 	adds.w	r3, r8, r3
 8004546:	60bb      	str	r3, [r7, #8]
 8004548:	462b      	mov	r3, r5
 800454a:	eb49 0303 	adc.w	r3, r9, r3
 800454e:	60fb      	str	r3, [r7, #12]
 8004550:	f04f 0200 	mov.w	r2, #0
 8004554:	f04f 0300 	mov.w	r3, #0
 8004558:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 800455c:	4629      	mov	r1, r5
 800455e:	028b      	lsls	r3, r1, #10
 8004560:	4621      	mov	r1, r4
 8004562:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004566:	4621      	mov	r1, r4
 8004568:	028a      	lsls	r2, r1, #10
 800456a:	4610      	mov	r0, r2
 800456c:	4619      	mov	r1, r3
 800456e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004572:	2200      	movs	r2, #0
 8004574:	643b      	str	r3, [r7, #64]	@ 0x40
 8004576:	647a      	str	r2, [r7, #68]	@ 0x44
 8004578:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800457c:	f7fc fb48 	bl	8000c10 <__aeabi_uldivmod>
 8004580:	4602      	mov	r2, r0
 8004582:	460b      	mov	r3, r1
 8004584:	4613      	mov	r3, r2
 8004586:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800458a:	4b60      	ldr	r3, [pc, #384]	@ (800470c <HAL_RCC_GetSysClockFreq+0x348>)
 800458c:	685b      	ldr	r3, [r3, #4]
 800458e:	0c1b      	lsrs	r3, r3, #16
 8004590:	f003 0303 	and.w	r3, r3, #3
 8004594:	3301      	adds	r3, #1
 8004596:	005b      	lsls	r3, r3, #1
 8004598:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800459c:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80045a0:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80045a4:	fbb2 f3f3 	udiv	r3, r2, r3
 80045a8:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80045ac:	e0a6      	b.n	80046fc <HAL_RCC_GetSysClockFreq+0x338>
 80045ae:	4b57      	ldr	r3, [pc, #348]	@ (800470c <HAL_RCC_GetSysClockFreq+0x348>)
 80045b0:	685b      	ldr	r3, [r3, #4]
 80045b2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80045b6:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80045ba:	4b54      	ldr	r3, [pc, #336]	@ (800470c <HAL_RCC_GetSysClockFreq+0x348>)
 80045bc:	685b      	ldr	r3, [r3, #4]
 80045be:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80045c2:	2b00      	cmp	r3, #0
 80045c4:	d02a      	beq.n	800461c <HAL_RCC_GetSysClockFreq+0x258>
 80045c6:	4b51      	ldr	r3, [pc, #324]	@ (800470c <HAL_RCC_GetSysClockFreq+0x348>)
 80045c8:	685b      	ldr	r3, [r3, #4]
 80045ca:	099b      	lsrs	r3, r3, #6
 80045cc:	2200      	movs	r2, #0
 80045ce:	63bb      	str	r3, [r7, #56]	@ 0x38
 80045d0:	63fa      	str	r2, [r7, #60]	@ 0x3c
 80045d2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80045d4:	f3c3 0008 	ubfx	r0, r3, #0, #9
 80045d8:	2100      	movs	r1, #0
 80045da:	4b4e      	ldr	r3, [pc, #312]	@ (8004714 <HAL_RCC_GetSysClockFreq+0x350>)
 80045dc:	fb03 f201 	mul.w	r2, r3, r1
 80045e0:	2300      	movs	r3, #0
 80045e2:	fb00 f303 	mul.w	r3, r0, r3
 80045e6:	4413      	add	r3, r2
 80045e8:	4a4a      	ldr	r2, [pc, #296]	@ (8004714 <HAL_RCC_GetSysClockFreq+0x350>)
 80045ea:	fba0 1202 	umull	r1, r2, r0, r2
 80045ee:	677a      	str	r2, [r7, #116]	@ 0x74
 80045f0:	460a      	mov	r2, r1
 80045f2:	673a      	str	r2, [r7, #112]	@ 0x70
 80045f4:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 80045f6:	4413      	add	r3, r2
 80045f8:	677b      	str	r3, [r7, #116]	@ 0x74
 80045fa:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80045fe:	2200      	movs	r2, #0
 8004600:	633b      	str	r3, [r7, #48]	@ 0x30
 8004602:	637a      	str	r2, [r7, #52]	@ 0x34
 8004604:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8004608:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 800460c:	f7fc fb00 	bl	8000c10 <__aeabi_uldivmod>
 8004610:	4602      	mov	r2, r0
 8004612:	460b      	mov	r3, r1
 8004614:	4613      	mov	r3, r2
 8004616:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800461a:	e05b      	b.n	80046d4 <HAL_RCC_GetSysClockFreq+0x310>
 800461c:	4b3b      	ldr	r3, [pc, #236]	@ (800470c <HAL_RCC_GetSysClockFreq+0x348>)
 800461e:	685b      	ldr	r3, [r3, #4]
 8004620:	099b      	lsrs	r3, r3, #6
 8004622:	2200      	movs	r2, #0
 8004624:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004626:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004628:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800462a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800462e:	623b      	str	r3, [r7, #32]
 8004630:	2300      	movs	r3, #0
 8004632:	627b      	str	r3, [r7, #36]	@ 0x24
 8004634:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8004638:	4642      	mov	r2, r8
 800463a:	464b      	mov	r3, r9
 800463c:	f04f 0000 	mov.w	r0, #0
 8004640:	f04f 0100 	mov.w	r1, #0
 8004644:	0159      	lsls	r1, r3, #5
 8004646:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800464a:	0150      	lsls	r0, r2, #5
 800464c:	4602      	mov	r2, r0
 800464e:	460b      	mov	r3, r1
 8004650:	4641      	mov	r1, r8
 8004652:	ebb2 0a01 	subs.w	sl, r2, r1
 8004656:	4649      	mov	r1, r9
 8004658:	eb63 0b01 	sbc.w	fp, r3, r1
 800465c:	f04f 0200 	mov.w	r2, #0
 8004660:	f04f 0300 	mov.w	r3, #0
 8004664:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8004668:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 800466c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8004670:	ebb2 040a 	subs.w	r4, r2, sl
 8004674:	eb63 050b 	sbc.w	r5, r3, fp
 8004678:	f04f 0200 	mov.w	r2, #0
 800467c:	f04f 0300 	mov.w	r3, #0
 8004680:	00eb      	lsls	r3, r5, #3
 8004682:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004686:	00e2      	lsls	r2, r4, #3
 8004688:	4614      	mov	r4, r2
 800468a:	461d      	mov	r5, r3
 800468c:	4643      	mov	r3, r8
 800468e:	18e3      	adds	r3, r4, r3
 8004690:	603b      	str	r3, [r7, #0]
 8004692:	464b      	mov	r3, r9
 8004694:	eb45 0303 	adc.w	r3, r5, r3
 8004698:	607b      	str	r3, [r7, #4]
 800469a:	f04f 0200 	mov.w	r2, #0
 800469e:	f04f 0300 	mov.w	r3, #0
 80046a2:	e9d7 4500 	ldrd	r4, r5, [r7]
 80046a6:	4629      	mov	r1, r5
 80046a8:	028b      	lsls	r3, r1, #10
 80046aa:	4621      	mov	r1, r4
 80046ac:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80046b0:	4621      	mov	r1, r4
 80046b2:	028a      	lsls	r2, r1, #10
 80046b4:	4610      	mov	r0, r2
 80046b6:	4619      	mov	r1, r3
 80046b8:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80046bc:	2200      	movs	r2, #0
 80046be:	61bb      	str	r3, [r7, #24]
 80046c0:	61fa      	str	r2, [r7, #28]
 80046c2:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80046c6:	f7fc faa3 	bl	8000c10 <__aeabi_uldivmod>
 80046ca:	4602      	mov	r2, r0
 80046cc:	460b      	mov	r3, r1
 80046ce:	4613      	mov	r3, r2
 80046d0:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80046d4:	4b0d      	ldr	r3, [pc, #52]	@ (800470c <HAL_RCC_GetSysClockFreq+0x348>)
 80046d6:	685b      	ldr	r3, [r3, #4]
 80046d8:	0f1b      	lsrs	r3, r3, #28
 80046da:	f003 0307 	and.w	r3, r3, #7
 80046de:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80046e2:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80046e6:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80046ea:	fbb2 f3f3 	udiv	r3, r2, r3
 80046ee:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80046f2:	e003      	b.n	80046fc <HAL_RCC_GetSysClockFreq+0x338>
 80046f4:	4b06      	ldr	r3, [pc, #24]	@ (8004710 <HAL_RCC_GetSysClockFreq+0x34c>)
 80046f6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80046fa:	bf00      	nop
 80046fc:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8004700:	4618      	mov	r0, r3
 8004702:	3798      	adds	r7, #152	@ 0x98
 8004704:	46bd      	mov	sp, r7
 8004706:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800470a:	bf00      	nop
 800470c:	40023800 	.word	0x40023800
 8004710:	00f42400 	.word	0x00f42400
 8004714:	017d7840 	.word	0x017d7840

08004718 <HAL_RCC_OscConfig>:
 8004718:	b580      	push	{r7, lr}
 800471a:	b086      	sub	sp, #24
 800471c:	af00      	add	r7, sp, #0
 800471e:	6078      	str	r0, [r7, #4]
 8004720:	687b      	ldr	r3, [r7, #4]
 8004722:	2b00      	cmp	r3, #0
 8004724:	d101      	bne.n	800472a <HAL_RCC_OscConfig+0x12>
 8004726:	2301      	movs	r3, #1
 8004728:	e28d      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	681b      	ldr	r3, [r3, #0]
 800472e:	f003 0301 	and.w	r3, r3, #1
 8004732:	2b00      	cmp	r3, #0
 8004734:	f000 8083 	beq.w	800483e <HAL_RCC_OscConfig+0x126>
 8004738:	4b94      	ldr	r3, [pc, #592]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 800473a:	689b      	ldr	r3, [r3, #8]
 800473c:	f003 030c 	and.w	r3, r3, #12
 8004740:	2b04      	cmp	r3, #4
 8004742:	d019      	beq.n	8004778 <HAL_RCC_OscConfig+0x60>
 8004744:	4b91      	ldr	r3, [pc, #580]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 8004746:	689b      	ldr	r3, [r3, #8]
 8004748:	f003 030c 	and.w	r3, r3, #12
 800474c:	2b08      	cmp	r3, #8
 800474e:	d106      	bne.n	800475e <HAL_RCC_OscConfig+0x46>
 8004750:	4b8e      	ldr	r3, [pc, #568]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 8004752:	685b      	ldr	r3, [r3, #4]
 8004754:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004758:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800475c:	d00c      	beq.n	8004778 <HAL_RCC_OscConfig+0x60>
 800475e:	4b8b      	ldr	r3, [pc, #556]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 8004760:	689b      	ldr	r3, [r3, #8]
 8004762:	f003 030c 	and.w	r3, r3, #12
 8004766:	2b0c      	cmp	r3, #12
 8004768:	d112      	bne.n	8004790 <HAL_RCC_OscConfig+0x78>
 800476a:	4b88      	ldr	r3, [pc, #544]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 800476c:	685b      	ldr	r3, [r3, #4]
 800476e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004772:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004776:	d10b      	bne.n	8004790 <HAL_RCC_OscConfig+0x78>
 8004778:	4b84      	ldr	r3, [pc, #528]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 800477a:	681b      	ldr	r3, [r3, #0]
 800477c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004780:	2b00      	cmp	r3, #0
 8004782:	d05b      	beq.n	800483c <HAL_RCC_OscConfig+0x124>
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	685b      	ldr	r3, [r3, #4]
 8004788:	2b00      	cmp	r3, #0
 800478a:	d157      	bne.n	800483c <HAL_RCC_OscConfig+0x124>
 800478c:	2301      	movs	r3, #1
 800478e:	e25a      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 8004790:	687b      	ldr	r3, [r7, #4]
 8004792:	685b      	ldr	r3, [r3, #4]
 8004794:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004798:	d106      	bne.n	80047a8 <HAL_RCC_OscConfig+0x90>
 800479a:	4b7c      	ldr	r3, [pc, #496]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 800479c:	681b      	ldr	r3, [r3, #0]
 800479e:	4a7b      	ldr	r2, [pc, #492]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80047a0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80047a4:	6013      	str	r3, [r2, #0]
 80047a6:	e01d      	b.n	80047e4 <HAL_RCC_OscConfig+0xcc>
 80047a8:	687b      	ldr	r3, [r7, #4]
 80047aa:	685b      	ldr	r3, [r3, #4]
 80047ac:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80047b0:	d10c      	bne.n	80047cc <HAL_RCC_OscConfig+0xb4>
 80047b2:	4b76      	ldr	r3, [pc, #472]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	4a75      	ldr	r2, [pc, #468]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80047b8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80047bc:	6013      	str	r3, [r2, #0]
 80047be:	4b73      	ldr	r3, [pc, #460]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80047c0:	681b      	ldr	r3, [r3, #0]
 80047c2:	4a72      	ldr	r2, [pc, #456]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80047c4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80047c8:	6013      	str	r3, [r2, #0]
 80047ca:	e00b      	b.n	80047e4 <HAL_RCC_OscConfig+0xcc>
 80047cc:	4b6f      	ldr	r3, [pc, #444]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80047ce:	681b      	ldr	r3, [r3, #0]
 80047d0:	4a6e      	ldr	r2, [pc, #440]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80047d2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80047d6:	6013      	str	r3, [r2, #0]
 80047d8:	4b6c      	ldr	r3, [pc, #432]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	4a6b      	ldr	r2, [pc, #428]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80047de:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80047e2:	6013      	str	r3, [r2, #0]
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	685b      	ldr	r3, [r3, #4]
 80047e8:	2b00      	cmp	r3, #0
 80047ea:	d013      	beq.n	8004814 <HAL_RCC_OscConfig+0xfc>
 80047ec:	f7fe f88a 	bl	8002904 <HAL_GetTick>
 80047f0:	6138      	str	r0, [r7, #16]
 80047f2:	e008      	b.n	8004806 <HAL_RCC_OscConfig+0xee>
 80047f4:	f7fe f886 	bl	8002904 <HAL_GetTick>
 80047f8:	4602      	mov	r2, r0
 80047fa:	693b      	ldr	r3, [r7, #16]
 80047fc:	1ad3      	subs	r3, r2, r3
 80047fe:	2b64      	cmp	r3, #100	@ 0x64
 8004800:	d901      	bls.n	8004806 <HAL_RCC_OscConfig+0xee>
 8004802:	2303      	movs	r3, #3
 8004804:	e21f      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 8004806:	4b61      	ldr	r3, [pc, #388]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800480e:	2b00      	cmp	r3, #0
 8004810:	d0f0      	beq.n	80047f4 <HAL_RCC_OscConfig+0xdc>
 8004812:	e014      	b.n	800483e <HAL_RCC_OscConfig+0x126>
 8004814:	f7fe f876 	bl	8002904 <HAL_GetTick>
 8004818:	6138      	str	r0, [r7, #16]
 800481a:	e008      	b.n	800482e <HAL_RCC_OscConfig+0x116>
 800481c:	f7fe f872 	bl	8002904 <HAL_GetTick>
 8004820:	4602      	mov	r2, r0
 8004822:	693b      	ldr	r3, [r7, #16]
 8004824:	1ad3      	subs	r3, r2, r3
 8004826:	2b64      	cmp	r3, #100	@ 0x64
 8004828:	d901      	bls.n	800482e <HAL_RCC_OscConfig+0x116>
 800482a:	2303      	movs	r3, #3
 800482c:	e20b      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 800482e:	4b57      	ldr	r3, [pc, #348]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 8004830:	681b      	ldr	r3, [r3, #0]
 8004832:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004836:	2b00      	cmp	r3, #0
 8004838:	d1f0      	bne.n	800481c <HAL_RCC_OscConfig+0x104>
 800483a:	e000      	b.n	800483e <HAL_RCC_OscConfig+0x126>
 800483c:	bf00      	nop
 800483e:	687b      	ldr	r3, [r7, #4]
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	f003 0302 	and.w	r3, r3, #2
 8004846:	2b00      	cmp	r3, #0
 8004848:	d06f      	beq.n	800492a <HAL_RCC_OscConfig+0x212>
 800484a:	4b50      	ldr	r3, [pc, #320]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 800484c:	689b      	ldr	r3, [r3, #8]
 800484e:	f003 030c 	and.w	r3, r3, #12
 8004852:	2b00      	cmp	r3, #0
 8004854:	d017      	beq.n	8004886 <HAL_RCC_OscConfig+0x16e>
 8004856:	4b4d      	ldr	r3, [pc, #308]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 8004858:	689b      	ldr	r3, [r3, #8]
 800485a:	f003 030c 	and.w	r3, r3, #12
 800485e:	2b08      	cmp	r3, #8
 8004860:	d105      	bne.n	800486e <HAL_RCC_OscConfig+0x156>
 8004862:	4b4a      	ldr	r3, [pc, #296]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 8004864:	685b      	ldr	r3, [r3, #4]
 8004866:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800486a:	2b00      	cmp	r3, #0
 800486c:	d00b      	beq.n	8004886 <HAL_RCC_OscConfig+0x16e>
 800486e:	4b47      	ldr	r3, [pc, #284]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 8004870:	689b      	ldr	r3, [r3, #8]
 8004872:	f003 030c 	and.w	r3, r3, #12
 8004876:	2b0c      	cmp	r3, #12
 8004878:	d11c      	bne.n	80048b4 <HAL_RCC_OscConfig+0x19c>
 800487a:	4b44      	ldr	r3, [pc, #272]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 800487c:	685b      	ldr	r3, [r3, #4]
 800487e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004882:	2b00      	cmp	r3, #0
 8004884:	d116      	bne.n	80048b4 <HAL_RCC_OscConfig+0x19c>
 8004886:	4b41      	ldr	r3, [pc, #260]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 8004888:	681b      	ldr	r3, [r3, #0]
 800488a:	f003 0302 	and.w	r3, r3, #2
 800488e:	2b00      	cmp	r3, #0
 8004890:	d005      	beq.n	800489e <HAL_RCC_OscConfig+0x186>
 8004892:	687b      	ldr	r3, [r7, #4]
 8004894:	68db      	ldr	r3, [r3, #12]
 8004896:	2b01      	cmp	r3, #1
 8004898:	d001      	beq.n	800489e <HAL_RCC_OscConfig+0x186>
 800489a:	2301      	movs	r3, #1
 800489c:	e1d3      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 800489e:	4b3b      	ldr	r3, [pc, #236]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	691b      	ldr	r3, [r3, #16]
 80048aa:	00db      	lsls	r3, r3, #3
 80048ac:	4937      	ldr	r1, [pc, #220]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80048ae:	4313      	orrs	r3, r2
 80048b0:	600b      	str	r3, [r1, #0]
 80048b2:	e03a      	b.n	800492a <HAL_RCC_OscConfig+0x212>
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	68db      	ldr	r3, [r3, #12]
 80048b8:	2b00      	cmp	r3, #0
 80048ba:	d020      	beq.n	80048fe <HAL_RCC_OscConfig+0x1e6>
 80048bc:	4b34      	ldr	r3, [pc, #208]	@ (8004990 <HAL_RCC_OscConfig+0x278>)
 80048be:	2201      	movs	r2, #1
 80048c0:	601a      	str	r2, [r3, #0]
 80048c2:	f7fe f81f 	bl	8002904 <HAL_GetTick>
 80048c6:	6138      	str	r0, [r7, #16]
 80048c8:	e008      	b.n	80048dc <HAL_RCC_OscConfig+0x1c4>
 80048ca:	f7fe f81b 	bl	8002904 <HAL_GetTick>
 80048ce:	4602      	mov	r2, r0
 80048d0:	693b      	ldr	r3, [r7, #16]
 80048d2:	1ad3      	subs	r3, r2, r3
 80048d4:	2b02      	cmp	r3, #2
 80048d6:	d901      	bls.n	80048dc <HAL_RCC_OscConfig+0x1c4>
 80048d8:	2303      	movs	r3, #3
 80048da:	e1b4      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 80048dc:	4b2b      	ldr	r3, [pc, #172]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80048de:	681b      	ldr	r3, [r3, #0]
 80048e0:	f003 0302 	and.w	r3, r3, #2
 80048e4:	2b00      	cmp	r3, #0
 80048e6:	d0f0      	beq.n	80048ca <HAL_RCC_OscConfig+0x1b2>
 80048e8:	4b28      	ldr	r3, [pc, #160]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80048f0:	687b      	ldr	r3, [r7, #4]
 80048f2:	691b      	ldr	r3, [r3, #16]
 80048f4:	00db      	lsls	r3, r3, #3
 80048f6:	4925      	ldr	r1, [pc, #148]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 80048f8:	4313      	orrs	r3, r2
 80048fa:	600b      	str	r3, [r1, #0]
 80048fc:	e015      	b.n	800492a <HAL_RCC_OscConfig+0x212>
 80048fe:	4b24      	ldr	r3, [pc, #144]	@ (8004990 <HAL_RCC_OscConfig+0x278>)
 8004900:	2200      	movs	r2, #0
 8004902:	601a      	str	r2, [r3, #0]
 8004904:	f7fd fffe 	bl	8002904 <HAL_GetTick>
 8004908:	6138      	str	r0, [r7, #16]
 800490a:	e008      	b.n	800491e <HAL_RCC_OscConfig+0x206>
 800490c:	f7fd fffa 	bl	8002904 <HAL_GetTick>
 8004910:	4602      	mov	r2, r0
 8004912:	693b      	ldr	r3, [r7, #16]
 8004914:	1ad3      	subs	r3, r2, r3
 8004916:	2b02      	cmp	r3, #2
 8004918:	d901      	bls.n	800491e <HAL_RCC_OscConfig+0x206>
 800491a:	2303      	movs	r3, #3
 800491c:	e193      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 800491e:	4b1b      	ldr	r3, [pc, #108]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 8004920:	681b      	ldr	r3, [r3, #0]
 8004922:	f003 0302 	and.w	r3, r3, #2
 8004926:	2b00      	cmp	r3, #0
 8004928:	d1f0      	bne.n	800490c <HAL_RCC_OscConfig+0x1f4>
 800492a:	687b      	ldr	r3, [r7, #4]
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	f003 0308 	and.w	r3, r3, #8
 8004932:	2b00      	cmp	r3, #0
 8004934:	d036      	beq.n	80049a4 <HAL_RCC_OscConfig+0x28c>
 8004936:	687b      	ldr	r3, [r7, #4]
 8004938:	695b      	ldr	r3, [r3, #20]
 800493a:	2b00      	cmp	r3, #0
 800493c:	d016      	beq.n	800496c <HAL_RCC_OscConfig+0x254>
 800493e:	4b15      	ldr	r3, [pc, #84]	@ (8004994 <HAL_RCC_OscConfig+0x27c>)
 8004940:	2201      	movs	r2, #1
 8004942:	601a      	str	r2, [r3, #0]
 8004944:	f7fd ffde 	bl	8002904 <HAL_GetTick>
 8004948:	6138      	str	r0, [r7, #16]
 800494a:	e008      	b.n	800495e <HAL_RCC_OscConfig+0x246>
 800494c:	f7fd ffda 	bl	8002904 <HAL_GetTick>
 8004950:	4602      	mov	r2, r0
 8004952:	693b      	ldr	r3, [r7, #16]
 8004954:	1ad3      	subs	r3, r2, r3
 8004956:	2b02      	cmp	r3, #2
 8004958:	d901      	bls.n	800495e <HAL_RCC_OscConfig+0x246>
 800495a:	2303      	movs	r3, #3
 800495c:	e173      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 800495e:	4b0b      	ldr	r3, [pc, #44]	@ (800498c <HAL_RCC_OscConfig+0x274>)
 8004960:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004962:	f003 0302 	and.w	r3, r3, #2
 8004966:	2b00      	cmp	r3, #0
 8004968:	d0f0      	beq.n	800494c <HAL_RCC_OscConfig+0x234>
 800496a:	e01b      	b.n	80049a4 <HAL_RCC_OscConfig+0x28c>
 800496c:	4b09      	ldr	r3, [pc, #36]	@ (8004994 <HAL_RCC_OscConfig+0x27c>)
 800496e:	2200      	movs	r2, #0
 8004970:	601a      	str	r2, [r3, #0]
 8004972:	f7fd ffc7 	bl	8002904 <HAL_GetTick>
 8004976:	6138      	str	r0, [r7, #16]
 8004978:	e00e      	b.n	8004998 <HAL_RCC_OscConfig+0x280>
 800497a:	f7fd ffc3 	bl	8002904 <HAL_GetTick>
 800497e:	4602      	mov	r2, r0
 8004980:	693b      	ldr	r3, [r7, #16]
 8004982:	1ad3      	subs	r3, r2, r3
 8004984:	2b02      	cmp	r3, #2
 8004986:	d907      	bls.n	8004998 <HAL_RCC_OscConfig+0x280>
 8004988:	2303      	movs	r3, #3
 800498a:	e15c      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 800498c:	40023800 	.word	0x40023800
 8004990:	42470000 	.word	0x42470000
 8004994:	42470e80 	.word	0x42470e80
 8004998:	4b8a      	ldr	r3, [pc, #552]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 800499a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800499c:	f003 0302 	and.w	r3, r3, #2
 80049a0:	2b00      	cmp	r3, #0
 80049a2:	d1ea      	bne.n	800497a <HAL_RCC_OscConfig+0x262>
 80049a4:	687b      	ldr	r3, [r7, #4]
 80049a6:	681b      	ldr	r3, [r3, #0]
 80049a8:	f003 0304 	and.w	r3, r3, #4
 80049ac:	2b00      	cmp	r3, #0
 80049ae:	f000 8097 	beq.w	8004ae0 <HAL_RCC_OscConfig+0x3c8>
 80049b2:	2300      	movs	r3, #0
 80049b4:	75fb      	strb	r3, [r7, #23]
 80049b6:	4b83      	ldr	r3, [pc, #524]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 80049b8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80049ba:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80049be:	2b00      	cmp	r3, #0
 80049c0:	d10f      	bne.n	80049e2 <HAL_RCC_OscConfig+0x2ca>
 80049c2:	2300      	movs	r3, #0
 80049c4:	60bb      	str	r3, [r7, #8]
 80049c6:	4b7f      	ldr	r3, [pc, #508]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 80049c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80049ca:	4a7e      	ldr	r2, [pc, #504]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 80049cc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80049d0:	6413      	str	r3, [r2, #64]	@ 0x40
 80049d2:	4b7c      	ldr	r3, [pc, #496]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 80049d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80049d6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80049da:	60bb      	str	r3, [r7, #8]
 80049dc:	68bb      	ldr	r3, [r7, #8]
 80049de:	2301      	movs	r3, #1
 80049e0:	75fb      	strb	r3, [r7, #23]
 80049e2:	4b79      	ldr	r3, [pc, #484]	@ (8004bc8 <HAL_RCC_OscConfig+0x4b0>)
 80049e4:	681b      	ldr	r3, [r3, #0]
 80049e6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80049ea:	2b00      	cmp	r3, #0
 80049ec:	d118      	bne.n	8004a20 <HAL_RCC_OscConfig+0x308>
 80049ee:	4b76      	ldr	r3, [pc, #472]	@ (8004bc8 <HAL_RCC_OscConfig+0x4b0>)
 80049f0:	681b      	ldr	r3, [r3, #0]
 80049f2:	4a75      	ldr	r2, [pc, #468]	@ (8004bc8 <HAL_RCC_OscConfig+0x4b0>)
 80049f4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80049f8:	6013      	str	r3, [r2, #0]
 80049fa:	f7fd ff83 	bl	8002904 <HAL_GetTick>
 80049fe:	6138      	str	r0, [r7, #16]
 8004a00:	e008      	b.n	8004a14 <HAL_RCC_OscConfig+0x2fc>
 8004a02:	f7fd ff7f 	bl	8002904 <HAL_GetTick>
 8004a06:	4602      	mov	r2, r0
 8004a08:	693b      	ldr	r3, [r7, #16]
 8004a0a:	1ad3      	subs	r3, r2, r3
 8004a0c:	2b02      	cmp	r3, #2
 8004a0e:	d901      	bls.n	8004a14 <HAL_RCC_OscConfig+0x2fc>
 8004a10:	2303      	movs	r3, #3
 8004a12:	e118      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 8004a14:	4b6c      	ldr	r3, [pc, #432]	@ (8004bc8 <HAL_RCC_OscConfig+0x4b0>)
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004a1c:	2b00      	cmp	r3, #0
 8004a1e:	d0f0      	beq.n	8004a02 <HAL_RCC_OscConfig+0x2ea>
 8004a20:	687b      	ldr	r3, [r7, #4]
 8004a22:	689b      	ldr	r3, [r3, #8]
 8004a24:	2b01      	cmp	r3, #1
 8004a26:	d106      	bne.n	8004a36 <HAL_RCC_OscConfig+0x31e>
 8004a28:	4b66      	ldr	r3, [pc, #408]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004a2a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004a2c:	4a65      	ldr	r2, [pc, #404]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004a2e:	f043 0301 	orr.w	r3, r3, #1
 8004a32:	6713      	str	r3, [r2, #112]	@ 0x70
 8004a34:	e01c      	b.n	8004a70 <HAL_RCC_OscConfig+0x358>
 8004a36:	687b      	ldr	r3, [r7, #4]
 8004a38:	689b      	ldr	r3, [r3, #8]
 8004a3a:	2b05      	cmp	r3, #5
 8004a3c:	d10c      	bne.n	8004a58 <HAL_RCC_OscConfig+0x340>
 8004a3e:	4b61      	ldr	r3, [pc, #388]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004a40:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004a42:	4a60      	ldr	r2, [pc, #384]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004a44:	f043 0304 	orr.w	r3, r3, #4
 8004a48:	6713      	str	r3, [r2, #112]	@ 0x70
 8004a4a:	4b5e      	ldr	r3, [pc, #376]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004a4c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004a4e:	4a5d      	ldr	r2, [pc, #372]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004a50:	f043 0301 	orr.w	r3, r3, #1
 8004a54:	6713      	str	r3, [r2, #112]	@ 0x70
 8004a56:	e00b      	b.n	8004a70 <HAL_RCC_OscConfig+0x358>
 8004a58:	4b5a      	ldr	r3, [pc, #360]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004a5a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004a5c:	4a59      	ldr	r2, [pc, #356]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004a5e:	f023 0301 	bic.w	r3, r3, #1
 8004a62:	6713      	str	r3, [r2, #112]	@ 0x70
 8004a64:	4b57      	ldr	r3, [pc, #348]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004a66:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004a68:	4a56      	ldr	r2, [pc, #344]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004a6a:	f023 0304 	bic.w	r3, r3, #4
 8004a6e:	6713      	str	r3, [r2, #112]	@ 0x70
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	689b      	ldr	r3, [r3, #8]
 8004a74:	2b00      	cmp	r3, #0
 8004a76:	d015      	beq.n	8004aa4 <HAL_RCC_OscConfig+0x38c>
 8004a78:	f7fd ff44 	bl	8002904 <HAL_GetTick>
 8004a7c:	6138      	str	r0, [r7, #16]
 8004a7e:	e00a      	b.n	8004a96 <HAL_RCC_OscConfig+0x37e>
 8004a80:	f7fd ff40 	bl	8002904 <HAL_GetTick>
 8004a84:	4602      	mov	r2, r0
 8004a86:	693b      	ldr	r3, [r7, #16]
 8004a88:	1ad3      	subs	r3, r2, r3
 8004a8a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004a8e:	4293      	cmp	r3, r2
 8004a90:	d901      	bls.n	8004a96 <HAL_RCC_OscConfig+0x37e>
 8004a92:	2303      	movs	r3, #3
 8004a94:	e0d7      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 8004a96:	4b4b      	ldr	r3, [pc, #300]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004a98:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004a9a:	f003 0302 	and.w	r3, r3, #2
 8004a9e:	2b00      	cmp	r3, #0
 8004aa0:	d0ee      	beq.n	8004a80 <HAL_RCC_OscConfig+0x368>
 8004aa2:	e014      	b.n	8004ace <HAL_RCC_OscConfig+0x3b6>
 8004aa4:	f7fd ff2e 	bl	8002904 <HAL_GetTick>
 8004aa8:	6138      	str	r0, [r7, #16]
 8004aaa:	e00a      	b.n	8004ac2 <HAL_RCC_OscConfig+0x3aa>
 8004aac:	f7fd ff2a 	bl	8002904 <HAL_GetTick>
 8004ab0:	4602      	mov	r2, r0
 8004ab2:	693b      	ldr	r3, [r7, #16]
 8004ab4:	1ad3      	subs	r3, r2, r3
 8004ab6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004aba:	4293      	cmp	r3, r2
 8004abc:	d901      	bls.n	8004ac2 <HAL_RCC_OscConfig+0x3aa>
 8004abe:	2303      	movs	r3, #3
 8004ac0:	e0c1      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 8004ac2:	4b40      	ldr	r3, [pc, #256]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004ac4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ac6:	f003 0302 	and.w	r3, r3, #2
 8004aca:	2b00      	cmp	r3, #0
 8004acc:	d1ee      	bne.n	8004aac <HAL_RCC_OscConfig+0x394>
 8004ace:	7dfb      	ldrb	r3, [r7, #23]
 8004ad0:	2b01      	cmp	r3, #1
 8004ad2:	d105      	bne.n	8004ae0 <HAL_RCC_OscConfig+0x3c8>
 8004ad4:	4b3b      	ldr	r3, [pc, #236]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004ad6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004ad8:	4a3a      	ldr	r2, [pc, #232]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004ada:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004ade:	6413      	str	r3, [r2, #64]	@ 0x40
 8004ae0:	687b      	ldr	r3, [r7, #4]
 8004ae2:	699b      	ldr	r3, [r3, #24]
 8004ae4:	2b00      	cmp	r3, #0
 8004ae6:	f000 80ad 	beq.w	8004c44 <HAL_RCC_OscConfig+0x52c>
 8004aea:	4b36      	ldr	r3, [pc, #216]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004aec:	689b      	ldr	r3, [r3, #8]
 8004aee:	f003 030c 	and.w	r3, r3, #12
 8004af2:	2b08      	cmp	r3, #8
 8004af4:	d060      	beq.n	8004bb8 <HAL_RCC_OscConfig+0x4a0>
 8004af6:	687b      	ldr	r3, [r7, #4]
 8004af8:	699b      	ldr	r3, [r3, #24]
 8004afa:	2b02      	cmp	r3, #2
 8004afc:	d145      	bne.n	8004b8a <HAL_RCC_OscConfig+0x472>
 8004afe:	4b33      	ldr	r3, [pc, #204]	@ (8004bcc <HAL_RCC_OscConfig+0x4b4>)
 8004b00:	2200      	movs	r2, #0
 8004b02:	601a      	str	r2, [r3, #0]
 8004b04:	f7fd fefe 	bl	8002904 <HAL_GetTick>
 8004b08:	6138      	str	r0, [r7, #16]
 8004b0a:	e008      	b.n	8004b1e <HAL_RCC_OscConfig+0x406>
 8004b0c:	f7fd fefa 	bl	8002904 <HAL_GetTick>
 8004b10:	4602      	mov	r2, r0
 8004b12:	693b      	ldr	r3, [r7, #16]
 8004b14:	1ad3      	subs	r3, r2, r3
 8004b16:	2b02      	cmp	r3, #2
 8004b18:	d901      	bls.n	8004b1e <HAL_RCC_OscConfig+0x406>
 8004b1a:	2303      	movs	r3, #3
 8004b1c:	e093      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 8004b1e:	4b29      	ldr	r3, [pc, #164]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004b20:	681b      	ldr	r3, [r3, #0]
 8004b22:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004b26:	2b00      	cmp	r3, #0
 8004b28:	d1f0      	bne.n	8004b0c <HAL_RCC_OscConfig+0x3f4>
 8004b2a:	687b      	ldr	r3, [r7, #4]
 8004b2c:	69da      	ldr	r2, [r3, #28]
 8004b2e:	687b      	ldr	r3, [r7, #4]
 8004b30:	6a1b      	ldr	r3, [r3, #32]
 8004b32:	431a      	orrs	r2, r3
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b38:	019b      	lsls	r3, r3, #6
 8004b3a:	431a      	orrs	r2, r3
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004b40:	085b      	lsrs	r3, r3, #1
 8004b42:	3b01      	subs	r3, #1
 8004b44:	041b      	lsls	r3, r3, #16
 8004b46:	431a      	orrs	r2, r3
 8004b48:	687b      	ldr	r3, [r7, #4]
 8004b4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004b4c:	061b      	lsls	r3, r3, #24
 8004b4e:	431a      	orrs	r2, r3
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004b54:	071b      	lsls	r3, r3, #28
 8004b56:	491b      	ldr	r1, [pc, #108]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004b58:	4313      	orrs	r3, r2
 8004b5a:	604b      	str	r3, [r1, #4]
 8004b5c:	4b1b      	ldr	r3, [pc, #108]	@ (8004bcc <HAL_RCC_OscConfig+0x4b4>)
 8004b5e:	2201      	movs	r2, #1
 8004b60:	601a      	str	r2, [r3, #0]
 8004b62:	f7fd fecf 	bl	8002904 <HAL_GetTick>
 8004b66:	6138      	str	r0, [r7, #16]
 8004b68:	e008      	b.n	8004b7c <HAL_RCC_OscConfig+0x464>
 8004b6a:	f7fd fecb 	bl	8002904 <HAL_GetTick>
 8004b6e:	4602      	mov	r2, r0
 8004b70:	693b      	ldr	r3, [r7, #16]
 8004b72:	1ad3      	subs	r3, r2, r3
 8004b74:	2b02      	cmp	r3, #2
 8004b76:	d901      	bls.n	8004b7c <HAL_RCC_OscConfig+0x464>
 8004b78:	2303      	movs	r3, #3
 8004b7a:	e064      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 8004b7c:	4b11      	ldr	r3, [pc, #68]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004b7e:	681b      	ldr	r3, [r3, #0]
 8004b80:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004b84:	2b00      	cmp	r3, #0
 8004b86:	d0f0      	beq.n	8004b6a <HAL_RCC_OscConfig+0x452>
 8004b88:	e05c      	b.n	8004c44 <HAL_RCC_OscConfig+0x52c>
 8004b8a:	4b10      	ldr	r3, [pc, #64]	@ (8004bcc <HAL_RCC_OscConfig+0x4b4>)
 8004b8c:	2200      	movs	r2, #0
 8004b8e:	601a      	str	r2, [r3, #0]
 8004b90:	f7fd feb8 	bl	8002904 <HAL_GetTick>
 8004b94:	6138      	str	r0, [r7, #16]
 8004b96:	e008      	b.n	8004baa <HAL_RCC_OscConfig+0x492>
 8004b98:	f7fd feb4 	bl	8002904 <HAL_GetTick>
 8004b9c:	4602      	mov	r2, r0
 8004b9e:	693b      	ldr	r3, [r7, #16]
 8004ba0:	1ad3      	subs	r3, r2, r3
 8004ba2:	2b02      	cmp	r3, #2
 8004ba4:	d901      	bls.n	8004baa <HAL_RCC_OscConfig+0x492>
 8004ba6:	2303      	movs	r3, #3
 8004ba8:	e04d      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 8004baa:	4b06      	ldr	r3, [pc, #24]	@ (8004bc4 <HAL_RCC_OscConfig+0x4ac>)
 8004bac:	681b      	ldr	r3, [r3, #0]
 8004bae:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004bb2:	2b00      	cmp	r3, #0
 8004bb4:	d1f0      	bne.n	8004b98 <HAL_RCC_OscConfig+0x480>
 8004bb6:	e045      	b.n	8004c44 <HAL_RCC_OscConfig+0x52c>
 8004bb8:	687b      	ldr	r3, [r7, #4]
 8004bba:	699b      	ldr	r3, [r3, #24]
 8004bbc:	2b01      	cmp	r3, #1
 8004bbe:	d107      	bne.n	8004bd0 <HAL_RCC_OscConfig+0x4b8>
 8004bc0:	2301      	movs	r3, #1
 8004bc2:	e040      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 8004bc4:	40023800 	.word	0x40023800
 8004bc8:	40007000 	.word	0x40007000
 8004bcc:	42470060 	.word	0x42470060
 8004bd0:	4b1f      	ldr	r3, [pc, #124]	@ (8004c50 <HAL_RCC_OscConfig+0x538>)
 8004bd2:	685b      	ldr	r3, [r3, #4]
 8004bd4:	60fb      	str	r3, [r7, #12]
 8004bd6:	687b      	ldr	r3, [r7, #4]
 8004bd8:	699b      	ldr	r3, [r3, #24]
 8004bda:	2b01      	cmp	r3, #1
 8004bdc:	d030      	beq.n	8004c40 <HAL_RCC_OscConfig+0x528>
 8004bde:	68fb      	ldr	r3, [r7, #12]
 8004be0:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8004be4:	687b      	ldr	r3, [r7, #4]
 8004be6:	69db      	ldr	r3, [r3, #28]
 8004be8:	429a      	cmp	r2, r3
 8004bea:	d129      	bne.n	8004c40 <HAL_RCC_OscConfig+0x528>
 8004bec:	68fb      	ldr	r3, [r7, #12]
 8004bee:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	6a1b      	ldr	r3, [r3, #32]
 8004bf6:	429a      	cmp	r2, r3
 8004bf8:	d122      	bne.n	8004c40 <HAL_RCC_OscConfig+0x528>
 8004bfa:	68fa      	ldr	r2, [r7, #12]
 8004bfc:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8004c00:	4013      	ands	r3, r2
 8004c02:	687a      	ldr	r2, [r7, #4]
 8004c04:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8004c06:	0192      	lsls	r2, r2, #6
 8004c08:	4293      	cmp	r3, r2
 8004c0a:	d119      	bne.n	8004c40 <HAL_RCC_OscConfig+0x528>
 8004c0c:	68fb      	ldr	r3, [r7, #12]
 8004c0e:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004c16:	085b      	lsrs	r3, r3, #1
 8004c18:	3b01      	subs	r3, #1
 8004c1a:	041b      	lsls	r3, r3, #16
 8004c1c:	429a      	cmp	r2, r3
 8004c1e:	d10f      	bne.n	8004c40 <HAL_RCC_OscConfig+0x528>
 8004c20:	68fb      	ldr	r3, [r7, #12]
 8004c22:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8004c26:	687b      	ldr	r3, [r7, #4]
 8004c28:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004c2a:	061b      	lsls	r3, r3, #24
 8004c2c:	429a      	cmp	r2, r3
 8004c2e:	d107      	bne.n	8004c40 <HAL_RCC_OscConfig+0x528>
 8004c30:	68fb      	ldr	r3, [r7, #12]
 8004c32:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8004c36:	687b      	ldr	r3, [r7, #4]
 8004c38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004c3a:	071b      	lsls	r3, r3, #28
 8004c3c:	429a      	cmp	r2, r3
 8004c3e:	d001      	beq.n	8004c44 <HAL_RCC_OscConfig+0x52c>
 8004c40:	2301      	movs	r3, #1
 8004c42:	e000      	b.n	8004c46 <HAL_RCC_OscConfig+0x52e>
 8004c44:	2300      	movs	r3, #0
 8004c46:	4618      	mov	r0, r3
 8004c48:	3718      	adds	r7, #24
 8004c4a:	46bd      	mov	sp, r7
 8004c4c:	bd80      	pop	{r7, pc}
 8004c4e:	bf00      	nop
 8004c50:	40023800 	.word	0x40023800

08004c54 <HAL_TIM_Base_Init>:
 8004c54:	b580      	push	{r7, lr}
 8004c56:	b082      	sub	sp, #8
 8004c58:	af00      	add	r7, sp, #0
 8004c5a:	6078      	str	r0, [r7, #4]
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	2b00      	cmp	r3, #0
 8004c60:	d101      	bne.n	8004c66 <HAL_TIM_Base_Init+0x12>
 8004c62:	2301      	movs	r3, #1
 8004c64:	e041      	b.n	8004cea <HAL_TIM_Base_Init+0x96>
 8004c66:	687b      	ldr	r3, [r7, #4]
 8004c68:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004c6c:	b2db      	uxtb	r3, r3
 8004c6e:	2b00      	cmp	r3, #0
 8004c70:	d106      	bne.n	8004c80 <HAL_TIM_Base_Init+0x2c>
 8004c72:	687b      	ldr	r3, [r7, #4]
 8004c74:	2200      	movs	r2, #0
 8004c76:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004c7a:	6878      	ldr	r0, [r7, #4]
 8004c7c:	f7fd fd12 	bl	80026a4 <HAL_TIM_Base_MspInit>
 8004c80:	687b      	ldr	r3, [r7, #4]
 8004c82:	2202      	movs	r2, #2
 8004c84:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	681a      	ldr	r2, [r3, #0]
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	3304      	adds	r3, #4
 8004c90:	4619      	mov	r1, r3
 8004c92:	4610      	mov	r0, r2
 8004c94:	f000 fdf4 	bl	8005880 <TIM_Base_SetConfig>
 8004c98:	687b      	ldr	r3, [r7, #4]
 8004c9a:	2201      	movs	r2, #1
 8004c9c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	2201      	movs	r2, #1
 8004ca4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	2201      	movs	r2, #1
 8004cac:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	2201      	movs	r2, #1
 8004cb4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004cb8:	687b      	ldr	r3, [r7, #4]
 8004cba:	2201      	movs	r2, #1
 8004cbc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004cc0:	687b      	ldr	r3, [r7, #4]
 8004cc2:	2201      	movs	r2, #1
 8004cc4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004cc8:	687b      	ldr	r3, [r7, #4]
 8004cca:	2201      	movs	r2, #1
 8004ccc:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	2201      	movs	r2, #1
 8004cd4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	2201      	movs	r2, #1
 8004cdc:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	2201      	movs	r2, #1
 8004ce4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004ce8:	2300      	movs	r3, #0
 8004cea:	4618      	mov	r0, r3
 8004cec:	3708      	adds	r7, #8
 8004cee:	46bd      	mov	sp, r7
 8004cf0:	bd80      	pop	{r7, pc}
	...

08004cf4 <HAL_TIM_Base_Start>:
 8004cf4:	b480      	push	{r7}
 8004cf6:	b085      	sub	sp, #20
 8004cf8:	af00      	add	r7, sp, #0
 8004cfa:	6078      	str	r0, [r7, #4]
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004d02:	b2db      	uxtb	r3, r3
 8004d04:	2b01      	cmp	r3, #1
 8004d06:	d001      	beq.n	8004d0c <HAL_TIM_Base_Start+0x18>
 8004d08:	2301      	movs	r3, #1
 8004d0a:	e046      	b.n	8004d9a <HAL_TIM_Base_Start+0xa6>
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	2202      	movs	r2, #2
 8004d10:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004d14:	687b      	ldr	r3, [r7, #4]
 8004d16:	681b      	ldr	r3, [r3, #0]
 8004d18:	4a23      	ldr	r2, [pc, #140]	@ (8004da8 <HAL_TIM_Base_Start+0xb4>)
 8004d1a:	4293      	cmp	r3, r2
 8004d1c:	d022      	beq.n	8004d64 <HAL_TIM_Base_Start+0x70>
 8004d1e:	687b      	ldr	r3, [r7, #4]
 8004d20:	681b      	ldr	r3, [r3, #0]
 8004d22:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004d26:	d01d      	beq.n	8004d64 <HAL_TIM_Base_Start+0x70>
 8004d28:	687b      	ldr	r3, [r7, #4]
 8004d2a:	681b      	ldr	r3, [r3, #0]
 8004d2c:	4a1f      	ldr	r2, [pc, #124]	@ (8004dac <HAL_TIM_Base_Start+0xb8>)
 8004d2e:	4293      	cmp	r3, r2
 8004d30:	d018      	beq.n	8004d64 <HAL_TIM_Base_Start+0x70>
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	681b      	ldr	r3, [r3, #0]
 8004d36:	4a1e      	ldr	r2, [pc, #120]	@ (8004db0 <HAL_TIM_Base_Start+0xbc>)
 8004d38:	4293      	cmp	r3, r2
 8004d3a:	d013      	beq.n	8004d64 <HAL_TIM_Base_Start+0x70>
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	681b      	ldr	r3, [r3, #0]
 8004d40:	4a1c      	ldr	r2, [pc, #112]	@ (8004db4 <HAL_TIM_Base_Start+0xc0>)
 8004d42:	4293      	cmp	r3, r2
 8004d44:	d00e      	beq.n	8004d64 <HAL_TIM_Base_Start+0x70>
 8004d46:	687b      	ldr	r3, [r7, #4]
 8004d48:	681b      	ldr	r3, [r3, #0]
 8004d4a:	4a1b      	ldr	r2, [pc, #108]	@ (8004db8 <HAL_TIM_Base_Start+0xc4>)
 8004d4c:	4293      	cmp	r3, r2
 8004d4e:	d009      	beq.n	8004d64 <HAL_TIM_Base_Start+0x70>
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	681b      	ldr	r3, [r3, #0]
 8004d54:	4a19      	ldr	r2, [pc, #100]	@ (8004dbc <HAL_TIM_Base_Start+0xc8>)
 8004d56:	4293      	cmp	r3, r2
 8004d58:	d004      	beq.n	8004d64 <HAL_TIM_Base_Start+0x70>
 8004d5a:	687b      	ldr	r3, [r7, #4]
 8004d5c:	681b      	ldr	r3, [r3, #0]
 8004d5e:	4a18      	ldr	r2, [pc, #96]	@ (8004dc0 <HAL_TIM_Base_Start+0xcc>)
 8004d60:	4293      	cmp	r3, r2
 8004d62:	d111      	bne.n	8004d88 <HAL_TIM_Base_Start+0x94>
 8004d64:	687b      	ldr	r3, [r7, #4]
 8004d66:	681b      	ldr	r3, [r3, #0]
 8004d68:	689b      	ldr	r3, [r3, #8]
 8004d6a:	f003 0307 	and.w	r3, r3, #7
 8004d6e:	60fb      	str	r3, [r7, #12]
 8004d70:	68fb      	ldr	r3, [r7, #12]
 8004d72:	2b06      	cmp	r3, #6
 8004d74:	d010      	beq.n	8004d98 <HAL_TIM_Base_Start+0xa4>
 8004d76:	687b      	ldr	r3, [r7, #4]
 8004d78:	681b      	ldr	r3, [r3, #0]
 8004d7a:	681a      	ldr	r2, [r3, #0]
 8004d7c:	687b      	ldr	r3, [r7, #4]
 8004d7e:	681b      	ldr	r3, [r3, #0]
 8004d80:	f042 0201 	orr.w	r2, r2, #1
 8004d84:	601a      	str	r2, [r3, #0]
 8004d86:	e007      	b.n	8004d98 <HAL_TIM_Base_Start+0xa4>
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	681b      	ldr	r3, [r3, #0]
 8004d8c:	681a      	ldr	r2, [r3, #0]
 8004d8e:	687b      	ldr	r3, [r7, #4]
 8004d90:	681b      	ldr	r3, [r3, #0]
 8004d92:	f042 0201 	orr.w	r2, r2, #1
 8004d96:	601a      	str	r2, [r3, #0]
 8004d98:	2300      	movs	r3, #0
 8004d9a:	4618      	mov	r0, r3
 8004d9c:	3714      	adds	r7, #20
 8004d9e:	46bd      	mov	sp, r7
 8004da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004da4:	4770      	bx	lr
 8004da6:	bf00      	nop
 8004da8:	40010000 	.word	0x40010000
 8004dac:	40000400 	.word	0x40000400
 8004db0:	40000800 	.word	0x40000800
 8004db4:	40000c00 	.word	0x40000c00
 8004db8:	40010400 	.word	0x40010400
 8004dbc:	40014000 	.word	0x40014000
 8004dc0:	40001800 	.word	0x40001800

08004dc4 <HAL_TIM_Base_Start_IT>:
 8004dc4:	b480      	push	{r7}
 8004dc6:	b085      	sub	sp, #20
 8004dc8:	af00      	add	r7, sp, #0
 8004dca:	6078      	str	r0, [r7, #4]
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004dd2:	b2db      	uxtb	r3, r3
 8004dd4:	2b01      	cmp	r3, #1
 8004dd6:	d001      	beq.n	8004ddc <HAL_TIM_Base_Start_IT+0x18>
 8004dd8:	2301      	movs	r3, #1
 8004dda:	e04e      	b.n	8004e7a <HAL_TIM_Base_Start_IT+0xb6>
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	2202      	movs	r2, #2
 8004de0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	681b      	ldr	r3, [r3, #0]
 8004de8:	68da      	ldr	r2, [r3, #12]
 8004dea:	687b      	ldr	r3, [r7, #4]
 8004dec:	681b      	ldr	r3, [r3, #0]
 8004dee:	f042 0201 	orr.w	r2, r2, #1
 8004df2:	60da      	str	r2, [r3, #12]
 8004df4:	687b      	ldr	r3, [r7, #4]
 8004df6:	681b      	ldr	r3, [r3, #0]
 8004df8:	4a23      	ldr	r2, [pc, #140]	@ (8004e88 <HAL_TIM_Base_Start_IT+0xc4>)
 8004dfa:	4293      	cmp	r3, r2
 8004dfc:	d022      	beq.n	8004e44 <HAL_TIM_Base_Start_IT+0x80>
 8004dfe:	687b      	ldr	r3, [r7, #4]
 8004e00:	681b      	ldr	r3, [r3, #0]
 8004e02:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004e06:	d01d      	beq.n	8004e44 <HAL_TIM_Base_Start_IT+0x80>
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	681b      	ldr	r3, [r3, #0]
 8004e0c:	4a1f      	ldr	r2, [pc, #124]	@ (8004e8c <HAL_TIM_Base_Start_IT+0xc8>)
 8004e0e:	4293      	cmp	r3, r2
 8004e10:	d018      	beq.n	8004e44 <HAL_TIM_Base_Start_IT+0x80>
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	681b      	ldr	r3, [r3, #0]
 8004e16:	4a1e      	ldr	r2, [pc, #120]	@ (8004e90 <HAL_TIM_Base_Start_IT+0xcc>)
 8004e18:	4293      	cmp	r3, r2
 8004e1a:	d013      	beq.n	8004e44 <HAL_TIM_Base_Start_IT+0x80>
 8004e1c:	687b      	ldr	r3, [r7, #4]
 8004e1e:	681b      	ldr	r3, [r3, #0]
 8004e20:	4a1c      	ldr	r2, [pc, #112]	@ (8004e94 <HAL_TIM_Base_Start_IT+0xd0>)
 8004e22:	4293      	cmp	r3, r2
 8004e24:	d00e      	beq.n	8004e44 <HAL_TIM_Base_Start_IT+0x80>
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	681b      	ldr	r3, [r3, #0]
 8004e2a:	4a1b      	ldr	r2, [pc, #108]	@ (8004e98 <HAL_TIM_Base_Start_IT+0xd4>)
 8004e2c:	4293      	cmp	r3, r2
 8004e2e:	d009      	beq.n	8004e44 <HAL_TIM_Base_Start_IT+0x80>
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	681b      	ldr	r3, [r3, #0]
 8004e34:	4a19      	ldr	r2, [pc, #100]	@ (8004e9c <HAL_TIM_Base_Start_IT+0xd8>)
 8004e36:	4293      	cmp	r3, r2
 8004e38:	d004      	beq.n	8004e44 <HAL_TIM_Base_Start_IT+0x80>
 8004e3a:	687b      	ldr	r3, [r7, #4]
 8004e3c:	681b      	ldr	r3, [r3, #0]
 8004e3e:	4a18      	ldr	r2, [pc, #96]	@ (8004ea0 <HAL_TIM_Base_Start_IT+0xdc>)
 8004e40:	4293      	cmp	r3, r2
 8004e42:	d111      	bne.n	8004e68 <HAL_TIM_Base_Start_IT+0xa4>
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	681b      	ldr	r3, [r3, #0]
 8004e48:	689b      	ldr	r3, [r3, #8]
 8004e4a:	f003 0307 	and.w	r3, r3, #7
 8004e4e:	60fb      	str	r3, [r7, #12]
 8004e50:	68fb      	ldr	r3, [r7, #12]
 8004e52:	2b06      	cmp	r3, #6
 8004e54:	d010      	beq.n	8004e78 <HAL_TIM_Base_Start_IT+0xb4>
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	681b      	ldr	r3, [r3, #0]
 8004e5a:	681a      	ldr	r2, [r3, #0]
 8004e5c:	687b      	ldr	r3, [r7, #4]
 8004e5e:	681b      	ldr	r3, [r3, #0]
 8004e60:	f042 0201 	orr.w	r2, r2, #1
 8004e64:	601a      	str	r2, [r3, #0]
 8004e66:	e007      	b.n	8004e78 <HAL_TIM_Base_Start_IT+0xb4>
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	681a      	ldr	r2, [r3, #0]
 8004e6e:	687b      	ldr	r3, [r7, #4]
 8004e70:	681b      	ldr	r3, [r3, #0]
 8004e72:	f042 0201 	orr.w	r2, r2, #1
 8004e76:	601a      	str	r2, [r3, #0]
 8004e78:	2300      	movs	r3, #0
 8004e7a:	4618      	mov	r0, r3
 8004e7c:	3714      	adds	r7, #20
 8004e7e:	46bd      	mov	sp, r7
 8004e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e84:	4770      	bx	lr
 8004e86:	bf00      	nop
 8004e88:	40010000 	.word	0x40010000
 8004e8c:	40000400 	.word	0x40000400
 8004e90:	40000800 	.word	0x40000800
 8004e94:	40000c00 	.word	0x40000c00
 8004e98:	40010400 	.word	0x40010400
 8004e9c:	40014000 	.word	0x40014000
 8004ea0:	40001800 	.word	0x40001800

08004ea4 <HAL_TIM_PWM_Init>:
 8004ea4:	b580      	push	{r7, lr}
 8004ea6:	b082      	sub	sp, #8
 8004ea8:	af00      	add	r7, sp, #0
 8004eaa:	6078      	str	r0, [r7, #4]
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	2b00      	cmp	r3, #0
 8004eb0:	d101      	bne.n	8004eb6 <HAL_TIM_PWM_Init+0x12>
 8004eb2:	2301      	movs	r3, #1
 8004eb4:	e041      	b.n	8004f3a <HAL_TIM_PWM_Init+0x96>
 8004eb6:	687b      	ldr	r3, [r7, #4]
 8004eb8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004ebc:	b2db      	uxtb	r3, r3
 8004ebe:	2b00      	cmp	r3, #0
 8004ec0:	d106      	bne.n	8004ed0 <HAL_TIM_PWM_Init+0x2c>
 8004ec2:	687b      	ldr	r3, [r7, #4]
 8004ec4:	2200      	movs	r2, #0
 8004ec6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004eca:	6878      	ldr	r0, [r7, #4]
 8004ecc:	f7fd fc2e 	bl	800272c <HAL_TIM_PWM_MspInit>
 8004ed0:	687b      	ldr	r3, [r7, #4]
 8004ed2:	2202      	movs	r2, #2
 8004ed4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004ed8:	687b      	ldr	r3, [r7, #4]
 8004eda:	681a      	ldr	r2, [r3, #0]
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	3304      	adds	r3, #4
 8004ee0:	4619      	mov	r1, r3
 8004ee2:	4610      	mov	r0, r2
 8004ee4:	f000 fccc 	bl	8005880 <TIM_Base_SetConfig>
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	2201      	movs	r2, #1
 8004eec:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	2201      	movs	r2, #1
 8004ef4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	2201      	movs	r2, #1
 8004efc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	2201      	movs	r2, #1
 8004f04:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004f08:	687b      	ldr	r3, [r7, #4]
 8004f0a:	2201      	movs	r2, #1
 8004f0c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	2201      	movs	r2, #1
 8004f14:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	2201      	movs	r2, #1
 8004f1c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004f20:	687b      	ldr	r3, [r7, #4]
 8004f22:	2201      	movs	r2, #1
 8004f24:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	2201      	movs	r2, #1
 8004f2c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004f30:	687b      	ldr	r3, [r7, #4]
 8004f32:	2201      	movs	r2, #1
 8004f34:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004f38:	2300      	movs	r3, #0
 8004f3a:	4618      	mov	r0, r3
 8004f3c:	3708      	adds	r7, #8
 8004f3e:	46bd      	mov	sp, r7
 8004f40:	bd80      	pop	{r7, pc}
	...

08004f44 <HAL_TIM_PWM_Start>:
 8004f44:	b580      	push	{r7, lr}
 8004f46:	b084      	sub	sp, #16
 8004f48:	af00      	add	r7, sp, #0
 8004f4a:	6078      	str	r0, [r7, #4]
 8004f4c:	6039      	str	r1, [r7, #0]
 8004f4e:	683b      	ldr	r3, [r7, #0]
 8004f50:	2b00      	cmp	r3, #0
 8004f52:	d109      	bne.n	8004f68 <HAL_TIM_PWM_Start+0x24>
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8004f5a:	b2db      	uxtb	r3, r3
 8004f5c:	2b01      	cmp	r3, #1
 8004f5e:	bf14      	ite	ne
 8004f60:	2301      	movne	r3, #1
 8004f62:	2300      	moveq	r3, #0
 8004f64:	b2db      	uxtb	r3, r3
 8004f66:	e022      	b.n	8004fae <HAL_TIM_PWM_Start+0x6a>
 8004f68:	683b      	ldr	r3, [r7, #0]
 8004f6a:	2b04      	cmp	r3, #4
 8004f6c:	d109      	bne.n	8004f82 <HAL_TIM_PWM_Start+0x3e>
 8004f6e:	687b      	ldr	r3, [r7, #4]
 8004f70:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8004f74:	b2db      	uxtb	r3, r3
 8004f76:	2b01      	cmp	r3, #1
 8004f78:	bf14      	ite	ne
 8004f7a:	2301      	movne	r3, #1
 8004f7c:	2300      	moveq	r3, #0
 8004f7e:	b2db      	uxtb	r3, r3
 8004f80:	e015      	b.n	8004fae <HAL_TIM_PWM_Start+0x6a>
 8004f82:	683b      	ldr	r3, [r7, #0]
 8004f84:	2b08      	cmp	r3, #8
 8004f86:	d109      	bne.n	8004f9c <HAL_TIM_PWM_Start+0x58>
 8004f88:	687b      	ldr	r3, [r7, #4]
 8004f8a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8004f8e:	b2db      	uxtb	r3, r3
 8004f90:	2b01      	cmp	r3, #1
 8004f92:	bf14      	ite	ne
 8004f94:	2301      	movne	r3, #1
 8004f96:	2300      	moveq	r3, #0
 8004f98:	b2db      	uxtb	r3, r3
 8004f9a:	e008      	b.n	8004fae <HAL_TIM_PWM_Start+0x6a>
 8004f9c:	687b      	ldr	r3, [r7, #4]
 8004f9e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004fa2:	b2db      	uxtb	r3, r3
 8004fa4:	2b01      	cmp	r3, #1
 8004fa6:	bf14      	ite	ne
 8004fa8:	2301      	movne	r3, #1
 8004faa:	2300      	moveq	r3, #0
 8004fac:	b2db      	uxtb	r3, r3
 8004fae:	2b00      	cmp	r3, #0
 8004fb0:	d001      	beq.n	8004fb6 <HAL_TIM_PWM_Start+0x72>
 8004fb2:	2301      	movs	r3, #1
 8004fb4:	e07c      	b.n	80050b0 <HAL_TIM_PWM_Start+0x16c>
 8004fb6:	683b      	ldr	r3, [r7, #0]
 8004fb8:	2b00      	cmp	r3, #0
 8004fba:	d104      	bne.n	8004fc6 <HAL_TIM_PWM_Start+0x82>
 8004fbc:	687b      	ldr	r3, [r7, #4]
 8004fbe:	2202      	movs	r2, #2
 8004fc0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004fc4:	e013      	b.n	8004fee <HAL_TIM_PWM_Start+0xaa>
 8004fc6:	683b      	ldr	r3, [r7, #0]
 8004fc8:	2b04      	cmp	r3, #4
 8004fca:	d104      	bne.n	8004fd6 <HAL_TIM_PWM_Start+0x92>
 8004fcc:	687b      	ldr	r3, [r7, #4]
 8004fce:	2202      	movs	r2, #2
 8004fd0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004fd4:	e00b      	b.n	8004fee <HAL_TIM_PWM_Start+0xaa>
 8004fd6:	683b      	ldr	r3, [r7, #0]
 8004fd8:	2b08      	cmp	r3, #8
 8004fda:	d104      	bne.n	8004fe6 <HAL_TIM_PWM_Start+0xa2>
 8004fdc:	687b      	ldr	r3, [r7, #4]
 8004fde:	2202      	movs	r2, #2
 8004fe0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004fe4:	e003      	b.n	8004fee <HAL_TIM_PWM_Start+0xaa>
 8004fe6:	687b      	ldr	r3, [r7, #4]
 8004fe8:	2202      	movs	r2, #2
 8004fea:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004fee:	687b      	ldr	r3, [r7, #4]
 8004ff0:	681b      	ldr	r3, [r3, #0]
 8004ff2:	2201      	movs	r2, #1
 8004ff4:	6839      	ldr	r1, [r7, #0]
 8004ff6:	4618      	mov	r0, r3
 8004ff8:	f000 ff38 	bl	8005e6c <TIM_CCxChannelCmd>
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	681b      	ldr	r3, [r3, #0]
 8005000:	4a2d      	ldr	r2, [pc, #180]	@ (80050b8 <HAL_TIM_PWM_Start+0x174>)
 8005002:	4293      	cmp	r3, r2
 8005004:	d004      	beq.n	8005010 <HAL_TIM_PWM_Start+0xcc>
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	681b      	ldr	r3, [r3, #0]
 800500a:	4a2c      	ldr	r2, [pc, #176]	@ (80050bc <HAL_TIM_PWM_Start+0x178>)
 800500c:	4293      	cmp	r3, r2
 800500e:	d101      	bne.n	8005014 <HAL_TIM_PWM_Start+0xd0>
 8005010:	2301      	movs	r3, #1
 8005012:	e000      	b.n	8005016 <HAL_TIM_PWM_Start+0xd2>
 8005014:	2300      	movs	r3, #0
 8005016:	2b00      	cmp	r3, #0
 8005018:	d007      	beq.n	800502a <HAL_TIM_PWM_Start+0xe6>
 800501a:	687b      	ldr	r3, [r7, #4]
 800501c:	681b      	ldr	r3, [r3, #0]
 800501e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8005020:	687b      	ldr	r3, [r7, #4]
 8005022:	681b      	ldr	r3, [r3, #0]
 8005024:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005028:	645a      	str	r2, [r3, #68]	@ 0x44
 800502a:	687b      	ldr	r3, [r7, #4]
 800502c:	681b      	ldr	r3, [r3, #0]
 800502e:	4a22      	ldr	r2, [pc, #136]	@ (80050b8 <HAL_TIM_PWM_Start+0x174>)
 8005030:	4293      	cmp	r3, r2
 8005032:	d022      	beq.n	800507a <HAL_TIM_PWM_Start+0x136>
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	681b      	ldr	r3, [r3, #0]
 8005038:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800503c:	d01d      	beq.n	800507a <HAL_TIM_PWM_Start+0x136>
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	4a1f      	ldr	r2, [pc, #124]	@ (80050c0 <HAL_TIM_PWM_Start+0x17c>)
 8005044:	4293      	cmp	r3, r2
 8005046:	d018      	beq.n	800507a <HAL_TIM_PWM_Start+0x136>
 8005048:	687b      	ldr	r3, [r7, #4]
 800504a:	681b      	ldr	r3, [r3, #0]
 800504c:	4a1d      	ldr	r2, [pc, #116]	@ (80050c4 <HAL_TIM_PWM_Start+0x180>)
 800504e:	4293      	cmp	r3, r2
 8005050:	d013      	beq.n	800507a <HAL_TIM_PWM_Start+0x136>
 8005052:	687b      	ldr	r3, [r7, #4]
 8005054:	681b      	ldr	r3, [r3, #0]
 8005056:	4a1c      	ldr	r2, [pc, #112]	@ (80050c8 <HAL_TIM_PWM_Start+0x184>)
 8005058:	4293      	cmp	r3, r2
 800505a:	d00e      	beq.n	800507a <HAL_TIM_PWM_Start+0x136>
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	681b      	ldr	r3, [r3, #0]
 8005060:	4a16      	ldr	r2, [pc, #88]	@ (80050bc <HAL_TIM_PWM_Start+0x178>)
 8005062:	4293      	cmp	r3, r2
 8005064:	d009      	beq.n	800507a <HAL_TIM_PWM_Start+0x136>
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	4a18      	ldr	r2, [pc, #96]	@ (80050cc <HAL_TIM_PWM_Start+0x188>)
 800506c:	4293      	cmp	r3, r2
 800506e:	d004      	beq.n	800507a <HAL_TIM_PWM_Start+0x136>
 8005070:	687b      	ldr	r3, [r7, #4]
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	4a16      	ldr	r2, [pc, #88]	@ (80050d0 <HAL_TIM_PWM_Start+0x18c>)
 8005076:	4293      	cmp	r3, r2
 8005078:	d111      	bne.n	800509e <HAL_TIM_PWM_Start+0x15a>
 800507a:	687b      	ldr	r3, [r7, #4]
 800507c:	681b      	ldr	r3, [r3, #0]
 800507e:	689b      	ldr	r3, [r3, #8]
 8005080:	f003 0307 	and.w	r3, r3, #7
 8005084:	60fb      	str	r3, [r7, #12]
 8005086:	68fb      	ldr	r3, [r7, #12]
 8005088:	2b06      	cmp	r3, #6
 800508a:	d010      	beq.n	80050ae <HAL_TIM_PWM_Start+0x16a>
 800508c:	687b      	ldr	r3, [r7, #4]
 800508e:	681b      	ldr	r3, [r3, #0]
 8005090:	681a      	ldr	r2, [r3, #0]
 8005092:	687b      	ldr	r3, [r7, #4]
 8005094:	681b      	ldr	r3, [r3, #0]
 8005096:	f042 0201 	orr.w	r2, r2, #1
 800509a:	601a      	str	r2, [r3, #0]
 800509c:	e007      	b.n	80050ae <HAL_TIM_PWM_Start+0x16a>
 800509e:	687b      	ldr	r3, [r7, #4]
 80050a0:	681b      	ldr	r3, [r3, #0]
 80050a2:	681a      	ldr	r2, [r3, #0]
 80050a4:	687b      	ldr	r3, [r7, #4]
 80050a6:	681b      	ldr	r3, [r3, #0]
 80050a8:	f042 0201 	orr.w	r2, r2, #1
 80050ac:	601a      	str	r2, [r3, #0]
 80050ae:	2300      	movs	r3, #0
 80050b0:	4618      	mov	r0, r3
 80050b2:	3710      	adds	r7, #16
 80050b4:	46bd      	mov	sp, r7
 80050b6:	bd80      	pop	{r7, pc}
 80050b8:	40010000 	.word	0x40010000
 80050bc:	40010400 	.word	0x40010400
 80050c0:	40000400 	.word	0x40000400
 80050c4:	40000800 	.word	0x40000800
 80050c8:	40000c00 	.word	0x40000c00
 80050cc:	40014000 	.word	0x40014000
 80050d0:	40001800 	.word	0x40001800

080050d4 <HAL_TIM_Encoder_Init>:
 80050d4:	b580      	push	{r7, lr}
 80050d6:	b086      	sub	sp, #24
 80050d8:	af00      	add	r7, sp, #0
 80050da:	6078      	str	r0, [r7, #4]
 80050dc:	6039      	str	r1, [r7, #0]
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	2b00      	cmp	r3, #0
 80050e2:	d101      	bne.n	80050e8 <HAL_TIM_Encoder_Init+0x14>
 80050e4:	2301      	movs	r3, #1
 80050e6:	e097      	b.n	8005218 <HAL_TIM_Encoder_Init+0x144>
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80050ee:	b2db      	uxtb	r3, r3
 80050f0:	2b00      	cmp	r3, #0
 80050f2:	d106      	bne.n	8005102 <HAL_TIM_Encoder_Init+0x2e>
 80050f4:	687b      	ldr	r3, [r7, #4]
 80050f6:	2200      	movs	r2, #0
 80050f8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80050fc:	6878      	ldr	r0, [r7, #4]
 80050fe:	f7fd fa89 	bl	8002614 <HAL_TIM_Encoder_MspInit>
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	2202      	movs	r2, #2
 8005106:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800510a:	687b      	ldr	r3, [r7, #4]
 800510c:	681b      	ldr	r3, [r3, #0]
 800510e:	689b      	ldr	r3, [r3, #8]
 8005110:	687a      	ldr	r2, [r7, #4]
 8005112:	6812      	ldr	r2, [r2, #0]
 8005114:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8005118:	f023 0307 	bic.w	r3, r3, #7
 800511c:	6093      	str	r3, [r2, #8]
 800511e:	687b      	ldr	r3, [r7, #4]
 8005120:	681a      	ldr	r2, [r3, #0]
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	3304      	adds	r3, #4
 8005126:	4619      	mov	r1, r3
 8005128:	4610      	mov	r0, r2
 800512a:	f000 fba9 	bl	8005880 <TIM_Base_SetConfig>
 800512e:	687b      	ldr	r3, [r7, #4]
 8005130:	681b      	ldr	r3, [r3, #0]
 8005132:	689b      	ldr	r3, [r3, #8]
 8005134:	617b      	str	r3, [r7, #20]
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	681b      	ldr	r3, [r3, #0]
 800513a:	699b      	ldr	r3, [r3, #24]
 800513c:	613b      	str	r3, [r7, #16]
 800513e:	687b      	ldr	r3, [r7, #4]
 8005140:	681b      	ldr	r3, [r3, #0]
 8005142:	6a1b      	ldr	r3, [r3, #32]
 8005144:	60fb      	str	r3, [r7, #12]
 8005146:	683b      	ldr	r3, [r7, #0]
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	697a      	ldr	r2, [r7, #20]
 800514c:	4313      	orrs	r3, r2
 800514e:	617b      	str	r3, [r7, #20]
 8005150:	693b      	ldr	r3, [r7, #16]
 8005152:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005156:	f023 0303 	bic.w	r3, r3, #3
 800515a:	613b      	str	r3, [r7, #16]
 800515c:	683b      	ldr	r3, [r7, #0]
 800515e:	689a      	ldr	r2, [r3, #8]
 8005160:	683b      	ldr	r3, [r7, #0]
 8005162:	699b      	ldr	r3, [r3, #24]
 8005164:	021b      	lsls	r3, r3, #8
 8005166:	4313      	orrs	r3, r2
 8005168:	693a      	ldr	r2, [r7, #16]
 800516a:	4313      	orrs	r3, r2
 800516c:	613b      	str	r3, [r7, #16]
 800516e:	693b      	ldr	r3, [r7, #16]
 8005170:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8005174:	f023 030c 	bic.w	r3, r3, #12
 8005178:	613b      	str	r3, [r7, #16]
 800517a:	693b      	ldr	r3, [r7, #16]
 800517c:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005180:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005184:	613b      	str	r3, [r7, #16]
 8005186:	683b      	ldr	r3, [r7, #0]
 8005188:	68da      	ldr	r2, [r3, #12]
 800518a:	683b      	ldr	r3, [r7, #0]
 800518c:	69db      	ldr	r3, [r3, #28]
 800518e:	021b      	lsls	r3, r3, #8
 8005190:	4313      	orrs	r3, r2
 8005192:	693a      	ldr	r2, [r7, #16]
 8005194:	4313      	orrs	r3, r2
 8005196:	613b      	str	r3, [r7, #16]
 8005198:	683b      	ldr	r3, [r7, #0]
 800519a:	691b      	ldr	r3, [r3, #16]
 800519c:	011a      	lsls	r2, r3, #4
 800519e:	683b      	ldr	r3, [r7, #0]
 80051a0:	6a1b      	ldr	r3, [r3, #32]
 80051a2:	031b      	lsls	r3, r3, #12
 80051a4:	4313      	orrs	r3, r2
 80051a6:	693a      	ldr	r2, [r7, #16]
 80051a8:	4313      	orrs	r3, r2
 80051aa:	613b      	str	r3, [r7, #16]
 80051ac:	68fb      	ldr	r3, [r7, #12]
 80051ae:	f023 0322 	bic.w	r3, r3, #34	@ 0x22
 80051b2:	60fb      	str	r3, [r7, #12]
 80051b4:	68fb      	ldr	r3, [r7, #12]
 80051b6:	f023 0388 	bic.w	r3, r3, #136	@ 0x88
 80051ba:	60fb      	str	r3, [r7, #12]
 80051bc:	683b      	ldr	r3, [r7, #0]
 80051be:	685a      	ldr	r2, [r3, #4]
 80051c0:	683b      	ldr	r3, [r7, #0]
 80051c2:	695b      	ldr	r3, [r3, #20]
 80051c4:	011b      	lsls	r3, r3, #4
 80051c6:	4313      	orrs	r3, r2
 80051c8:	68fa      	ldr	r2, [r7, #12]
 80051ca:	4313      	orrs	r3, r2
 80051cc:	60fb      	str	r3, [r7, #12]
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	681b      	ldr	r3, [r3, #0]
 80051d2:	697a      	ldr	r2, [r7, #20]
 80051d4:	609a      	str	r2, [r3, #8]
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	681b      	ldr	r3, [r3, #0]
 80051da:	693a      	ldr	r2, [r7, #16]
 80051dc:	619a      	str	r2, [r3, #24]
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	681b      	ldr	r3, [r3, #0]
 80051e2:	68fa      	ldr	r2, [r7, #12]
 80051e4:	621a      	str	r2, [r3, #32]
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	2201      	movs	r2, #1
 80051ea:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80051ee:	687b      	ldr	r3, [r7, #4]
 80051f0:	2201      	movs	r2, #1
 80051f2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	2201      	movs	r2, #1
 80051fa:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	2201      	movs	r2, #1
 8005202:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005206:	687b      	ldr	r3, [r7, #4]
 8005208:	2201      	movs	r2, #1
 800520a:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	2201      	movs	r2, #1
 8005212:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005216:	2300      	movs	r3, #0
 8005218:	4618      	mov	r0, r3
 800521a:	3718      	adds	r7, #24
 800521c:	46bd      	mov	sp, r7
 800521e:	bd80      	pop	{r7, pc}

08005220 <HAL_TIM_Encoder_Start>:
 8005220:	b580      	push	{r7, lr}
 8005222:	b084      	sub	sp, #16
 8005224:	af00      	add	r7, sp, #0
 8005226:	6078      	str	r0, [r7, #4]
 8005228:	6039      	str	r1, [r7, #0]
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8005230:	73fb      	strb	r3, [r7, #15]
 8005232:	687b      	ldr	r3, [r7, #4]
 8005234:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8005238:	73bb      	strb	r3, [r7, #14]
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005240:	737b      	strb	r3, [r7, #13]
 8005242:	687b      	ldr	r3, [r7, #4]
 8005244:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8005248:	733b      	strb	r3, [r7, #12]
 800524a:	683b      	ldr	r3, [r7, #0]
 800524c:	2b00      	cmp	r3, #0
 800524e:	d110      	bne.n	8005272 <HAL_TIM_Encoder_Start+0x52>
 8005250:	7bfb      	ldrb	r3, [r7, #15]
 8005252:	2b01      	cmp	r3, #1
 8005254:	d102      	bne.n	800525c <HAL_TIM_Encoder_Start+0x3c>
 8005256:	7b7b      	ldrb	r3, [r7, #13]
 8005258:	2b01      	cmp	r3, #1
 800525a:	d001      	beq.n	8005260 <HAL_TIM_Encoder_Start+0x40>
 800525c:	2301      	movs	r3, #1
 800525e:	e069      	b.n	8005334 <HAL_TIM_Encoder_Start+0x114>
 8005260:	687b      	ldr	r3, [r7, #4]
 8005262:	2202      	movs	r2, #2
 8005264:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	2202      	movs	r2, #2
 800526c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005270:	e031      	b.n	80052d6 <HAL_TIM_Encoder_Start+0xb6>
 8005272:	683b      	ldr	r3, [r7, #0]
 8005274:	2b04      	cmp	r3, #4
 8005276:	d110      	bne.n	800529a <HAL_TIM_Encoder_Start+0x7a>
 8005278:	7bbb      	ldrb	r3, [r7, #14]
 800527a:	2b01      	cmp	r3, #1
 800527c:	d102      	bne.n	8005284 <HAL_TIM_Encoder_Start+0x64>
 800527e:	7b3b      	ldrb	r3, [r7, #12]
 8005280:	2b01      	cmp	r3, #1
 8005282:	d001      	beq.n	8005288 <HAL_TIM_Encoder_Start+0x68>
 8005284:	2301      	movs	r3, #1
 8005286:	e055      	b.n	8005334 <HAL_TIM_Encoder_Start+0x114>
 8005288:	687b      	ldr	r3, [r7, #4]
 800528a:	2202      	movs	r2, #2
 800528c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005290:	687b      	ldr	r3, [r7, #4]
 8005292:	2202      	movs	r2, #2
 8005294:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005298:	e01d      	b.n	80052d6 <HAL_TIM_Encoder_Start+0xb6>
 800529a:	7bfb      	ldrb	r3, [r7, #15]
 800529c:	2b01      	cmp	r3, #1
 800529e:	d108      	bne.n	80052b2 <HAL_TIM_Encoder_Start+0x92>
 80052a0:	7bbb      	ldrb	r3, [r7, #14]
 80052a2:	2b01      	cmp	r3, #1
 80052a4:	d105      	bne.n	80052b2 <HAL_TIM_Encoder_Start+0x92>
 80052a6:	7b7b      	ldrb	r3, [r7, #13]
 80052a8:	2b01      	cmp	r3, #1
 80052aa:	d102      	bne.n	80052b2 <HAL_TIM_Encoder_Start+0x92>
 80052ac:	7b3b      	ldrb	r3, [r7, #12]
 80052ae:	2b01      	cmp	r3, #1
 80052b0:	d001      	beq.n	80052b6 <HAL_TIM_Encoder_Start+0x96>
 80052b2:	2301      	movs	r3, #1
 80052b4:	e03e      	b.n	8005334 <HAL_TIM_Encoder_Start+0x114>
 80052b6:	687b      	ldr	r3, [r7, #4]
 80052b8:	2202      	movs	r2, #2
 80052ba:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80052be:	687b      	ldr	r3, [r7, #4]
 80052c0:	2202      	movs	r2, #2
 80052c2:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	2202      	movs	r2, #2
 80052ca:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80052ce:	687b      	ldr	r3, [r7, #4]
 80052d0:	2202      	movs	r2, #2
 80052d2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80052d6:	683b      	ldr	r3, [r7, #0]
 80052d8:	2b00      	cmp	r3, #0
 80052da:	d003      	beq.n	80052e4 <HAL_TIM_Encoder_Start+0xc4>
 80052dc:	683b      	ldr	r3, [r7, #0]
 80052de:	2b04      	cmp	r3, #4
 80052e0:	d008      	beq.n	80052f4 <HAL_TIM_Encoder_Start+0xd4>
 80052e2:	e00f      	b.n	8005304 <HAL_TIM_Encoder_Start+0xe4>
 80052e4:	687b      	ldr	r3, [r7, #4]
 80052e6:	681b      	ldr	r3, [r3, #0]
 80052e8:	2201      	movs	r2, #1
 80052ea:	2100      	movs	r1, #0
 80052ec:	4618      	mov	r0, r3
 80052ee:	f000 fdbd 	bl	8005e6c <TIM_CCxChannelCmd>
 80052f2:	e016      	b.n	8005322 <HAL_TIM_Encoder_Start+0x102>
 80052f4:	687b      	ldr	r3, [r7, #4]
 80052f6:	681b      	ldr	r3, [r3, #0]
 80052f8:	2201      	movs	r2, #1
 80052fa:	2104      	movs	r1, #4
 80052fc:	4618      	mov	r0, r3
 80052fe:	f000 fdb5 	bl	8005e6c <TIM_CCxChannelCmd>
 8005302:	e00e      	b.n	8005322 <HAL_TIM_Encoder_Start+0x102>
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	681b      	ldr	r3, [r3, #0]
 8005308:	2201      	movs	r2, #1
 800530a:	2100      	movs	r1, #0
 800530c:	4618      	mov	r0, r3
 800530e:	f000 fdad 	bl	8005e6c <TIM_CCxChannelCmd>
 8005312:	687b      	ldr	r3, [r7, #4]
 8005314:	681b      	ldr	r3, [r3, #0]
 8005316:	2201      	movs	r2, #1
 8005318:	2104      	movs	r1, #4
 800531a:	4618      	mov	r0, r3
 800531c:	f000 fda6 	bl	8005e6c <TIM_CCxChannelCmd>
 8005320:	bf00      	nop
 8005322:	687b      	ldr	r3, [r7, #4]
 8005324:	681b      	ldr	r3, [r3, #0]
 8005326:	681a      	ldr	r2, [r3, #0]
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	681b      	ldr	r3, [r3, #0]
 800532c:	f042 0201 	orr.w	r2, r2, #1
 8005330:	601a      	str	r2, [r3, #0]
 8005332:	2300      	movs	r3, #0
 8005334:	4618      	mov	r0, r3
 8005336:	3710      	adds	r7, #16
 8005338:	46bd      	mov	sp, r7
 800533a:	bd80      	pop	{r7, pc}

0800533c <HAL_TIM_IRQHandler>:
 800533c:	b580      	push	{r7, lr}
 800533e:	b084      	sub	sp, #16
 8005340:	af00      	add	r7, sp, #0
 8005342:	6078      	str	r0, [r7, #4]
 8005344:	687b      	ldr	r3, [r7, #4]
 8005346:	681b      	ldr	r3, [r3, #0]
 8005348:	68db      	ldr	r3, [r3, #12]
 800534a:	60fb      	str	r3, [r7, #12]
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	681b      	ldr	r3, [r3, #0]
 8005350:	691b      	ldr	r3, [r3, #16]
 8005352:	60bb      	str	r3, [r7, #8]
 8005354:	68bb      	ldr	r3, [r7, #8]
 8005356:	f003 0302 	and.w	r3, r3, #2
 800535a:	2b00      	cmp	r3, #0
 800535c:	d020      	beq.n	80053a0 <HAL_TIM_IRQHandler+0x64>
 800535e:	68fb      	ldr	r3, [r7, #12]
 8005360:	f003 0302 	and.w	r3, r3, #2
 8005364:	2b00      	cmp	r3, #0
 8005366:	d01b      	beq.n	80053a0 <HAL_TIM_IRQHandler+0x64>
 8005368:	687b      	ldr	r3, [r7, #4]
 800536a:	681b      	ldr	r3, [r3, #0]
 800536c:	f06f 0202 	mvn.w	r2, #2
 8005370:	611a      	str	r2, [r3, #16]
 8005372:	687b      	ldr	r3, [r7, #4]
 8005374:	2201      	movs	r2, #1
 8005376:	771a      	strb	r2, [r3, #28]
 8005378:	687b      	ldr	r3, [r7, #4]
 800537a:	681b      	ldr	r3, [r3, #0]
 800537c:	699b      	ldr	r3, [r3, #24]
 800537e:	f003 0303 	and.w	r3, r3, #3
 8005382:	2b00      	cmp	r3, #0
 8005384:	d003      	beq.n	800538e <HAL_TIM_IRQHandler+0x52>
 8005386:	6878      	ldr	r0, [r7, #4]
 8005388:	f000 fa5b 	bl	8005842 <HAL_TIM_IC_CaptureCallback>
 800538c:	e005      	b.n	800539a <HAL_TIM_IRQHandler+0x5e>
 800538e:	6878      	ldr	r0, [r7, #4]
 8005390:	f000 fa4d 	bl	800582e <HAL_TIM_OC_DelayElapsedCallback>
 8005394:	6878      	ldr	r0, [r7, #4]
 8005396:	f000 fa5e 	bl	8005856 <HAL_TIM_PWM_PulseFinishedCallback>
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	2200      	movs	r2, #0
 800539e:	771a      	strb	r2, [r3, #28]
 80053a0:	68bb      	ldr	r3, [r7, #8]
 80053a2:	f003 0304 	and.w	r3, r3, #4
 80053a6:	2b00      	cmp	r3, #0
 80053a8:	d020      	beq.n	80053ec <HAL_TIM_IRQHandler+0xb0>
 80053aa:	68fb      	ldr	r3, [r7, #12]
 80053ac:	f003 0304 	and.w	r3, r3, #4
 80053b0:	2b00      	cmp	r3, #0
 80053b2:	d01b      	beq.n	80053ec <HAL_TIM_IRQHandler+0xb0>
 80053b4:	687b      	ldr	r3, [r7, #4]
 80053b6:	681b      	ldr	r3, [r3, #0]
 80053b8:	f06f 0204 	mvn.w	r2, #4
 80053bc:	611a      	str	r2, [r3, #16]
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	2202      	movs	r2, #2
 80053c2:	771a      	strb	r2, [r3, #28]
 80053c4:	687b      	ldr	r3, [r7, #4]
 80053c6:	681b      	ldr	r3, [r3, #0]
 80053c8:	699b      	ldr	r3, [r3, #24]
 80053ca:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80053ce:	2b00      	cmp	r3, #0
 80053d0:	d003      	beq.n	80053da <HAL_TIM_IRQHandler+0x9e>
 80053d2:	6878      	ldr	r0, [r7, #4]
 80053d4:	f000 fa35 	bl	8005842 <HAL_TIM_IC_CaptureCallback>
 80053d8:	e005      	b.n	80053e6 <HAL_TIM_IRQHandler+0xaa>
 80053da:	6878      	ldr	r0, [r7, #4]
 80053dc:	f000 fa27 	bl	800582e <HAL_TIM_OC_DelayElapsedCallback>
 80053e0:	6878      	ldr	r0, [r7, #4]
 80053e2:	f000 fa38 	bl	8005856 <HAL_TIM_PWM_PulseFinishedCallback>
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	2200      	movs	r2, #0
 80053ea:	771a      	strb	r2, [r3, #28]
 80053ec:	68bb      	ldr	r3, [r7, #8]
 80053ee:	f003 0308 	and.w	r3, r3, #8
 80053f2:	2b00      	cmp	r3, #0
 80053f4:	d020      	beq.n	8005438 <HAL_TIM_IRQHandler+0xfc>
 80053f6:	68fb      	ldr	r3, [r7, #12]
 80053f8:	f003 0308 	and.w	r3, r3, #8
 80053fc:	2b00      	cmp	r3, #0
 80053fe:	d01b      	beq.n	8005438 <HAL_TIM_IRQHandler+0xfc>
 8005400:	687b      	ldr	r3, [r7, #4]
 8005402:	681b      	ldr	r3, [r3, #0]
 8005404:	f06f 0208 	mvn.w	r2, #8
 8005408:	611a      	str	r2, [r3, #16]
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	2204      	movs	r2, #4
 800540e:	771a      	strb	r2, [r3, #28]
 8005410:	687b      	ldr	r3, [r7, #4]
 8005412:	681b      	ldr	r3, [r3, #0]
 8005414:	69db      	ldr	r3, [r3, #28]
 8005416:	f003 0303 	and.w	r3, r3, #3
 800541a:	2b00      	cmp	r3, #0
 800541c:	d003      	beq.n	8005426 <HAL_TIM_IRQHandler+0xea>
 800541e:	6878      	ldr	r0, [r7, #4]
 8005420:	f000 fa0f 	bl	8005842 <HAL_TIM_IC_CaptureCallback>
 8005424:	e005      	b.n	8005432 <HAL_TIM_IRQHandler+0xf6>
 8005426:	6878      	ldr	r0, [r7, #4]
 8005428:	f000 fa01 	bl	800582e <HAL_TIM_OC_DelayElapsedCallback>
 800542c:	6878      	ldr	r0, [r7, #4]
 800542e:	f000 fa12 	bl	8005856 <HAL_TIM_PWM_PulseFinishedCallback>
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	2200      	movs	r2, #0
 8005436:	771a      	strb	r2, [r3, #28]
 8005438:	68bb      	ldr	r3, [r7, #8]
 800543a:	f003 0310 	and.w	r3, r3, #16
 800543e:	2b00      	cmp	r3, #0
 8005440:	d020      	beq.n	8005484 <HAL_TIM_IRQHandler+0x148>
 8005442:	68fb      	ldr	r3, [r7, #12]
 8005444:	f003 0310 	and.w	r3, r3, #16
 8005448:	2b00      	cmp	r3, #0
 800544a:	d01b      	beq.n	8005484 <HAL_TIM_IRQHandler+0x148>
 800544c:	687b      	ldr	r3, [r7, #4]
 800544e:	681b      	ldr	r3, [r3, #0]
 8005450:	f06f 0210 	mvn.w	r2, #16
 8005454:	611a      	str	r2, [r3, #16]
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	2208      	movs	r2, #8
 800545a:	771a      	strb	r2, [r3, #28]
 800545c:	687b      	ldr	r3, [r7, #4]
 800545e:	681b      	ldr	r3, [r3, #0]
 8005460:	69db      	ldr	r3, [r3, #28]
 8005462:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005466:	2b00      	cmp	r3, #0
 8005468:	d003      	beq.n	8005472 <HAL_TIM_IRQHandler+0x136>
 800546a:	6878      	ldr	r0, [r7, #4]
 800546c:	f000 f9e9 	bl	8005842 <HAL_TIM_IC_CaptureCallback>
 8005470:	e005      	b.n	800547e <HAL_TIM_IRQHandler+0x142>
 8005472:	6878      	ldr	r0, [r7, #4]
 8005474:	f000 f9db 	bl	800582e <HAL_TIM_OC_DelayElapsedCallback>
 8005478:	6878      	ldr	r0, [r7, #4]
 800547a:	f000 f9ec 	bl	8005856 <HAL_TIM_PWM_PulseFinishedCallback>
 800547e:	687b      	ldr	r3, [r7, #4]
 8005480:	2200      	movs	r2, #0
 8005482:	771a      	strb	r2, [r3, #28]
 8005484:	68bb      	ldr	r3, [r7, #8]
 8005486:	f003 0301 	and.w	r3, r3, #1
 800548a:	2b00      	cmp	r3, #0
 800548c:	d00c      	beq.n	80054a8 <HAL_TIM_IRQHandler+0x16c>
 800548e:	68fb      	ldr	r3, [r7, #12]
 8005490:	f003 0301 	and.w	r3, r3, #1
 8005494:	2b00      	cmp	r3, #0
 8005496:	d007      	beq.n	80054a8 <HAL_TIM_IRQHandler+0x16c>
 8005498:	687b      	ldr	r3, [r7, #4]
 800549a:	681b      	ldr	r3, [r3, #0]
 800549c:	f06f 0201 	mvn.w	r2, #1
 80054a0:	611a      	str	r2, [r3, #16]
 80054a2:	6878      	ldr	r0, [r7, #4]
 80054a4:	f7fc fa44 	bl	8001930 <HAL_TIM_PeriodElapsedCallback>
 80054a8:	68bb      	ldr	r3, [r7, #8]
 80054aa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80054ae:	2b00      	cmp	r3, #0
 80054b0:	d00c      	beq.n	80054cc <HAL_TIM_IRQHandler+0x190>
 80054b2:	68fb      	ldr	r3, [r7, #12]
 80054b4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80054b8:	2b00      	cmp	r3, #0
 80054ba:	d007      	beq.n	80054cc <HAL_TIM_IRQHandler+0x190>
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	681b      	ldr	r3, [r3, #0]
 80054c0:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80054c4:	611a      	str	r2, [r3, #16]
 80054c6:	6878      	ldr	r0, [r7, #4]
 80054c8:	f000 fd7c 	bl	8005fc4 <HAL_TIMEx_BreakCallback>
 80054cc:	68bb      	ldr	r3, [r7, #8]
 80054ce:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80054d2:	2b00      	cmp	r3, #0
 80054d4:	d00c      	beq.n	80054f0 <HAL_TIM_IRQHandler+0x1b4>
 80054d6:	68fb      	ldr	r3, [r7, #12]
 80054d8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80054dc:	2b00      	cmp	r3, #0
 80054de:	d007      	beq.n	80054f0 <HAL_TIM_IRQHandler+0x1b4>
 80054e0:	687b      	ldr	r3, [r7, #4]
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80054e8:	611a      	str	r2, [r3, #16]
 80054ea:	6878      	ldr	r0, [r7, #4]
 80054ec:	f000 f9bd 	bl	800586a <HAL_TIM_TriggerCallback>
 80054f0:	68bb      	ldr	r3, [r7, #8]
 80054f2:	f003 0320 	and.w	r3, r3, #32
 80054f6:	2b00      	cmp	r3, #0
 80054f8:	d00c      	beq.n	8005514 <HAL_TIM_IRQHandler+0x1d8>
 80054fa:	68fb      	ldr	r3, [r7, #12]
 80054fc:	f003 0320 	and.w	r3, r3, #32
 8005500:	2b00      	cmp	r3, #0
 8005502:	d007      	beq.n	8005514 <HAL_TIM_IRQHandler+0x1d8>
 8005504:	687b      	ldr	r3, [r7, #4]
 8005506:	681b      	ldr	r3, [r3, #0]
 8005508:	f06f 0220 	mvn.w	r2, #32
 800550c:	611a      	str	r2, [r3, #16]
 800550e:	6878      	ldr	r0, [r7, #4]
 8005510:	f000 fd4e 	bl	8005fb0 <HAL_TIMEx_CommutCallback>
 8005514:	bf00      	nop
 8005516:	3710      	adds	r7, #16
 8005518:	46bd      	mov	sp, r7
 800551a:	bd80      	pop	{r7, pc}

0800551c <HAL_TIM_PWM_ConfigChannel>:
 800551c:	b580      	push	{r7, lr}
 800551e:	b086      	sub	sp, #24
 8005520:	af00      	add	r7, sp, #0
 8005522:	60f8      	str	r0, [r7, #12]
 8005524:	60b9      	str	r1, [r7, #8]
 8005526:	607a      	str	r2, [r7, #4]
 8005528:	2300      	movs	r3, #0
 800552a:	75fb      	strb	r3, [r7, #23]
 800552c:	68fb      	ldr	r3, [r7, #12]
 800552e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005532:	2b01      	cmp	r3, #1
 8005534:	d101      	bne.n	800553a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8005536:	2302      	movs	r3, #2
 8005538:	e0ae      	b.n	8005698 <HAL_TIM_PWM_ConfigChannel+0x17c>
 800553a:	68fb      	ldr	r3, [r7, #12]
 800553c:	2201      	movs	r2, #1
 800553e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005542:	687b      	ldr	r3, [r7, #4]
 8005544:	2b0c      	cmp	r3, #12
 8005546:	f200 809f 	bhi.w	8005688 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800554a:	a201      	add	r2, pc, #4	@ (adr r2, 8005550 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800554c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005550:	08005585 	.word	0x08005585
 8005554:	08005689 	.word	0x08005689
 8005558:	08005689 	.word	0x08005689
 800555c:	08005689 	.word	0x08005689
 8005560:	080055c5 	.word	0x080055c5
 8005564:	08005689 	.word	0x08005689
 8005568:	08005689 	.word	0x08005689
 800556c:	08005689 	.word	0x08005689
 8005570:	08005607 	.word	0x08005607
 8005574:	08005689 	.word	0x08005689
 8005578:	08005689 	.word	0x08005689
 800557c:	08005689 	.word	0x08005689
 8005580:	08005647 	.word	0x08005647
 8005584:	68fb      	ldr	r3, [r7, #12]
 8005586:	681b      	ldr	r3, [r3, #0]
 8005588:	68b9      	ldr	r1, [r7, #8]
 800558a:	4618      	mov	r0, r3
 800558c:	f000 fa24 	bl	80059d8 <TIM_OC1_SetConfig>
 8005590:	68fb      	ldr	r3, [r7, #12]
 8005592:	681b      	ldr	r3, [r3, #0]
 8005594:	699a      	ldr	r2, [r3, #24]
 8005596:	68fb      	ldr	r3, [r7, #12]
 8005598:	681b      	ldr	r3, [r3, #0]
 800559a:	f042 0208 	orr.w	r2, r2, #8
 800559e:	619a      	str	r2, [r3, #24]
 80055a0:	68fb      	ldr	r3, [r7, #12]
 80055a2:	681b      	ldr	r3, [r3, #0]
 80055a4:	699a      	ldr	r2, [r3, #24]
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	f022 0204 	bic.w	r2, r2, #4
 80055ae:	619a      	str	r2, [r3, #24]
 80055b0:	68fb      	ldr	r3, [r7, #12]
 80055b2:	681b      	ldr	r3, [r3, #0]
 80055b4:	6999      	ldr	r1, [r3, #24]
 80055b6:	68bb      	ldr	r3, [r7, #8]
 80055b8:	691a      	ldr	r2, [r3, #16]
 80055ba:	68fb      	ldr	r3, [r7, #12]
 80055bc:	681b      	ldr	r3, [r3, #0]
 80055be:	430a      	orrs	r2, r1
 80055c0:	619a      	str	r2, [r3, #24]
 80055c2:	e064      	b.n	800568e <HAL_TIM_PWM_ConfigChannel+0x172>
 80055c4:	68fb      	ldr	r3, [r7, #12]
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	68b9      	ldr	r1, [r7, #8]
 80055ca:	4618      	mov	r0, r3
 80055cc:	f000 fa74 	bl	8005ab8 <TIM_OC2_SetConfig>
 80055d0:	68fb      	ldr	r3, [r7, #12]
 80055d2:	681b      	ldr	r3, [r3, #0]
 80055d4:	699a      	ldr	r2, [r3, #24]
 80055d6:	68fb      	ldr	r3, [r7, #12]
 80055d8:	681b      	ldr	r3, [r3, #0]
 80055da:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80055de:	619a      	str	r2, [r3, #24]
 80055e0:	68fb      	ldr	r3, [r7, #12]
 80055e2:	681b      	ldr	r3, [r3, #0]
 80055e4:	699a      	ldr	r2, [r3, #24]
 80055e6:	68fb      	ldr	r3, [r7, #12]
 80055e8:	681b      	ldr	r3, [r3, #0]
 80055ea:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80055ee:	619a      	str	r2, [r3, #24]
 80055f0:	68fb      	ldr	r3, [r7, #12]
 80055f2:	681b      	ldr	r3, [r3, #0]
 80055f4:	6999      	ldr	r1, [r3, #24]
 80055f6:	68bb      	ldr	r3, [r7, #8]
 80055f8:	691b      	ldr	r3, [r3, #16]
 80055fa:	021a      	lsls	r2, r3, #8
 80055fc:	68fb      	ldr	r3, [r7, #12]
 80055fe:	681b      	ldr	r3, [r3, #0]
 8005600:	430a      	orrs	r2, r1
 8005602:	619a      	str	r2, [r3, #24]
 8005604:	e043      	b.n	800568e <HAL_TIM_PWM_ConfigChannel+0x172>
 8005606:	68fb      	ldr	r3, [r7, #12]
 8005608:	681b      	ldr	r3, [r3, #0]
 800560a:	68b9      	ldr	r1, [r7, #8]
 800560c:	4618      	mov	r0, r3
 800560e:	f000 fac9 	bl	8005ba4 <TIM_OC3_SetConfig>
 8005612:	68fb      	ldr	r3, [r7, #12]
 8005614:	681b      	ldr	r3, [r3, #0]
 8005616:	69da      	ldr	r2, [r3, #28]
 8005618:	68fb      	ldr	r3, [r7, #12]
 800561a:	681b      	ldr	r3, [r3, #0]
 800561c:	f042 0208 	orr.w	r2, r2, #8
 8005620:	61da      	str	r2, [r3, #28]
 8005622:	68fb      	ldr	r3, [r7, #12]
 8005624:	681b      	ldr	r3, [r3, #0]
 8005626:	69da      	ldr	r2, [r3, #28]
 8005628:	68fb      	ldr	r3, [r7, #12]
 800562a:	681b      	ldr	r3, [r3, #0]
 800562c:	f022 0204 	bic.w	r2, r2, #4
 8005630:	61da      	str	r2, [r3, #28]
 8005632:	68fb      	ldr	r3, [r7, #12]
 8005634:	681b      	ldr	r3, [r3, #0]
 8005636:	69d9      	ldr	r1, [r3, #28]
 8005638:	68bb      	ldr	r3, [r7, #8]
 800563a:	691a      	ldr	r2, [r3, #16]
 800563c:	68fb      	ldr	r3, [r7, #12]
 800563e:	681b      	ldr	r3, [r3, #0]
 8005640:	430a      	orrs	r2, r1
 8005642:	61da      	str	r2, [r3, #28]
 8005644:	e023      	b.n	800568e <HAL_TIM_PWM_ConfigChannel+0x172>
 8005646:	68fb      	ldr	r3, [r7, #12]
 8005648:	681b      	ldr	r3, [r3, #0]
 800564a:	68b9      	ldr	r1, [r7, #8]
 800564c:	4618      	mov	r0, r3
 800564e:	f000 fb1d 	bl	8005c8c <TIM_OC4_SetConfig>
 8005652:	68fb      	ldr	r3, [r7, #12]
 8005654:	681b      	ldr	r3, [r3, #0]
 8005656:	69da      	ldr	r2, [r3, #28]
 8005658:	68fb      	ldr	r3, [r7, #12]
 800565a:	681b      	ldr	r3, [r3, #0]
 800565c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005660:	61da      	str	r2, [r3, #28]
 8005662:	68fb      	ldr	r3, [r7, #12]
 8005664:	681b      	ldr	r3, [r3, #0]
 8005666:	69da      	ldr	r2, [r3, #28]
 8005668:	68fb      	ldr	r3, [r7, #12]
 800566a:	681b      	ldr	r3, [r3, #0]
 800566c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005670:	61da      	str	r2, [r3, #28]
 8005672:	68fb      	ldr	r3, [r7, #12]
 8005674:	681b      	ldr	r3, [r3, #0]
 8005676:	69d9      	ldr	r1, [r3, #28]
 8005678:	68bb      	ldr	r3, [r7, #8]
 800567a:	691b      	ldr	r3, [r3, #16]
 800567c:	021a      	lsls	r2, r3, #8
 800567e:	68fb      	ldr	r3, [r7, #12]
 8005680:	681b      	ldr	r3, [r3, #0]
 8005682:	430a      	orrs	r2, r1
 8005684:	61da      	str	r2, [r3, #28]
 8005686:	e002      	b.n	800568e <HAL_TIM_PWM_ConfigChannel+0x172>
 8005688:	2301      	movs	r3, #1
 800568a:	75fb      	strb	r3, [r7, #23]
 800568c:	bf00      	nop
 800568e:	68fb      	ldr	r3, [r7, #12]
 8005690:	2200      	movs	r2, #0
 8005692:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005696:	7dfb      	ldrb	r3, [r7, #23]
 8005698:	4618      	mov	r0, r3
 800569a:	3718      	adds	r7, #24
 800569c:	46bd      	mov	sp, r7
 800569e:	bd80      	pop	{r7, pc}

080056a0 <HAL_TIM_ConfigClockSource>:
 80056a0:	b580      	push	{r7, lr}
 80056a2:	b084      	sub	sp, #16
 80056a4:	af00      	add	r7, sp, #0
 80056a6:	6078      	str	r0, [r7, #4]
 80056a8:	6039      	str	r1, [r7, #0]
 80056aa:	2300      	movs	r3, #0
 80056ac:	73fb      	strb	r3, [r7, #15]
 80056ae:	687b      	ldr	r3, [r7, #4]
 80056b0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80056b4:	2b01      	cmp	r3, #1
 80056b6:	d101      	bne.n	80056bc <HAL_TIM_ConfigClockSource+0x1c>
 80056b8:	2302      	movs	r3, #2
 80056ba:	e0b4      	b.n	8005826 <HAL_TIM_ConfigClockSource+0x186>
 80056bc:	687b      	ldr	r3, [r7, #4]
 80056be:	2201      	movs	r2, #1
 80056c0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80056c4:	687b      	ldr	r3, [r7, #4]
 80056c6:	2202      	movs	r2, #2
 80056c8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80056cc:	687b      	ldr	r3, [r7, #4]
 80056ce:	681b      	ldr	r3, [r3, #0]
 80056d0:	689b      	ldr	r3, [r3, #8]
 80056d2:	60bb      	str	r3, [r7, #8]
 80056d4:	68bb      	ldr	r3, [r7, #8]
 80056d6:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 80056da:	60bb      	str	r3, [r7, #8]
 80056dc:	68bb      	ldr	r3, [r7, #8]
 80056de:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80056e2:	60bb      	str	r3, [r7, #8]
 80056e4:	687b      	ldr	r3, [r7, #4]
 80056e6:	681b      	ldr	r3, [r3, #0]
 80056e8:	68ba      	ldr	r2, [r7, #8]
 80056ea:	609a      	str	r2, [r3, #8]
 80056ec:	683b      	ldr	r3, [r7, #0]
 80056ee:	681b      	ldr	r3, [r3, #0]
 80056f0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80056f4:	d03e      	beq.n	8005774 <HAL_TIM_ConfigClockSource+0xd4>
 80056f6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80056fa:	f200 8087 	bhi.w	800580c <HAL_TIM_ConfigClockSource+0x16c>
 80056fe:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005702:	f000 8086 	beq.w	8005812 <HAL_TIM_ConfigClockSource+0x172>
 8005706:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800570a:	d87f      	bhi.n	800580c <HAL_TIM_ConfigClockSource+0x16c>
 800570c:	2b70      	cmp	r3, #112	@ 0x70
 800570e:	d01a      	beq.n	8005746 <HAL_TIM_ConfigClockSource+0xa6>
 8005710:	2b70      	cmp	r3, #112	@ 0x70
 8005712:	d87b      	bhi.n	800580c <HAL_TIM_ConfigClockSource+0x16c>
 8005714:	2b60      	cmp	r3, #96	@ 0x60
 8005716:	d050      	beq.n	80057ba <HAL_TIM_ConfigClockSource+0x11a>
 8005718:	2b60      	cmp	r3, #96	@ 0x60
 800571a:	d877      	bhi.n	800580c <HAL_TIM_ConfigClockSource+0x16c>
 800571c:	2b50      	cmp	r3, #80	@ 0x50
 800571e:	d03c      	beq.n	800579a <HAL_TIM_ConfigClockSource+0xfa>
 8005720:	2b50      	cmp	r3, #80	@ 0x50
 8005722:	d873      	bhi.n	800580c <HAL_TIM_ConfigClockSource+0x16c>
 8005724:	2b40      	cmp	r3, #64	@ 0x40
 8005726:	d058      	beq.n	80057da <HAL_TIM_ConfigClockSource+0x13a>
 8005728:	2b40      	cmp	r3, #64	@ 0x40
 800572a:	d86f      	bhi.n	800580c <HAL_TIM_ConfigClockSource+0x16c>
 800572c:	2b30      	cmp	r3, #48	@ 0x30
 800572e:	d064      	beq.n	80057fa <HAL_TIM_ConfigClockSource+0x15a>
 8005730:	2b30      	cmp	r3, #48	@ 0x30
 8005732:	d86b      	bhi.n	800580c <HAL_TIM_ConfigClockSource+0x16c>
 8005734:	2b20      	cmp	r3, #32
 8005736:	d060      	beq.n	80057fa <HAL_TIM_ConfigClockSource+0x15a>
 8005738:	2b20      	cmp	r3, #32
 800573a:	d867      	bhi.n	800580c <HAL_TIM_ConfigClockSource+0x16c>
 800573c:	2b00      	cmp	r3, #0
 800573e:	d05c      	beq.n	80057fa <HAL_TIM_ConfigClockSource+0x15a>
 8005740:	2b10      	cmp	r3, #16
 8005742:	d05a      	beq.n	80057fa <HAL_TIM_ConfigClockSource+0x15a>
 8005744:	e062      	b.n	800580c <HAL_TIM_ConfigClockSource+0x16c>
 8005746:	687b      	ldr	r3, [r7, #4]
 8005748:	6818      	ldr	r0, [r3, #0]
 800574a:	683b      	ldr	r3, [r7, #0]
 800574c:	6899      	ldr	r1, [r3, #8]
 800574e:	683b      	ldr	r3, [r7, #0]
 8005750:	685a      	ldr	r2, [r3, #4]
 8005752:	683b      	ldr	r3, [r7, #0]
 8005754:	68db      	ldr	r3, [r3, #12]
 8005756:	f000 fb69 	bl	8005e2c <TIM_ETR_SetConfig>
 800575a:	687b      	ldr	r3, [r7, #4]
 800575c:	681b      	ldr	r3, [r3, #0]
 800575e:	689b      	ldr	r3, [r3, #8]
 8005760:	60bb      	str	r3, [r7, #8]
 8005762:	68bb      	ldr	r3, [r7, #8]
 8005764:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8005768:	60bb      	str	r3, [r7, #8]
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	681b      	ldr	r3, [r3, #0]
 800576e:	68ba      	ldr	r2, [r7, #8]
 8005770:	609a      	str	r2, [r3, #8]
 8005772:	e04f      	b.n	8005814 <HAL_TIM_ConfigClockSource+0x174>
 8005774:	687b      	ldr	r3, [r7, #4]
 8005776:	6818      	ldr	r0, [r3, #0]
 8005778:	683b      	ldr	r3, [r7, #0]
 800577a:	6899      	ldr	r1, [r3, #8]
 800577c:	683b      	ldr	r3, [r7, #0]
 800577e:	685a      	ldr	r2, [r3, #4]
 8005780:	683b      	ldr	r3, [r7, #0]
 8005782:	68db      	ldr	r3, [r3, #12]
 8005784:	f000 fb52 	bl	8005e2c <TIM_ETR_SetConfig>
 8005788:	687b      	ldr	r3, [r7, #4]
 800578a:	681b      	ldr	r3, [r3, #0]
 800578c:	689a      	ldr	r2, [r3, #8]
 800578e:	687b      	ldr	r3, [r7, #4]
 8005790:	681b      	ldr	r3, [r3, #0]
 8005792:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005796:	609a      	str	r2, [r3, #8]
 8005798:	e03c      	b.n	8005814 <HAL_TIM_ConfigClockSource+0x174>
 800579a:	687b      	ldr	r3, [r7, #4]
 800579c:	6818      	ldr	r0, [r3, #0]
 800579e:	683b      	ldr	r3, [r7, #0]
 80057a0:	6859      	ldr	r1, [r3, #4]
 80057a2:	683b      	ldr	r3, [r7, #0]
 80057a4:	68db      	ldr	r3, [r3, #12]
 80057a6:	461a      	mov	r2, r3
 80057a8:	f000 fac6 	bl	8005d38 <TIM_TI1_ConfigInputStage>
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	681b      	ldr	r3, [r3, #0]
 80057b0:	2150      	movs	r1, #80	@ 0x50
 80057b2:	4618      	mov	r0, r3
 80057b4:	f000 fb1f 	bl	8005df6 <TIM_ITRx_SetConfig>
 80057b8:	e02c      	b.n	8005814 <HAL_TIM_ConfigClockSource+0x174>
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	6818      	ldr	r0, [r3, #0]
 80057be:	683b      	ldr	r3, [r7, #0]
 80057c0:	6859      	ldr	r1, [r3, #4]
 80057c2:	683b      	ldr	r3, [r7, #0]
 80057c4:	68db      	ldr	r3, [r3, #12]
 80057c6:	461a      	mov	r2, r3
 80057c8:	f000 fae5 	bl	8005d96 <TIM_TI2_ConfigInputStage>
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	2160      	movs	r1, #96	@ 0x60
 80057d2:	4618      	mov	r0, r3
 80057d4:	f000 fb0f 	bl	8005df6 <TIM_ITRx_SetConfig>
 80057d8:	e01c      	b.n	8005814 <HAL_TIM_ConfigClockSource+0x174>
 80057da:	687b      	ldr	r3, [r7, #4]
 80057dc:	6818      	ldr	r0, [r3, #0]
 80057de:	683b      	ldr	r3, [r7, #0]
 80057e0:	6859      	ldr	r1, [r3, #4]
 80057e2:	683b      	ldr	r3, [r7, #0]
 80057e4:	68db      	ldr	r3, [r3, #12]
 80057e6:	461a      	mov	r2, r3
 80057e8:	f000 faa6 	bl	8005d38 <TIM_TI1_ConfigInputStage>
 80057ec:	687b      	ldr	r3, [r7, #4]
 80057ee:	681b      	ldr	r3, [r3, #0]
 80057f0:	2140      	movs	r1, #64	@ 0x40
 80057f2:	4618      	mov	r0, r3
 80057f4:	f000 faff 	bl	8005df6 <TIM_ITRx_SetConfig>
 80057f8:	e00c      	b.n	8005814 <HAL_TIM_ConfigClockSource+0x174>
 80057fa:	687b      	ldr	r3, [r7, #4]
 80057fc:	681a      	ldr	r2, [r3, #0]
 80057fe:	683b      	ldr	r3, [r7, #0]
 8005800:	681b      	ldr	r3, [r3, #0]
 8005802:	4619      	mov	r1, r3
 8005804:	4610      	mov	r0, r2
 8005806:	f000 faf6 	bl	8005df6 <TIM_ITRx_SetConfig>
 800580a:	e003      	b.n	8005814 <HAL_TIM_ConfigClockSource+0x174>
 800580c:	2301      	movs	r3, #1
 800580e:	73fb      	strb	r3, [r7, #15]
 8005810:	e000      	b.n	8005814 <HAL_TIM_ConfigClockSource+0x174>
 8005812:	bf00      	nop
 8005814:	687b      	ldr	r3, [r7, #4]
 8005816:	2201      	movs	r2, #1
 8005818:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	2200      	movs	r2, #0
 8005820:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005824:	7bfb      	ldrb	r3, [r7, #15]
 8005826:	4618      	mov	r0, r3
 8005828:	3710      	adds	r7, #16
 800582a:	46bd      	mov	sp, r7
 800582c:	bd80      	pop	{r7, pc}

0800582e <HAL_TIM_OC_DelayElapsedCallback>:
 800582e:	b480      	push	{r7}
 8005830:	b083      	sub	sp, #12
 8005832:	af00      	add	r7, sp, #0
 8005834:	6078      	str	r0, [r7, #4]
 8005836:	bf00      	nop
 8005838:	370c      	adds	r7, #12
 800583a:	46bd      	mov	sp, r7
 800583c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005840:	4770      	bx	lr

08005842 <HAL_TIM_IC_CaptureCallback>:
 8005842:	b480      	push	{r7}
 8005844:	b083      	sub	sp, #12
 8005846:	af00      	add	r7, sp, #0
 8005848:	6078      	str	r0, [r7, #4]
 800584a:	bf00      	nop
 800584c:	370c      	adds	r7, #12
 800584e:	46bd      	mov	sp, r7
 8005850:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005854:	4770      	bx	lr

08005856 <HAL_TIM_PWM_PulseFinishedCallback>:
 8005856:	b480      	push	{r7}
 8005858:	b083      	sub	sp, #12
 800585a:	af00      	add	r7, sp, #0
 800585c:	6078      	str	r0, [r7, #4]
 800585e:	bf00      	nop
 8005860:	370c      	adds	r7, #12
 8005862:	46bd      	mov	sp, r7
 8005864:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005868:	4770      	bx	lr

0800586a <HAL_TIM_TriggerCallback>:
 800586a:	b480      	push	{r7}
 800586c:	b083      	sub	sp, #12
 800586e:	af00      	add	r7, sp, #0
 8005870:	6078      	str	r0, [r7, #4]
 8005872:	bf00      	nop
 8005874:	370c      	adds	r7, #12
 8005876:	46bd      	mov	sp, r7
 8005878:	f85d 7b04 	ldr.w	r7, [sp], #4
 800587c:	4770      	bx	lr
	...

08005880 <TIM_Base_SetConfig>:
 8005880:	b480      	push	{r7}
 8005882:	b085      	sub	sp, #20
 8005884:	af00      	add	r7, sp, #0
 8005886:	6078      	str	r0, [r7, #4]
 8005888:	6039      	str	r1, [r7, #0]
 800588a:	687b      	ldr	r3, [r7, #4]
 800588c:	681b      	ldr	r3, [r3, #0]
 800588e:	60fb      	str	r3, [r7, #12]
 8005890:	687b      	ldr	r3, [r7, #4]
 8005892:	4a46      	ldr	r2, [pc, #280]	@ (80059ac <TIM_Base_SetConfig+0x12c>)
 8005894:	4293      	cmp	r3, r2
 8005896:	d013      	beq.n	80058c0 <TIM_Base_SetConfig+0x40>
 8005898:	687b      	ldr	r3, [r7, #4]
 800589a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800589e:	d00f      	beq.n	80058c0 <TIM_Base_SetConfig+0x40>
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	4a43      	ldr	r2, [pc, #268]	@ (80059b0 <TIM_Base_SetConfig+0x130>)
 80058a4:	4293      	cmp	r3, r2
 80058a6:	d00b      	beq.n	80058c0 <TIM_Base_SetConfig+0x40>
 80058a8:	687b      	ldr	r3, [r7, #4]
 80058aa:	4a42      	ldr	r2, [pc, #264]	@ (80059b4 <TIM_Base_SetConfig+0x134>)
 80058ac:	4293      	cmp	r3, r2
 80058ae:	d007      	beq.n	80058c0 <TIM_Base_SetConfig+0x40>
 80058b0:	687b      	ldr	r3, [r7, #4]
 80058b2:	4a41      	ldr	r2, [pc, #260]	@ (80059b8 <TIM_Base_SetConfig+0x138>)
 80058b4:	4293      	cmp	r3, r2
 80058b6:	d003      	beq.n	80058c0 <TIM_Base_SetConfig+0x40>
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	4a40      	ldr	r2, [pc, #256]	@ (80059bc <TIM_Base_SetConfig+0x13c>)
 80058bc:	4293      	cmp	r3, r2
 80058be:	d108      	bne.n	80058d2 <TIM_Base_SetConfig+0x52>
 80058c0:	68fb      	ldr	r3, [r7, #12]
 80058c2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80058c6:	60fb      	str	r3, [r7, #12]
 80058c8:	683b      	ldr	r3, [r7, #0]
 80058ca:	685b      	ldr	r3, [r3, #4]
 80058cc:	68fa      	ldr	r2, [r7, #12]
 80058ce:	4313      	orrs	r3, r2
 80058d0:	60fb      	str	r3, [r7, #12]
 80058d2:	687b      	ldr	r3, [r7, #4]
 80058d4:	4a35      	ldr	r2, [pc, #212]	@ (80059ac <TIM_Base_SetConfig+0x12c>)
 80058d6:	4293      	cmp	r3, r2
 80058d8:	d02b      	beq.n	8005932 <TIM_Base_SetConfig+0xb2>
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80058e0:	d027      	beq.n	8005932 <TIM_Base_SetConfig+0xb2>
 80058e2:	687b      	ldr	r3, [r7, #4]
 80058e4:	4a32      	ldr	r2, [pc, #200]	@ (80059b0 <TIM_Base_SetConfig+0x130>)
 80058e6:	4293      	cmp	r3, r2
 80058e8:	d023      	beq.n	8005932 <TIM_Base_SetConfig+0xb2>
 80058ea:	687b      	ldr	r3, [r7, #4]
 80058ec:	4a31      	ldr	r2, [pc, #196]	@ (80059b4 <TIM_Base_SetConfig+0x134>)
 80058ee:	4293      	cmp	r3, r2
 80058f0:	d01f      	beq.n	8005932 <TIM_Base_SetConfig+0xb2>
 80058f2:	687b      	ldr	r3, [r7, #4]
 80058f4:	4a30      	ldr	r2, [pc, #192]	@ (80059b8 <TIM_Base_SetConfig+0x138>)
 80058f6:	4293      	cmp	r3, r2
 80058f8:	d01b      	beq.n	8005932 <TIM_Base_SetConfig+0xb2>
 80058fa:	687b      	ldr	r3, [r7, #4]
 80058fc:	4a2f      	ldr	r2, [pc, #188]	@ (80059bc <TIM_Base_SetConfig+0x13c>)
 80058fe:	4293      	cmp	r3, r2
 8005900:	d017      	beq.n	8005932 <TIM_Base_SetConfig+0xb2>
 8005902:	687b      	ldr	r3, [r7, #4]
 8005904:	4a2e      	ldr	r2, [pc, #184]	@ (80059c0 <TIM_Base_SetConfig+0x140>)
 8005906:	4293      	cmp	r3, r2
 8005908:	d013      	beq.n	8005932 <TIM_Base_SetConfig+0xb2>
 800590a:	687b      	ldr	r3, [r7, #4]
 800590c:	4a2d      	ldr	r2, [pc, #180]	@ (80059c4 <TIM_Base_SetConfig+0x144>)
 800590e:	4293      	cmp	r3, r2
 8005910:	d00f      	beq.n	8005932 <TIM_Base_SetConfig+0xb2>
 8005912:	687b      	ldr	r3, [r7, #4]
 8005914:	4a2c      	ldr	r2, [pc, #176]	@ (80059c8 <TIM_Base_SetConfig+0x148>)
 8005916:	4293      	cmp	r3, r2
 8005918:	d00b      	beq.n	8005932 <TIM_Base_SetConfig+0xb2>
 800591a:	687b      	ldr	r3, [r7, #4]
 800591c:	4a2b      	ldr	r2, [pc, #172]	@ (80059cc <TIM_Base_SetConfig+0x14c>)
 800591e:	4293      	cmp	r3, r2
 8005920:	d007      	beq.n	8005932 <TIM_Base_SetConfig+0xb2>
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	4a2a      	ldr	r2, [pc, #168]	@ (80059d0 <TIM_Base_SetConfig+0x150>)
 8005926:	4293      	cmp	r3, r2
 8005928:	d003      	beq.n	8005932 <TIM_Base_SetConfig+0xb2>
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	4a29      	ldr	r2, [pc, #164]	@ (80059d4 <TIM_Base_SetConfig+0x154>)
 800592e:	4293      	cmp	r3, r2
 8005930:	d108      	bne.n	8005944 <TIM_Base_SetConfig+0xc4>
 8005932:	68fb      	ldr	r3, [r7, #12]
 8005934:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005938:	60fb      	str	r3, [r7, #12]
 800593a:	683b      	ldr	r3, [r7, #0]
 800593c:	68db      	ldr	r3, [r3, #12]
 800593e:	68fa      	ldr	r2, [r7, #12]
 8005940:	4313      	orrs	r3, r2
 8005942:	60fb      	str	r3, [r7, #12]
 8005944:	68fb      	ldr	r3, [r7, #12]
 8005946:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800594a:	683b      	ldr	r3, [r7, #0]
 800594c:	695b      	ldr	r3, [r3, #20]
 800594e:	4313      	orrs	r3, r2
 8005950:	60fb      	str	r3, [r7, #12]
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	68fa      	ldr	r2, [r7, #12]
 8005956:	601a      	str	r2, [r3, #0]
 8005958:	683b      	ldr	r3, [r7, #0]
 800595a:	689a      	ldr	r2, [r3, #8]
 800595c:	687b      	ldr	r3, [r7, #4]
 800595e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005960:	683b      	ldr	r3, [r7, #0]
 8005962:	681a      	ldr	r2, [r3, #0]
 8005964:	687b      	ldr	r3, [r7, #4]
 8005966:	629a      	str	r2, [r3, #40]	@ 0x28
 8005968:	687b      	ldr	r3, [r7, #4]
 800596a:	4a10      	ldr	r2, [pc, #64]	@ (80059ac <TIM_Base_SetConfig+0x12c>)
 800596c:	4293      	cmp	r3, r2
 800596e:	d003      	beq.n	8005978 <TIM_Base_SetConfig+0xf8>
 8005970:	687b      	ldr	r3, [r7, #4]
 8005972:	4a12      	ldr	r2, [pc, #72]	@ (80059bc <TIM_Base_SetConfig+0x13c>)
 8005974:	4293      	cmp	r3, r2
 8005976:	d103      	bne.n	8005980 <TIM_Base_SetConfig+0x100>
 8005978:	683b      	ldr	r3, [r7, #0]
 800597a:	691a      	ldr	r2, [r3, #16]
 800597c:	687b      	ldr	r3, [r7, #4]
 800597e:	631a      	str	r2, [r3, #48]	@ 0x30
 8005980:	687b      	ldr	r3, [r7, #4]
 8005982:	2201      	movs	r2, #1
 8005984:	615a      	str	r2, [r3, #20]
 8005986:	687b      	ldr	r3, [r7, #4]
 8005988:	691b      	ldr	r3, [r3, #16]
 800598a:	f003 0301 	and.w	r3, r3, #1
 800598e:	2b01      	cmp	r3, #1
 8005990:	d105      	bne.n	800599e <TIM_Base_SetConfig+0x11e>
 8005992:	687b      	ldr	r3, [r7, #4]
 8005994:	691b      	ldr	r3, [r3, #16]
 8005996:	f023 0201 	bic.w	r2, r3, #1
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	611a      	str	r2, [r3, #16]
 800599e:	bf00      	nop
 80059a0:	3714      	adds	r7, #20
 80059a2:	46bd      	mov	sp, r7
 80059a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059a8:	4770      	bx	lr
 80059aa:	bf00      	nop
 80059ac:	40010000 	.word	0x40010000
 80059b0:	40000400 	.word	0x40000400
 80059b4:	40000800 	.word	0x40000800
 80059b8:	40000c00 	.word	0x40000c00
 80059bc:	40010400 	.word	0x40010400
 80059c0:	40014000 	.word	0x40014000
 80059c4:	40014400 	.word	0x40014400
 80059c8:	40014800 	.word	0x40014800
 80059cc:	40001800 	.word	0x40001800
 80059d0:	40001c00 	.word	0x40001c00
 80059d4:	40002000 	.word	0x40002000

080059d8 <TIM_OC1_SetConfig>:
 80059d8:	b480      	push	{r7}
 80059da:	b087      	sub	sp, #28
 80059dc:	af00      	add	r7, sp, #0
 80059de:	6078      	str	r0, [r7, #4]
 80059e0:	6039      	str	r1, [r7, #0]
 80059e2:	687b      	ldr	r3, [r7, #4]
 80059e4:	6a1b      	ldr	r3, [r3, #32]
 80059e6:	617b      	str	r3, [r7, #20]
 80059e8:	687b      	ldr	r3, [r7, #4]
 80059ea:	6a1b      	ldr	r3, [r3, #32]
 80059ec:	f023 0201 	bic.w	r2, r3, #1
 80059f0:	687b      	ldr	r3, [r7, #4]
 80059f2:	621a      	str	r2, [r3, #32]
 80059f4:	687b      	ldr	r3, [r7, #4]
 80059f6:	685b      	ldr	r3, [r3, #4]
 80059f8:	613b      	str	r3, [r7, #16]
 80059fa:	687b      	ldr	r3, [r7, #4]
 80059fc:	699b      	ldr	r3, [r3, #24]
 80059fe:	60fb      	str	r3, [r7, #12]
 8005a00:	68fb      	ldr	r3, [r7, #12]
 8005a02:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005a06:	60fb      	str	r3, [r7, #12]
 8005a08:	68fb      	ldr	r3, [r7, #12]
 8005a0a:	f023 0303 	bic.w	r3, r3, #3
 8005a0e:	60fb      	str	r3, [r7, #12]
 8005a10:	683b      	ldr	r3, [r7, #0]
 8005a12:	681b      	ldr	r3, [r3, #0]
 8005a14:	68fa      	ldr	r2, [r7, #12]
 8005a16:	4313      	orrs	r3, r2
 8005a18:	60fb      	str	r3, [r7, #12]
 8005a1a:	697b      	ldr	r3, [r7, #20]
 8005a1c:	f023 0302 	bic.w	r3, r3, #2
 8005a20:	617b      	str	r3, [r7, #20]
 8005a22:	683b      	ldr	r3, [r7, #0]
 8005a24:	689b      	ldr	r3, [r3, #8]
 8005a26:	697a      	ldr	r2, [r7, #20]
 8005a28:	4313      	orrs	r3, r2
 8005a2a:	617b      	str	r3, [r7, #20]
 8005a2c:	687b      	ldr	r3, [r7, #4]
 8005a2e:	4a20      	ldr	r2, [pc, #128]	@ (8005ab0 <TIM_OC1_SetConfig+0xd8>)
 8005a30:	4293      	cmp	r3, r2
 8005a32:	d003      	beq.n	8005a3c <TIM_OC1_SetConfig+0x64>
 8005a34:	687b      	ldr	r3, [r7, #4]
 8005a36:	4a1f      	ldr	r2, [pc, #124]	@ (8005ab4 <TIM_OC1_SetConfig+0xdc>)
 8005a38:	4293      	cmp	r3, r2
 8005a3a:	d10c      	bne.n	8005a56 <TIM_OC1_SetConfig+0x7e>
 8005a3c:	697b      	ldr	r3, [r7, #20]
 8005a3e:	f023 0308 	bic.w	r3, r3, #8
 8005a42:	617b      	str	r3, [r7, #20]
 8005a44:	683b      	ldr	r3, [r7, #0]
 8005a46:	68db      	ldr	r3, [r3, #12]
 8005a48:	697a      	ldr	r2, [r7, #20]
 8005a4a:	4313      	orrs	r3, r2
 8005a4c:	617b      	str	r3, [r7, #20]
 8005a4e:	697b      	ldr	r3, [r7, #20]
 8005a50:	f023 0304 	bic.w	r3, r3, #4
 8005a54:	617b      	str	r3, [r7, #20]
 8005a56:	687b      	ldr	r3, [r7, #4]
 8005a58:	4a15      	ldr	r2, [pc, #84]	@ (8005ab0 <TIM_OC1_SetConfig+0xd8>)
 8005a5a:	4293      	cmp	r3, r2
 8005a5c:	d003      	beq.n	8005a66 <TIM_OC1_SetConfig+0x8e>
 8005a5e:	687b      	ldr	r3, [r7, #4]
 8005a60:	4a14      	ldr	r2, [pc, #80]	@ (8005ab4 <TIM_OC1_SetConfig+0xdc>)
 8005a62:	4293      	cmp	r3, r2
 8005a64:	d111      	bne.n	8005a8a <TIM_OC1_SetConfig+0xb2>
 8005a66:	693b      	ldr	r3, [r7, #16]
 8005a68:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005a6c:	613b      	str	r3, [r7, #16]
 8005a6e:	693b      	ldr	r3, [r7, #16]
 8005a70:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005a74:	613b      	str	r3, [r7, #16]
 8005a76:	683b      	ldr	r3, [r7, #0]
 8005a78:	695b      	ldr	r3, [r3, #20]
 8005a7a:	693a      	ldr	r2, [r7, #16]
 8005a7c:	4313      	orrs	r3, r2
 8005a7e:	613b      	str	r3, [r7, #16]
 8005a80:	683b      	ldr	r3, [r7, #0]
 8005a82:	699b      	ldr	r3, [r3, #24]
 8005a84:	693a      	ldr	r2, [r7, #16]
 8005a86:	4313      	orrs	r3, r2
 8005a88:	613b      	str	r3, [r7, #16]
 8005a8a:	687b      	ldr	r3, [r7, #4]
 8005a8c:	693a      	ldr	r2, [r7, #16]
 8005a8e:	605a      	str	r2, [r3, #4]
 8005a90:	687b      	ldr	r3, [r7, #4]
 8005a92:	68fa      	ldr	r2, [r7, #12]
 8005a94:	619a      	str	r2, [r3, #24]
 8005a96:	683b      	ldr	r3, [r7, #0]
 8005a98:	685a      	ldr	r2, [r3, #4]
 8005a9a:	687b      	ldr	r3, [r7, #4]
 8005a9c:	635a      	str	r2, [r3, #52]	@ 0x34
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	697a      	ldr	r2, [r7, #20]
 8005aa2:	621a      	str	r2, [r3, #32]
 8005aa4:	bf00      	nop
 8005aa6:	371c      	adds	r7, #28
 8005aa8:	46bd      	mov	sp, r7
 8005aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005aae:	4770      	bx	lr
 8005ab0:	40010000 	.word	0x40010000
 8005ab4:	40010400 	.word	0x40010400

08005ab8 <TIM_OC2_SetConfig>:
 8005ab8:	b480      	push	{r7}
 8005aba:	b087      	sub	sp, #28
 8005abc:	af00      	add	r7, sp, #0
 8005abe:	6078      	str	r0, [r7, #4]
 8005ac0:	6039      	str	r1, [r7, #0]
 8005ac2:	687b      	ldr	r3, [r7, #4]
 8005ac4:	6a1b      	ldr	r3, [r3, #32]
 8005ac6:	617b      	str	r3, [r7, #20]
 8005ac8:	687b      	ldr	r3, [r7, #4]
 8005aca:	6a1b      	ldr	r3, [r3, #32]
 8005acc:	f023 0210 	bic.w	r2, r3, #16
 8005ad0:	687b      	ldr	r3, [r7, #4]
 8005ad2:	621a      	str	r2, [r3, #32]
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	685b      	ldr	r3, [r3, #4]
 8005ad8:	613b      	str	r3, [r7, #16]
 8005ada:	687b      	ldr	r3, [r7, #4]
 8005adc:	699b      	ldr	r3, [r3, #24]
 8005ade:	60fb      	str	r3, [r7, #12]
 8005ae0:	68fb      	ldr	r3, [r7, #12]
 8005ae2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005ae6:	60fb      	str	r3, [r7, #12]
 8005ae8:	68fb      	ldr	r3, [r7, #12]
 8005aea:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005aee:	60fb      	str	r3, [r7, #12]
 8005af0:	683b      	ldr	r3, [r7, #0]
 8005af2:	681b      	ldr	r3, [r3, #0]
 8005af4:	021b      	lsls	r3, r3, #8
 8005af6:	68fa      	ldr	r2, [r7, #12]
 8005af8:	4313      	orrs	r3, r2
 8005afa:	60fb      	str	r3, [r7, #12]
 8005afc:	697b      	ldr	r3, [r7, #20]
 8005afe:	f023 0320 	bic.w	r3, r3, #32
 8005b02:	617b      	str	r3, [r7, #20]
 8005b04:	683b      	ldr	r3, [r7, #0]
 8005b06:	689b      	ldr	r3, [r3, #8]
 8005b08:	011b      	lsls	r3, r3, #4
 8005b0a:	697a      	ldr	r2, [r7, #20]
 8005b0c:	4313      	orrs	r3, r2
 8005b0e:	617b      	str	r3, [r7, #20]
 8005b10:	687b      	ldr	r3, [r7, #4]
 8005b12:	4a22      	ldr	r2, [pc, #136]	@ (8005b9c <TIM_OC2_SetConfig+0xe4>)
 8005b14:	4293      	cmp	r3, r2
 8005b16:	d003      	beq.n	8005b20 <TIM_OC2_SetConfig+0x68>
 8005b18:	687b      	ldr	r3, [r7, #4]
 8005b1a:	4a21      	ldr	r2, [pc, #132]	@ (8005ba0 <TIM_OC2_SetConfig+0xe8>)
 8005b1c:	4293      	cmp	r3, r2
 8005b1e:	d10d      	bne.n	8005b3c <TIM_OC2_SetConfig+0x84>
 8005b20:	697b      	ldr	r3, [r7, #20]
 8005b22:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005b26:	617b      	str	r3, [r7, #20]
 8005b28:	683b      	ldr	r3, [r7, #0]
 8005b2a:	68db      	ldr	r3, [r3, #12]
 8005b2c:	011b      	lsls	r3, r3, #4
 8005b2e:	697a      	ldr	r2, [r7, #20]
 8005b30:	4313      	orrs	r3, r2
 8005b32:	617b      	str	r3, [r7, #20]
 8005b34:	697b      	ldr	r3, [r7, #20]
 8005b36:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005b3a:	617b      	str	r3, [r7, #20]
 8005b3c:	687b      	ldr	r3, [r7, #4]
 8005b3e:	4a17      	ldr	r2, [pc, #92]	@ (8005b9c <TIM_OC2_SetConfig+0xe4>)
 8005b40:	4293      	cmp	r3, r2
 8005b42:	d003      	beq.n	8005b4c <TIM_OC2_SetConfig+0x94>
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	4a16      	ldr	r2, [pc, #88]	@ (8005ba0 <TIM_OC2_SetConfig+0xe8>)
 8005b48:	4293      	cmp	r3, r2
 8005b4a:	d113      	bne.n	8005b74 <TIM_OC2_SetConfig+0xbc>
 8005b4c:	693b      	ldr	r3, [r7, #16]
 8005b4e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005b52:	613b      	str	r3, [r7, #16]
 8005b54:	693b      	ldr	r3, [r7, #16]
 8005b56:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005b5a:	613b      	str	r3, [r7, #16]
 8005b5c:	683b      	ldr	r3, [r7, #0]
 8005b5e:	695b      	ldr	r3, [r3, #20]
 8005b60:	009b      	lsls	r3, r3, #2
 8005b62:	693a      	ldr	r2, [r7, #16]
 8005b64:	4313      	orrs	r3, r2
 8005b66:	613b      	str	r3, [r7, #16]
 8005b68:	683b      	ldr	r3, [r7, #0]
 8005b6a:	699b      	ldr	r3, [r3, #24]
 8005b6c:	009b      	lsls	r3, r3, #2
 8005b6e:	693a      	ldr	r2, [r7, #16]
 8005b70:	4313      	orrs	r3, r2
 8005b72:	613b      	str	r3, [r7, #16]
 8005b74:	687b      	ldr	r3, [r7, #4]
 8005b76:	693a      	ldr	r2, [r7, #16]
 8005b78:	605a      	str	r2, [r3, #4]
 8005b7a:	687b      	ldr	r3, [r7, #4]
 8005b7c:	68fa      	ldr	r2, [r7, #12]
 8005b7e:	619a      	str	r2, [r3, #24]
 8005b80:	683b      	ldr	r3, [r7, #0]
 8005b82:	685a      	ldr	r2, [r3, #4]
 8005b84:	687b      	ldr	r3, [r7, #4]
 8005b86:	639a      	str	r2, [r3, #56]	@ 0x38
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	697a      	ldr	r2, [r7, #20]
 8005b8c:	621a      	str	r2, [r3, #32]
 8005b8e:	bf00      	nop
 8005b90:	371c      	adds	r7, #28
 8005b92:	46bd      	mov	sp, r7
 8005b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b98:	4770      	bx	lr
 8005b9a:	bf00      	nop
 8005b9c:	40010000 	.word	0x40010000
 8005ba0:	40010400 	.word	0x40010400

08005ba4 <TIM_OC3_SetConfig>:
 8005ba4:	b480      	push	{r7}
 8005ba6:	b087      	sub	sp, #28
 8005ba8:	af00      	add	r7, sp, #0
 8005baa:	6078      	str	r0, [r7, #4]
 8005bac:	6039      	str	r1, [r7, #0]
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	6a1b      	ldr	r3, [r3, #32]
 8005bb2:	617b      	str	r3, [r7, #20]
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	6a1b      	ldr	r3, [r3, #32]
 8005bb8:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8005bbc:	687b      	ldr	r3, [r7, #4]
 8005bbe:	621a      	str	r2, [r3, #32]
 8005bc0:	687b      	ldr	r3, [r7, #4]
 8005bc2:	685b      	ldr	r3, [r3, #4]
 8005bc4:	613b      	str	r3, [r7, #16]
 8005bc6:	687b      	ldr	r3, [r7, #4]
 8005bc8:	69db      	ldr	r3, [r3, #28]
 8005bca:	60fb      	str	r3, [r7, #12]
 8005bcc:	68fb      	ldr	r3, [r7, #12]
 8005bce:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005bd2:	60fb      	str	r3, [r7, #12]
 8005bd4:	68fb      	ldr	r3, [r7, #12]
 8005bd6:	f023 0303 	bic.w	r3, r3, #3
 8005bda:	60fb      	str	r3, [r7, #12]
 8005bdc:	683b      	ldr	r3, [r7, #0]
 8005bde:	681b      	ldr	r3, [r3, #0]
 8005be0:	68fa      	ldr	r2, [r7, #12]
 8005be2:	4313      	orrs	r3, r2
 8005be4:	60fb      	str	r3, [r7, #12]
 8005be6:	697b      	ldr	r3, [r7, #20]
 8005be8:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005bec:	617b      	str	r3, [r7, #20]
 8005bee:	683b      	ldr	r3, [r7, #0]
 8005bf0:	689b      	ldr	r3, [r3, #8]
 8005bf2:	021b      	lsls	r3, r3, #8
 8005bf4:	697a      	ldr	r2, [r7, #20]
 8005bf6:	4313      	orrs	r3, r2
 8005bf8:	617b      	str	r3, [r7, #20]
 8005bfa:	687b      	ldr	r3, [r7, #4]
 8005bfc:	4a21      	ldr	r2, [pc, #132]	@ (8005c84 <TIM_OC3_SetConfig+0xe0>)
 8005bfe:	4293      	cmp	r3, r2
 8005c00:	d003      	beq.n	8005c0a <TIM_OC3_SetConfig+0x66>
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	4a20      	ldr	r2, [pc, #128]	@ (8005c88 <TIM_OC3_SetConfig+0xe4>)
 8005c06:	4293      	cmp	r3, r2
 8005c08:	d10d      	bne.n	8005c26 <TIM_OC3_SetConfig+0x82>
 8005c0a:	697b      	ldr	r3, [r7, #20]
 8005c0c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005c10:	617b      	str	r3, [r7, #20]
 8005c12:	683b      	ldr	r3, [r7, #0]
 8005c14:	68db      	ldr	r3, [r3, #12]
 8005c16:	021b      	lsls	r3, r3, #8
 8005c18:	697a      	ldr	r2, [r7, #20]
 8005c1a:	4313      	orrs	r3, r2
 8005c1c:	617b      	str	r3, [r7, #20]
 8005c1e:	697b      	ldr	r3, [r7, #20]
 8005c20:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005c24:	617b      	str	r3, [r7, #20]
 8005c26:	687b      	ldr	r3, [r7, #4]
 8005c28:	4a16      	ldr	r2, [pc, #88]	@ (8005c84 <TIM_OC3_SetConfig+0xe0>)
 8005c2a:	4293      	cmp	r3, r2
 8005c2c:	d003      	beq.n	8005c36 <TIM_OC3_SetConfig+0x92>
 8005c2e:	687b      	ldr	r3, [r7, #4]
 8005c30:	4a15      	ldr	r2, [pc, #84]	@ (8005c88 <TIM_OC3_SetConfig+0xe4>)
 8005c32:	4293      	cmp	r3, r2
 8005c34:	d113      	bne.n	8005c5e <TIM_OC3_SetConfig+0xba>
 8005c36:	693b      	ldr	r3, [r7, #16]
 8005c38:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005c3c:	613b      	str	r3, [r7, #16]
 8005c3e:	693b      	ldr	r3, [r7, #16]
 8005c40:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005c44:	613b      	str	r3, [r7, #16]
 8005c46:	683b      	ldr	r3, [r7, #0]
 8005c48:	695b      	ldr	r3, [r3, #20]
 8005c4a:	011b      	lsls	r3, r3, #4
 8005c4c:	693a      	ldr	r2, [r7, #16]
 8005c4e:	4313      	orrs	r3, r2
 8005c50:	613b      	str	r3, [r7, #16]
 8005c52:	683b      	ldr	r3, [r7, #0]
 8005c54:	699b      	ldr	r3, [r3, #24]
 8005c56:	011b      	lsls	r3, r3, #4
 8005c58:	693a      	ldr	r2, [r7, #16]
 8005c5a:	4313      	orrs	r3, r2
 8005c5c:	613b      	str	r3, [r7, #16]
 8005c5e:	687b      	ldr	r3, [r7, #4]
 8005c60:	693a      	ldr	r2, [r7, #16]
 8005c62:	605a      	str	r2, [r3, #4]
 8005c64:	687b      	ldr	r3, [r7, #4]
 8005c66:	68fa      	ldr	r2, [r7, #12]
 8005c68:	61da      	str	r2, [r3, #28]
 8005c6a:	683b      	ldr	r3, [r7, #0]
 8005c6c:	685a      	ldr	r2, [r3, #4]
 8005c6e:	687b      	ldr	r3, [r7, #4]
 8005c70:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	697a      	ldr	r2, [r7, #20]
 8005c76:	621a      	str	r2, [r3, #32]
 8005c78:	bf00      	nop
 8005c7a:	371c      	adds	r7, #28
 8005c7c:	46bd      	mov	sp, r7
 8005c7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c82:	4770      	bx	lr
 8005c84:	40010000 	.word	0x40010000
 8005c88:	40010400 	.word	0x40010400

08005c8c <TIM_OC4_SetConfig>:
 8005c8c:	b480      	push	{r7}
 8005c8e:	b087      	sub	sp, #28
 8005c90:	af00      	add	r7, sp, #0
 8005c92:	6078      	str	r0, [r7, #4]
 8005c94:	6039      	str	r1, [r7, #0]
 8005c96:	687b      	ldr	r3, [r7, #4]
 8005c98:	6a1b      	ldr	r3, [r3, #32]
 8005c9a:	613b      	str	r3, [r7, #16]
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	6a1b      	ldr	r3, [r3, #32]
 8005ca0:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005ca4:	687b      	ldr	r3, [r7, #4]
 8005ca6:	621a      	str	r2, [r3, #32]
 8005ca8:	687b      	ldr	r3, [r7, #4]
 8005caa:	685b      	ldr	r3, [r3, #4]
 8005cac:	617b      	str	r3, [r7, #20]
 8005cae:	687b      	ldr	r3, [r7, #4]
 8005cb0:	69db      	ldr	r3, [r3, #28]
 8005cb2:	60fb      	str	r3, [r7, #12]
 8005cb4:	68fb      	ldr	r3, [r7, #12]
 8005cb6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005cba:	60fb      	str	r3, [r7, #12]
 8005cbc:	68fb      	ldr	r3, [r7, #12]
 8005cbe:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005cc2:	60fb      	str	r3, [r7, #12]
 8005cc4:	683b      	ldr	r3, [r7, #0]
 8005cc6:	681b      	ldr	r3, [r3, #0]
 8005cc8:	021b      	lsls	r3, r3, #8
 8005cca:	68fa      	ldr	r2, [r7, #12]
 8005ccc:	4313      	orrs	r3, r2
 8005cce:	60fb      	str	r3, [r7, #12]
 8005cd0:	693b      	ldr	r3, [r7, #16]
 8005cd2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005cd6:	613b      	str	r3, [r7, #16]
 8005cd8:	683b      	ldr	r3, [r7, #0]
 8005cda:	689b      	ldr	r3, [r3, #8]
 8005cdc:	031b      	lsls	r3, r3, #12
 8005cde:	693a      	ldr	r2, [r7, #16]
 8005ce0:	4313      	orrs	r3, r2
 8005ce2:	613b      	str	r3, [r7, #16]
 8005ce4:	687b      	ldr	r3, [r7, #4]
 8005ce6:	4a12      	ldr	r2, [pc, #72]	@ (8005d30 <TIM_OC4_SetConfig+0xa4>)
 8005ce8:	4293      	cmp	r3, r2
 8005cea:	d003      	beq.n	8005cf4 <TIM_OC4_SetConfig+0x68>
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	4a11      	ldr	r2, [pc, #68]	@ (8005d34 <TIM_OC4_SetConfig+0xa8>)
 8005cf0:	4293      	cmp	r3, r2
 8005cf2:	d109      	bne.n	8005d08 <TIM_OC4_SetConfig+0x7c>
 8005cf4:	697b      	ldr	r3, [r7, #20]
 8005cf6:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8005cfa:	617b      	str	r3, [r7, #20]
 8005cfc:	683b      	ldr	r3, [r7, #0]
 8005cfe:	695b      	ldr	r3, [r3, #20]
 8005d00:	019b      	lsls	r3, r3, #6
 8005d02:	697a      	ldr	r2, [r7, #20]
 8005d04:	4313      	orrs	r3, r2
 8005d06:	617b      	str	r3, [r7, #20]
 8005d08:	687b      	ldr	r3, [r7, #4]
 8005d0a:	697a      	ldr	r2, [r7, #20]
 8005d0c:	605a      	str	r2, [r3, #4]
 8005d0e:	687b      	ldr	r3, [r7, #4]
 8005d10:	68fa      	ldr	r2, [r7, #12]
 8005d12:	61da      	str	r2, [r3, #28]
 8005d14:	683b      	ldr	r3, [r7, #0]
 8005d16:	685a      	ldr	r2, [r3, #4]
 8005d18:	687b      	ldr	r3, [r7, #4]
 8005d1a:	641a      	str	r2, [r3, #64]	@ 0x40
 8005d1c:	687b      	ldr	r3, [r7, #4]
 8005d1e:	693a      	ldr	r2, [r7, #16]
 8005d20:	621a      	str	r2, [r3, #32]
 8005d22:	bf00      	nop
 8005d24:	371c      	adds	r7, #28
 8005d26:	46bd      	mov	sp, r7
 8005d28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d2c:	4770      	bx	lr
 8005d2e:	bf00      	nop
 8005d30:	40010000 	.word	0x40010000
 8005d34:	40010400 	.word	0x40010400

08005d38 <TIM_TI1_ConfigInputStage>:
 8005d38:	b480      	push	{r7}
 8005d3a:	b087      	sub	sp, #28
 8005d3c:	af00      	add	r7, sp, #0
 8005d3e:	60f8      	str	r0, [r7, #12]
 8005d40:	60b9      	str	r1, [r7, #8]
 8005d42:	607a      	str	r2, [r7, #4]
 8005d44:	68fb      	ldr	r3, [r7, #12]
 8005d46:	6a1b      	ldr	r3, [r3, #32]
 8005d48:	617b      	str	r3, [r7, #20]
 8005d4a:	68fb      	ldr	r3, [r7, #12]
 8005d4c:	6a1b      	ldr	r3, [r3, #32]
 8005d4e:	f023 0201 	bic.w	r2, r3, #1
 8005d52:	68fb      	ldr	r3, [r7, #12]
 8005d54:	621a      	str	r2, [r3, #32]
 8005d56:	68fb      	ldr	r3, [r7, #12]
 8005d58:	699b      	ldr	r3, [r3, #24]
 8005d5a:	613b      	str	r3, [r7, #16]
 8005d5c:	693b      	ldr	r3, [r7, #16]
 8005d5e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005d62:	613b      	str	r3, [r7, #16]
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	011b      	lsls	r3, r3, #4
 8005d68:	693a      	ldr	r2, [r7, #16]
 8005d6a:	4313      	orrs	r3, r2
 8005d6c:	613b      	str	r3, [r7, #16]
 8005d6e:	697b      	ldr	r3, [r7, #20]
 8005d70:	f023 030a 	bic.w	r3, r3, #10
 8005d74:	617b      	str	r3, [r7, #20]
 8005d76:	697a      	ldr	r2, [r7, #20]
 8005d78:	68bb      	ldr	r3, [r7, #8]
 8005d7a:	4313      	orrs	r3, r2
 8005d7c:	617b      	str	r3, [r7, #20]
 8005d7e:	68fb      	ldr	r3, [r7, #12]
 8005d80:	693a      	ldr	r2, [r7, #16]
 8005d82:	619a      	str	r2, [r3, #24]
 8005d84:	68fb      	ldr	r3, [r7, #12]
 8005d86:	697a      	ldr	r2, [r7, #20]
 8005d88:	621a      	str	r2, [r3, #32]
 8005d8a:	bf00      	nop
 8005d8c:	371c      	adds	r7, #28
 8005d8e:	46bd      	mov	sp, r7
 8005d90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d94:	4770      	bx	lr

08005d96 <TIM_TI2_ConfigInputStage>:
 8005d96:	b480      	push	{r7}
 8005d98:	b087      	sub	sp, #28
 8005d9a:	af00      	add	r7, sp, #0
 8005d9c:	60f8      	str	r0, [r7, #12]
 8005d9e:	60b9      	str	r1, [r7, #8]
 8005da0:	607a      	str	r2, [r7, #4]
 8005da2:	68fb      	ldr	r3, [r7, #12]
 8005da4:	6a1b      	ldr	r3, [r3, #32]
 8005da6:	617b      	str	r3, [r7, #20]
 8005da8:	68fb      	ldr	r3, [r7, #12]
 8005daa:	6a1b      	ldr	r3, [r3, #32]
 8005dac:	f023 0210 	bic.w	r2, r3, #16
 8005db0:	68fb      	ldr	r3, [r7, #12]
 8005db2:	621a      	str	r2, [r3, #32]
 8005db4:	68fb      	ldr	r3, [r7, #12]
 8005db6:	699b      	ldr	r3, [r3, #24]
 8005db8:	613b      	str	r3, [r7, #16]
 8005dba:	693b      	ldr	r3, [r7, #16]
 8005dbc:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005dc0:	613b      	str	r3, [r7, #16]
 8005dc2:	687b      	ldr	r3, [r7, #4]
 8005dc4:	031b      	lsls	r3, r3, #12
 8005dc6:	693a      	ldr	r2, [r7, #16]
 8005dc8:	4313      	orrs	r3, r2
 8005dca:	613b      	str	r3, [r7, #16]
 8005dcc:	697b      	ldr	r3, [r7, #20]
 8005dce:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8005dd2:	617b      	str	r3, [r7, #20]
 8005dd4:	68bb      	ldr	r3, [r7, #8]
 8005dd6:	011b      	lsls	r3, r3, #4
 8005dd8:	697a      	ldr	r2, [r7, #20]
 8005dda:	4313      	orrs	r3, r2
 8005ddc:	617b      	str	r3, [r7, #20]
 8005dde:	68fb      	ldr	r3, [r7, #12]
 8005de0:	693a      	ldr	r2, [r7, #16]
 8005de2:	619a      	str	r2, [r3, #24]
 8005de4:	68fb      	ldr	r3, [r7, #12]
 8005de6:	697a      	ldr	r2, [r7, #20]
 8005de8:	621a      	str	r2, [r3, #32]
 8005dea:	bf00      	nop
 8005dec:	371c      	adds	r7, #28
 8005dee:	46bd      	mov	sp, r7
 8005df0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005df4:	4770      	bx	lr

08005df6 <TIM_ITRx_SetConfig>:
 8005df6:	b480      	push	{r7}
 8005df8:	b085      	sub	sp, #20
 8005dfa:	af00      	add	r7, sp, #0
 8005dfc:	6078      	str	r0, [r7, #4]
 8005dfe:	6039      	str	r1, [r7, #0]
 8005e00:	687b      	ldr	r3, [r7, #4]
 8005e02:	689b      	ldr	r3, [r3, #8]
 8005e04:	60fb      	str	r3, [r7, #12]
 8005e06:	68fb      	ldr	r3, [r7, #12]
 8005e08:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005e0c:	60fb      	str	r3, [r7, #12]
 8005e0e:	683a      	ldr	r2, [r7, #0]
 8005e10:	68fb      	ldr	r3, [r7, #12]
 8005e12:	4313      	orrs	r3, r2
 8005e14:	f043 0307 	orr.w	r3, r3, #7
 8005e18:	60fb      	str	r3, [r7, #12]
 8005e1a:	687b      	ldr	r3, [r7, #4]
 8005e1c:	68fa      	ldr	r2, [r7, #12]
 8005e1e:	609a      	str	r2, [r3, #8]
 8005e20:	bf00      	nop
 8005e22:	3714      	adds	r7, #20
 8005e24:	46bd      	mov	sp, r7
 8005e26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e2a:	4770      	bx	lr

08005e2c <TIM_ETR_SetConfig>:
 8005e2c:	b480      	push	{r7}
 8005e2e:	b087      	sub	sp, #28
 8005e30:	af00      	add	r7, sp, #0
 8005e32:	60f8      	str	r0, [r7, #12]
 8005e34:	60b9      	str	r1, [r7, #8]
 8005e36:	607a      	str	r2, [r7, #4]
 8005e38:	603b      	str	r3, [r7, #0]
 8005e3a:	68fb      	ldr	r3, [r7, #12]
 8005e3c:	689b      	ldr	r3, [r3, #8]
 8005e3e:	617b      	str	r3, [r7, #20]
 8005e40:	697b      	ldr	r3, [r7, #20]
 8005e42:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005e46:	617b      	str	r3, [r7, #20]
 8005e48:	683b      	ldr	r3, [r7, #0]
 8005e4a:	021a      	lsls	r2, r3, #8
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	431a      	orrs	r2, r3
 8005e50:	68bb      	ldr	r3, [r7, #8]
 8005e52:	4313      	orrs	r3, r2
 8005e54:	697a      	ldr	r2, [r7, #20]
 8005e56:	4313      	orrs	r3, r2
 8005e58:	617b      	str	r3, [r7, #20]
 8005e5a:	68fb      	ldr	r3, [r7, #12]
 8005e5c:	697a      	ldr	r2, [r7, #20]
 8005e5e:	609a      	str	r2, [r3, #8]
 8005e60:	bf00      	nop
 8005e62:	371c      	adds	r7, #28
 8005e64:	46bd      	mov	sp, r7
 8005e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e6a:	4770      	bx	lr

08005e6c <TIM_CCxChannelCmd>:
 8005e6c:	b480      	push	{r7}
 8005e6e:	b087      	sub	sp, #28
 8005e70:	af00      	add	r7, sp, #0
 8005e72:	60f8      	str	r0, [r7, #12]
 8005e74:	60b9      	str	r1, [r7, #8]
 8005e76:	607a      	str	r2, [r7, #4]
 8005e78:	68bb      	ldr	r3, [r7, #8]
 8005e7a:	f003 031f 	and.w	r3, r3, #31
 8005e7e:	2201      	movs	r2, #1
 8005e80:	fa02 f303 	lsl.w	r3, r2, r3
 8005e84:	617b      	str	r3, [r7, #20]
 8005e86:	68fb      	ldr	r3, [r7, #12]
 8005e88:	6a1a      	ldr	r2, [r3, #32]
 8005e8a:	697b      	ldr	r3, [r7, #20]
 8005e8c:	43db      	mvns	r3, r3
 8005e8e:	401a      	ands	r2, r3
 8005e90:	68fb      	ldr	r3, [r7, #12]
 8005e92:	621a      	str	r2, [r3, #32]
 8005e94:	68fb      	ldr	r3, [r7, #12]
 8005e96:	6a1a      	ldr	r2, [r3, #32]
 8005e98:	68bb      	ldr	r3, [r7, #8]
 8005e9a:	f003 031f 	and.w	r3, r3, #31
 8005e9e:	6879      	ldr	r1, [r7, #4]
 8005ea0:	fa01 f303 	lsl.w	r3, r1, r3
 8005ea4:	431a      	orrs	r2, r3
 8005ea6:	68fb      	ldr	r3, [r7, #12]
 8005ea8:	621a      	str	r2, [r3, #32]
 8005eaa:	bf00      	nop
 8005eac:	371c      	adds	r7, #28
 8005eae:	46bd      	mov	sp, r7
 8005eb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005eb4:	4770      	bx	lr
	...

08005eb8 <HAL_TIMEx_MasterConfigSynchronization>:
 8005eb8:	b480      	push	{r7}
 8005eba:	b085      	sub	sp, #20
 8005ebc:	af00      	add	r7, sp, #0
 8005ebe:	6078      	str	r0, [r7, #4]
 8005ec0:	6039      	str	r1, [r7, #0]
 8005ec2:	687b      	ldr	r3, [r7, #4]
 8005ec4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005ec8:	2b01      	cmp	r3, #1
 8005eca:	d101      	bne.n	8005ed0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005ecc:	2302      	movs	r3, #2
 8005ece:	e05a      	b.n	8005f86 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8005ed0:	687b      	ldr	r3, [r7, #4]
 8005ed2:	2201      	movs	r2, #1
 8005ed4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005ed8:	687b      	ldr	r3, [r7, #4]
 8005eda:	2202      	movs	r2, #2
 8005edc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005ee0:	687b      	ldr	r3, [r7, #4]
 8005ee2:	681b      	ldr	r3, [r3, #0]
 8005ee4:	685b      	ldr	r3, [r3, #4]
 8005ee6:	60fb      	str	r3, [r7, #12]
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	681b      	ldr	r3, [r3, #0]
 8005eec:	689b      	ldr	r3, [r3, #8]
 8005eee:	60bb      	str	r3, [r7, #8]
 8005ef0:	68fb      	ldr	r3, [r7, #12]
 8005ef2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005ef6:	60fb      	str	r3, [r7, #12]
 8005ef8:	683b      	ldr	r3, [r7, #0]
 8005efa:	681b      	ldr	r3, [r3, #0]
 8005efc:	68fa      	ldr	r2, [r7, #12]
 8005efe:	4313      	orrs	r3, r2
 8005f00:	60fb      	str	r3, [r7, #12]
 8005f02:	687b      	ldr	r3, [r7, #4]
 8005f04:	681b      	ldr	r3, [r3, #0]
 8005f06:	68fa      	ldr	r2, [r7, #12]
 8005f08:	605a      	str	r2, [r3, #4]
 8005f0a:	687b      	ldr	r3, [r7, #4]
 8005f0c:	681b      	ldr	r3, [r3, #0]
 8005f0e:	4a21      	ldr	r2, [pc, #132]	@ (8005f94 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8005f10:	4293      	cmp	r3, r2
 8005f12:	d022      	beq.n	8005f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005f14:	687b      	ldr	r3, [r7, #4]
 8005f16:	681b      	ldr	r3, [r3, #0]
 8005f18:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005f1c:	d01d      	beq.n	8005f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005f1e:	687b      	ldr	r3, [r7, #4]
 8005f20:	681b      	ldr	r3, [r3, #0]
 8005f22:	4a1d      	ldr	r2, [pc, #116]	@ (8005f98 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8005f24:	4293      	cmp	r3, r2
 8005f26:	d018      	beq.n	8005f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	681b      	ldr	r3, [r3, #0]
 8005f2c:	4a1b      	ldr	r2, [pc, #108]	@ (8005f9c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8005f2e:	4293      	cmp	r3, r2
 8005f30:	d013      	beq.n	8005f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005f32:	687b      	ldr	r3, [r7, #4]
 8005f34:	681b      	ldr	r3, [r3, #0]
 8005f36:	4a1a      	ldr	r2, [pc, #104]	@ (8005fa0 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8005f38:	4293      	cmp	r3, r2
 8005f3a:	d00e      	beq.n	8005f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005f3c:	687b      	ldr	r3, [r7, #4]
 8005f3e:	681b      	ldr	r3, [r3, #0]
 8005f40:	4a18      	ldr	r2, [pc, #96]	@ (8005fa4 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8005f42:	4293      	cmp	r3, r2
 8005f44:	d009      	beq.n	8005f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005f46:	687b      	ldr	r3, [r7, #4]
 8005f48:	681b      	ldr	r3, [r3, #0]
 8005f4a:	4a17      	ldr	r2, [pc, #92]	@ (8005fa8 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8005f4c:	4293      	cmp	r3, r2
 8005f4e:	d004      	beq.n	8005f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005f50:	687b      	ldr	r3, [r7, #4]
 8005f52:	681b      	ldr	r3, [r3, #0]
 8005f54:	4a15      	ldr	r2, [pc, #84]	@ (8005fac <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8005f56:	4293      	cmp	r3, r2
 8005f58:	d10c      	bne.n	8005f74 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8005f5a:	68bb      	ldr	r3, [r7, #8]
 8005f5c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005f60:	60bb      	str	r3, [r7, #8]
 8005f62:	683b      	ldr	r3, [r7, #0]
 8005f64:	685b      	ldr	r3, [r3, #4]
 8005f66:	68ba      	ldr	r2, [r7, #8]
 8005f68:	4313      	orrs	r3, r2
 8005f6a:	60bb      	str	r3, [r7, #8]
 8005f6c:	687b      	ldr	r3, [r7, #4]
 8005f6e:	681b      	ldr	r3, [r3, #0]
 8005f70:	68ba      	ldr	r2, [r7, #8]
 8005f72:	609a      	str	r2, [r3, #8]
 8005f74:	687b      	ldr	r3, [r7, #4]
 8005f76:	2201      	movs	r2, #1
 8005f78:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	2200      	movs	r2, #0
 8005f80:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005f84:	2300      	movs	r3, #0
 8005f86:	4618      	mov	r0, r3
 8005f88:	3714      	adds	r7, #20
 8005f8a:	46bd      	mov	sp, r7
 8005f8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f90:	4770      	bx	lr
 8005f92:	bf00      	nop
 8005f94:	40010000 	.word	0x40010000
 8005f98:	40000400 	.word	0x40000400
 8005f9c:	40000800 	.word	0x40000800
 8005fa0:	40000c00 	.word	0x40000c00
 8005fa4:	40010400 	.word	0x40010400
 8005fa8:	40014000 	.word	0x40014000
 8005fac:	40001800 	.word	0x40001800

08005fb0 <HAL_TIMEx_CommutCallback>:
 8005fb0:	b480      	push	{r7}
 8005fb2:	b083      	sub	sp, #12
 8005fb4:	af00      	add	r7, sp, #0
 8005fb6:	6078      	str	r0, [r7, #4]
 8005fb8:	bf00      	nop
 8005fba:	370c      	adds	r7, #12
 8005fbc:	46bd      	mov	sp, r7
 8005fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fc2:	4770      	bx	lr

08005fc4 <HAL_TIMEx_BreakCallback>:
 8005fc4:	b480      	push	{r7}
 8005fc6:	b083      	sub	sp, #12
 8005fc8:	af00      	add	r7, sp, #0
 8005fca:	6078      	str	r0, [r7, #4]
 8005fcc:	bf00      	nop
 8005fce:	370c      	adds	r7, #12
 8005fd0:	46bd      	mov	sp, r7
 8005fd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fd6:	4770      	bx	lr

08005fd8 <memset>:
 8005fd8:	4402      	add	r2, r0
 8005fda:	4603      	mov	r3, r0
 8005fdc:	4293      	cmp	r3, r2
 8005fde:	d100      	bne.n	8005fe2 <memset+0xa>
 8005fe0:	4770      	bx	lr
 8005fe2:	f803 1b01 	strb.w	r1, [r3], #1
 8005fe6:	e7f9      	b.n	8005fdc <memset+0x4>

08005fe8 <__errno>:
 8005fe8:	4b01      	ldr	r3, [pc, #4]	@ (8005ff0 <__errno+0x8>)
 8005fea:	6818      	ldr	r0, [r3, #0]
 8005fec:	4770      	bx	lr
 8005fee:	bf00      	nop
 8005ff0:	20000034 	.word	0x20000034

08005ff4 <__libc_init_array>:
 8005ff4:	b570      	push	{r4, r5, r6, lr}
 8005ff6:	4d0d      	ldr	r5, [pc, #52]	@ (800602c <__libc_init_array+0x38>)
 8005ff8:	4c0d      	ldr	r4, [pc, #52]	@ (8006030 <__libc_init_array+0x3c>)
 8005ffa:	1b64      	subs	r4, r4, r5
 8005ffc:	10a4      	asrs	r4, r4, #2
 8005ffe:	2600      	movs	r6, #0
 8006000:	42a6      	cmp	r6, r4
 8006002:	d109      	bne.n	8006018 <__libc_init_array+0x24>
 8006004:	4d0b      	ldr	r5, [pc, #44]	@ (8006034 <__libc_init_array+0x40>)
 8006006:	4c0c      	ldr	r4, [pc, #48]	@ (8006038 <__libc_init_array+0x44>)
 8006008:	f000 fac0 	bl	800658c <_init>
 800600c:	1b64      	subs	r4, r4, r5
 800600e:	10a4      	asrs	r4, r4, #2
 8006010:	2600      	movs	r6, #0
 8006012:	42a6      	cmp	r6, r4
 8006014:	d105      	bne.n	8006022 <__libc_init_array+0x2e>
 8006016:	bd70      	pop	{r4, r5, r6, pc}
 8006018:	f855 3b04 	ldr.w	r3, [r5], #4
 800601c:	4798      	blx	r3
 800601e:	3601      	adds	r6, #1
 8006020:	e7ee      	b.n	8006000 <__libc_init_array+0xc>
 8006022:	f855 3b04 	ldr.w	r3, [r5], #4
 8006026:	4798      	blx	r3
 8006028:	3601      	adds	r6, #1
 800602a:	e7f2      	b.n	8006012 <__libc_init_array+0x1e>
 800602c:	08006608 	.word	0x08006608
 8006030:	08006608 	.word	0x08006608
 8006034:	08006608 	.word	0x08006608
 8006038:	0800660c 	.word	0x0800660c

0800603c <sqrt>:
 800603c:	b538      	push	{r3, r4, r5, lr}
 800603e:	ed2d 8b02 	vpush	{d8}
 8006042:	ec55 4b10 	vmov	r4, r5, d0
 8006046:	f000 f9c7 	bl	80063d8 <__ieee754_sqrt>
 800604a:	4622      	mov	r2, r4
 800604c:	462b      	mov	r3, r5
 800604e:	4620      	mov	r0, r4
 8006050:	4629      	mov	r1, r5
 8006052:	eeb0 8a40 	vmov.f32	s16, s0
 8006056:	eef0 8a60 	vmov.f32	s17, s1
 800605a:	f7fa fd2b 	bl	8000ab4 <__aeabi_dcmpun>
 800605e:	b990      	cbnz	r0, 8006086 <sqrt+0x4a>
 8006060:	2200      	movs	r2, #0
 8006062:	2300      	movs	r3, #0
 8006064:	4620      	mov	r0, r4
 8006066:	4629      	mov	r1, r5
 8006068:	f7fa fcfc 	bl	8000a64 <__aeabi_dcmplt>
 800606c:	b158      	cbz	r0, 8006086 <sqrt+0x4a>
 800606e:	f7ff ffbb 	bl	8005fe8 <__errno>
 8006072:	2321      	movs	r3, #33	@ 0x21
 8006074:	6003      	str	r3, [r0, #0]
 8006076:	2200      	movs	r2, #0
 8006078:	2300      	movs	r3, #0
 800607a:	4610      	mov	r0, r2
 800607c:	4619      	mov	r1, r3
 800607e:	f7fa fba9 	bl	80007d4 <__aeabi_ddiv>
 8006082:	ec41 0b18 	vmov	d8, r0, r1
 8006086:	eeb0 0a48 	vmov.f32	s0, s16
 800608a:	eef0 0a68 	vmov.f32	s1, s17
 800608e:	ecbd 8b02 	vpop	{d8}
 8006092:	bd38      	pop	{r3, r4, r5, pc}
 8006094:	0000      	movs	r0, r0
	...

08006098 <atan>:
 8006098:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800609c:	ec55 4b10 	vmov	r4, r5, d0
 80060a0:	4bbf      	ldr	r3, [pc, #764]	@ (80063a0 <atan+0x308>)
 80060a2:	f025 4600 	bic.w	r6, r5, #2147483648	@ 0x80000000
 80060a6:	429e      	cmp	r6, r3
 80060a8:	46ab      	mov	fp, r5
 80060aa:	d918      	bls.n	80060de <atan+0x46>
 80060ac:	4bbd      	ldr	r3, [pc, #756]	@ (80063a4 <atan+0x30c>)
 80060ae:	429e      	cmp	r6, r3
 80060b0:	d801      	bhi.n	80060b6 <atan+0x1e>
 80060b2:	d109      	bne.n	80060c8 <atan+0x30>
 80060b4:	b144      	cbz	r4, 80060c8 <atan+0x30>
 80060b6:	4622      	mov	r2, r4
 80060b8:	462b      	mov	r3, r5
 80060ba:	4620      	mov	r0, r4
 80060bc:	4629      	mov	r1, r5
 80060be:	f7fa f8a9 	bl	8000214 <__adddf3>
 80060c2:	4604      	mov	r4, r0
 80060c4:	460d      	mov	r5, r1
 80060c6:	e006      	b.n	80060d6 <atan+0x3e>
 80060c8:	f1bb 0f00 	cmp.w	fp, #0
 80060cc:	f340 812b 	ble.w	8006326 <atan+0x28e>
 80060d0:	a597      	add	r5, pc, #604	@ (adr r5, 8006330 <atan+0x298>)
 80060d2:	e9d5 4500 	ldrd	r4, r5, [r5]
 80060d6:	ec45 4b10 	vmov	d0, r4, r5
 80060da:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80060de:	4bb2      	ldr	r3, [pc, #712]	@ (80063a8 <atan+0x310>)
 80060e0:	429e      	cmp	r6, r3
 80060e2:	d813      	bhi.n	800610c <atan+0x74>
 80060e4:	f1a3 73de 	sub.w	r3, r3, #29097984	@ 0x1bc0000
 80060e8:	429e      	cmp	r6, r3
 80060ea:	d80c      	bhi.n	8006106 <atan+0x6e>
 80060ec:	a392      	add	r3, pc, #584	@ (adr r3, 8006338 <atan+0x2a0>)
 80060ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060f2:	4620      	mov	r0, r4
 80060f4:	4629      	mov	r1, r5
 80060f6:	f7fa f88d 	bl	8000214 <__adddf3>
 80060fa:	4bac      	ldr	r3, [pc, #688]	@ (80063ac <atan+0x314>)
 80060fc:	2200      	movs	r2, #0
 80060fe:	f7fa fccf 	bl	8000aa0 <__aeabi_dcmpgt>
 8006102:	2800      	cmp	r0, #0
 8006104:	d1e7      	bne.n	80060d6 <atan+0x3e>
 8006106:	f04f 3aff 	mov.w	sl, #4294967295
 800610a:	e029      	b.n	8006160 <atan+0xc8>
 800610c:	f000 f95c 	bl	80063c8 <fabs>
 8006110:	4ba7      	ldr	r3, [pc, #668]	@ (80063b0 <atan+0x318>)
 8006112:	429e      	cmp	r6, r3
 8006114:	ec55 4b10 	vmov	r4, r5, d0
 8006118:	f200 80bc 	bhi.w	8006294 <atan+0x1fc>
 800611c:	f5a3 2350 	sub.w	r3, r3, #851968	@ 0xd0000
 8006120:	429e      	cmp	r6, r3
 8006122:	f200 809e 	bhi.w	8006262 <atan+0x1ca>
 8006126:	4622      	mov	r2, r4
 8006128:	462b      	mov	r3, r5
 800612a:	4620      	mov	r0, r4
 800612c:	4629      	mov	r1, r5
 800612e:	f7fa f871 	bl	8000214 <__adddf3>
 8006132:	4b9e      	ldr	r3, [pc, #632]	@ (80063ac <atan+0x314>)
 8006134:	2200      	movs	r2, #0
 8006136:	f7fa f86b 	bl	8000210 <__aeabi_dsub>
 800613a:	2200      	movs	r2, #0
 800613c:	4606      	mov	r6, r0
 800613e:	460f      	mov	r7, r1
 8006140:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8006144:	4620      	mov	r0, r4
 8006146:	4629      	mov	r1, r5
 8006148:	f7fa f864 	bl	8000214 <__adddf3>
 800614c:	4602      	mov	r2, r0
 800614e:	460b      	mov	r3, r1
 8006150:	4630      	mov	r0, r6
 8006152:	4639      	mov	r1, r7
 8006154:	f7fa fb3e 	bl	80007d4 <__aeabi_ddiv>
 8006158:	f04f 0a00 	mov.w	sl, #0
 800615c:	4604      	mov	r4, r0
 800615e:	460d      	mov	r5, r1
 8006160:	4622      	mov	r2, r4
 8006162:	462b      	mov	r3, r5
 8006164:	4620      	mov	r0, r4
 8006166:	4629      	mov	r1, r5
 8006168:	f7fa fa0a 	bl	8000580 <__aeabi_dmul>
 800616c:	4602      	mov	r2, r0
 800616e:	460b      	mov	r3, r1
 8006170:	4680      	mov	r8, r0
 8006172:	4689      	mov	r9, r1
 8006174:	f7fa fa04 	bl	8000580 <__aeabi_dmul>
 8006178:	a371      	add	r3, pc, #452	@ (adr r3, 8006340 <atan+0x2a8>)
 800617a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800617e:	4606      	mov	r6, r0
 8006180:	460f      	mov	r7, r1
 8006182:	f7fa f9fd 	bl	8000580 <__aeabi_dmul>
 8006186:	a370      	add	r3, pc, #448	@ (adr r3, 8006348 <atan+0x2b0>)
 8006188:	e9d3 2300 	ldrd	r2, r3, [r3]
 800618c:	f7fa f842 	bl	8000214 <__adddf3>
 8006190:	4632      	mov	r2, r6
 8006192:	463b      	mov	r3, r7
 8006194:	f7fa f9f4 	bl	8000580 <__aeabi_dmul>
 8006198:	a36d      	add	r3, pc, #436	@ (adr r3, 8006350 <atan+0x2b8>)
 800619a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800619e:	f7fa f839 	bl	8000214 <__adddf3>
 80061a2:	4632      	mov	r2, r6
 80061a4:	463b      	mov	r3, r7
 80061a6:	f7fa f9eb 	bl	8000580 <__aeabi_dmul>
 80061aa:	a36b      	add	r3, pc, #428	@ (adr r3, 8006358 <atan+0x2c0>)
 80061ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061b0:	f7fa f830 	bl	8000214 <__adddf3>
 80061b4:	4632      	mov	r2, r6
 80061b6:	463b      	mov	r3, r7
 80061b8:	f7fa f9e2 	bl	8000580 <__aeabi_dmul>
 80061bc:	a368      	add	r3, pc, #416	@ (adr r3, 8006360 <atan+0x2c8>)
 80061be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061c2:	f7fa f827 	bl	8000214 <__adddf3>
 80061c6:	4632      	mov	r2, r6
 80061c8:	463b      	mov	r3, r7
 80061ca:	f7fa f9d9 	bl	8000580 <__aeabi_dmul>
 80061ce:	a366      	add	r3, pc, #408	@ (adr r3, 8006368 <atan+0x2d0>)
 80061d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061d4:	f7fa f81e 	bl	8000214 <__adddf3>
 80061d8:	4642      	mov	r2, r8
 80061da:	464b      	mov	r3, r9
 80061dc:	f7fa f9d0 	bl	8000580 <__aeabi_dmul>
 80061e0:	a363      	add	r3, pc, #396	@ (adr r3, 8006370 <atan+0x2d8>)
 80061e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061e6:	4680      	mov	r8, r0
 80061e8:	4689      	mov	r9, r1
 80061ea:	4630      	mov	r0, r6
 80061ec:	4639      	mov	r1, r7
 80061ee:	f7fa f9c7 	bl	8000580 <__aeabi_dmul>
 80061f2:	a361      	add	r3, pc, #388	@ (adr r3, 8006378 <atan+0x2e0>)
 80061f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061f8:	f7fa f80a 	bl	8000210 <__aeabi_dsub>
 80061fc:	4632      	mov	r2, r6
 80061fe:	463b      	mov	r3, r7
 8006200:	f7fa f9be 	bl	8000580 <__aeabi_dmul>
 8006204:	a35e      	add	r3, pc, #376	@ (adr r3, 8006380 <atan+0x2e8>)
 8006206:	e9d3 2300 	ldrd	r2, r3, [r3]
 800620a:	f7fa f801 	bl	8000210 <__aeabi_dsub>
 800620e:	4632      	mov	r2, r6
 8006210:	463b      	mov	r3, r7
 8006212:	f7fa f9b5 	bl	8000580 <__aeabi_dmul>
 8006216:	a35c      	add	r3, pc, #368	@ (adr r3, 8006388 <atan+0x2f0>)
 8006218:	e9d3 2300 	ldrd	r2, r3, [r3]
 800621c:	f7f9 fff8 	bl	8000210 <__aeabi_dsub>
 8006220:	4632      	mov	r2, r6
 8006222:	463b      	mov	r3, r7
 8006224:	f7fa f9ac 	bl	8000580 <__aeabi_dmul>
 8006228:	a359      	add	r3, pc, #356	@ (adr r3, 8006390 <atan+0x2f8>)
 800622a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800622e:	f7f9 ffef 	bl	8000210 <__aeabi_dsub>
 8006232:	4632      	mov	r2, r6
 8006234:	463b      	mov	r3, r7
 8006236:	f7fa f9a3 	bl	8000580 <__aeabi_dmul>
 800623a:	4602      	mov	r2, r0
 800623c:	460b      	mov	r3, r1
 800623e:	4640      	mov	r0, r8
 8006240:	4649      	mov	r1, r9
 8006242:	f7f9 ffe7 	bl	8000214 <__adddf3>
 8006246:	4622      	mov	r2, r4
 8006248:	462b      	mov	r3, r5
 800624a:	f7fa f999 	bl	8000580 <__aeabi_dmul>
 800624e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8006252:	4602      	mov	r2, r0
 8006254:	460b      	mov	r3, r1
 8006256:	d148      	bne.n	80062ea <atan+0x252>
 8006258:	4620      	mov	r0, r4
 800625a:	4629      	mov	r1, r5
 800625c:	f7f9 ffd8 	bl	8000210 <__aeabi_dsub>
 8006260:	e72f      	b.n	80060c2 <atan+0x2a>
 8006262:	4b52      	ldr	r3, [pc, #328]	@ (80063ac <atan+0x314>)
 8006264:	2200      	movs	r2, #0
 8006266:	4620      	mov	r0, r4
 8006268:	4629      	mov	r1, r5
 800626a:	f7f9 ffd1 	bl	8000210 <__aeabi_dsub>
 800626e:	4b4f      	ldr	r3, [pc, #316]	@ (80063ac <atan+0x314>)
 8006270:	4606      	mov	r6, r0
 8006272:	460f      	mov	r7, r1
 8006274:	2200      	movs	r2, #0
 8006276:	4620      	mov	r0, r4
 8006278:	4629      	mov	r1, r5
 800627a:	f7f9 ffcb 	bl	8000214 <__adddf3>
 800627e:	4602      	mov	r2, r0
 8006280:	460b      	mov	r3, r1
 8006282:	4630      	mov	r0, r6
 8006284:	4639      	mov	r1, r7
 8006286:	f7fa faa5 	bl	80007d4 <__aeabi_ddiv>
 800628a:	f04f 0a01 	mov.w	sl, #1
 800628e:	4604      	mov	r4, r0
 8006290:	460d      	mov	r5, r1
 8006292:	e765      	b.n	8006160 <atan+0xc8>
 8006294:	4b47      	ldr	r3, [pc, #284]	@ (80063b4 <atan+0x31c>)
 8006296:	429e      	cmp	r6, r3
 8006298:	d21c      	bcs.n	80062d4 <atan+0x23c>
 800629a:	4b47      	ldr	r3, [pc, #284]	@ (80063b8 <atan+0x320>)
 800629c:	2200      	movs	r2, #0
 800629e:	4620      	mov	r0, r4
 80062a0:	4629      	mov	r1, r5
 80062a2:	f7f9 ffb5 	bl	8000210 <__aeabi_dsub>
 80062a6:	4b44      	ldr	r3, [pc, #272]	@ (80063b8 <atan+0x320>)
 80062a8:	4606      	mov	r6, r0
 80062aa:	460f      	mov	r7, r1
 80062ac:	2200      	movs	r2, #0
 80062ae:	4620      	mov	r0, r4
 80062b0:	4629      	mov	r1, r5
 80062b2:	f7fa f965 	bl	8000580 <__aeabi_dmul>
 80062b6:	4b3d      	ldr	r3, [pc, #244]	@ (80063ac <atan+0x314>)
 80062b8:	2200      	movs	r2, #0
 80062ba:	f7f9 ffab 	bl	8000214 <__adddf3>
 80062be:	4602      	mov	r2, r0
 80062c0:	460b      	mov	r3, r1
 80062c2:	4630      	mov	r0, r6
 80062c4:	4639      	mov	r1, r7
 80062c6:	f7fa fa85 	bl	80007d4 <__aeabi_ddiv>
 80062ca:	f04f 0a02 	mov.w	sl, #2
 80062ce:	4604      	mov	r4, r0
 80062d0:	460d      	mov	r5, r1
 80062d2:	e745      	b.n	8006160 <atan+0xc8>
 80062d4:	4622      	mov	r2, r4
 80062d6:	462b      	mov	r3, r5
 80062d8:	4938      	ldr	r1, [pc, #224]	@ (80063bc <atan+0x324>)
 80062da:	2000      	movs	r0, #0
 80062dc:	f7fa fa7a 	bl	80007d4 <__aeabi_ddiv>
 80062e0:	f04f 0a03 	mov.w	sl, #3
 80062e4:	4604      	mov	r4, r0
 80062e6:	460d      	mov	r5, r1
 80062e8:	e73a      	b.n	8006160 <atan+0xc8>
 80062ea:	4b35      	ldr	r3, [pc, #212]	@ (80063c0 <atan+0x328>)
 80062ec:	4e35      	ldr	r6, [pc, #212]	@ (80063c4 <atan+0x32c>)
 80062ee:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80062f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80062f6:	f7f9 ff8b 	bl	8000210 <__aeabi_dsub>
 80062fa:	4622      	mov	r2, r4
 80062fc:	462b      	mov	r3, r5
 80062fe:	f7f9 ff87 	bl	8000210 <__aeabi_dsub>
 8006302:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 8006306:	4602      	mov	r2, r0
 8006308:	460b      	mov	r3, r1
 800630a:	e9d6 0100 	ldrd	r0, r1, [r6]
 800630e:	f7f9 ff7f 	bl	8000210 <__aeabi_dsub>
 8006312:	f1bb 0f00 	cmp.w	fp, #0
 8006316:	4604      	mov	r4, r0
 8006318:	460d      	mov	r5, r1
 800631a:	f6bf aedc 	bge.w	80060d6 <atan+0x3e>
 800631e:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8006322:	461d      	mov	r5, r3
 8006324:	e6d7      	b.n	80060d6 <atan+0x3e>
 8006326:	a51c      	add	r5, pc, #112	@ (adr r5, 8006398 <atan+0x300>)
 8006328:	e9d5 4500 	ldrd	r4, r5, [r5]
 800632c:	e6d3      	b.n	80060d6 <atan+0x3e>
 800632e:	bf00      	nop
 8006330:	54442d18 	.word	0x54442d18
 8006334:	3ff921fb 	.word	0x3ff921fb
 8006338:	8800759c 	.word	0x8800759c
 800633c:	7e37e43c 	.word	0x7e37e43c
 8006340:	e322da11 	.word	0xe322da11
 8006344:	3f90ad3a 	.word	0x3f90ad3a
 8006348:	24760deb 	.word	0x24760deb
 800634c:	3fa97b4b 	.word	0x3fa97b4b
 8006350:	a0d03d51 	.word	0xa0d03d51
 8006354:	3fb10d66 	.word	0x3fb10d66
 8006358:	c54c206e 	.word	0xc54c206e
 800635c:	3fb745cd 	.word	0x3fb745cd
 8006360:	920083ff 	.word	0x920083ff
 8006364:	3fc24924 	.word	0x3fc24924
 8006368:	5555550d 	.word	0x5555550d
 800636c:	3fd55555 	.word	0x3fd55555
 8006370:	2c6a6c2f 	.word	0x2c6a6c2f
 8006374:	bfa2b444 	.word	0xbfa2b444
 8006378:	52defd9a 	.word	0x52defd9a
 800637c:	3fadde2d 	.word	0x3fadde2d
 8006380:	af749a6d 	.word	0xaf749a6d
 8006384:	3fb3b0f2 	.word	0x3fb3b0f2
 8006388:	fe231671 	.word	0xfe231671
 800638c:	3fbc71c6 	.word	0x3fbc71c6
 8006390:	9998ebc4 	.word	0x9998ebc4
 8006394:	3fc99999 	.word	0x3fc99999
 8006398:	54442d18 	.word	0x54442d18
 800639c:	bff921fb 	.word	0xbff921fb
 80063a0:	440fffff 	.word	0x440fffff
 80063a4:	7ff00000 	.word	0x7ff00000
 80063a8:	3fdbffff 	.word	0x3fdbffff
 80063ac:	3ff00000 	.word	0x3ff00000
 80063b0:	3ff2ffff 	.word	0x3ff2ffff
 80063b4:	40038000 	.word	0x40038000
 80063b8:	3ff80000 	.word	0x3ff80000
 80063bc:	bff00000 	.word	0xbff00000
 80063c0:	080065c0 	.word	0x080065c0
 80063c4:	080065e0 	.word	0x080065e0

080063c8 <fabs>:
 80063c8:	ec51 0b10 	vmov	r0, r1, d0
 80063cc:	4602      	mov	r2, r0
 80063ce:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 80063d2:	ec43 2b10 	vmov	d0, r2, r3
 80063d6:	4770      	bx	lr

080063d8 <__ieee754_sqrt>:
 80063d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063dc:	4a68      	ldr	r2, [pc, #416]	@ (8006580 <__ieee754_sqrt+0x1a8>)
 80063de:	ec55 4b10 	vmov	r4, r5, d0
 80063e2:	43aa      	bics	r2, r5
 80063e4:	462b      	mov	r3, r5
 80063e6:	4621      	mov	r1, r4
 80063e8:	d110      	bne.n	800640c <__ieee754_sqrt+0x34>
 80063ea:	4622      	mov	r2, r4
 80063ec:	4620      	mov	r0, r4
 80063ee:	4629      	mov	r1, r5
 80063f0:	f7fa f8c6 	bl	8000580 <__aeabi_dmul>
 80063f4:	4602      	mov	r2, r0
 80063f6:	460b      	mov	r3, r1
 80063f8:	4620      	mov	r0, r4
 80063fa:	4629      	mov	r1, r5
 80063fc:	f7f9 ff0a 	bl	8000214 <__adddf3>
 8006400:	4604      	mov	r4, r0
 8006402:	460d      	mov	r5, r1
 8006404:	ec45 4b10 	vmov	d0, r4, r5
 8006408:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800640c:	2d00      	cmp	r5, #0
 800640e:	dc0e      	bgt.n	800642e <__ieee754_sqrt+0x56>
 8006410:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 8006414:	4322      	orrs	r2, r4
 8006416:	d0f5      	beq.n	8006404 <__ieee754_sqrt+0x2c>
 8006418:	b19d      	cbz	r5, 8006442 <__ieee754_sqrt+0x6a>
 800641a:	4622      	mov	r2, r4
 800641c:	4620      	mov	r0, r4
 800641e:	4629      	mov	r1, r5
 8006420:	f7f9 fef6 	bl	8000210 <__aeabi_dsub>
 8006424:	4602      	mov	r2, r0
 8006426:	460b      	mov	r3, r1
 8006428:	f7fa f9d4 	bl	80007d4 <__aeabi_ddiv>
 800642c:	e7e8      	b.n	8006400 <__ieee754_sqrt+0x28>
 800642e:	152a      	asrs	r2, r5, #20
 8006430:	d115      	bne.n	800645e <__ieee754_sqrt+0x86>
 8006432:	2000      	movs	r0, #0
 8006434:	e009      	b.n	800644a <__ieee754_sqrt+0x72>
 8006436:	0acb      	lsrs	r3, r1, #11
 8006438:	3a15      	subs	r2, #21
 800643a:	0549      	lsls	r1, r1, #21
 800643c:	2b00      	cmp	r3, #0
 800643e:	d0fa      	beq.n	8006436 <__ieee754_sqrt+0x5e>
 8006440:	e7f7      	b.n	8006432 <__ieee754_sqrt+0x5a>
 8006442:	462a      	mov	r2, r5
 8006444:	e7fa      	b.n	800643c <__ieee754_sqrt+0x64>
 8006446:	005b      	lsls	r3, r3, #1
 8006448:	3001      	adds	r0, #1
 800644a:	02dc      	lsls	r4, r3, #11
 800644c:	d5fb      	bpl.n	8006446 <__ieee754_sqrt+0x6e>
 800644e:	1e44      	subs	r4, r0, #1
 8006450:	1b12      	subs	r2, r2, r4
 8006452:	f1c0 0420 	rsb	r4, r0, #32
 8006456:	fa21 f404 	lsr.w	r4, r1, r4
 800645a:	4323      	orrs	r3, r4
 800645c:	4081      	lsls	r1, r0
 800645e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006462:	f2a2 35ff 	subw	r5, r2, #1023	@ 0x3ff
 8006466:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800646a:	07d2      	lsls	r2, r2, #31
 800646c:	bf5c      	itt	pl
 800646e:	005b      	lslpl	r3, r3, #1
 8006470:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 8006474:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8006478:	bf58      	it	pl
 800647a:	0049      	lslpl	r1, r1, #1
 800647c:	2600      	movs	r6, #0
 800647e:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 8006482:	106d      	asrs	r5, r5, #1
 8006484:	0049      	lsls	r1, r1, #1
 8006486:	2016      	movs	r0, #22
 8006488:	4632      	mov	r2, r6
 800648a:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 800648e:	1917      	adds	r7, r2, r4
 8006490:	429f      	cmp	r7, r3
 8006492:	bfde      	ittt	le
 8006494:	193a      	addle	r2, r7, r4
 8006496:	1bdb      	suble	r3, r3, r7
 8006498:	1936      	addle	r6, r6, r4
 800649a:	0fcf      	lsrs	r7, r1, #31
 800649c:	3801      	subs	r0, #1
 800649e:	eb07 0343 	add.w	r3, r7, r3, lsl #1
 80064a2:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80064a6:	ea4f 0454 	mov.w	r4, r4, lsr #1
 80064aa:	d1f0      	bne.n	800648e <__ieee754_sqrt+0xb6>
 80064ac:	4604      	mov	r4, r0
 80064ae:	2720      	movs	r7, #32
 80064b0:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80064b4:	429a      	cmp	r2, r3
 80064b6:	eb00 0e0c 	add.w	lr, r0, ip
 80064ba:	db02      	blt.n	80064c2 <__ieee754_sqrt+0xea>
 80064bc:	d113      	bne.n	80064e6 <__ieee754_sqrt+0x10e>
 80064be:	458e      	cmp	lr, r1
 80064c0:	d811      	bhi.n	80064e6 <__ieee754_sqrt+0x10e>
 80064c2:	f1be 0f00 	cmp.w	lr, #0
 80064c6:	eb0e 000c 	add.w	r0, lr, ip
 80064ca:	da42      	bge.n	8006552 <__ieee754_sqrt+0x17a>
 80064cc:	2800      	cmp	r0, #0
 80064ce:	db40      	blt.n	8006552 <__ieee754_sqrt+0x17a>
 80064d0:	f102 0801 	add.w	r8, r2, #1
 80064d4:	1a9b      	subs	r3, r3, r2
 80064d6:	458e      	cmp	lr, r1
 80064d8:	bf88      	it	hi
 80064da:	f103 33ff 	addhi.w	r3, r3, #4294967295
 80064de:	eba1 010e 	sub.w	r1, r1, lr
 80064e2:	4464      	add	r4, ip
 80064e4:	4642      	mov	r2, r8
 80064e6:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 80064ea:	3f01      	subs	r7, #1
 80064ec:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 80064f0:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80064f4:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 80064f8:	d1dc      	bne.n	80064b4 <__ieee754_sqrt+0xdc>
 80064fa:	4319      	orrs	r1, r3
 80064fc:	d01b      	beq.n	8006536 <__ieee754_sqrt+0x15e>
 80064fe:	f8df a084 	ldr.w	sl, [pc, #132]	@ 8006584 <__ieee754_sqrt+0x1ac>
 8006502:	f8df b084 	ldr.w	fp, [pc, #132]	@ 8006588 <__ieee754_sqrt+0x1b0>
 8006506:	e9da 0100 	ldrd	r0, r1, [sl]
 800650a:	e9db 2300 	ldrd	r2, r3, [fp]
 800650e:	f7f9 fe7f 	bl	8000210 <__aeabi_dsub>
 8006512:	e9da 8900 	ldrd	r8, r9, [sl]
 8006516:	4602      	mov	r2, r0
 8006518:	460b      	mov	r3, r1
 800651a:	4640      	mov	r0, r8
 800651c:	4649      	mov	r1, r9
 800651e:	f7fa faab 	bl	8000a78 <__aeabi_dcmple>
 8006522:	b140      	cbz	r0, 8006536 <__ieee754_sqrt+0x15e>
 8006524:	f1b4 3fff 	cmp.w	r4, #4294967295
 8006528:	e9da 0100 	ldrd	r0, r1, [sl]
 800652c:	e9db 2300 	ldrd	r2, r3, [fp]
 8006530:	d111      	bne.n	8006556 <__ieee754_sqrt+0x17e>
 8006532:	3601      	adds	r6, #1
 8006534:	463c      	mov	r4, r7
 8006536:	1072      	asrs	r2, r6, #1
 8006538:	0863      	lsrs	r3, r4, #1
 800653a:	07f1      	lsls	r1, r6, #31
 800653c:	f102 527f 	add.w	r2, r2, #1069547520	@ 0x3fc00000
 8006540:	f502 1200 	add.w	r2, r2, #2097152	@ 0x200000
 8006544:	bf48      	it	mi
 8006546:	f043 4300 	orrmi.w	r3, r3, #2147483648	@ 0x80000000
 800654a:	eb02 5105 	add.w	r1, r2, r5, lsl #20
 800654e:	4618      	mov	r0, r3
 8006550:	e756      	b.n	8006400 <__ieee754_sqrt+0x28>
 8006552:	4690      	mov	r8, r2
 8006554:	e7be      	b.n	80064d4 <__ieee754_sqrt+0xfc>
 8006556:	f7f9 fe5d 	bl	8000214 <__adddf3>
 800655a:	e9da 8900 	ldrd	r8, r9, [sl]
 800655e:	4602      	mov	r2, r0
 8006560:	460b      	mov	r3, r1
 8006562:	4640      	mov	r0, r8
 8006564:	4649      	mov	r1, r9
 8006566:	f7fa fa7d 	bl	8000a64 <__aeabi_dcmplt>
 800656a:	b120      	cbz	r0, 8006576 <__ieee754_sqrt+0x19e>
 800656c:	1ca0      	adds	r0, r4, #2
 800656e:	bf08      	it	eq
 8006570:	3601      	addeq	r6, #1
 8006572:	3402      	adds	r4, #2
 8006574:	e7df      	b.n	8006536 <__ieee754_sqrt+0x15e>
 8006576:	1c63      	adds	r3, r4, #1
 8006578:	f023 0401 	bic.w	r4, r3, #1
 800657c:	e7db      	b.n	8006536 <__ieee754_sqrt+0x15e>
 800657e:	bf00      	nop
 8006580:	7ff00000 	.word	0x7ff00000
 8006584:	20000090 	.word	0x20000090
 8006588:	20000088 	.word	0x20000088

0800658c <_init>:
 800658c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800658e:	bf00      	nop
 8006590:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006592:	bc08      	pop	{r3}
 8006594:	469e      	mov	lr, r3
 8006596:	4770      	bx	lr

08006598 <_fini>:
 8006598:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800659a:	bf00      	nop
 800659c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800659e:	bc08      	pop	{r3}
 80065a0:	469e      	mov	lr, r3
 80065a2:	4770      	bx	lr
