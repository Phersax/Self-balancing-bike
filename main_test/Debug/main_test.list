
main_test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000664c  080001c8  080001c8  000011c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000058  08006818  08006818  00007818  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006870  08006870  00008080  2**0
                  CONTENTS
  4 .ARM          00000008  08006870  08006870  00007870  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006878  08006878  00008080  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006878  08006878  00007878  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800687c  0800687c  0000787c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000080  20000000  08006880  00008000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000360  20000080  08006900  00008080  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003e0  08006900  000083e0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00008080  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000f6a6  00000000  00000000  000080b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000028b5  00000000  00000000  00017756  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000ee0  00000000  00000000  0001a010  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000b88  00000000  00000000  0001aef0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000219e8  00000000  00000000  0001ba78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00013b7d  00000000  00000000  0003d460  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000d1961  00000000  00000000  00050fdd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0012293e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004228  00000000  00000000  00122984  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000099  00000000  00000000  00126bac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	@ (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	@ (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000080 	.word	0x20000080
 80001e4:	00000000 	.word	0x00000000
 80001e8:	080067fc 	.word	0x080067fc

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	@ (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	@ (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	@ (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000084 	.word	0x20000084
 8000204:	080067fc 	.word	0x080067fc

08000208 <__aeabi_drsub>:
 8000208:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 800020c:	e002      	b.n	8000214 <__adddf3>
 800020e:	bf00      	nop

08000210 <__aeabi_dsub>:
 8000210:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000214 <__adddf3>:
 8000214:	b530      	push	{r4, r5, lr}
 8000216:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800021a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800021e:	ea94 0f05 	teq	r4, r5
 8000222:	bf08      	it	eq
 8000224:	ea90 0f02 	teqeq	r0, r2
 8000228:	bf1f      	itttt	ne
 800022a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800022e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000232:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000236:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800023a:	f000 80e2 	beq.w	8000402 <__adddf3+0x1ee>
 800023e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000242:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000246:	bfb8      	it	lt
 8000248:	426d      	neglt	r5, r5
 800024a:	dd0c      	ble.n	8000266 <__adddf3+0x52>
 800024c:	442c      	add	r4, r5
 800024e:	ea80 0202 	eor.w	r2, r0, r2
 8000252:	ea81 0303 	eor.w	r3, r1, r3
 8000256:	ea82 0000 	eor.w	r0, r2, r0
 800025a:	ea83 0101 	eor.w	r1, r3, r1
 800025e:	ea80 0202 	eor.w	r2, r0, r2
 8000262:	ea81 0303 	eor.w	r3, r1, r3
 8000266:	2d36      	cmp	r5, #54	@ 0x36
 8000268:	bf88      	it	hi
 800026a:	bd30      	pophi	{r4, r5, pc}
 800026c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000270:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000274:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000278:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800027c:	d002      	beq.n	8000284 <__adddf3+0x70>
 800027e:	4240      	negs	r0, r0
 8000280:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000284:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000288:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800028c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000290:	d002      	beq.n	8000298 <__adddf3+0x84>
 8000292:	4252      	negs	r2, r2
 8000294:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000298:	ea94 0f05 	teq	r4, r5
 800029c:	f000 80a7 	beq.w	80003ee <__adddf3+0x1da>
 80002a0:	f1a4 0401 	sub.w	r4, r4, #1
 80002a4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002a8:	db0d      	blt.n	80002c6 <__adddf3+0xb2>
 80002aa:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002ae:	fa22 f205 	lsr.w	r2, r2, r5
 80002b2:	1880      	adds	r0, r0, r2
 80002b4:	f141 0100 	adc.w	r1, r1, #0
 80002b8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002bc:	1880      	adds	r0, r0, r2
 80002be:	fa43 f305 	asr.w	r3, r3, r5
 80002c2:	4159      	adcs	r1, r3
 80002c4:	e00e      	b.n	80002e4 <__adddf3+0xd0>
 80002c6:	f1a5 0520 	sub.w	r5, r5, #32
 80002ca:	f10e 0e20 	add.w	lr, lr, #32
 80002ce:	2a01      	cmp	r2, #1
 80002d0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002d4:	bf28      	it	cs
 80002d6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002da:	fa43 f305 	asr.w	r3, r3, r5
 80002de:	18c0      	adds	r0, r0, r3
 80002e0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002e4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80002e8:	d507      	bpl.n	80002fa <__adddf3+0xe6>
 80002ea:	f04f 0e00 	mov.w	lr, #0
 80002ee:	f1dc 0c00 	rsbs	ip, ip, #0
 80002f2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002f6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002fa:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80002fe:	d31b      	bcc.n	8000338 <__adddf3+0x124>
 8000300:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8000304:	d30c      	bcc.n	8000320 <__adddf3+0x10c>
 8000306:	0849      	lsrs	r1, r1, #1
 8000308:	ea5f 0030 	movs.w	r0, r0, rrx
 800030c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000310:	f104 0401 	add.w	r4, r4, #1
 8000314:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000318:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 800031c:	f080 809a 	bcs.w	8000454 <__adddf3+0x240>
 8000320:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000324:	bf08      	it	eq
 8000326:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800032a:	f150 0000 	adcs.w	r0, r0, #0
 800032e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000332:	ea41 0105 	orr.w	r1, r1, r5
 8000336:	bd30      	pop	{r4, r5, pc}
 8000338:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800033c:	4140      	adcs	r0, r0
 800033e:	eb41 0101 	adc.w	r1, r1, r1
 8000342:	3c01      	subs	r4, #1
 8000344:	bf28      	it	cs
 8000346:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800034a:	d2e9      	bcs.n	8000320 <__adddf3+0x10c>
 800034c:	f091 0f00 	teq	r1, #0
 8000350:	bf04      	itt	eq
 8000352:	4601      	moveq	r1, r0
 8000354:	2000      	moveq	r0, #0
 8000356:	fab1 f381 	clz	r3, r1
 800035a:	bf08      	it	eq
 800035c:	3320      	addeq	r3, #32
 800035e:	f1a3 030b 	sub.w	r3, r3, #11
 8000362:	f1b3 0220 	subs.w	r2, r3, #32
 8000366:	da0c      	bge.n	8000382 <__adddf3+0x16e>
 8000368:	320c      	adds	r2, #12
 800036a:	dd08      	ble.n	800037e <__adddf3+0x16a>
 800036c:	f102 0c14 	add.w	ip, r2, #20
 8000370:	f1c2 020c 	rsb	r2, r2, #12
 8000374:	fa01 f00c 	lsl.w	r0, r1, ip
 8000378:	fa21 f102 	lsr.w	r1, r1, r2
 800037c:	e00c      	b.n	8000398 <__adddf3+0x184>
 800037e:	f102 0214 	add.w	r2, r2, #20
 8000382:	bfd8      	it	le
 8000384:	f1c2 0c20 	rsble	ip, r2, #32
 8000388:	fa01 f102 	lsl.w	r1, r1, r2
 800038c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000390:	bfdc      	itt	le
 8000392:	ea41 010c 	orrle.w	r1, r1, ip
 8000396:	4090      	lslle	r0, r2
 8000398:	1ae4      	subs	r4, r4, r3
 800039a:	bfa2      	ittt	ge
 800039c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003a0:	4329      	orrge	r1, r5
 80003a2:	bd30      	popge	{r4, r5, pc}
 80003a4:	ea6f 0404 	mvn.w	r4, r4
 80003a8:	3c1f      	subs	r4, #31
 80003aa:	da1c      	bge.n	80003e6 <__adddf3+0x1d2>
 80003ac:	340c      	adds	r4, #12
 80003ae:	dc0e      	bgt.n	80003ce <__adddf3+0x1ba>
 80003b0:	f104 0414 	add.w	r4, r4, #20
 80003b4:	f1c4 0220 	rsb	r2, r4, #32
 80003b8:	fa20 f004 	lsr.w	r0, r0, r4
 80003bc:	fa01 f302 	lsl.w	r3, r1, r2
 80003c0:	ea40 0003 	orr.w	r0, r0, r3
 80003c4:	fa21 f304 	lsr.w	r3, r1, r4
 80003c8:	ea45 0103 	orr.w	r1, r5, r3
 80003cc:	bd30      	pop	{r4, r5, pc}
 80003ce:	f1c4 040c 	rsb	r4, r4, #12
 80003d2:	f1c4 0220 	rsb	r2, r4, #32
 80003d6:	fa20 f002 	lsr.w	r0, r0, r2
 80003da:	fa01 f304 	lsl.w	r3, r1, r4
 80003de:	ea40 0003 	orr.w	r0, r0, r3
 80003e2:	4629      	mov	r1, r5
 80003e4:	bd30      	pop	{r4, r5, pc}
 80003e6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ea:	4629      	mov	r1, r5
 80003ec:	bd30      	pop	{r4, r5, pc}
 80003ee:	f094 0f00 	teq	r4, #0
 80003f2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80003f6:	bf06      	itte	eq
 80003f8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80003fc:	3401      	addeq	r4, #1
 80003fe:	3d01      	subne	r5, #1
 8000400:	e74e      	b.n	80002a0 <__adddf3+0x8c>
 8000402:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000406:	bf18      	it	ne
 8000408:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800040c:	d029      	beq.n	8000462 <__adddf3+0x24e>
 800040e:	ea94 0f05 	teq	r4, r5
 8000412:	bf08      	it	eq
 8000414:	ea90 0f02 	teqeq	r0, r2
 8000418:	d005      	beq.n	8000426 <__adddf3+0x212>
 800041a:	ea54 0c00 	orrs.w	ip, r4, r0
 800041e:	bf04      	itt	eq
 8000420:	4619      	moveq	r1, r3
 8000422:	4610      	moveq	r0, r2
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	ea91 0f03 	teq	r1, r3
 800042a:	bf1e      	ittt	ne
 800042c:	2100      	movne	r1, #0
 800042e:	2000      	movne	r0, #0
 8000430:	bd30      	popne	{r4, r5, pc}
 8000432:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000436:	d105      	bne.n	8000444 <__adddf3+0x230>
 8000438:	0040      	lsls	r0, r0, #1
 800043a:	4149      	adcs	r1, r1
 800043c:	bf28      	it	cs
 800043e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000442:	bd30      	pop	{r4, r5, pc}
 8000444:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000448:	bf3c      	itt	cc
 800044a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800044e:	bd30      	popcc	{r4, r5, pc}
 8000450:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000454:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000458:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800045c:	f04f 0000 	mov.w	r0, #0
 8000460:	bd30      	pop	{r4, r5, pc}
 8000462:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000466:	bf1a      	itte	ne
 8000468:	4619      	movne	r1, r3
 800046a:	4610      	movne	r0, r2
 800046c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000470:	bf1c      	itt	ne
 8000472:	460b      	movne	r3, r1
 8000474:	4602      	movne	r2, r0
 8000476:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800047a:	bf06      	itte	eq
 800047c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000480:	ea91 0f03 	teqeq	r1, r3
 8000484:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000488:	bd30      	pop	{r4, r5, pc}
 800048a:	bf00      	nop

0800048c <__aeabi_ui2d>:
 800048c:	f090 0f00 	teq	r0, #0
 8000490:	bf04      	itt	eq
 8000492:	2100      	moveq	r1, #0
 8000494:	4770      	bxeq	lr
 8000496:	b530      	push	{r4, r5, lr}
 8000498:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800049c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004a0:	f04f 0500 	mov.w	r5, #0
 80004a4:	f04f 0100 	mov.w	r1, #0
 80004a8:	e750      	b.n	800034c <__adddf3+0x138>
 80004aa:	bf00      	nop

080004ac <__aeabi_i2d>:
 80004ac:	f090 0f00 	teq	r0, #0
 80004b0:	bf04      	itt	eq
 80004b2:	2100      	moveq	r1, #0
 80004b4:	4770      	bxeq	lr
 80004b6:	b530      	push	{r4, r5, lr}
 80004b8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004bc:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004c0:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80004c4:	bf48      	it	mi
 80004c6:	4240      	negmi	r0, r0
 80004c8:	f04f 0100 	mov.w	r1, #0
 80004cc:	e73e      	b.n	800034c <__adddf3+0x138>
 80004ce:	bf00      	nop

080004d0 <__aeabi_f2d>:
 80004d0:	0042      	lsls	r2, r0, #1
 80004d2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004d6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004da:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004de:	bf1f      	itttt	ne
 80004e0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80004e4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80004e8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80004ec:	4770      	bxne	lr
 80004ee:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80004f2:	bf08      	it	eq
 80004f4:	4770      	bxeq	lr
 80004f6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80004fa:	bf04      	itt	eq
 80004fc:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000500:	4770      	bxeq	lr
 8000502:	b530      	push	{r4, r5, lr}
 8000504:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000510:	e71c      	b.n	800034c <__adddf3+0x138>
 8000512:	bf00      	nop

08000514 <__aeabi_ul2d>:
 8000514:	ea50 0201 	orrs.w	r2, r0, r1
 8000518:	bf08      	it	eq
 800051a:	4770      	bxeq	lr
 800051c:	b530      	push	{r4, r5, lr}
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	e00a      	b.n	800053a <__aeabi_l2d+0x16>

08000524 <__aeabi_l2d>:
 8000524:	ea50 0201 	orrs.w	r2, r0, r1
 8000528:	bf08      	it	eq
 800052a:	4770      	bxeq	lr
 800052c:	b530      	push	{r4, r5, lr}
 800052e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000532:	d502      	bpl.n	800053a <__aeabi_l2d+0x16>
 8000534:	4240      	negs	r0, r0
 8000536:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800053a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800053e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000542:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000546:	f43f aed8 	beq.w	80002fa <__adddf3+0xe6>
 800054a:	f04f 0203 	mov.w	r2, #3
 800054e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000552:	bf18      	it	ne
 8000554:	3203      	addne	r2, #3
 8000556:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800055a:	bf18      	it	ne
 800055c:	3203      	addne	r2, #3
 800055e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000562:	f1c2 0320 	rsb	r3, r2, #32
 8000566:	fa00 fc03 	lsl.w	ip, r0, r3
 800056a:	fa20 f002 	lsr.w	r0, r0, r2
 800056e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000572:	ea40 000e 	orr.w	r0, r0, lr
 8000576:	fa21 f102 	lsr.w	r1, r1, r2
 800057a:	4414      	add	r4, r2
 800057c:	e6bd      	b.n	80002fa <__adddf3+0xe6>
 800057e:	bf00      	nop

08000580 <__aeabi_dmul>:
 8000580:	b570      	push	{r4, r5, r6, lr}
 8000582:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000586:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800058a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800058e:	bf1d      	ittte	ne
 8000590:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000594:	ea94 0f0c 	teqne	r4, ip
 8000598:	ea95 0f0c 	teqne	r5, ip
 800059c:	f000 f8de 	bleq	800075c <__aeabi_dmul+0x1dc>
 80005a0:	442c      	add	r4, r5
 80005a2:	ea81 0603 	eor.w	r6, r1, r3
 80005a6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005aa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005ae:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005b2:	bf18      	it	ne
 80005b4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005bc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80005c0:	d038      	beq.n	8000634 <__aeabi_dmul+0xb4>
 80005c2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005ce:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80005d2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005d6:	f04f 0600 	mov.w	r6, #0
 80005da:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005de:	f09c 0f00 	teq	ip, #0
 80005e2:	bf18      	it	ne
 80005e4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005e8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80005ec:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80005f0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80005f4:	d204      	bcs.n	8000600 <__aeabi_dmul+0x80>
 80005f6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005fa:	416d      	adcs	r5, r5
 80005fc:	eb46 0606 	adc.w	r6, r6, r6
 8000600:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000604:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000608:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800060c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000610:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000614:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000618:	bf88      	it	hi
 800061a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800061e:	d81e      	bhi.n	800065e <__aeabi_dmul+0xde>
 8000620:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000624:	bf08      	it	eq
 8000626:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800062a:	f150 0000 	adcs.w	r0, r0, #0
 800062e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000632:	bd70      	pop	{r4, r5, r6, pc}
 8000634:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000638:	ea46 0101 	orr.w	r1, r6, r1
 800063c:	ea40 0002 	orr.w	r0, r0, r2
 8000640:	ea81 0103 	eor.w	r1, r1, r3
 8000644:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000648:	bfc2      	ittt	gt
 800064a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800064e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000652:	bd70      	popgt	{r4, r5, r6, pc}
 8000654:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000658:	f04f 0e00 	mov.w	lr, #0
 800065c:	3c01      	subs	r4, #1
 800065e:	f300 80ab 	bgt.w	80007b8 <__aeabi_dmul+0x238>
 8000662:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000666:	bfde      	ittt	le
 8000668:	2000      	movle	r0, #0
 800066a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800066e:	bd70      	pople	{r4, r5, r6, pc}
 8000670:	f1c4 0400 	rsb	r4, r4, #0
 8000674:	3c20      	subs	r4, #32
 8000676:	da35      	bge.n	80006e4 <__aeabi_dmul+0x164>
 8000678:	340c      	adds	r4, #12
 800067a:	dc1b      	bgt.n	80006b4 <__aeabi_dmul+0x134>
 800067c:	f104 0414 	add.w	r4, r4, #20
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f305 	lsl.w	r3, r0, r5
 8000688:	fa20 f004 	lsr.w	r0, r0, r4
 800068c:	fa01 f205 	lsl.w	r2, r1, r5
 8000690:	ea40 0002 	orr.w	r0, r0, r2
 8000694:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000698:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800069c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a0:	fa21 f604 	lsr.w	r6, r1, r4
 80006a4:	eb42 0106 	adc.w	r1, r2, r6
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 040c 	rsb	r4, r4, #12
 80006b8:	f1c4 0520 	rsb	r5, r4, #32
 80006bc:	fa00 f304 	lsl.w	r3, r0, r4
 80006c0:	fa20 f005 	lsr.w	r0, r0, r5
 80006c4:	fa01 f204 	lsl.w	r2, r1, r4
 80006c8:	ea40 0002 	orr.w	r0, r0, r2
 80006cc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006d4:	f141 0100 	adc.w	r1, r1, #0
 80006d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006dc:	bf08      	it	eq
 80006de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f1c4 0520 	rsb	r5, r4, #32
 80006e8:	fa00 f205 	lsl.w	r2, r0, r5
 80006ec:	ea4e 0e02 	orr.w	lr, lr, r2
 80006f0:	fa20 f304 	lsr.w	r3, r0, r4
 80006f4:	fa01 f205 	lsl.w	r2, r1, r5
 80006f8:	ea43 0302 	orr.w	r3, r3, r2
 80006fc:	fa21 f004 	lsr.w	r0, r1, r4
 8000700:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000704:	fa21 f204 	lsr.w	r2, r1, r4
 8000708:	ea20 0002 	bic.w	r0, r0, r2
 800070c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000710:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000714:	bf08      	it	eq
 8000716:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800071a:	bd70      	pop	{r4, r5, r6, pc}
 800071c:	f094 0f00 	teq	r4, #0
 8000720:	d10f      	bne.n	8000742 <__aeabi_dmul+0x1c2>
 8000722:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000726:	0040      	lsls	r0, r0, #1
 8000728:	eb41 0101 	adc.w	r1, r1, r1
 800072c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000730:	bf08      	it	eq
 8000732:	3c01      	subeq	r4, #1
 8000734:	d0f7      	beq.n	8000726 <__aeabi_dmul+0x1a6>
 8000736:	ea41 0106 	orr.w	r1, r1, r6
 800073a:	f095 0f00 	teq	r5, #0
 800073e:	bf18      	it	ne
 8000740:	4770      	bxne	lr
 8000742:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000746:	0052      	lsls	r2, r2, #1
 8000748:	eb43 0303 	adc.w	r3, r3, r3
 800074c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000750:	bf08      	it	eq
 8000752:	3d01      	subeq	r5, #1
 8000754:	d0f7      	beq.n	8000746 <__aeabi_dmul+0x1c6>
 8000756:	ea43 0306 	orr.w	r3, r3, r6
 800075a:	4770      	bx	lr
 800075c:	ea94 0f0c 	teq	r4, ip
 8000760:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000764:	bf18      	it	ne
 8000766:	ea95 0f0c 	teqne	r5, ip
 800076a:	d00c      	beq.n	8000786 <__aeabi_dmul+0x206>
 800076c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000770:	bf18      	it	ne
 8000772:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000776:	d1d1      	bne.n	800071c <__aeabi_dmul+0x19c>
 8000778:	ea81 0103 	eor.w	r1, r1, r3
 800077c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000780:	f04f 0000 	mov.w	r0, #0
 8000784:	bd70      	pop	{r4, r5, r6, pc}
 8000786:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800078a:	bf06      	itte	eq
 800078c:	4610      	moveq	r0, r2
 800078e:	4619      	moveq	r1, r3
 8000790:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000794:	d019      	beq.n	80007ca <__aeabi_dmul+0x24a>
 8000796:	ea94 0f0c 	teq	r4, ip
 800079a:	d102      	bne.n	80007a2 <__aeabi_dmul+0x222>
 800079c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007a0:	d113      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007a2:	ea95 0f0c 	teq	r5, ip
 80007a6:	d105      	bne.n	80007b4 <__aeabi_dmul+0x234>
 80007a8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007ac:	bf1c      	itt	ne
 80007ae:	4610      	movne	r0, r2
 80007b0:	4619      	movne	r1, r3
 80007b2:	d10a      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007b4:	ea81 0103 	eor.w	r1, r1, r3
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007c0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80007c4:	f04f 0000 	mov.w	r0, #0
 80007c8:	bd70      	pop	{r4, r5, r6, pc}
 80007ca:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007ce:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80007d2:	bd70      	pop	{r4, r5, r6, pc}

080007d4 <__aeabi_ddiv>:
 80007d4:	b570      	push	{r4, r5, r6, lr}
 80007d6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80007da:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80007de:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007e2:	bf1d      	ittte	ne
 80007e4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007e8:	ea94 0f0c 	teqne	r4, ip
 80007ec:	ea95 0f0c 	teqne	r5, ip
 80007f0:	f000 f8a7 	bleq	8000942 <__aeabi_ddiv+0x16e>
 80007f4:	eba4 0405 	sub.w	r4, r4, r5
 80007f8:	ea81 0e03 	eor.w	lr, r1, r3
 80007fc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000800:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000804:	f000 8088 	beq.w	8000918 <__aeabi_ddiv+0x144>
 8000808:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800080c:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000810:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000814:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000818:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800081c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000820:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000824:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000828:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 800082c:	429d      	cmp	r5, r3
 800082e:	bf08      	it	eq
 8000830:	4296      	cmpeq	r6, r2
 8000832:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 8000836:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 800083a:	d202      	bcs.n	8000842 <__aeabi_ddiv+0x6e>
 800083c:	085b      	lsrs	r3, r3, #1
 800083e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000842:	1ab6      	subs	r6, r6, r2
 8000844:	eb65 0503 	sbc.w	r5, r5, r3
 8000848:	085b      	lsrs	r3, r3, #1
 800084a:	ea4f 0232 	mov.w	r2, r2, rrx
 800084e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000852:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 000c 	orrcs.w	r0, r0, ip
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000880:	085b      	lsrs	r3, r3, #1
 8000882:	ea4f 0232 	mov.w	r2, r2, rrx
 8000886:	ebb6 0e02 	subs.w	lr, r6, r2
 800088a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088e:	bf22      	ittt	cs
 8000890:	1ab6      	subcs	r6, r6, r2
 8000892:	4675      	movcs	r5, lr
 8000894:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000898:	085b      	lsrs	r3, r3, #1
 800089a:	ea4f 0232 	mov.w	r2, r2, rrx
 800089e:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a6:	bf22      	ittt	cs
 80008a8:	1ab6      	subcs	r6, r6, r2
 80008aa:	4675      	movcs	r5, lr
 80008ac:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008b0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008b4:	d018      	beq.n	80008e8 <__aeabi_ddiv+0x114>
 80008b6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008ba:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008be:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008c2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008c6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008ca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008ce:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008d2:	d1c0      	bne.n	8000856 <__aeabi_ddiv+0x82>
 80008d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008d8:	d10b      	bne.n	80008f2 <__aeabi_ddiv+0x11e>
 80008da:	ea41 0100 	orr.w	r1, r1, r0
 80008de:	f04f 0000 	mov.w	r0, #0
 80008e2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80008e6:	e7b6      	b.n	8000856 <__aeabi_ddiv+0x82>
 80008e8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008ec:	bf04      	itt	eq
 80008ee:	4301      	orreq	r1, r0
 80008f0:	2000      	moveq	r0, #0
 80008f2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80008f6:	bf88      	it	hi
 80008f8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80008fc:	f63f aeaf 	bhi.w	800065e <__aeabi_dmul+0xde>
 8000900:	ebb5 0c03 	subs.w	ip, r5, r3
 8000904:	bf04      	itt	eq
 8000906:	ebb6 0c02 	subseq.w	ip, r6, r2
 800090a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800090e:	f150 0000 	adcs.w	r0, r0, #0
 8000912:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000916:	bd70      	pop	{r4, r5, r6, pc}
 8000918:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 800091c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000920:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000924:	bfc2      	ittt	gt
 8000926:	ebd4 050c 	rsbsgt	r5, r4, ip
 800092a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800092e:	bd70      	popgt	{r4, r5, r6, pc}
 8000930:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000934:	f04f 0e00 	mov.w	lr, #0
 8000938:	3c01      	subs	r4, #1
 800093a:	e690      	b.n	800065e <__aeabi_dmul+0xde>
 800093c:	ea45 0e06 	orr.w	lr, r5, r6
 8000940:	e68d      	b.n	800065e <__aeabi_dmul+0xde>
 8000942:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000946:	ea94 0f0c 	teq	r4, ip
 800094a:	bf08      	it	eq
 800094c:	ea95 0f0c 	teqeq	r5, ip
 8000950:	f43f af3b 	beq.w	80007ca <__aeabi_dmul+0x24a>
 8000954:	ea94 0f0c 	teq	r4, ip
 8000958:	d10a      	bne.n	8000970 <__aeabi_ddiv+0x19c>
 800095a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800095e:	f47f af34 	bne.w	80007ca <__aeabi_dmul+0x24a>
 8000962:	ea95 0f0c 	teq	r5, ip
 8000966:	f47f af25 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800096a:	4610      	mov	r0, r2
 800096c:	4619      	mov	r1, r3
 800096e:	e72c      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000970:	ea95 0f0c 	teq	r5, ip
 8000974:	d106      	bne.n	8000984 <__aeabi_ddiv+0x1b0>
 8000976:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800097a:	f43f aefd 	beq.w	8000778 <__aeabi_dmul+0x1f8>
 800097e:	4610      	mov	r0, r2
 8000980:	4619      	mov	r1, r3
 8000982:	e722      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000984:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000988:	bf18      	it	ne
 800098a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800098e:	f47f aec5 	bne.w	800071c <__aeabi_dmul+0x19c>
 8000992:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000996:	f47f af0d 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800099a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800099e:	f47f aeeb 	bne.w	8000778 <__aeabi_dmul+0x1f8>
 80009a2:	e712      	b.n	80007ca <__aeabi_dmul+0x24a>

080009a4 <__gedf2>:
 80009a4:	f04f 3cff 	mov.w	ip, #4294967295
 80009a8:	e006      	b.n	80009b8 <__cmpdf2+0x4>
 80009aa:	bf00      	nop

080009ac <__ledf2>:
 80009ac:	f04f 0c01 	mov.w	ip, #1
 80009b0:	e002      	b.n	80009b8 <__cmpdf2+0x4>
 80009b2:	bf00      	nop

080009b4 <__cmpdf2>:
 80009b4:	f04f 0c01 	mov.w	ip, #1
 80009b8:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009bc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009c0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009c4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009c8:	bf18      	it	ne
 80009ca:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009ce:	d01b      	beq.n	8000a08 <__cmpdf2+0x54>
 80009d0:	b001      	add	sp, #4
 80009d2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009d6:	bf0c      	ite	eq
 80009d8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009dc:	ea91 0f03 	teqne	r1, r3
 80009e0:	bf02      	ittt	eq
 80009e2:	ea90 0f02 	teqeq	r0, r2
 80009e6:	2000      	moveq	r0, #0
 80009e8:	4770      	bxeq	lr
 80009ea:	f110 0f00 	cmn.w	r0, #0
 80009ee:	ea91 0f03 	teq	r1, r3
 80009f2:	bf58      	it	pl
 80009f4:	4299      	cmppl	r1, r3
 80009f6:	bf08      	it	eq
 80009f8:	4290      	cmpeq	r0, r2
 80009fa:	bf2c      	ite	cs
 80009fc:	17d8      	asrcs	r0, r3, #31
 80009fe:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a02:	f040 0001 	orr.w	r0, r0, #1
 8000a06:	4770      	bx	lr
 8000a08:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a0c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a10:	d102      	bne.n	8000a18 <__cmpdf2+0x64>
 8000a12:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a16:	d107      	bne.n	8000a28 <__cmpdf2+0x74>
 8000a18:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a20:	d1d6      	bne.n	80009d0 <__cmpdf2+0x1c>
 8000a22:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a26:	d0d3      	beq.n	80009d0 <__cmpdf2+0x1c>
 8000a28:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a2c:	4770      	bx	lr
 8000a2e:	bf00      	nop

08000a30 <__aeabi_cdrcmple>:
 8000a30:	4684      	mov	ip, r0
 8000a32:	4610      	mov	r0, r2
 8000a34:	4662      	mov	r2, ip
 8000a36:	468c      	mov	ip, r1
 8000a38:	4619      	mov	r1, r3
 8000a3a:	4663      	mov	r3, ip
 8000a3c:	e000      	b.n	8000a40 <__aeabi_cdcmpeq>
 8000a3e:	bf00      	nop

08000a40 <__aeabi_cdcmpeq>:
 8000a40:	b501      	push	{r0, lr}
 8000a42:	f7ff ffb7 	bl	80009b4 <__cmpdf2>
 8000a46:	2800      	cmp	r0, #0
 8000a48:	bf48      	it	mi
 8000a4a:	f110 0f00 	cmnmi.w	r0, #0
 8000a4e:	bd01      	pop	{r0, pc}

08000a50 <__aeabi_dcmpeq>:
 8000a50:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a54:	f7ff fff4 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a58:	bf0c      	ite	eq
 8000a5a:	2001      	moveq	r0, #1
 8000a5c:	2000      	movne	r0, #0
 8000a5e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a62:	bf00      	nop

08000a64 <__aeabi_dcmplt>:
 8000a64:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a68:	f7ff ffea 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a6c:	bf34      	ite	cc
 8000a6e:	2001      	movcc	r0, #1
 8000a70:	2000      	movcs	r0, #0
 8000a72:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a76:	bf00      	nop

08000a78 <__aeabi_dcmple>:
 8000a78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a7c:	f7ff ffe0 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a80:	bf94      	ite	ls
 8000a82:	2001      	movls	r0, #1
 8000a84:	2000      	movhi	r0, #0
 8000a86:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a8a:	bf00      	nop

08000a8c <__aeabi_dcmpge>:
 8000a8c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a90:	f7ff ffce 	bl	8000a30 <__aeabi_cdrcmple>
 8000a94:	bf94      	ite	ls
 8000a96:	2001      	movls	r0, #1
 8000a98:	2000      	movhi	r0, #0
 8000a9a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a9e:	bf00      	nop

08000aa0 <__aeabi_dcmpgt>:
 8000aa0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa4:	f7ff ffc4 	bl	8000a30 <__aeabi_cdrcmple>
 8000aa8:	bf34      	ite	cc
 8000aaa:	2001      	movcc	r0, #1
 8000aac:	2000      	movcs	r0, #0
 8000aae:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ab2:	bf00      	nop

08000ab4 <__aeabi_dcmpun>:
 8000ab4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000abc:	d102      	bne.n	8000ac4 <__aeabi_dcmpun+0x10>
 8000abe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ac2:	d10a      	bne.n	8000ada <__aeabi_dcmpun+0x26>
 8000ac4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000acc:	d102      	bne.n	8000ad4 <__aeabi_dcmpun+0x20>
 8000ace:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ad2:	d102      	bne.n	8000ada <__aeabi_dcmpun+0x26>
 8000ad4:	f04f 0000 	mov.w	r0, #0
 8000ad8:	4770      	bx	lr
 8000ada:	f04f 0001 	mov.w	r0, #1
 8000ade:	4770      	bx	lr

08000ae0 <__aeabi_d2iz>:
 8000ae0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ae4:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ae8:	d215      	bcs.n	8000b16 <__aeabi_d2iz+0x36>
 8000aea:	d511      	bpl.n	8000b10 <__aeabi_d2iz+0x30>
 8000aec:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000af0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000af4:	d912      	bls.n	8000b1c <__aeabi_d2iz+0x3c>
 8000af6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000afa:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000afe:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b02:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b06:	fa23 f002 	lsr.w	r0, r3, r2
 8000b0a:	bf18      	it	ne
 8000b0c:	4240      	negne	r0, r0
 8000b0e:	4770      	bx	lr
 8000b10:	f04f 0000 	mov.w	r0, #0
 8000b14:	4770      	bx	lr
 8000b16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b1a:	d105      	bne.n	8000b28 <__aeabi_d2iz+0x48>
 8000b1c:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b20:	bf08      	it	eq
 8000b22:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b26:	4770      	bx	lr
 8000b28:	f04f 0000 	mov.w	r0, #0
 8000b2c:	4770      	bx	lr
 8000b2e:	bf00      	nop

08000b30 <__aeabi_d2uiz>:
 8000b30:	004a      	lsls	r2, r1, #1
 8000b32:	d211      	bcs.n	8000b58 <__aeabi_d2uiz+0x28>
 8000b34:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b38:	d211      	bcs.n	8000b5e <__aeabi_d2uiz+0x2e>
 8000b3a:	d50d      	bpl.n	8000b58 <__aeabi_d2uiz+0x28>
 8000b3c:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b40:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b44:	d40e      	bmi.n	8000b64 <__aeabi_d2uiz+0x34>
 8000b46:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b4a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b4e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b52:	fa23 f002 	lsr.w	r0, r3, r2
 8000b56:	4770      	bx	lr
 8000b58:	f04f 0000 	mov.w	r0, #0
 8000b5c:	4770      	bx	lr
 8000b5e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b62:	d102      	bne.n	8000b6a <__aeabi_d2uiz+0x3a>
 8000b64:	f04f 30ff 	mov.w	r0, #4294967295
 8000b68:	4770      	bx	lr
 8000b6a:	f04f 0000 	mov.w	r0, #0
 8000b6e:	4770      	bx	lr

08000b70 <__aeabi_d2f>:
 8000b70:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b74:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b78:	bf24      	itt	cs
 8000b7a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b7e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b82:	d90d      	bls.n	8000ba0 <__aeabi_d2f+0x30>
 8000b84:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b88:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b8c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b90:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b94:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b98:	bf08      	it	eq
 8000b9a:	f020 0001 	biceq.w	r0, r0, #1
 8000b9e:	4770      	bx	lr
 8000ba0:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000ba4:	d121      	bne.n	8000bea <__aeabi_d2f+0x7a>
 8000ba6:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000baa:	bfbc      	itt	lt
 8000bac:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000bb0:	4770      	bxlt	lr
 8000bb2:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bb6:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bba:	f1c2 0218 	rsb	r2, r2, #24
 8000bbe:	f1c2 0c20 	rsb	ip, r2, #32
 8000bc2:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bc6:	fa20 f002 	lsr.w	r0, r0, r2
 8000bca:	bf18      	it	ne
 8000bcc:	f040 0001 	orrne.w	r0, r0, #1
 8000bd0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bd8:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bdc:	ea40 000c 	orr.w	r0, r0, ip
 8000be0:	fa23 f302 	lsr.w	r3, r3, r2
 8000be4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000be8:	e7cc      	b.n	8000b84 <__aeabi_d2f+0x14>
 8000bea:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bee:	d107      	bne.n	8000c00 <__aeabi_d2f+0x90>
 8000bf0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000bf4:	bf1e      	ittt	ne
 8000bf6:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000bfa:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000bfe:	4770      	bxne	lr
 8000c00:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c04:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c08:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c0c:	4770      	bx	lr
 8000c0e:	bf00      	nop

08000c10 <__aeabi_uldivmod>:
 8000c10:	b953      	cbnz	r3, 8000c28 <__aeabi_uldivmod+0x18>
 8000c12:	b94a      	cbnz	r2, 8000c28 <__aeabi_uldivmod+0x18>
 8000c14:	2900      	cmp	r1, #0
 8000c16:	bf08      	it	eq
 8000c18:	2800      	cmpeq	r0, #0
 8000c1a:	bf1c      	itt	ne
 8000c1c:	f04f 31ff 	movne.w	r1, #4294967295
 8000c20:	f04f 30ff 	movne.w	r0, #4294967295
 8000c24:	f000 b96a 	b.w	8000efc <__aeabi_idiv0>
 8000c28:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c2c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c30:	f000 f806 	bl	8000c40 <__udivmoddi4>
 8000c34:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c38:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c3c:	b004      	add	sp, #16
 8000c3e:	4770      	bx	lr

08000c40 <__udivmoddi4>:
 8000c40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c44:	9d08      	ldr	r5, [sp, #32]
 8000c46:	460c      	mov	r4, r1
 8000c48:	2b00      	cmp	r3, #0
 8000c4a:	d14e      	bne.n	8000cea <__udivmoddi4+0xaa>
 8000c4c:	4694      	mov	ip, r2
 8000c4e:	458c      	cmp	ip, r1
 8000c50:	4686      	mov	lr, r0
 8000c52:	fab2 f282 	clz	r2, r2
 8000c56:	d962      	bls.n	8000d1e <__udivmoddi4+0xde>
 8000c58:	b14a      	cbz	r2, 8000c6e <__udivmoddi4+0x2e>
 8000c5a:	f1c2 0320 	rsb	r3, r2, #32
 8000c5e:	4091      	lsls	r1, r2
 8000c60:	fa20 f303 	lsr.w	r3, r0, r3
 8000c64:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c68:	4319      	orrs	r1, r3
 8000c6a:	fa00 fe02 	lsl.w	lr, r0, r2
 8000c6e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c72:	fa1f f68c 	uxth.w	r6, ip
 8000c76:	fbb1 f4f7 	udiv	r4, r1, r7
 8000c7a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000c7e:	fb07 1114 	mls	r1, r7, r4, r1
 8000c82:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c86:	fb04 f106 	mul.w	r1, r4, r6
 8000c8a:	4299      	cmp	r1, r3
 8000c8c:	d90a      	bls.n	8000ca4 <__udivmoddi4+0x64>
 8000c8e:	eb1c 0303 	adds.w	r3, ip, r3
 8000c92:	f104 30ff 	add.w	r0, r4, #4294967295
 8000c96:	f080 8112 	bcs.w	8000ebe <__udivmoddi4+0x27e>
 8000c9a:	4299      	cmp	r1, r3
 8000c9c:	f240 810f 	bls.w	8000ebe <__udivmoddi4+0x27e>
 8000ca0:	3c02      	subs	r4, #2
 8000ca2:	4463      	add	r3, ip
 8000ca4:	1a59      	subs	r1, r3, r1
 8000ca6:	fa1f f38e 	uxth.w	r3, lr
 8000caa:	fbb1 f0f7 	udiv	r0, r1, r7
 8000cae:	fb07 1110 	mls	r1, r7, r0, r1
 8000cb2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cb6:	fb00 f606 	mul.w	r6, r0, r6
 8000cba:	429e      	cmp	r6, r3
 8000cbc:	d90a      	bls.n	8000cd4 <__udivmoddi4+0x94>
 8000cbe:	eb1c 0303 	adds.w	r3, ip, r3
 8000cc2:	f100 31ff 	add.w	r1, r0, #4294967295
 8000cc6:	f080 80fc 	bcs.w	8000ec2 <__udivmoddi4+0x282>
 8000cca:	429e      	cmp	r6, r3
 8000ccc:	f240 80f9 	bls.w	8000ec2 <__udivmoddi4+0x282>
 8000cd0:	4463      	add	r3, ip
 8000cd2:	3802      	subs	r0, #2
 8000cd4:	1b9b      	subs	r3, r3, r6
 8000cd6:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000cda:	2100      	movs	r1, #0
 8000cdc:	b11d      	cbz	r5, 8000ce6 <__udivmoddi4+0xa6>
 8000cde:	40d3      	lsrs	r3, r2
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	e9c5 3200 	strd	r3, r2, [r5]
 8000ce6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cea:	428b      	cmp	r3, r1
 8000cec:	d905      	bls.n	8000cfa <__udivmoddi4+0xba>
 8000cee:	b10d      	cbz	r5, 8000cf4 <__udivmoddi4+0xb4>
 8000cf0:	e9c5 0100 	strd	r0, r1, [r5]
 8000cf4:	2100      	movs	r1, #0
 8000cf6:	4608      	mov	r0, r1
 8000cf8:	e7f5      	b.n	8000ce6 <__udivmoddi4+0xa6>
 8000cfa:	fab3 f183 	clz	r1, r3
 8000cfe:	2900      	cmp	r1, #0
 8000d00:	d146      	bne.n	8000d90 <__udivmoddi4+0x150>
 8000d02:	42a3      	cmp	r3, r4
 8000d04:	d302      	bcc.n	8000d0c <__udivmoddi4+0xcc>
 8000d06:	4290      	cmp	r0, r2
 8000d08:	f0c0 80f0 	bcc.w	8000eec <__udivmoddi4+0x2ac>
 8000d0c:	1a86      	subs	r6, r0, r2
 8000d0e:	eb64 0303 	sbc.w	r3, r4, r3
 8000d12:	2001      	movs	r0, #1
 8000d14:	2d00      	cmp	r5, #0
 8000d16:	d0e6      	beq.n	8000ce6 <__udivmoddi4+0xa6>
 8000d18:	e9c5 6300 	strd	r6, r3, [r5]
 8000d1c:	e7e3      	b.n	8000ce6 <__udivmoddi4+0xa6>
 8000d1e:	2a00      	cmp	r2, #0
 8000d20:	f040 8090 	bne.w	8000e44 <__udivmoddi4+0x204>
 8000d24:	eba1 040c 	sub.w	r4, r1, ip
 8000d28:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d2c:	fa1f f78c 	uxth.w	r7, ip
 8000d30:	2101      	movs	r1, #1
 8000d32:	fbb4 f6f8 	udiv	r6, r4, r8
 8000d36:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d3a:	fb08 4416 	mls	r4, r8, r6, r4
 8000d3e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d42:	fb07 f006 	mul.w	r0, r7, r6
 8000d46:	4298      	cmp	r0, r3
 8000d48:	d908      	bls.n	8000d5c <__udivmoddi4+0x11c>
 8000d4a:	eb1c 0303 	adds.w	r3, ip, r3
 8000d4e:	f106 34ff 	add.w	r4, r6, #4294967295
 8000d52:	d202      	bcs.n	8000d5a <__udivmoddi4+0x11a>
 8000d54:	4298      	cmp	r0, r3
 8000d56:	f200 80cd 	bhi.w	8000ef4 <__udivmoddi4+0x2b4>
 8000d5a:	4626      	mov	r6, r4
 8000d5c:	1a1c      	subs	r4, r3, r0
 8000d5e:	fa1f f38e 	uxth.w	r3, lr
 8000d62:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d66:	fb08 4410 	mls	r4, r8, r0, r4
 8000d6a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d6e:	fb00 f707 	mul.w	r7, r0, r7
 8000d72:	429f      	cmp	r7, r3
 8000d74:	d908      	bls.n	8000d88 <__udivmoddi4+0x148>
 8000d76:	eb1c 0303 	adds.w	r3, ip, r3
 8000d7a:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d7e:	d202      	bcs.n	8000d86 <__udivmoddi4+0x146>
 8000d80:	429f      	cmp	r7, r3
 8000d82:	f200 80b0 	bhi.w	8000ee6 <__udivmoddi4+0x2a6>
 8000d86:	4620      	mov	r0, r4
 8000d88:	1bdb      	subs	r3, r3, r7
 8000d8a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d8e:	e7a5      	b.n	8000cdc <__udivmoddi4+0x9c>
 8000d90:	f1c1 0620 	rsb	r6, r1, #32
 8000d94:	408b      	lsls	r3, r1
 8000d96:	fa22 f706 	lsr.w	r7, r2, r6
 8000d9a:	431f      	orrs	r7, r3
 8000d9c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000da0:	fa04 f301 	lsl.w	r3, r4, r1
 8000da4:	ea43 030c 	orr.w	r3, r3, ip
 8000da8:	40f4      	lsrs	r4, r6
 8000daa:	fa00 f801 	lsl.w	r8, r0, r1
 8000dae:	0c38      	lsrs	r0, r7, #16
 8000db0:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000db4:	fbb4 fef0 	udiv	lr, r4, r0
 8000db8:	fa1f fc87 	uxth.w	ip, r7
 8000dbc:	fb00 441e 	mls	r4, r0, lr, r4
 8000dc0:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000dc4:	fb0e f90c 	mul.w	r9, lr, ip
 8000dc8:	45a1      	cmp	r9, r4
 8000dca:	fa02 f201 	lsl.w	r2, r2, r1
 8000dce:	d90a      	bls.n	8000de6 <__udivmoddi4+0x1a6>
 8000dd0:	193c      	adds	r4, r7, r4
 8000dd2:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000dd6:	f080 8084 	bcs.w	8000ee2 <__udivmoddi4+0x2a2>
 8000dda:	45a1      	cmp	r9, r4
 8000ddc:	f240 8081 	bls.w	8000ee2 <__udivmoddi4+0x2a2>
 8000de0:	f1ae 0e02 	sub.w	lr, lr, #2
 8000de4:	443c      	add	r4, r7
 8000de6:	eba4 0409 	sub.w	r4, r4, r9
 8000dea:	fa1f f983 	uxth.w	r9, r3
 8000dee:	fbb4 f3f0 	udiv	r3, r4, r0
 8000df2:	fb00 4413 	mls	r4, r0, r3, r4
 8000df6:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000dfa:	fb03 fc0c 	mul.w	ip, r3, ip
 8000dfe:	45a4      	cmp	ip, r4
 8000e00:	d907      	bls.n	8000e12 <__udivmoddi4+0x1d2>
 8000e02:	193c      	adds	r4, r7, r4
 8000e04:	f103 30ff 	add.w	r0, r3, #4294967295
 8000e08:	d267      	bcs.n	8000eda <__udivmoddi4+0x29a>
 8000e0a:	45a4      	cmp	ip, r4
 8000e0c:	d965      	bls.n	8000eda <__udivmoddi4+0x29a>
 8000e0e:	3b02      	subs	r3, #2
 8000e10:	443c      	add	r4, r7
 8000e12:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e16:	fba0 9302 	umull	r9, r3, r0, r2
 8000e1a:	eba4 040c 	sub.w	r4, r4, ip
 8000e1e:	429c      	cmp	r4, r3
 8000e20:	46ce      	mov	lr, r9
 8000e22:	469c      	mov	ip, r3
 8000e24:	d351      	bcc.n	8000eca <__udivmoddi4+0x28a>
 8000e26:	d04e      	beq.n	8000ec6 <__udivmoddi4+0x286>
 8000e28:	b155      	cbz	r5, 8000e40 <__udivmoddi4+0x200>
 8000e2a:	ebb8 030e 	subs.w	r3, r8, lr
 8000e2e:	eb64 040c 	sbc.w	r4, r4, ip
 8000e32:	fa04 f606 	lsl.w	r6, r4, r6
 8000e36:	40cb      	lsrs	r3, r1
 8000e38:	431e      	orrs	r6, r3
 8000e3a:	40cc      	lsrs	r4, r1
 8000e3c:	e9c5 6400 	strd	r6, r4, [r5]
 8000e40:	2100      	movs	r1, #0
 8000e42:	e750      	b.n	8000ce6 <__udivmoddi4+0xa6>
 8000e44:	f1c2 0320 	rsb	r3, r2, #32
 8000e48:	fa20 f103 	lsr.w	r1, r0, r3
 8000e4c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e50:	fa24 f303 	lsr.w	r3, r4, r3
 8000e54:	4094      	lsls	r4, r2
 8000e56:	430c      	orrs	r4, r1
 8000e58:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e5c:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e60:	fa1f f78c 	uxth.w	r7, ip
 8000e64:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e68:	fb08 3110 	mls	r1, r8, r0, r3
 8000e6c:	0c23      	lsrs	r3, r4, #16
 8000e6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e72:	fb00 f107 	mul.w	r1, r0, r7
 8000e76:	4299      	cmp	r1, r3
 8000e78:	d908      	bls.n	8000e8c <__udivmoddi4+0x24c>
 8000e7a:	eb1c 0303 	adds.w	r3, ip, r3
 8000e7e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000e82:	d22c      	bcs.n	8000ede <__udivmoddi4+0x29e>
 8000e84:	4299      	cmp	r1, r3
 8000e86:	d92a      	bls.n	8000ede <__udivmoddi4+0x29e>
 8000e88:	3802      	subs	r0, #2
 8000e8a:	4463      	add	r3, ip
 8000e8c:	1a5b      	subs	r3, r3, r1
 8000e8e:	b2a4      	uxth	r4, r4
 8000e90:	fbb3 f1f8 	udiv	r1, r3, r8
 8000e94:	fb08 3311 	mls	r3, r8, r1, r3
 8000e98:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e9c:	fb01 f307 	mul.w	r3, r1, r7
 8000ea0:	42a3      	cmp	r3, r4
 8000ea2:	d908      	bls.n	8000eb6 <__udivmoddi4+0x276>
 8000ea4:	eb1c 0404 	adds.w	r4, ip, r4
 8000ea8:	f101 36ff 	add.w	r6, r1, #4294967295
 8000eac:	d213      	bcs.n	8000ed6 <__udivmoddi4+0x296>
 8000eae:	42a3      	cmp	r3, r4
 8000eb0:	d911      	bls.n	8000ed6 <__udivmoddi4+0x296>
 8000eb2:	3902      	subs	r1, #2
 8000eb4:	4464      	add	r4, ip
 8000eb6:	1ae4      	subs	r4, r4, r3
 8000eb8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000ebc:	e739      	b.n	8000d32 <__udivmoddi4+0xf2>
 8000ebe:	4604      	mov	r4, r0
 8000ec0:	e6f0      	b.n	8000ca4 <__udivmoddi4+0x64>
 8000ec2:	4608      	mov	r0, r1
 8000ec4:	e706      	b.n	8000cd4 <__udivmoddi4+0x94>
 8000ec6:	45c8      	cmp	r8, r9
 8000ec8:	d2ae      	bcs.n	8000e28 <__udivmoddi4+0x1e8>
 8000eca:	ebb9 0e02 	subs.w	lr, r9, r2
 8000ece:	eb63 0c07 	sbc.w	ip, r3, r7
 8000ed2:	3801      	subs	r0, #1
 8000ed4:	e7a8      	b.n	8000e28 <__udivmoddi4+0x1e8>
 8000ed6:	4631      	mov	r1, r6
 8000ed8:	e7ed      	b.n	8000eb6 <__udivmoddi4+0x276>
 8000eda:	4603      	mov	r3, r0
 8000edc:	e799      	b.n	8000e12 <__udivmoddi4+0x1d2>
 8000ede:	4630      	mov	r0, r6
 8000ee0:	e7d4      	b.n	8000e8c <__udivmoddi4+0x24c>
 8000ee2:	46d6      	mov	lr, sl
 8000ee4:	e77f      	b.n	8000de6 <__udivmoddi4+0x1a6>
 8000ee6:	4463      	add	r3, ip
 8000ee8:	3802      	subs	r0, #2
 8000eea:	e74d      	b.n	8000d88 <__udivmoddi4+0x148>
 8000eec:	4606      	mov	r6, r0
 8000eee:	4623      	mov	r3, r4
 8000ef0:	4608      	mov	r0, r1
 8000ef2:	e70f      	b.n	8000d14 <__udivmoddi4+0xd4>
 8000ef4:	3e02      	subs	r6, #2
 8000ef6:	4463      	add	r3, ip
 8000ef8:	e730      	b.n	8000d5c <__udivmoddi4+0x11c>
 8000efa:	bf00      	nop

08000efc <__aeabi_idiv0>:
 8000efc:	4770      	bx	lr
 8000efe:	bf00      	nop

08000f00 <encoder_init>:
#include "encoder.h"
#include "main.h"
#include <math.h>

HAL_StatusTypeDef encoder_init(encoder_t *e, channel ch,
		TIM_HandleTypeDef *htim, uint32_t ppr) {
 8000f00:	b580      	push	{r7, lr}
 8000f02:	b086      	sub	sp, #24
 8000f04:	af00      	add	r7, sp, #0
 8000f06:	60f8      	str	r0, [r7, #12]
 8000f08:	607a      	str	r2, [r7, #4]
 8000f0a:	603b      	str	r3, [r7, #0]
 8000f0c:	460b      	mov	r3, r1
 8000f0e:	72fb      	strb	r3, [r7, #11]
	HAL_StatusTypeDef ret;
	ret = HAL_OK;
 8000f10:	2300      	movs	r3, #0
 8000f12:	75fb      	strb	r3, [r7, #23]
	if (htim == NULL)
 8000f14:	687b      	ldr	r3, [r7, #4]
 8000f16:	2b00      	cmp	r3, #0
 8000f18:	d101      	bne.n	8000f1e <encoder_init+0x1e>
		return HAL_ERROR;
 8000f1a:	2301      	movs	r3, #1
 8000f1c:	e02c      	b.n	8000f78 <encoder_init+0x78>

	e->tim = htim;
 8000f1e:	68fb      	ldr	r3, [r7, #12]
 8000f20:	687a      	ldr	r2, [r7, #4]
 8000f22:	601a      	str	r2, [r3, #0]
	htim->Instance->CNT = 0;
 8000f24:	687b      	ldr	r3, [r7, #4]
 8000f26:	681b      	ldr	r3, [r3, #0]
 8000f28:	2200      	movs	r2, #0
 8000f2a:	625a      	str	r2, [r3, #36]	@ 0x24
	ret = HAL_TIM_Encoder_Start(htim, ch);
 8000f2c:	7afb      	ldrb	r3, [r7, #11]
 8000f2e:	4619      	mov	r1, r3
 8000f30:	6878      	ldr	r0, [r7, #4]
 8000f32:	f004 faad 	bl	8005490 <HAL_TIM_Encoder_Start>
 8000f36:	4603      	mov	r3, r0
 8000f38:	75fb      	strb	r3, [r7, #23]
	if (ret != HAL_OK)
 8000f3a:	7dfb      	ldrb	r3, [r7, #23]
 8000f3c:	2b00      	cmp	r3, #0
 8000f3e:	d001      	beq.n	8000f44 <encoder_init+0x44>
		return ret;
 8000f40:	7dfb      	ldrb	r3, [r7, #23]
 8000f42:	e019      	b.n	8000f78 <encoder_init+0x78>

	if (ch == A || ch == B)
 8000f44:	7afb      	ldrb	r3, [r7, #11]
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d002      	beq.n	8000f50 <encoder_init+0x50>
 8000f4a:	7afb      	ldrb	r3, [r7, #11]
 8000f4c:	2b04      	cmp	r3, #4
 8000f4e:	d103      	bne.n	8000f58 <encoder_init+0x58>
		e->resolution = 2;
 8000f50:	68fb      	ldr	r3, [r7, #12]
 8000f52:	2202      	movs	r2, #2
 8000f54:	60da      	str	r2, [r3, #12]
 8000f56:	e002      	b.n	8000f5e <encoder_init+0x5e>
	else
		e->resolution = 4;
 8000f58:	68fb      	ldr	r3, [r7, #12]
 8000f5a:	2204      	movs	r2, #4
 8000f5c:	60da      	str	r2, [r3, #12]

	e->velocity_pps = 0.0;
 8000f5e:	68fb      	ldr	r3, [r7, #12]
 8000f60:	2200      	movs	r2, #0
 8000f62:	611a      	str	r2, [r3, #16]
	e->last_count = htim->Instance->CNT;
 8000f64:	687b      	ldr	r3, [r7, #4]
 8000f66:	681b      	ldr	r3, [r3, #0]
 8000f68:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000f6a:	68fb      	ldr	r3, [r7, #12]
 8000f6c:	605a      	str	r2, [r3, #4]
	e->ppr = ppr;
 8000f6e:	683b      	ldr	r3, [r7, #0]
 8000f70:	b29a      	uxth	r2, r3
 8000f72:	68fb      	ldr	r3, [r7, #12]
 8000f74:	811a      	strh	r2, [r3, #8]

	return ret;
 8000f76:	7dfb      	ldrb	r3, [r7, #23]
}
 8000f78:	4618      	mov	r0, r3
 8000f7a:	3718      	adds	r7, #24
 8000f7c:	46bd      	mov	sp, r7
 8000f7e:	bd80      	pop	{r7, pc}

08000f80 <__encoder_update>:

inline static void __encoder_update(encoder_t *e) {
 8000f80:	b5b0      	push	{r4, r5, r7, lr}
 8000f82:	b086      	sub	sp, #24
 8000f84:	af00      	add	r7, sp, #0
 8000f86:	6078      	str	r0, [r7, #4]
	uint32_t cur_cnt;
	int32_t diff, cur_velocity;

	cur_cnt = e->tim->Instance->CNT;
 8000f88:	687b      	ldr	r3, [r7, #4]
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	681b      	ldr	r3, [r3, #0]
 8000f8e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000f90:	613b      	str	r3, [r7, #16]

	// Handle overflow and underflow
	if (__HAL_TIM_IS_TIM_COUNTING_DOWN(e->tim)) {
 8000f92:	687b      	ldr	r3, [r7, #4]
 8000f94:	681b      	ldr	r3, [r3, #0]
 8000f96:	681b      	ldr	r3, [r3, #0]
 8000f98:	681b      	ldr	r3, [r3, #0]
 8000f9a:	f003 0310 	and.w	r3, r3, #16
 8000f9e:	2b10      	cmp	r3, #16
 8000fa0:	d115      	bne.n	8000fce <__encoder_update+0x4e>
		if (cur_cnt < e->last_count) // underflow
 8000fa2:	687b      	ldr	r3, [r7, #4]
 8000fa4:	685b      	ldr	r3, [r3, #4]
 8000fa6:	693a      	ldr	r2, [r7, #16]
 8000fa8:	429a      	cmp	r2, r3
 8000faa:	d205      	bcs.n	8000fb8 <__encoder_update+0x38>
			diff = e->last_count - cur_cnt;
 8000fac:	687b      	ldr	r3, [r7, #4]
 8000fae:	685a      	ldr	r2, [r3, #4]
 8000fb0:	693b      	ldr	r3, [r7, #16]
 8000fb2:	1ad3      	subs	r3, r2, r3
 8000fb4:	617b      	str	r3, [r7, #20]
 8000fb6:	e01f      	b.n	8000ff8 <__encoder_update+0x78>
		else
			diff = (e->tim->Instance->ARR - cur_cnt) + e->last_count;
 8000fb8:	687b      	ldr	r3, [r7, #4]
 8000fba:	681b      	ldr	r3, [r3, #0]
 8000fbc:	681b      	ldr	r3, [r3, #0]
 8000fbe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8000fc0:	693b      	ldr	r3, [r7, #16]
 8000fc2:	1ad2      	subs	r2, r2, r3
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	685b      	ldr	r3, [r3, #4]
 8000fc8:	4413      	add	r3, r2
 8000fca:	617b      	str	r3, [r7, #20]
 8000fcc:	e014      	b.n	8000ff8 <__encoder_update+0x78>
	} else {
		if (cur_cnt > e->last_count) // overflow
 8000fce:	687b      	ldr	r3, [r7, #4]
 8000fd0:	685b      	ldr	r3, [r3, #4]
 8000fd2:	693a      	ldr	r2, [r7, #16]
 8000fd4:	429a      	cmp	r2, r3
 8000fd6:	d905      	bls.n	8000fe4 <__encoder_update+0x64>
			diff = e->last_count - cur_cnt;
 8000fd8:	687b      	ldr	r3, [r7, #4]
 8000fda:	685a      	ldr	r2, [r3, #4]
 8000fdc:	693b      	ldr	r3, [r7, #16]
 8000fde:	1ad3      	subs	r3, r2, r3
 8000fe0:	617b      	str	r3, [r7, #20]
 8000fe2:	e009      	b.n	8000ff8 <__encoder_update+0x78>
		else
			diff = (e->tim->Instance->ARR - e->last_count) + cur_cnt;
 8000fe4:	687b      	ldr	r3, [r7, #4]
 8000fe6:	681b      	ldr	r3, [r3, #0]
 8000fe8:	681b      	ldr	r3, [r3, #0]
 8000fea:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8000fec:	687b      	ldr	r3, [r7, #4]
 8000fee:	685b      	ldr	r3, [r3, #4]
 8000ff0:	1ad2      	subs	r2, r2, r3
 8000ff2:	693b      	ldr	r3, [r7, #16]
 8000ff4:	4413      	add	r3, r2
 8000ff6:	617b      	str	r3, [r7, #20]
	}

	// velocity in pulses per second
	if (e->last_count == cur_cnt)
 8000ff8:	687b      	ldr	r3, [r7, #4]
 8000ffa:	685b      	ldr	r3, [r3, #4]
 8000ffc:	693a      	ldr	r2, [r7, #16]
 8000ffe:	429a      	cmp	r2, r3
 8001000:	d101      	bne.n	8001006 <__encoder_update+0x86>
		diff = 0;
 8001002:	2300      	movs	r3, #0
 8001004:	617b      	str	r3, [r7, #20]

	cur_velocity = (float) diff / DT_enc / (float) e->resolution;
 8001006:	697b      	ldr	r3, [r7, #20]
 8001008:	ee07 3a90 	vmov	s15, r3
 800100c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001010:	ee17 0a90 	vmov	r0, s15
 8001014:	f7ff fa5c 	bl	80004d0 <__aeabi_f2d>
 8001018:	a327      	add	r3, pc, #156	@ (adr r3, 80010b8 <__encoder_update+0x138>)
 800101a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800101e:	f7ff fbd9 	bl	80007d4 <__aeabi_ddiv>
 8001022:	4602      	mov	r2, r0
 8001024:	460b      	mov	r3, r1
 8001026:	4614      	mov	r4, r2
 8001028:	461d      	mov	r5, r3
 800102a:	687b      	ldr	r3, [r7, #4]
 800102c:	68db      	ldr	r3, [r3, #12]
 800102e:	ee07 3a90 	vmov	s15, r3
 8001032:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001036:	ee17 0a90 	vmov	r0, s15
 800103a:	f7ff fa49 	bl	80004d0 <__aeabi_f2d>
 800103e:	4602      	mov	r2, r0
 8001040:	460b      	mov	r3, r1
 8001042:	4620      	mov	r0, r4
 8001044:	4629      	mov	r1, r5
 8001046:	f7ff fbc5 	bl	80007d4 <__aeabi_ddiv>
 800104a:	4602      	mov	r2, r0
 800104c:	460b      	mov	r3, r1
 800104e:	4610      	mov	r0, r2
 8001050:	4619      	mov	r1, r3
 8001052:	f7ff fd45 	bl	8000ae0 <__aeabi_d2iz>
 8001056:	4603      	mov	r3, r0
 8001058:	60fb      	str	r3, [r7, #12]

	// Filtering velocity
	e->velocity_pps = BETA * e->velocity_pps + (1.0 - BETA) * cur_velocity;
 800105a:	687b      	ldr	r3, [r7, #4]
 800105c:	691b      	ldr	r3, [r3, #16]
 800105e:	4618      	mov	r0, r3
 8001060:	f7ff fa24 	bl	80004ac <__aeabi_i2d>
 8001064:	a316      	add	r3, pc, #88	@ (adr r3, 80010c0 <__encoder_update+0x140>)
 8001066:	e9d3 2300 	ldrd	r2, r3, [r3]
 800106a:	f7ff fa89 	bl	8000580 <__aeabi_dmul>
 800106e:	4602      	mov	r2, r0
 8001070:	460b      	mov	r3, r1
 8001072:	4614      	mov	r4, r2
 8001074:	461d      	mov	r5, r3
 8001076:	68f8      	ldr	r0, [r7, #12]
 8001078:	f7ff fa18 	bl	80004ac <__aeabi_i2d>
 800107c:	a312      	add	r3, pc, #72	@ (adr r3, 80010c8 <__encoder_update+0x148>)
 800107e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001082:	f7ff fa7d 	bl	8000580 <__aeabi_dmul>
 8001086:	4602      	mov	r2, r0
 8001088:	460b      	mov	r3, r1
 800108a:	4620      	mov	r0, r4
 800108c:	4629      	mov	r1, r5
 800108e:	f7ff f8c1 	bl	8000214 <__adddf3>
 8001092:	4602      	mov	r2, r0
 8001094:	460b      	mov	r3, r1
 8001096:	4610      	mov	r0, r2
 8001098:	4619      	mov	r1, r3
 800109a:	f7ff fd21 	bl	8000ae0 <__aeabi_d2iz>
 800109e:	4602      	mov	r2, r0
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	611a      	str	r2, [r3, #16]
	e->last_count = cur_cnt;
 80010a4:	687b      	ldr	r3, [r7, #4]
 80010a6:	693a      	ldr	r2, [r7, #16]
 80010a8:	605a      	str	r2, [r3, #4]
}
 80010aa:	bf00      	nop
 80010ac:	3718      	adds	r7, #24
 80010ae:	46bd      	mov	sp, r7
 80010b0:	bdb0      	pop	{r4, r5, r7, pc}
 80010b2:	bf00      	nop
 80010b4:	f3af 8000 	nop.w
 80010b8:	47ae147b 	.word	0x47ae147b
 80010bc:	3f747ae1 	.word	0x3f747ae1
 80010c0:	66666666 	.word	0x66666666
 80010c4:	3fee6666 	.word	0x3fee6666
 80010c8:	999999a0 	.word	0x999999a0
 80010cc:	3fa99999 	.word	0x3fa99999

080010d0 <encoder_get_velocity_rps>:

float encoder_get_velocity_rps(encoder_t *e) {
 80010d0:	b580      	push	{r7, lr}
 80010d2:	b082      	sub	sp, #8
 80010d4:	af00      	add	r7, sp, #0
 80010d6:	6078      	str	r0, [r7, #4]
	__encoder_update(e);
 80010d8:	6878      	ldr	r0, [r7, #4]
 80010da:	f7ff ff51 	bl	8000f80 <__encoder_update>
	return e->velocity_pps / (float) e->ppr;
 80010de:	687b      	ldr	r3, [r7, #4]
 80010e0:	691b      	ldr	r3, [r3, #16]
 80010e2:	ee07 3a90 	vmov	s15, r3
 80010e6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80010ea:	687b      	ldr	r3, [r7, #4]
 80010ec:	891b      	ldrh	r3, [r3, #8]
 80010ee:	ee07 3a90 	vmov	s15, r3
 80010f2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010f6:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80010fa:	eef0 7a66 	vmov.f32	s15, s13
}
 80010fe:	eeb0 0a67 	vmov.f32	s0, s15
 8001102:	3708      	adds	r7, #8
 8001104:	46bd      	mov	sp, r7
 8001106:	bd80      	pop	{r7, pc}

08001108 <encoder_get_velocity_rpm>:

float encoder_get_velocity_rpm(encoder_t *e) {
 8001108:	b580      	push	{r7, lr}
 800110a:	b082      	sub	sp, #8
 800110c:	af00      	add	r7, sp, #0
 800110e:	6078      	str	r0, [r7, #4]
	return encoder_get_velocity_rps(e) * 60.0;
 8001110:	6878      	ldr	r0, [r7, #4]
 8001112:	f7ff ffdd 	bl	80010d0 <encoder_get_velocity_rps>
 8001116:	ee10 3a10 	vmov	r3, s0
 800111a:	4618      	mov	r0, r3
 800111c:	f7ff f9d8 	bl	80004d0 <__aeabi_f2d>
 8001120:	f04f 0200 	mov.w	r2, #0
 8001124:	4b08      	ldr	r3, [pc, #32]	@ (8001148 <encoder_get_velocity_rpm+0x40>)
 8001126:	f7ff fa2b 	bl	8000580 <__aeabi_dmul>
 800112a:	4602      	mov	r2, r0
 800112c:	460b      	mov	r3, r1
 800112e:	4610      	mov	r0, r2
 8001130:	4619      	mov	r1, r3
 8001132:	f7ff fd1d 	bl	8000b70 <__aeabi_d2f>
 8001136:	4603      	mov	r3, r0
 8001138:	ee07 3a90 	vmov	s15, r3
}
 800113c:	eeb0 0a67 	vmov.f32	s0, s15
 8001140:	3708      	adds	r7, #8
 8001142:	46bd      	mov	sp, r7
 8001144:	bd80      	pop	{r7, pc}
 8001146:	bf00      	nop
 8001148:	404e0000 	.word	0x404e0000

0800114c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 800114c:	b580      	push	{r7, lr}
 800114e:	b088      	sub	sp, #32
 8001150:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001152:	f107 030c 	add.w	r3, r7, #12
 8001156:	2200      	movs	r2, #0
 8001158:	601a      	str	r2, [r3, #0]
 800115a:	605a      	str	r2, [r3, #4]
 800115c:	609a      	str	r2, [r3, #8]
 800115e:	60da      	str	r2, [r3, #12]
 8001160:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001162:	2300      	movs	r3, #0
 8001164:	60bb      	str	r3, [r7, #8]
 8001166:	4b20      	ldr	r3, [pc, #128]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 8001168:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800116a:	4a1f      	ldr	r2, [pc, #124]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 800116c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001170:	6313      	str	r3, [r2, #48]	@ 0x30
 8001172:	4b1d      	ldr	r3, [pc, #116]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 8001174:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001176:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800117a:	60bb      	str	r3, [r7, #8]
 800117c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800117e:	2300      	movs	r3, #0
 8001180:	607b      	str	r3, [r7, #4]
 8001182:	4b19      	ldr	r3, [pc, #100]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 8001184:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001186:	4a18      	ldr	r2, [pc, #96]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 8001188:	f043 0301 	orr.w	r3, r3, #1
 800118c:	6313      	str	r3, [r2, #48]	@ 0x30
 800118e:	4b16      	ldr	r3, [pc, #88]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 8001190:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001192:	f003 0301 	and.w	r3, r3, #1
 8001196:	607b      	str	r3, [r7, #4]
 8001198:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800119a:	2300      	movs	r3, #0
 800119c:	603b      	str	r3, [r7, #0]
 800119e:	4b12      	ldr	r3, [pc, #72]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 80011a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011a2:	4a11      	ldr	r2, [pc, #68]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 80011a4:	f043 0302 	orr.w	r3, r3, #2
 80011a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80011aa:	4b0f      	ldr	r3, [pc, #60]	@ (80011e8 <MX_GPIO_Init+0x9c>)
 80011ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011ae:	f003 0302 	and.w	r3, r3, #2
 80011b2:	603b      	str	r3, [r7, #0]
 80011b4:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Direction_GPIO_Port, Direction_Pin, GPIO_PIN_RESET);
 80011b6:	2200      	movs	r2, #0
 80011b8:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011bc:	480b      	ldr	r0, [pc, #44]	@ (80011ec <MX_GPIO_Init+0xa0>)
 80011be:	f001 ffc7 	bl	8003150 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Direction_Pin;
 80011c2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80011c6:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80011c8:	2301      	movs	r3, #1
 80011ca:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80011cc:	2302      	movs	r3, #2
 80011ce:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011d0:	2300      	movs	r3, #0
 80011d2:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(Direction_GPIO_Port, &GPIO_InitStruct);
 80011d4:	f107 030c 	add.w	r3, r7, #12
 80011d8:	4619      	mov	r1, r3
 80011da:	4804      	ldr	r0, [pc, #16]	@ (80011ec <MX_GPIO_Init+0xa0>)
 80011dc:	f001 fe0c 	bl	8002df8 <HAL_GPIO_Init>

}
 80011e0:	bf00      	nop
 80011e2:	3720      	adds	r7, #32
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bd80      	pop	{r7, pc}
 80011e8:	40023800 	.word	0x40023800
 80011ec:	40020400 	.word	0x40020400

080011f0 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 80011f0:	b580      	push	{r7, lr}
 80011f2:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN I2C1_Init 0 */
 //To reset a previously used I2C channel
  I2C_ClearBusyBus();
 80011f4:	f000 f874 	bl	80012e0 <I2C_ClearBusyBus>
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80011f8:	4b12      	ldr	r3, [pc, #72]	@ (8001244 <MX_I2C1_Init+0x54>)
 80011fa:	4a13      	ldr	r2, [pc, #76]	@ (8001248 <MX_I2C1_Init+0x58>)
 80011fc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 80011fe:	4b11      	ldr	r3, [pc, #68]	@ (8001244 <MX_I2C1_Init+0x54>)
 8001200:	4a12      	ldr	r2, [pc, #72]	@ (800124c <MX_I2C1_Init+0x5c>)
 8001202:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001204:	4b0f      	ldr	r3, [pc, #60]	@ (8001244 <MX_I2C1_Init+0x54>)
 8001206:	2200      	movs	r2, #0
 8001208:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800120a:	4b0e      	ldr	r3, [pc, #56]	@ (8001244 <MX_I2C1_Init+0x54>)
 800120c:	2200      	movs	r2, #0
 800120e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001210:	4b0c      	ldr	r3, [pc, #48]	@ (8001244 <MX_I2C1_Init+0x54>)
 8001212:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001216:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001218:	4b0a      	ldr	r3, [pc, #40]	@ (8001244 <MX_I2C1_Init+0x54>)
 800121a:	2200      	movs	r2, #0
 800121c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800121e:	4b09      	ldr	r3, [pc, #36]	@ (8001244 <MX_I2C1_Init+0x54>)
 8001220:	2200      	movs	r2, #0
 8001222:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001224:	4b07      	ldr	r3, [pc, #28]	@ (8001244 <MX_I2C1_Init+0x54>)
 8001226:	2200      	movs	r2, #0
 8001228:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800122a:	4b06      	ldr	r3, [pc, #24]	@ (8001244 <MX_I2C1_Init+0x54>)
 800122c:	2200      	movs	r2, #0
 800122e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001230:	4804      	ldr	r0, [pc, #16]	@ (8001244 <MX_I2C1_Init+0x54>)
 8001232:	f001 ffa7 	bl	8003184 <HAL_I2C_Init>
 8001236:	4603      	mov	r3, r0
 8001238:	2b00      	cmp	r3, #0
 800123a:	d001      	beq.n	8001240 <MX_I2C1_Init+0x50>
  {
    Error_Handler();
 800123c:	f000 fcd8 	bl	8001bf0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001240:	bf00      	nop
 8001242:	bd80      	pop	{r7, pc}
 8001244:	2000009c 	.word	0x2000009c
 8001248:	40005400 	.word	0x40005400
 800124c:	00061a80 	.word	0x00061a80

08001250 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8001250:	b580      	push	{r7, lr}
 8001252:	b08a      	sub	sp, #40	@ 0x28
 8001254:	af00      	add	r7, sp, #0
 8001256:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001258:	f107 0314 	add.w	r3, r7, #20
 800125c:	2200      	movs	r2, #0
 800125e:	601a      	str	r2, [r3, #0]
 8001260:	605a      	str	r2, [r3, #4]
 8001262:	609a      	str	r2, [r3, #8]
 8001264:	60da      	str	r2, [r3, #12]
 8001266:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8001268:	687b      	ldr	r3, [r7, #4]
 800126a:	681b      	ldr	r3, [r3, #0]
 800126c:	4a19      	ldr	r2, [pc, #100]	@ (80012d4 <HAL_I2C_MspInit+0x84>)
 800126e:	4293      	cmp	r3, r2
 8001270:	d12c      	bne.n	80012cc <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001272:	2300      	movs	r3, #0
 8001274:	613b      	str	r3, [r7, #16]
 8001276:	4b18      	ldr	r3, [pc, #96]	@ (80012d8 <HAL_I2C_MspInit+0x88>)
 8001278:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800127a:	4a17      	ldr	r2, [pc, #92]	@ (80012d8 <HAL_I2C_MspInit+0x88>)
 800127c:	f043 0302 	orr.w	r3, r3, #2
 8001280:	6313      	str	r3, [r2, #48]	@ 0x30
 8001282:	4b15      	ldr	r3, [pc, #84]	@ (80012d8 <HAL_I2C_MspInit+0x88>)
 8001284:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001286:	f003 0302 	and.w	r3, r3, #2
 800128a:	613b      	str	r3, [r7, #16]
 800128c:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 800128e:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8001292:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001294:	2312      	movs	r3, #18
 8001296:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001298:	2301      	movs	r3, #1
 800129a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800129c:	2303      	movs	r3, #3
 800129e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80012a0:	2304      	movs	r3, #4
 80012a2:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80012a4:	f107 0314 	add.w	r3, r7, #20
 80012a8:	4619      	mov	r1, r3
 80012aa:	480c      	ldr	r0, [pc, #48]	@ (80012dc <HAL_I2C_MspInit+0x8c>)
 80012ac:	f001 fda4 	bl	8002df8 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 80012b0:	2300      	movs	r3, #0
 80012b2:	60fb      	str	r3, [r7, #12]
 80012b4:	4b08      	ldr	r3, [pc, #32]	@ (80012d8 <HAL_I2C_MspInit+0x88>)
 80012b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012b8:	4a07      	ldr	r2, [pc, #28]	@ (80012d8 <HAL_I2C_MspInit+0x88>)
 80012ba:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80012be:	6413      	str	r3, [r2, #64]	@ 0x40
 80012c0:	4b05      	ldr	r3, [pc, #20]	@ (80012d8 <HAL_I2C_MspInit+0x88>)
 80012c2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012c4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80012c8:	60fb      	str	r3, [r7, #12]
 80012ca:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 80012cc:	bf00      	nop
 80012ce:	3728      	adds	r7, #40	@ 0x28
 80012d0:	46bd      	mov	sp, r7
 80012d2:	bd80      	pop	{r7, pc}
 80012d4:	40005400 	.word	0x40005400
 80012d8:	40023800 	.word	0x40023800
 80012dc:	40020400 	.word	0x40020400

080012e0 <I2C_ClearBusyBus>:
}

/* USER CODE BEGIN 1 */
/* To reset a previously used I2C channel  */
void I2C_ClearBusyBus(void)
{
 80012e0:	b580      	push	{r7, lr}
 80012e2:	b086      	sub	sp, #24
 80012e4:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012e6:	463b      	mov	r3, r7
 80012e8:	2200      	movs	r2, #0
 80012ea:	601a      	str	r2, [r3, #0]
 80012ec:	605a      	str	r2, [r3, #4]
 80012ee:	609a      	str	r2, [r3, #8]
 80012f0:	60da      	str	r2, [r3, #12]
 80012f2:	611a      	str	r2, [r3, #16]

    // Configure SCL and SDA as output for manual control
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 80012f4:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80012f8:	603b      	str	r3, [r7, #0]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80012fa:	2304      	movs	r3, #4
 80012fc:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;  // Open-drain mode
 80012fe:	2311      	movs	r3, #17
 8001300:	607b      	str	r3, [r7, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001302:	2300      	movs	r3, #0
 8001304:	60bb      	str	r3, [r7, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001306:	2302      	movs	r3, #2
 8001308:	60fb      	str	r3, [r7, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800130a:	463b      	mov	r3, r7
 800130c:	4619      	mov	r1, r3
 800130e:	4825      	ldr	r0, [pc, #148]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 8001310:	f001 fd72 	bl	8002df8 <HAL_GPIO_Init>

    // Set both SCL and SDA to high initially
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 8001314:	2201      	movs	r2, #1
 8001316:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800131a:	4822      	ldr	r0, [pc, #136]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 800131c:	f001 ff18 	bl	8003150 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
 8001320:	2201      	movs	r2, #1
 8001322:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001326:	481f      	ldr	r0, [pc, #124]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 8001328:	f001 ff12 	bl	8003150 <HAL_GPIO_WritePin>

    // Ensure SDA is high (released)
    if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_9) == GPIO_PIN_RESET)
 800132c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001330:	481c      	ldr	r0, [pc, #112]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 8001332:	f001 fef5 	bl	8003120 <HAL_GPIO_ReadPin>
 8001336:	4603      	mov	r3, r0
 8001338:	2b00      	cmp	r3, #0
 800133a:	d11a      	bne.n	8001372 <I2C_ClearBusyBus+0x92>
    {
        // SDA is stuck low, so generate 9 clock pulses
        for (int i = 0; i < 9; i++)
 800133c:	2300      	movs	r3, #0
 800133e:	617b      	str	r3, [r7, #20]
 8001340:	e014      	b.n	800136c <I2C_ClearBusyBus+0x8c>
        {
            // Toggle the SCL pin to generate a clock pulse
            HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_RESET);
 8001342:	2200      	movs	r2, #0
 8001344:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001348:	4816      	ldr	r0, [pc, #88]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 800134a:	f001 ff01 	bl	8003150 <HAL_GPIO_WritePin>
            HAL_Delay(1); // Small delay to simulate clock cycle
 800134e:	2001      	movs	r0, #1
 8001350:	f001 fc1c 	bl	8002b8c <HAL_Delay>
            HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 8001354:	2201      	movs	r2, #1
 8001356:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800135a:	4812      	ldr	r0, [pc, #72]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 800135c:	f001 fef8 	bl	8003150 <HAL_GPIO_WritePin>
            HAL_Delay(1);
 8001360:	2001      	movs	r0, #1
 8001362:	f001 fc13 	bl	8002b8c <HAL_Delay>
        for (int i = 0; i < 9; i++)
 8001366:	697b      	ldr	r3, [r7, #20]
 8001368:	3301      	adds	r3, #1
 800136a:	617b      	str	r3, [r7, #20]
 800136c:	697b      	ldr	r3, [r7, #20]
 800136e:	2b08      	cmp	r3, #8
 8001370:	dde7      	ble.n	8001342 <I2C_ClearBusyBus+0x62>
        }
    }

    // After the clock cycles, set SDA and SCL back to high
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 8001372:	2201      	movs	r2, #1
 8001374:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001378:	480a      	ldr	r0, [pc, #40]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 800137a:	f001 fee9 	bl	8003150 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
 800137e:	2201      	movs	r2, #1
 8001380:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001384:	4807      	ldr	r0, [pc, #28]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 8001386:	f001 fee3 	bl	8003150 <HAL_GPIO_WritePin>

    // Reconfigure the pins back to I2C mode
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;  // Alternate function open-drain for I2C
 800138a:	2312      	movs	r3, #18
 800138c:	607b      	str	r3, [r7, #4]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1; // Adjust according to your I2C peripheral
 800138e:	2304      	movs	r3, #4
 8001390:	613b      	str	r3, [r7, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001392:	463b      	mov	r3, r7
 8001394:	4619      	mov	r1, r3
 8001396:	4803      	ldr	r0, [pc, #12]	@ (80013a4 <I2C_ClearBusyBus+0xc4>)
 8001398:	f001 fd2e 	bl	8002df8 <HAL_GPIO_Init>
}
 800139c:	bf00      	nop
 800139e:	3718      	adds	r7, #24
 80013a0:	46bd      	mov	sp, r7
 80013a2:	bd80      	pop	{r7, pc}
 80013a4:	40020400 	.word	0x40020400

080013a8 <Kalman_init>:
#include "kalman_filter.h"

Kalman filter;

void Kalman_init(Kalman* k) {
 80013a8:	b480      	push	{r7}
 80013aa:	b083      	sub	sp, #12
 80013ac:	af00      	add	r7, sp, #0
 80013ae:	6078      	str	r0, [r7, #4]
    /* We will set the variables like so, these can also be tuned by the user */
    k->Q_angle = 0.001f;
 80013b0:	687b      	ldr	r3, [r7, #4]
 80013b2:	4a13      	ldr	r2, [pc, #76]	@ (8001400 <Kalman_init+0x58>)
 80013b4:	601a      	str	r2, [r3, #0]
    k->Q_bias = 0.003f;
 80013b6:	687b      	ldr	r3, [r7, #4]
 80013b8:	4a12      	ldr	r2, [pc, #72]	@ (8001404 <Kalman_init+0x5c>)
 80013ba:	605a      	str	r2, [r3, #4]
    k->R_measure = 0.03f;
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	4a12      	ldr	r2, [pc, #72]	@ (8001408 <Kalman_init+0x60>)
 80013c0:	609a      	str	r2, [r3, #8]

    k->angle = 0.0f; // Reset the angle
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	f04f 0200 	mov.w	r2, #0
 80013c8:	60da      	str	r2, [r3, #12]
    k->bias = 0.0f;  // Reset bias
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	f04f 0200 	mov.w	r2, #0
 80013d0:	611a      	str	r2, [r3, #16]

    k->P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle, the error covariance matrix is set like so
 80013d2:	687b      	ldr	r3, [r7, #4]
 80013d4:	f04f 0200 	mov.w	r2, #0
 80013d8:	619a      	str	r2, [r3, #24]
    k->P[0][1] = 0.0f;
 80013da:	687b      	ldr	r3, [r7, #4]
 80013dc:	f04f 0200 	mov.w	r2, #0
 80013e0:	61da      	str	r2, [r3, #28]
    k->P[1][0] = 0.0f;
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	f04f 0200 	mov.w	r2, #0
 80013e8:	621a      	str	r2, [r3, #32]
    k->P[1][1] = 0.0f;
 80013ea:	687b      	ldr	r3, [r7, #4]
 80013ec:	f04f 0200 	mov.w	r2, #0
 80013f0:	625a      	str	r2, [r3, #36]	@ 0x24
}
 80013f2:	bf00      	nop
 80013f4:	370c      	adds	r7, #12
 80013f6:	46bd      	mov	sp, r7
 80013f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013fc:	4770      	bx	lr
 80013fe:	bf00      	nop
 8001400:	3a83126f 	.word	0x3a83126f
 8001404:	3b449ba6 	.word	0x3b449ba6
 8001408:	3cf5c28f 	.word	0x3cf5c28f
 800140c:	00000000 	.word	0x00000000

08001410 <Kalman_getAngle>:

// The angle should be in degrees and the rate should be in degrees per second
float Kalman_getAngle(Kalman* k, float newAngle, float newRate) {
 8001410:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001414:	b08a      	sub	sp, #40	@ 0x28
 8001416:	af00      	add	r7, sp, #0
 8001418:	60f8      	str	r0, [r7, #12]
 800141a:	ed87 0a02 	vstr	s0, [r7, #8]
 800141e:	edc7 0a01 	vstr	s1, [r7, #4]
    // Discrete Kalman filter time update equations - Time Update ("Predict")
    // Update xhat - Project the state ahead
    /* Step 1 */
    k->rate = newRate - k->bias;
 8001422:	68fb      	ldr	r3, [r7, #12]
 8001424:	edd3 7a04 	vldr	s15, [r3, #16]
 8001428:	ed97 7a01 	vldr	s14, [r7, #4]
 800142c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001430:	68fb      	ldr	r3, [r7, #12]
 8001432:	edc3 7a05 	vstr	s15, [r3, #20]
    k->angle += DT_k * k->rate;
 8001436:	68fb      	ldr	r3, [r7, #12]
 8001438:	68db      	ldr	r3, [r3, #12]
 800143a:	4618      	mov	r0, r3
 800143c:	f7ff f848 	bl	80004d0 <__aeabi_f2d>
 8001440:	4604      	mov	r4, r0
 8001442:	460d      	mov	r5, r1
 8001444:	68fb      	ldr	r3, [r7, #12]
 8001446:	695b      	ldr	r3, [r3, #20]
 8001448:	4618      	mov	r0, r3
 800144a:	f7ff f841 	bl	80004d0 <__aeabi_f2d>
 800144e:	a3aa      	add	r3, pc, #680	@ (adr r3, 80016f8 <Kalman_getAngle+0x2e8>)
 8001450:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001454:	f7ff f894 	bl	8000580 <__aeabi_dmul>
 8001458:	4602      	mov	r2, r0
 800145a:	460b      	mov	r3, r1
 800145c:	4620      	mov	r0, r4
 800145e:	4629      	mov	r1, r5
 8001460:	f7fe fed8 	bl	8000214 <__adddf3>
 8001464:	4602      	mov	r2, r0
 8001466:	460b      	mov	r3, r1
 8001468:	4610      	mov	r0, r2
 800146a:	4619      	mov	r1, r3
 800146c:	f7ff fb80 	bl	8000b70 <__aeabi_d2f>
 8001470:	4602      	mov	r2, r0
 8001472:	68fb      	ldr	r3, [r7, #12]
 8001474:	60da      	str	r2, [r3, #12]

    // Update estimation error covariance - Project the error covariance ahead
    /* Step 2 */
    k->P[0][0] += DT_k * (DT_k * k->P[1][1] - k->P[0][1] - k->P[1][0] + k->Q_angle);
 8001476:	68fb      	ldr	r3, [r7, #12]
 8001478:	699b      	ldr	r3, [r3, #24]
 800147a:	4618      	mov	r0, r3
 800147c:	f7ff f828 	bl	80004d0 <__aeabi_f2d>
 8001480:	4604      	mov	r4, r0
 8001482:	460d      	mov	r5, r1
 8001484:	68fb      	ldr	r3, [r7, #12]
 8001486:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001488:	4618      	mov	r0, r3
 800148a:	f7ff f821 	bl	80004d0 <__aeabi_f2d>
 800148e:	a39a      	add	r3, pc, #616	@ (adr r3, 80016f8 <Kalman_getAngle+0x2e8>)
 8001490:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001494:	f7ff f874 	bl	8000580 <__aeabi_dmul>
 8001498:	4602      	mov	r2, r0
 800149a:	460b      	mov	r3, r1
 800149c:	4690      	mov	r8, r2
 800149e:	4699      	mov	r9, r3
 80014a0:	68fb      	ldr	r3, [r7, #12]
 80014a2:	69db      	ldr	r3, [r3, #28]
 80014a4:	4618      	mov	r0, r3
 80014a6:	f7ff f813 	bl	80004d0 <__aeabi_f2d>
 80014aa:	4602      	mov	r2, r0
 80014ac:	460b      	mov	r3, r1
 80014ae:	4640      	mov	r0, r8
 80014b0:	4649      	mov	r1, r9
 80014b2:	f7fe fead 	bl	8000210 <__aeabi_dsub>
 80014b6:	4602      	mov	r2, r0
 80014b8:	460b      	mov	r3, r1
 80014ba:	4690      	mov	r8, r2
 80014bc:	4699      	mov	r9, r3
 80014be:	68fb      	ldr	r3, [r7, #12]
 80014c0:	6a1b      	ldr	r3, [r3, #32]
 80014c2:	4618      	mov	r0, r3
 80014c4:	f7ff f804 	bl	80004d0 <__aeabi_f2d>
 80014c8:	4602      	mov	r2, r0
 80014ca:	460b      	mov	r3, r1
 80014cc:	4640      	mov	r0, r8
 80014ce:	4649      	mov	r1, r9
 80014d0:	f7fe fe9e 	bl	8000210 <__aeabi_dsub>
 80014d4:	4602      	mov	r2, r0
 80014d6:	460b      	mov	r3, r1
 80014d8:	4690      	mov	r8, r2
 80014da:	4699      	mov	r9, r3
 80014dc:	68fb      	ldr	r3, [r7, #12]
 80014de:	681b      	ldr	r3, [r3, #0]
 80014e0:	4618      	mov	r0, r3
 80014e2:	f7fe fff5 	bl	80004d0 <__aeabi_f2d>
 80014e6:	4602      	mov	r2, r0
 80014e8:	460b      	mov	r3, r1
 80014ea:	4640      	mov	r0, r8
 80014ec:	4649      	mov	r1, r9
 80014ee:	f7fe fe91 	bl	8000214 <__adddf3>
 80014f2:	4602      	mov	r2, r0
 80014f4:	460b      	mov	r3, r1
 80014f6:	4610      	mov	r0, r2
 80014f8:	4619      	mov	r1, r3
 80014fa:	a37f      	add	r3, pc, #508	@ (adr r3, 80016f8 <Kalman_getAngle+0x2e8>)
 80014fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001500:	f7ff f83e 	bl	8000580 <__aeabi_dmul>
 8001504:	4602      	mov	r2, r0
 8001506:	460b      	mov	r3, r1
 8001508:	4620      	mov	r0, r4
 800150a:	4629      	mov	r1, r5
 800150c:	f7fe fe82 	bl	8000214 <__adddf3>
 8001510:	4602      	mov	r2, r0
 8001512:	460b      	mov	r3, r1
 8001514:	4610      	mov	r0, r2
 8001516:	4619      	mov	r1, r3
 8001518:	f7ff fb2a 	bl	8000b70 <__aeabi_d2f>
 800151c:	4602      	mov	r2, r0
 800151e:	68fb      	ldr	r3, [r7, #12]
 8001520:	619a      	str	r2, [r3, #24]
    k->P[0][1] -= DT_k * k->P[1][1];
 8001522:	68fb      	ldr	r3, [r7, #12]
 8001524:	69db      	ldr	r3, [r3, #28]
 8001526:	4618      	mov	r0, r3
 8001528:	f7fe ffd2 	bl	80004d0 <__aeabi_f2d>
 800152c:	4604      	mov	r4, r0
 800152e:	460d      	mov	r5, r1
 8001530:	68fb      	ldr	r3, [r7, #12]
 8001532:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001534:	4618      	mov	r0, r3
 8001536:	f7fe ffcb 	bl	80004d0 <__aeabi_f2d>
 800153a:	a36f      	add	r3, pc, #444	@ (adr r3, 80016f8 <Kalman_getAngle+0x2e8>)
 800153c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001540:	f7ff f81e 	bl	8000580 <__aeabi_dmul>
 8001544:	4602      	mov	r2, r0
 8001546:	460b      	mov	r3, r1
 8001548:	4620      	mov	r0, r4
 800154a:	4629      	mov	r1, r5
 800154c:	f7fe fe60 	bl	8000210 <__aeabi_dsub>
 8001550:	4602      	mov	r2, r0
 8001552:	460b      	mov	r3, r1
 8001554:	4610      	mov	r0, r2
 8001556:	4619      	mov	r1, r3
 8001558:	f7ff fb0a 	bl	8000b70 <__aeabi_d2f>
 800155c:	4602      	mov	r2, r0
 800155e:	68fb      	ldr	r3, [r7, #12]
 8001560:	61da      	str	r2, [r3, #28]
    k->P[1][0] -= DT_k * k->P[1][1];
 8001562:	68fb      	ldr	r3, [r7, #12]
 8001564:	6a1b      	ldr	r3, [r3, #32]
 8001566:	4618      	mov	r0, r3
 8001568:	f7fe ffb2 	bl	80004d0 <__aeabi_f2d>
 800156c:	4604      	mov	r4, r0
 800156e:	460d      	mov	r5, r1
 8001570:	68fb      	ldr	r3, [r7, #12]
 8001572:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001574:	4618      	mov	r0, r3
 8001576:	f7fe ffab 	bl	80004d0 <__aeabi_f2d>
 800157a:	a35f      	add	r3, pc, #380	@ (adr r3, 80016f8 <Kalman_getAngle+0x2e8>)
 800157c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001580:	f7fe fffe 	bl	8000580 <__aeabi_dmul>
 8001584:	4602      	mov	r2, r0
 8001586:	460b      	mov	r3, r1
 8001588:	4620      	mov	r0, r4
 800158a:	4629      	mov	r1, r5
 800158c:	f7fe fe40 	bl	8000210 <__aeabi_dsub>
 8001590:	4602      	mov	r2, r0
 8001592:	460b      	mov	r3, r1
 8001594:	4610      	mov	r0, r2
 8001596:	4619      	mov	r1, r3
 8001598:	f7ff faea 	bl	8000b70 <__aeabi_d2f>
 800159c:	4602      	mov	r2, r0
 800159e:	68fb      	ldr	r3, [r7, #12]
 80015a0:	621a      	str	r2, [r3, #32]
    k->P[1][1] += k->Q_bias * DT_k;
 80015a2:	68fb      	ldr	r3, [r7, #12]
 80015a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80015a6:	4618      	mov	r0, r3
 80015a8:	f7fe ff92 	bl	80004d0 <__aeabi_f2d>
 80015ac:	4604      	mov	r4, r0
 80015ae:	460d      	mov	r5, r1
 80015b0:	68fb      	ldr	r3, [r7, #12]
 80015b2:	685b      	ldr	r3, [r3, #4]
 80015b4:	4618      	mov	r0, r3
 80015b6:	f7fe ff8b 	bl	80004d0 <__aeabi_f2d>
 80015ba:	a34f      	add	r3, pc, #316	@ (adr r3, 80016f8 <Kalman_getAngle+0x2e8>)
 80015bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015c0:	f7fe ffde 	bl	8000580 <__aeabi_dmul>
 80015c4:	4602      	mov	r2, r0
 80015c6:	460b      	mov	r3, r1
 80015c8:	4620      	mov	r0, r4
 80015ca:	4629      	mov	r1, r5
 80015cc:	f7fe fe22 	bl	8000214 <__adddf3>
 80015d0:	4602      	mov	r2, r0
 80015d2:	460b      	mov	r3, r1
 80015d4:	4610      	mov	r0, r2
 80015d6:	4619      	mov	r1, r3
 80015d8:	f7ff faca 	bl	8000b70 <__aeabi_d2f>
 80015dc:	4602      	mov	r2, r0
 80015de:	68fb      	ldr	r3, [r7, #12]
 80015e0:	625a      	str	r2, [r3, #36]	@ 0x24

    // Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
    // Calculate Kalman gain - Compute the Kalman gain
    /* Step 4 */
    float S = k->P[0][0] + k->R_measure; // Estimate error
 80015e2:	68fb      	ldr	r3, [r7, #12]
 80015e4:	ed93 7a06 	vldr	s14, [r3, #24]
 80015e8:	68fb      	ldr	r3, [r7, #12]
 80015ea:	edd3 7a02 	vldr	s15, [r3, #8]
 80015ee:	ee77 7a27 	vadd.f32	s15, s14, s15
 80015f2:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24
    /* Step 5 */
    float K[2]; // Kalman gain - This is a 2x1 vector
    K[0] = k->P[0][0] / S;
 80015f6:	68fb      	ldr	r3, [r7, #12]
 80015f8:	edd3 6a06 	vldr	s13, [r3, #24]
 80015fc:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 8001600:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001604:	edc7 7a04 	vstr	s15, [r7, #16]
    K[1] = k->P[1][0] / S;
 8001608:	68fb      	ldr	r3, [r7, #12]
 800160a:	edd3 6a08 	vldr	s13, [r3, #32]
 800160e:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 8001612:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001616:	edc7 7a05 	vstr	s15, [r7, #20]

    // Calculate angle and bias - Update estimate with measurement zk (newAngle)
    /* Step 3 */
    float y = newAngle - k->angle; // Angle difference
 800161a:	68fb      	ldr	r3, [r7, #12]
 800161c:	edd3 7a03 	vldr	s15, [r3, #12]
 8001620:	ed97 7a02 	vldr	s14, [r7, #8]
 8001624:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001628:	edc7 7a08 	vstr	s15, [r7, #32]
    /* Step 6 */
    k->angle += K[0] * y;
 800162c:	68fb      	ldr	r3, [r7, #12]
 800162e:	ed93 7a03 	vldr	s14, [r3, #12]
 8001632:	edd7 6a04 	vldr	s13, [r7, #16]
 8001636:	edd7 7a08 	vldr	s15, [r7, #32]
 800163a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800163e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001642:	68fb      	ldr	r3, [r7, #12]
 8001644:	edc3 7a03 	vstr	s15, [r3, #12]
    k->bias += K[1] * y;
 8001648:	68fb      	ldr	r3, [r7, #12]
 800164a:	ed93 7a04 	vldr	s14, [r3, #16]
 800164e:	edd7 6a05 	vldr	s13, [r7, #20]
 8001652:	edd7 7a08 	vldr	s15, [r7, #32]
 8001656:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800165a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800165e:	68fb      	ldr	r3, [r7, #12]
 8001660:	edc3 7a04 	vstr	s15, [r3, #16]

    // Calculate estimation error covariance - Update the error covariance
    /* Step 7 */
    float P00_temp = k->P[0][0];
 8001664:	68fb      	ldr	r3, [r7, #12]
 8001666:	699b      	ldr	r3, [r3, #24]
 8001668:	61fb      	str	r3, [r7, #28]
    float P01_temp = k->P[0][1];
 800166a:	68fb      	ldr	r3, [r7, #12]
 800166c:	69db      	ldr	r3, [r3, #28]
 800166e:	61bb      	str	r3, [r7, #24]

    k->P[0][0] -= K[0] * P00_temp;
 8001670:	68fb      	ldr	r3, [r7, #12]
 8001672:	ed93 7a06 	vldr	s14, [r3, #24]
 8001676:	edd7 6a04 	vldr	s13, [r7, #16]
 800167a:	edd7 7a07 	vldr	s15, [r7, #28]
 800167e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001682:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001686:	68fb      	ldr	r3, [r7, #12]
 8001688:	edc3 7a06 	vstr	s15, [r3, #24]
    k->P[0][1] -= K[0] * P01_temp;
 800168c:	68fb      	ldr	r3, [r7, #12]
 800168e:	ed93 7a07 	vldr	s14, [r3, #28]
 8001692:	edd7 6a04 	vldr	s13, [r7, #16]
 8001696:	edd7 7a06 	vldr	s15, [r7, #24]
 800169a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800169e:	ee77 7a67 	vsub.f32	s15, s14, s15
 80016a2:	68fb      	ldr	r3, [r7, #12]
 80016a4:	edc3 7a07 	vstr	s15, [r3, #28]
    k->P[1][0] -= K[1] * P00_temp;
 80016a8:	68fb      	ldr	r3, [r7, #12]
 80016aa:	ed93 7a08 	vldr	s14, [r3, #32]
 80016ae:	edd7 6a05 	vldr	s13, [r7, #20]
 80016b2:	edd7 7a07 	vldr	s15, [r7, #28]
 80016b6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80016ba:	ee77 7a67 	vsub.f32	s15, s14, s15
 80016be:	68fb      	ldr	r3, [r7, #12]
 80016c0:	edc3 7a08 	vstr	s15, [r3, #32]
    k->P[1][1] -= K[1] * P01_temp;
 80016c4:	68fb      	ldr	r3, [r7, #12]
 80016c6:	ed93 7a09 	vldr	s14, [r3, #36]	@ 0x24
 80016ca:	edd7 6a05 	vldr	s13, [r7, #20]
 80016ce:	edd7 7a06 	vldr	s15, [r7, #24]
 80016d2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80016d6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80016da:	68fb      	ldr	r3, [r7, #12]
 80016dc:	edc3 7a09 	vstr	s15, [r3, #36]	@ 0x24

    return k->angle;
 80016e0:	68fb      	ldr	r3, [r7, #12]
 80016e2:	68db      	ldr	r3, [r3, #12]
 80016e4:	ee07 3a90 	vmov	s15, r3
}
 80016e8:	eeb0 0a67 	vmov.f32	s0, s15
 80016ec:	3728      	adds	r7, #40	@ 0x28
 80016ee:	46bd      	mov	sp, r7
 80016f0:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80016f4:	f3af 8000 	nop.w
 80016f8:	9999999a 	.word	0x9999999a
 80016fc:	3f999999 	.word	0x3f999999

08001700 <Kalman_setAngle>:

void Kalman_setAngle(Kalman* k, float angle) { k->angle = angle; }
 8001700:	b480      	push	{r7}
 8001702:	b083      	sub	sp, #12
 8001704:	af00      	add	r7, sp, #0
 8001706:	6078      	str	r0, [r7, #4]
 8001708:	ed87 0a00 	vstr	s0, [r7]
 800170c:	687b      	ldr	r3, [r7, #4]
 800170e:	683a      	ldr	r2, [r7, #0]
 8001710:	60da      	str	r2, [r3, #12]
 8001712:	bf00      	nop
 8001714:	370c      	adds	r7, #12
 8001716:	46bd      	mov	sp, r7
 8001718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800171c:	4770      	bx	lr
	...

08001720 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8001720:	b580      	push	{r7, lr}
 8001722:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 8001724:	f001 f9c0 	bl	8002aa8 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 8001728:	f000 f870 	bl	800180c <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 800172c:	f7ff fd0e 	bl	800114c <MX_GPIO_Init>
	MX_TIM5_Init();
 8001730:	f001 f86c 	bl	800280c <MX_TIM5_Init>
	MX_I2C1_Init();
 8001734:	f7ff fd5c 	bl	80011f0 <MX_I2C1_Init>
	MX_TIM1_Init();
 8001738:	f000 ffc2 	bl	80026c0 <MX_TIM1_Init>
	MX_TIM2_Init();
 800173c:	f001 f818 	bl	8002770 <MX_TIM2_Init>
	/* USER CODE BEGIN 2 */
	pid_init(&pid, Kp, Ki, Kd, -max_pwm, max_pwm);
 8001740:	4b24      	ldr	r3, [pc, #144]	@ (80017d4 <main+0xb4>)
 8001742:	ed93 7a00 	vldr	s14, [r3]
 8001746:	4b24      	ldr	r3, [pc, #144]	@ (80017d8 <main+0xb8>)
 8001748:	edd3 6a00 	vldr	s13, [r3]
 800174c:	4b23      	ldr	r3, [pc, #140]	@ (80017dc <main+0xbc>)
 800174e:	ed93 6a00 	vldr	s12, [r3]
 8001752:	4b23      	ldr	r3, [pc, #140]	@ (80017e0 <main+0xc0>)
 8001754:	edd3 7a00 	vldr	s15, [r3]
 8001758:	eef1 7a67 	vneg.f32	s15, s15
 800175c:	4b20      	ldr	r3, [pc, #128]	@ (80017e0 <main+0xc0>)
 800175e:	edd3 5a00 	vldr	s11, [r3]
 8001762:	eeb0 2a65 	vmov.f32	s4, s11
 8001766:	eef0 1a67 	vmov.f32	s3, s15
 800176a:	eeb0 1a46 	vmov.f32	s2, s12
 800176e:	eef0 0a66 	vmov.f32	s1, s13
 8001772:	eeb0 0a47 	vmov.f32	s0, s14
 8001776:	481b      	ldr	r0, [pc, #108]	@ (80017e4 <main+0xc4>)
 8001778:	f000 fdb2 	bl	80022e0 <pid_init>
	pid.pos_deadzone = 150;
 800177c:	4b19      	ldr	r3, [pc, #100]	@ (80017e4 <main+0xc4>)
 800177e:	4a1a      	ldr	r2, [pc, #104]	@ (80017e8 <main+0xc8>)
 8001780:	629a      	str	r2, [r3, #40]	@ 0x28
	pid.neg_deadzone = -150;
 8001782:	4b18      	ldr	r3, [pc, #96]	@ (80017e4 <main+0xc4>)
 8001784:	4a19      	ldr	r2, [pc, #100]	@ (80017ec <main+0xcc>)
 8001786:	625a      	str	r2, [r3, #36]	@ 0x24
	pid_set_setpoint(&pid, set_point);
 8001788:	4b19      	ldr	r3, [pc, #100]	@ (80017f0 <main+0xd0>)
 800178a:	edd3 7a00 	vldr	s15, [r3]
 800178e:	eeb0 0a67 	vmov.f32	s0, s15
 8001792:	4814      	ldr	r0, [pc, #80]	@ (80017e4 <main+0xc4>)
 8001794:	f000 fdd2 	bl	800233c <pid_set_setpoint>
	status = mpu6050_init();
 8001798:	f000 fa30 	bl	8001bfc <mpu6050_init>
 800179c:	4603      	mov	r3, r0
 800179e:	461a      	mov	r2, r3
 80017a0:	4b14      	ldr	r3, [pc, #80]	@ (80017f4 <main+0xd4>)
 80017a2:	701a      	strb	r2, [r3, #0]

	// Kalman filter
	Kalman_init(&filter);
 80017a4:	4814      	ldr	r0, [pc, #80]	@ (80017f8 <main+0xd8>)
 80017a6:	f7ff fdff 	bl	80013a8 <Kalman_init>
	Kalman_setAngle(&filter, 0);
 80017aa:	ed9f 0a14 	vldr	s0, [pc, #80]	@ 80017fc <main+0xdc>
 80017ae:	4812      	ldr	r0, [pc, #72]	@ (80017f8 <main+0xd8>)
 80017b0:	f7ff ffa6 	bl	8001700 <Kalman_setAngle>

	nidec_h24_init();
 80017b4:	f000 fcde 	bl	8002174 <nidec_h24_init>
	encoder_init(&enc, AB, &htim1, 100);
 80017b8:	2364      	movs	r3, #100	@ 0x64
 80017ba:	4a11      	ldr	r2, [pc, #68]	@ (8001800 <main+0xe0>)
 80017bc:	213c      	movs	r1, #60	@ 0x3c
 80017be:	4811      	ldr	r0, [pc, #68]	@ (8001804 <main+0xe4>)
 80017c0:	f7ff fb9e 	bl	8000f00 <encoder_init>
	HAL_TIM_Base_Start_IT(&htim2);
 80017c4:	4810      	ldr	r0, [pc, #64]	@ (8001808 <main+0xe8>)
 80017c6:	f003 fc35 	bl	8005034 <HAL_TIM_Base_Start_IT>
	/* USER CODE END 2 */

	/* Infinite loop */
	/* USER CODE BEGIN WHILE */
	while (1) {
		HAL_Delay(1);
 80017ca:	2001      	movs	r0, #1
 80017cc:	f001 f9de 	bl	8002b8c <HAL_Delay>
 80017d0:	e7fb      	b.n	80017ca <main+0xaa>
 80017d2:	bf00      	nop
 80017d4:	20000000 	.word	0x20000000
 80017d8:	20000004 	.word	0x20000004
 80017dc:	20000008 	.word	0x20000008
 80017e0:	2000000c 	.word	0x2000000c
 80017e4:	20000160 	.word	0x20000160
 80017e8:	43160000 	.word	0x43160000
 80017ec:	c3160000 	.word	0xc3160000
 80017f0:	2000019c 	.word	0x2000019c
 80017f4:	2000015c 	.word	0x2000015c
 80017f8:	200000f0 	.word	0x200000f0
 80017fc:	00000000 	.word	0x00000000
 8001800:	200001cc 	.word	0x200001cc
 8001804:	20000118 	.word	0x20000118
 8001808:	20000214 	.word	0x20000214

0800180c <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 800180c:	b580      	push	{r7, lr}
 800180e:	b094      	sub	sp, #80	@ 0x50
 8001810:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8001812:	f107 031c 	add.w	r3, r7, #28
 8001816:	2234      	movs	r2, #52	@ 0x34
 8001818:	2100      	movs	r1, #0
 800181a:	4618      	mov	r0, r3
 800181c:	f004 fd14 	bl	8006248 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8001820:	f107 0308 	add.w	r3, r7, #8
 8001824:	2200      	movs	r2, #0
 8001826:	601a      	str	r2, [r3, #0]
 8001828:	605a      	str	r2, [r3, #4]
 800182a:	609a      	str	r2, [r3, #8]
 800182c:	60da      	str	r2, [r3, #12]
 800182e:	611a      	str	r2, [r3, #16]

	/** Configure the main internal regulator output voltage
	 */
	__HAL_RCC_PWR_CLK_ENABLE();
 8001830:	2300      	movs	r3, #0
 8001832:	607b      	str	r3, [r7, #4]
 8001834:	4b29      	ldr	r3, [pc, #164]	@ (80018dc <SystemClock_Config+0xd0>)
 8001836:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001838:	4a28      	ldr	r2, [pc, #160]	@ (80018dc <SystemClock_Config+0xd0>)
 800183a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800183e:	6413      	str	r3, [r2, #64]	@ 0x40
 8001840:	4b26      	ldr	r3, [pc, #152]	@ (80018dc <SystemClock_Config+0xd0>)
 8001842:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001844:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001848:	607b      	str	r3, [r7, #4]
 800184a:	687b      	ldr	r3, [r7, #4]
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 800184c:	2300      	movs	r3, #0
 800184e:	603b      	str	r3, [r7, #0]
 8001850:	4b23      	ldr	r3, [pc, #140]	@ (80018e0 <SystemClock_Config+0xd4>)
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8001858:	4a21      	ldr	r2, [pc, #132]	@ (80018e0 <SystemClock_Config+0xd4>)
 800185a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800185e:	6013      	str	r3, [r2, #0]
 8001860:	4b1f      	ldr	r3, [pc, #124]	@ (80018e0 <SystemClock_Config+0xd4>)
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001868:	603b      	str	r3, [r7, #0]
 800186a:	683b      	ldr	r3, [r7, #0]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800186c:	2302      	movs	r3, #2
 800186e:	61fb      	str	r3, [r7, #28]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001870:	2301      	movs	r3, #1
 8001872:	62bb      	str	r3, [r7, #40]	@ 0x28
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001874:	2310      	movs	r3, #16
 8001876:	62fb      	str	r3, [r7, #44]	@ 0x2c
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001878:	2302      	movs	r3, #2
 800187a:	637b      	str	r3, [r7, #52]	@ 0x34
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800187c:	2300      	movs	r3, #0
 800187e:	63bb      	str	r3, [r7, #56]	@ 0x38
	RCC_OscInitStruct.PLL.PLLM = 8;
 8001880:	2308      	movs	r3, #8
 8001882:	63fb      	str	r3, [r7, #60]	@ 0x3c
	RCC_OscInitStruct.PLL.PLLN = 84;
 8001884:	2354      	movs	r3, #84	@ 0x54
 8001886:	643b      	str	r3, [r7, #64]	@ 0x40
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001888:	2302      	movs	r3, #2
 800188a:	647b      	str	r3, [r7, #68]	@ 0x44
	RCC_OscInitStruct.PLL.PLLQ = 2;
 800188c:	2302      	movs	r3, #2
 800188e:	64bb      	str	r3, [r7, #72]	@ 0x48
	RCC_OscInitStruct.PLL.PLLR = 2;
 8001890:	2302      	movs	r3, #2
 8001892:	64fb      	str	r3, [r7, #76]	@ 0x4c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8001894:	f107 031c 	add.w	r3, r7, #28
 8001898:	4618      	mov	r0, r3
 800189a:	f003 f875 	bl	8004988 <HAL_RCC_OscConfig>
 800189e:	4603      	mov	r3, r0
 80018a0:	2b00      	cmp	r3, #0
 80018a2:	d001      	beq.n	80018a8 <SystemClock_Config+0x9c>
		Error_Handler();
 80018a4:	f000 f9a4 	bl	8001bf0 <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 80018a8:	230f      	movs	r3, #15
 80018aa:	60bb      	str	r3, [r7, #8]
			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80018ac:	2302      	movs	r3, #2
 80018ae:	60fb      	str	r3, [r7, #12]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80018b0:	2300      	movs	r3, #0
 80018b2:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80018b4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80018b8:	617b      	str	r3, [r7, #20]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80018ba:	2300      	movs	r3, #0
 80018bc:	61bb      	str	r3, [r7, #24]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 80018be:	f107 0308 	add.w	r3, r7, #8
 80018c2:	2102      	movs	r1, #2
 80018c4:	4618      	mov	r0, r3
 80018c6:	f002 fdaf 	bl	8004428 <HAL_RCC_ClockConfig>
 80018ca:	4603      	mov	r3, r0
 80018cc:	2b00      	cmp	r3, #0
 80018ce:	d001      	beq.n	80018d4 <SystemClock_Config+0xc8>
		Error_Handler();
 80018d0:	f000 f98e 	bl	8001bf0 <Error_Handler>
	}
}
 80018d4:	bf00      	nop
 80018d6:	3750      	adds	r7, #80	@ 0x50
 80018d8:	46bd      	mov	sp, r7
 80018da:	bd80      	pop	{r7, pc}
 80018dc:	40023800 	.word	0x40023800
 80018e0:	40007000 	.word	0x40007000
 80018e4:	00000000 	.word	0x00000000

080018e8 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 80018e8:	b5b0      	push	{r4, r5, r7, lr}
 80018ea:	b088      	sub	sp, #32
 80018ec:	af00      	add	r7, sp, #0
 80018ee:	61f8      	str	r0, [r7, #28]
	if (htim->Instance == TIM2) {
 80018f0:	69fb      	ldr	r3, [r7, #28]
 80018f2:	681b      	ldr	r3, [r3, #0]
 80018f4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80018f8:	f040 814e 	bne.w	8001b98 <HAL_TIM_PeriodElapsedCallback+0x2b0>
		data = mpu6050_data();
 80018fc:	4cae      	ldr	r4, [pc, #696]	@ (8001bb8 <HAL_TIM_PeriodElapsedCallback+0x2d0>)
 80018fe:	463b      	mov	r3, r7
 8001900:	4618      	mov	r0, r3
 8001902:	f000 fb45 	bl	8001f90 <mpu6050_data>
 8001906:	4625      	mov	r5, r4
 8001908:	463c      	mov	r4, r7
 800190a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800190c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800190e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001912:	e885 0003 	stmia.w	r5, {r0, r1}
		new_angle = atan(-data.ax / sqrt(data.ay * data.ay + data.az * data.az))
 8001916:	4ba8      	ldr	r3, [pc, #672]	@ (8001bb8 <HAL_TIM_PeriodElapsedCallback+0x2d0>)
 8001918:	edd3 7a00 	vldr	s15, [r3]
 800191c:	eef1 7a67 	vneg.f32	s15, s15
 8001920:	ee17 3a90 	vmov	r3, s15
 8001924:	4618      	mov	r0, r3
 8001926:	f7fe fdd3 	bl	80004d0 <__aeabi_f2d>
 800192a:	4604      	mov	r4, r0
 800192c:	460d      	mov	r5, r1
 800192e:	4ba2      	ldr	r3, [pc, #648]	@ (8001bb8 <HAL_TIM_PeriodElapsedCallback+0x2d0>)
 8001930:	ed93 7a01 	vldr	s14, [r3, #4]
 8001934:	4ba0      	ldr	r3, [pc, #640]	@ (8001bb8 <HAL_TIM_PeriodElapsedCallback+0x2d0>)
 8001936:	edd3 7a01 	vldr	s15, [r3, #4]
 800193a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800193e:	4b9e      	ldr	r3, [pc, #632]	@ (8001bb8 <HAL_TIM_PeriodElapsedCallback+0x2d0>)
 8001940:	edd3 6a02 	vldr	s13, [r3, #8]
 8001944:	4b9c      	ldr	r3, [pc, #624]	@ (8001bb8 <HAL_TIM_PeriodElapsedCallback+0x2d0>)
 8001946:	edd3 7a02 	vldr	s15, [r3, #8]
 800194a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800194e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001952:	ee17 0a90 	vmov	r0, s15
 8001956:	f7fe fdbb 	bl	80004d0 <__aeabi_f2d>
 800195a:	4602      	mov	r2, r0
 800195c:	460b      	mov	r3, r1
 800195e:	ec43 2b10 	vmov	d0, r2, r3
 8001962:	f004 fca3 	bl	80062ac <sqrt>
 8001966:	ec53 2b10 	vmov	r2, r3, d0
 800196a:	4620      	mov	r0, r4
 800196c:	4629      	mov	r1, r5
 800196e:	f7fe ff31 	bl	80007d4 <__aeabi_ddiv>
 8001972:	4602      	mov	r2, r0
 8001974:	460b      	mov	r3, r1
 8001976:	ec43 2b17 	vmov	d7, r2, r3
 800197a:	eeb0 0a47 	vmov.f32	s0, s14
 800197e:	eef0 0a67 	vmov.f32	s1, s15
 8001982:	f004 fcc1 	bl	8006308 <atan>
 8001986:	ec51 0b10 	vmov	r0, r1, d0
				* 180 / M_PI;
 800198a:	f04f 0200 	mov.w	r2, #0
 800198e:	4b8b      	ldr	r3, [pc, #556]	@ (8001bbc <HAL_TIM_PeriodElapsedCallback+0x2d4>)
 8001990:	f7fe fdf6 	bl	8000580 <__aeabi_dmul>
 8001994:	4602      	mov	r2, r0
 8001996:	460b      	mov	r3, r1
 8001998:	4610      	mov	r0, r2
 800199a:	4619      	mov	r1, r3
 800199c:	a380      	add	r3, pc, #512	@ (adr r3, 8001ba0 <HAL_TIM_PeriodElapsedCallback+0x2b8>)
 800199e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019a2:	f7fe ff17 	bl	80007d4 <__aeabi_ddiv>
 80019a6:	4602      	mov	r2, r0
 80019a8:	460b      	mov	r3, r1
 80019aa:	4610      	mov	r0, r2
 80019ac:	4619      	mov	r1, r3
 80019ae:	f7ff f8df 	bl	8000b70 <__aeabi_d2f>
 80019b2:	4603      	mov	r3, r0
		new_angle = atan(-data.ax / sqrt(data.ay * data.ay + data.az * data.az))
 80019b4:	4a82      	ldr	r2, [pc, #520]	@ (8001bc0 <HAL_TIM_PeriodElapsedCallback+0x2d8>)
 80019b6:	6013      	str	r3, [r2, #0]
		pitch = -Kalman_getAngle(&filter, new_angle, data.gy - gy_bias);
 80019b8:	4b81      	ldr	r3, [pc, #516]	@ (8001bc0 <HAL_TIM_PeriodElapsedCallback+0x2d8>)
 80019ba:	edd3 6a00 	vldr	s13, [r3]
 80019be:	4b7e      	ldr	r3, [pc, #504]	@ (8001bb8 <HAL_TIM_PeriodElapsedCallback+0x2d0>)
 80019c0:	ed93 7a04 	vldr	s14, [r3, #16]
 80019c4:	4b7f      	ldr	r3, [pc, #508]	@ (8001bc4 <HAL_TIM_PeriodElapsedCallback+0x2dc>)
 80019c6:	edd3 7a00 	vldr	s15, [r3]
 80019ca:	ee77 7a67 	vsub.f32	s15, s14, s15
 80019ce:	eef0 0a67 	vmov.f32	s1, s15
 80019d2:	eeb0 0a66 	vmov.f32	s0, s13
 80019d6:	487c      	ldr	r0, [pc, #496]	@ (8001bc8 <HAL_TIM_PeriodElapsedCallback+0x2e0>)
 80019d8:	f7ff fd1a 	bl	8001410 <Kalman_getAngle>
 80019dc:	eef0 7a40 	vmov.f32	s15, s0
 80019e0:	eef1 7a67 	vneg.f32	s15, s15
 80019e4:	4b79      	ldr	r3, [pc, #484]	@ (8001bcc <HAL_TIM_PeriodElapsedCallback+0x2e4>)
 80019e6:	edc3 7a00 	vstr	s15, [r3]
		distance = -10 * pitch;
 80019ea:	4b78      	ldr	r3, [pc, #480]	@ (8001bcc <HAL_TIM_PeriodElapsedCallback+0x2e4>)
 80019ec:	edd3 7a00 	vldr	s15, [r3]
 80019f0:	eeba 7a04 	vmov.f32	s14, #164	@ 0xc1200000 -10.0
 80019f4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80019f8:	4b75      	ldr	r3, [pc, #468]	@ (8001bd0 <HAL_TIM_PeriodElapsedCallback+0x2e8>)
 80019fa:	edc3 7a00 	vstr	s15, [r3]
		distance_error = distance_setpoint - distance;
 80019fe:	4b75      	ldr	r3, [pc, #468]	@ (8001bd4 <HAL_TIM_PeriodElapsedCallback+0x2ec>)
 8001a00:	ed93 7a00 	vldr	s14, [r3]
 8001a04:	4b72      	ldr	r3, [pc, #456]	@ (8001bd0 <HAL_TIM_PeriodElapsedCallback+0x2e8>)
 8001a06:	edd3 7a00 	vldr	s15, [r3]
 8001a0a:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001a0e:	4b72      	ldr	r3, [pc, #456]	@ (8001bd8 <HAL_TIM_PeriodElapsedCallback+0x2f0>)
 8001a10:	edc3 7a00 	vstr	s15, [r3]
		if (distance_error < distance_setpoint) {
 8001a14:	4b70      	ldr	r3, [pc, #448]	@ (8001bd8 <HAL_TIM_PeriodElapsedCallback+0x2f0>)
 8001a16:	ed93 7a00 	vldr	s14, [r3]
 8001a1a:	4b6e      	ldr	r3, [pc, #440]	@ (8001bd4 <HAL_TIM_PeriodElapsedCallback+0x2ec>)
 8001a1c:	edd3 7a00 	vldr	s15, [r3]
 8001a20:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001a24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a28:	d513      	bpl.n	8001a52 <HAL_TIM_PeriodElapsedCallback+0x16a>
			distance_setpoint -= 5 * 0.004;
 8001a2a:	4b6a      	ldr	r3, [pc, #424]	@ (8001bd4 <HAL_TIM_PeriodElapsedCallback+0x2ec>)
 8001a2c:	681b      	ldr	r3, [r3, #0]
 8001a2e:	4618      	mov	r0, r3
 8001a30:	f7fe fd4e 	bl	80004d0 <__aeabi_f2d>
 8001a34:	a35c      	add	r3, pc, #368	@ (adr r3, 8001ba8 <HAL_TIM_PeriodElapsedCallback+0x2c0>)
 8001a36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a3a:	f7fe fbe9 	bl	8000210 <__aeabi_dsub>
 8001a3e:	4602      	mov	r2, r0
 8001a40:	460b      	mov	r3, r1
 8001a42:	4610      	mov	r0, r2
 8001a44:	4619      	mov	r1, r3
 8001a46:	f7ff f893 	bl	8000b70 <__aeabi_d2f>
 8001a4a:	4603      	mov	r3, r0
 8001a4c:	4a61      	ldr	r2, [pc, #388]	@ (8001bd4 <HAL_TIM_PeriodElapsedCallback+0x2ec>)
 8001a4e:	6013      	str	r3, [r2, #0]
 8001a50:	e012      	b.n	8001a78 <HAL_TIM_PeriodElapsedCallback+0x190>
		} else {
			distance_setpoint += 5 * 0.004;
 8001a52:	4b60      	ldr	r3, [pc, #384]	@ (8001bd4 <HAL_TIM_PeriodElapsedCallback+0x2ec>)
 8001a54:	681b      	ldr	r3, [r3, #0]
 8001a56:	4618      	mov	r0, r3
 8001a58:	f7fe fd3a 	bl	80004d0 <__aeabi_f2d>
 8001a5c:	a352      	add	r3, pc, #328	@ (adr r3, 8001ba8 <HAL_TIM_PeriodElapsedCallback+0x2c0>)
 8001a5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a62:	f7fe fbd7 	bl	8000214 <__adddf3>
 8001a66:	4602      	mov	r2, r0
 8001a68:	460b      	mov	r3, r1
 8001a6a:	4610      	mov	r0, r2
 8001a6c:	4619      	mov	r1, r3
 8001a6e:	f7ff f87f 	bl	8000b70 <__aeabi_d2f>
 8001a72:	4603      	mov	r3, r0
 8001a74:	4a57      	ldr	r2, [pc, #348]	@ (8001bd4 <HAL_TIM_PeriodElapsedCallback+0x2ec>)
 8001a76:	6013      	str	r3, [r2, #0]
		}
		rpm = encoder_get_velocity_rpm(&enc);
 8001a78:	4858      	ldr	r0, [pc, #352]	@ (8001bdc <HAL_TIM_PeriodElapsedCallback+0x2f4>)
 8001a7a:	f7ff fb45 	bl	8001108 <encoder_get_velocity_rpm>
 8001a7e:	eef0 7a40 	vmov.f32	s15, s0
 8001a82:	4b57      	ldr	r3, [pc, #348]	@ (8001be0 <HAL_TIM_PeriodElapsedCallback+0x2f8>)
 8001a84:	edc3 7a00 	vstr	s15, [r3]
		if (pwm < 0) {
 8001a88:	4b56      	ldr	r3, [pc, #344]	@ (8001be4 <HAL_TIM_PeriodElapsedCallback+0x2fc>)
 8001a8a:	edd3 7a00 	vldr	s15, [r3]
 8001a8e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001a92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a96:	d51c      	bpl.n	8001ad2 <HAL_TIM_PeriodElapsedCallback+0x1ea>
			if (rpm > 700) {
 8001a98:	4b51      	ldr	r3, [pc, #324]	@ (8001be0 <HAL_TIM_PeriodElapsedCallback+0x2f8>)
 8001a9a:	edd3 7a00 	vldr	s15, [r3]
 8001a9e:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 8001be8 <HAL_TIM_PeriodElapsedCallback+0x300>
 8001aa2:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001aa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001aaa:	dd12      	ble.n	8001ad2 <HAL_TIM_PeriodElapsedCallback+0x1ea>
				distance_setpoint -= 0.07;
 8001aac:	4b49      	ldr	r3, [pc, #292]	@ (8001bd4 <HAL_TIM_PeriodElapsedCallback+0x2ec>)
 8001aae:	681b      	ldr	r3, [r3, #0]
 8001ab0:	4618      	mov	r0, r3
 8001ab2:	f7fe fd0d 	bl	80004d0 <__aeabi_f2d>
 8001ab6:	a33e      	add	r3, pc, #248	@ (adr r3, 8001bb0 <HAL_TIM_PeriodElapsedCallback+0x2c8>)
 8001ab8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001abc:	f7fe fba8 	bl	8000210 <__aeabi_dsub>
 8001ac0:	4602      	mov	r2, r0
 8001ac2:	460b      	mov	r3, r1
 8001ac4:	4610      	mov	r0, r2
 8001ac6:	4619      	mov	r1, r3
 8001ac8:	f7ff f852 	bl	8000b70 <__aeabi_d2f>
 8001acc:	4603      	mov	r3, r0
 8001ace:	4a41      	ldr	r2, [pc, #260]	@ (8001bd4 <HAL_TIM_PeriodElapsedCallback+0x2ec>)
 8001ad0:	6013      	str	r3, [r2, #0]
			}
		}
		if (pwm > 0) {
 8001ad2:	4b44      	ldr	r3, [pc, #272]	@ (8001be4 <HAL_TIM_PeriodElapsedCallback+0x2fc>)
 8001ad4:	edd3 7a00 	vldr	s15, [r3]
 8001ad8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001adc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001ae0:	dd1c      	ble.n	8001b1c <HAL_TIM_PeriodElapsedCallback+0x234>
			if (rpm > 700) {
 8001ae2:	4b3f      	ldr	r3, [pc, #252]	@ (8001be0 <HAL_TIM_PeriodElapsedCallback+0x2f8>)
 8001ae4:	edd3 7a00 	vldr	s15, [r3]
 8001ae8:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8001be8 <HAL_TIM_PeriodElapsedCallback+0x300>
 8001aec:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001af0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001af4:	dd12      	ble.n	8001b1c <HAL_TIM_PeriodElapsedCallback+0x234>
				distance_setpoint += 0.07;
 8001af6:	4b37      	ldr	r3, [pc, #220]	@ (8001bd4 <HAL_TIM_PeriodElapsedCallback+0x2ec>)
 8001af8:	681b      	ldr	r3, [r3, #0]
 8001afa:	4618      	mov	r0, r3
 8001afc:	f7fe fce8 	bl	80004d0 <__aeabi_f2d>
 8001b00:	a32b      	add	r3, pc, #172	@ (adr r3, 8001bb0 <HAL_TIM_PeriodElapsedCallback+0x2c8>)
 8001b02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b06:	f7fe fb85 	bl	8000214 <__adddf3>
 8001b0a:	4602      	mov	r2, r0
 8001b0c:	460b      	mov	r3, r1
 8001b0e:	4610      	mov	r0, r2
 8001b10:	4619      	mov	r1, r3
 8001b12:	f7ff f82d 	bl	8000b70 <__aeabi_d2f>
 8001b16:	4603      	mov	r3, r0
 8001b18:	4a2e      	ldr	r2, [pc, #184]	@ (8001bd4 <HAL_TIM_PeriodElapsedCallback+0x2ec>)
 8001b1a:	6013      	str	r3, [r2, #0]
			}
		}
		pid_set_setpoint(&pid, distance_setpoint);
 8001b1c:	4b2d      	ldr	r3, [pc, #180]	@ (8001bd4 <HAL_TIM_PeriodElapsedCallback+0x2ec>)
 8001b1e:	edd3 7a00 	vldr	s15, [r3]
 8001b22:	eeb0 0a67 	vmov.f32	s0, s15
 8001b26:	4831      	ldr	r0, [pc, #196]	@ (8001bec <HAL_TIM_PeriodElapsedCallback+0x304>)
 8001b28:	f000 fc08 	bl	800233c <pid_set_setpoint>
		if (pitch < -30 || pitch > 30) {
 8001b2c:	4b27      	ldr	r3, [pc, #156]	@ (8001bcc <HAL_TIM_PeriodElapsedCallback+0x2e4>)
 8001b2e:	edd3 7a00 	vldr	s15, [r3]
 8001b32:	eebb 7a0e 	vmov.f32	s14, #190	@ 0xc1f00000 -30.0
 8001b36:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001b3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b3e:	d409      	bmi.n	8001b54 <HAL_TIM_PeriodElapsedCallback+0x26c>
 8001b40:	4b22      	ldr	r3, [pc, #136]	@ (8001bcc <HAL_TIM_PeriodElapsedCallback+0x2e4>)
 8001b42:	edd3 7a00 	vldr	s15, [r3]
 8001b46:	eeb3 7a0e 	vmov.f32	s14, #62	@ 0x41f00000  30.0
 8001b4a:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001b4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b52:	dd0c      	ble.n	8001b6e <HAL_TIM_PeriodElapsedCallback+0x286>
			pwm = 0;
 8001b54:	4b23      	ldr	r3, [pc, #140]	@ (8001be4 <HAL_TIM_PeriodElapsedCallback+0x2fc>)
 8001b56:	f04f 0200 	mov.w	r2, #0
 8001b5a:	601a      	str	r2, [r3, #0]
			nidec_h24_Move(pwm, 0);
 8001b5c:	4b21      	ldr	r3, [pc, #132]	@ (8001be4 <HAL_TIM_PeriodElapsedCallback+0x2fc>)
 8001b5e:	edd3 7a00 	vldr	s15, [r3]
 8001b62:	2000      	movs	r0, #0
 8001b64:	eeb0 0a67 	vmov.f32	s0, s15
 8001b68:	f000 fb60 	bl	800222c <nidec_h24_Move>
		} else {
			pwm = pid_compute_control_action(&pid, distance);
			nidec_h24_Move(pwm, 1);
		}
	}
}
 8001b6c:	e014      	b.n	8001b98 <HAL_TIM_PeriodElapsedCallback+0x2b0>
			pwm = pid_compute_control_action(&pid, distance);
 8001b6e:	4b18      	ldr	r3, [pc, #96]	@ (8001bd0 <HAL_TIM_PeriodElapsedCallback+0x2e8>)
 8001b70:	edd3 7a00 	vldr	s15, [r3]
 8001b74:	eeb0 0a67 	vmov.f32	s0, s15
 8001b78:	481c      	ldr	r0, [pc, #112]	@ (8001bec <HAL_TIM_PeriodElapsedCallback+0x304>)
 8001b7a:	f000 fbef 	bl	800235c <pid_compute_control_action>
 8001b7e:	eef0 7a40 	vmov.f32	s15, s0
 8001b82:	4b18      	ldr	r3, [pc, #96]	@ (8001be4 <HAL_TIM_PeriodElapsedCallback+0x2fc>)
 8001b84:	edc3 7a00 	vstr	s15, [r3]
			nidec_h24_Move(pwm, 1);
 8001b88:	4b16      	ldr	r3, [pc, #88]	@ (8001be4 <HAL_TIM_PeriodElapsedCallback+0x2fc>)
 8001b8a:	edd3 7a00 	vldr	s15, [r3]
 8001b8e:	2001      	movs	r0, #1
 8001b90:	eeb0 0a67 	vmov.f32	s0, s15
 8001b94:	f000 fb4a 	bl	800222c <nidec_h24_Move>
}
 8001b98:	bf00      	nop
 8001b9a:	3720      	adds	r7, #32
 8001b9c:	46bd      	mov	sp, r7
 8001b9e:	bdb0      	pop	{r4, r5, r7, pc}
 8001ba0:	54442d18 	.word	0x54442d18
 8001ba4:	400921fb 	.word	0x400921fb
 8001ba8:	47ae147b 	.word	0x47ae147b
 8001bac:	3f947ae1 	.word	0x3f947ae1
 8001bb0:	1eb851ec 	.word	0x1eb851ec
 8001bb4:	3fb1eb85 	.word	0x3fb1eb85
 8001bb8:	20000144 	.word	0x20000144
 8001bbc:	40668000 	.word	0x40668000
 8001bc0:	20000140 	.word	0x20000140
 8001bc4:	200001b0 	.word	0x200001b0
 8001bc8:	200000f0 	.word	0x200000f0
 8001bcc:	20000130 	.word	0x20000130
 8001bd0:	20000134 	.word	0x20000134
 8001bd4:	2000013c 	.word	0x2000013c
 8001bd8:	20000138 	.word	0x20000138
 8001bdc:	20000118 	.word	0x20000118
 8001be0:	2000012c 	.word	0x2000012c
 8001be4:	20000198 	.word	0x20000198
 8001be8:	442f0000 	.word	0x442f0000
 8001bec:	20000160 	.word	0x20000160

08001bf0 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8001bf0:	b480      	push	{r7}
 8001bf2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001bf4:	b672      	cpsid	i
}
 8001bf6:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8001bf8:	bf00      	nop
 8001bfa:	e7fd      	b.n	8001bf8 <Error_Handler+0x8>

08001bfc <mpu6050_init>:
float gx_bias = 0;
float gy_bias = 0;
float gz_bias = 0;

/*mpu6050 initialization*/
HAL_StatusTypeDef mpu6050_init(){
 8001bfc:	b580      	push	{r7, lr}
 8001bfe:	b086      	sub	sp, #24
 8001c00:	af04      	add	r7, sp, #16
	HAL_StatusTypeDef status = HAL_I2C_IsDeviceReady(&hi2c1, IMU_ADDR, 1, 100);
 8001c02:	2364      	movs	r3, #100	@ 0x64
 8001c04:	2201      	movs	r2, #1
 8001c06:	21d0      	movs	r1, #208	@ 0xd0
 8001c08:	4824      	ldr	r0, [pc, #144]	@ (8001c9c <mpu6050_init+0xa0>)
 8001c0a:	f001 ff2b 	bl	8003a64 <HAL_I2C_IsDeviceReady>
 8001c0e:	4603      	mov	r3, r0
 8001c10:	71fb      	strb	r3, [r7, #7]
		if (status == HAL_OK) {
 8001c12:	79fb      	ldrb	r3, [r7, #7]
 8001c14:	2b00      	cmp	r3, #0
 8001c16:	d13b      	bne.n	8001c90 <mpu6050_init+0x94>
			uint8_t data;

			/* power management register 0X6B must be all 0s to wake the sensor up */
			data = 0;
 8001c18:	2300      	movs	r3, #0
 8001c1a:	71bb      	strb	r3, [r7, #6]
			HAL_I2C_Mem_Write(&hi2c1, IMU_ADDR, PWR_MGMT_1_REG, 1, &data, 1, 100);
 8001c1c:	2364      	movs	r3, #100	@ 0x64
 8001c1e:	9302      	str	r3, [sp, #8]
 8001c20:	2301      	movs	r3, #1
 8001c22:	9301      	str	r3, [sp, #4]
 8001c24:	1dbb      	adds	r3, r7, #6
 8001c26:	9300      	str	r3, [sp, #0]
 8001c28:	2301      	movs	r3, #1
 8001c2a:	226b      	movs	r2, #107	@ 0x6b
 8001c2c:	21d0      	movs	r1, #208	@ 0xd0
 8001c2e:	481b      	ldr	r0, [pc, #108]	@ (8001c9c <mpu6050_init+0xa0>)
 8001c30:	f001 fbec 	bl	800340c <HAL_I2C_Mem_Write>

			/* Set DATA RATE of 1KHz by writing SMPLRT_DIV register */
			data = 0x07;
 8001c34:	2307      	movs	r3, #7
 8001c36:	71bb      	strb	r3, [r7, #6]
			HAL_I2C_Mem_Write(&hi2c1, IMU_ADDR, SMPLRT_DIV_REG, 1, &data, 1, 100);
 8001c38:	2364      	movs	r3, #100	@ 0x64
 8001c3a:	9302      	str	r3, [sp, #8]
 8001c3c:	2301      	movs	r3, #1
 8001c3e:	9301      	str	r3, [sp, #4]
 8001c40:	1dbb      	adds	r3, r7, #6
 8001c42:	9300      	str	r3, [sp, #0]
 8001c44:	2301      	movs	r3, #1
 8001c46:	2219      	movs	r2, #25
 8001c48:	21d0      	movs	r1, #208	@ 0xd0
 8001c4a:	4814      	ldr	r0, [pc, #80]	@ (8001c9c <mpu6050_init+0xa0>)
 8001c4c:	f001 fbde 	bl	800340c <HAL_I2C_Mem_Write>

			/*  Set accelerometer configuration in ACCEL_CONFIG Register */
			/* XA_ST=0,YA_ST=0,ZA_ST=0, FS_SEL=0 ->  2g */
			data = FS_ACC_2G;
 8001c50:	2300      	movs	r3, #0
 8001c52:	71bb      	strb	r3, [r7, #6]
			HAL_I2C_Mem_Write(&hi2c1, IMU_ADDR, ACCEL_CONFIG_REG, 1, &data, 1, 100);
 8001c54:	2364      	movs	r3, #100	@ 0x64
 8001c56:	9302      	str	r3, [sp, #8]
 8001c58:	2301      	movs	r3, #1
 8001c5a:	9301      	str	r3, [sp, #4]
 8001c5c:	1dbb      	adds	r3, r7, #6
 8001c5e:	9300      	str	r3, [sp, #0]
 8001c60:	2301      	movs	r3, #1
 8001c62:	221c      	movs	r2, #28
 8001c64:	21d0      	movs	r1, #208	@ 0xd0
 8001c66:	480d      	ldr	r0, [pc, #52]	@ (8001c9c <mpu6050_init+0xa0>)
 8001c68:	f001 fbd0 	bl	800340c <HAL_I2C_Mem_Write>

			/* Set Gyroscope configuration in GYRO_CONFIG Register */
			/* XG_ST=0,YG_ST=0,ZG_ST=0, FS_SEL=0 ->  250 deg/s */
			data = FS_GYRO_500;
 8001c6c:	2308      	movs	r3, #8
 8001c6e:	71bb      	strb	r3, [r7, #6]
			HAL_I2C_Mem_Write(&hi2c1, IMU_ADDR, GYRO_CONFIG_REG, 1, &data, 1, 100);
 8001c70:	2364      	movs	r3, #100	@ 0x64
 8001c72:	9302      	str	r3, [sp, #8]
 8001c74:	2301      	movs	r3, #1
 8001c76:	9301      	str	r3, [sp, #4]
 8001c78:	1dbb      	adds	r3, r7, #6
 8001c7a:	9300      	str	r3, [sp, #0]
 8001c7c:	2301      	movs	r3, #1
 8001c7e:	221b      	movs	r2, #27
 8001c80:	21d0      	movs	r1, #208	@ 0xd0
 8001c82:	4806      	ldr	r0, [pc, #24]	@ (8001c9c <mpu6050_init+0xa0>)
 8001c84:	f001 fbc2 	bl	800340c <HAL_I2C_Mem_Write>

			calculate_gyroscope_bias();
 8001c88:	f000 f80a 	bl	8001ca0 <calculate_gyroscope_bias>
			calculate_accelerometer_bias();
 8001c8c:	f000 f8c4 	bl	8001e18 <calculate_accelerometer_bias>
		}
		return status;
 8001c90:	79fb      	ldrb	r3, [r7, #7]
}
 8001c92:	4618      	mov	r0, r3
 8001c94:	3708      	adds	r7, #8
 8001c96:	46bd      	mov	sp, r7
 8001c98:	bd80      	pop	{r7, pc}
 8001c9a:	bf00      	nop
 8001c9c:	2000009c 	.word	0x2000009c

08001ca0 <calculate_gyroscope_bias>:

/*Gyroscope bias calculate*/
void calculate_gyroscope_bias() {
 8001ca0:	b5b0      	push	{r4, r5, r7, lr}
 8001ca2:	b08e      	sub	sp, #56	@ 0x38
 8001ca4:	af04      	add	r7, sp, #16
	// Number of samples to average
    int num_samples = 2000;
 8001ca6:	f44f 63fa 	mov.w	r3, #2000	@ 0x7d0
 8001caa:	617b      	str	r3, [r7, #20]
    long gx_sum = 0;
 8001cac:	2300      	movs	r3, #0
 8001cae:	627b      	str	r3, [r7, #36]	@ 0x24
    long gy_sum = 0;
 8001cb0:	2300      	movs	r3, #0
 8001cb2:	623b      	str	r3, [r7, #32]
    long gz_sum = 0;
 8001cb4:	2300      	movs	r3, #0
 8001cb6:	61fb      	str	r3, [r7, #28]

    for (int i = 0; i < num_samples; i++) {
 8001cb8:	2300      	movs	r3, #0
 8001cba:	61bb      	str	r3, [r7, #24]
 8001cbc:	e077      	b.n	8001dae <calculate_gyroscope_bias+0x10e>
    	uint8_t buffer[14];
    	HAL_I2C_Mem_Read(&hi2c1, IMU_ADDR, ACCEL_XOUT_H_REG, I2C_MEMADD_SIZE_8BIT, buffer, 14, 100);
 8001cbe:	2364      	movs	r3, #100	@ 0x64
 8001cc0:	9302      	str	r3, [sp, #8]
 8001cc2:	230e      	movs	r3, #14
 8001cc4:	9301      	str	r3, [sp, #4]
 8001cc6:	1d3b      	adds	r3, r7, #4
 8001cc8:	9300      	str	r3, [sp, #0]
 8001cca:	2301      	movs	r3, #1
 8001ccc:	223b      	movs	r2, #59	@ 0x3b
 8001cce:	21d0      	movs	r1, #208	@ 0xd0
 8001cd0:	484d      	ldr	r0, [pc, #308]	@ (8001e08 <calculate_gyroscope_bias+0x168>)
 8001cd2:	f001 fc95 	bl	8003600 <HAL_I2C_Mem_Read>
    	gx_sum += (int16_t) (buffer[8] << 8 | buffer[9]) / GYRO_SCALE;
 8001cd6:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8001cd8:	f7fe fbe8 	bl	80004ac <__aeabi_i2d>
 8001cdc:	4604      	mov	r4, r0
 8001cde:	460d      	mov	r5, r1
 8001ce0:	7b3b      	ldrb	r3, [r7, #12]
 8001ce2:	021b      	lsls	r3, r3, #8
 8001ce4:	b21a      	sxth	r2, r3
 8001ce6:	7b7b      	ldrb	r3, [r7, #13]
 8001ce8:	b21b      	sxth	r3, r3
 8001cea:	4313      	orrs	r3, r2
 8001cec:	b21b      	sxth	r3, r3
 8001cee:	4618      	mov	r0, r3
 8001cf0:	f7fe fbdc 	bl	80004ac <__aeabi_i2d>
 8001cf4:	a342      	add	r3, pc, #264	@ (adr r3, 8001e00 <calculate_gyroscope_bias+0x160>)
 8001cf6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cfa:	f7fe fd6b 	bl	80007d4 <__aeabi_ddiv>
 8001cfe:	4602      	mov	r2, r0
 8001d00:	460b      	mov	r3, r1
 8001d02:	4620      	mov	r0, r4
 8001d04:	4629      	mov	r1, r5
 8001d06:	f7fe fa85 	bl	8000214 <__adddf3>
 8001d0a:	4602      	mov	r2, r0
 8001d0c:	460b      	mov	r3, r1
 8001d0e:	4610      	mov	r0, r2
 8001d10:	4619      	mov	r1, r3
 8001d12:	f7fe fee5 	bl	8000ae0 <__aeabi_d2iz>
 8001d16:	4603      	mov	r3, r0
 8001d18:	627b      	str	r3, [r7, #36]	@ 0x24
    	gy_sum += (int16_t) (buffer[10] << 8 | buffer[11]) / GYRO_SCALE;
 8001d1a:	6a38      	ldr	r0, [r7, #32]
 8001d1c:	f7fe fbc6 	bl	80004ac <__aeabi_i2d>
 8001d20:	4604      	mov	r4, r0
 8001d22:	460d      	mov	r5, r1
 8001d24:	7bbb      	ldrb	r3, [r7, #14]
 8001d26:	021b      	lsls	r3, r3, #8
 8001d28:	b21a      	sxth	r2, r3
 8001d2a:	7bfb      	ldrb	r3, [r7, #15]
 8001d2c:	b21b      	sxth	r3, r3
 8001d2e:	4313      	orrs	r3, r2
 8001d30:	b21b      	sxth	r3, r3
 8001d32:	4618      	mov	r0, r3
 8001d34:	f7fe fbba 	bl	80004ac <__aeabi_i2d>
 8001d38:	a331      	add	r3, pc, #196	@ (adr r3, 8001e00 <calculate_gyroscope_bias+0x160>)
 8001d3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d3e:	f7fe fd49 	bl	80007d4 <__aeabi_ddiv>
 8001d42:	4602      	mov	r2, r0
 8001d44:	460b      	mov	r3, r1
 8001d46:	4620      	mov	r0, r4
 8001d48:	4629      	mov	r1, r5
 8001d4a:	f7fe fa63 	bl	8000214 <__adddf3>
 8001d4e:	4602      	mov	r2, r0
 8001d50:	460b      	mov	r3, r1
 8001d52:	4610      	mov	r0, r2
 8001d54:	4619      	mov	r1, r3
 8001d56:	f7fe fec3 	bl	8000ae0 <__aeabi_d2iz>
 8001d5a:	4603      	mov	r3, r0
 8001d5c:	623b      	str	r3, [r7, #32]
    	gz_sum += (int16_t) (buffer[12] << 8 | buffer[13]) / GYRO_SCALE;
 8001d5e:	69f8      	ldr	r0, [r7, #28]
 8001d60:	f7fe fba4 	bl	80004ac <__aeabi_i2d>
 8001d64:	4604      	mov	r4, r0
 8001d66:	460d      	mov	r5, r1
 8001d68:	7c3b      	ldrb	r3, [r7, #16]
 8001d6a:	021b      	lsls	r3, r3, #8
 8001d6c:	b21a      	sxth	r2, r3
 8001d6e:	7c7b      	ldrb	r3, [r7, #17]
 8001d70:	b21b      	sxth	r3, r3
 8001d72:	4313      	orrs	r3, r2
 8001d74:	b21b      	sxth	r3, r3
 8001d76:	4618      	mov	r0, r3
 8001d78:	f7fe fb98 	bl	80004ac <__aeabi_i2d>
 8001d7c:	a320      	add	r3, pc, #128	@ (adr r3, 8001e00 <calculate_gyroscope_bias+0x160>)
 8001d7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d82:	f7fe fd27 	bl	80007d4 <__aeabi_ddiv>
 8001d86:	4602      	mov	r2, r0
 8001d88:	460b      	mov	r3, r1
 8001d8a:	4620      	mov	r0, r4
 8001d8c:	4629      	mov	r1, r5
 8001d8e:	f7fe fa41 	bl	8000214 <__adddf3>
 8001d92:	4602      	mov	r2, r0
 8001d94:	460b      	mov	r3, r1
 8001d96:	4610      	mov	r0, r2
 8001d98:	4619      	mov	r1, r3
 8001d9a:	f7fe fea1 	bl	8000ae0 <__aeabi_d2iz>
 8001d9e:	4603      	mov	r3, r0
 8001da0:	61fb      	str	r3, [r7, #28]
    	HAL_Delay(1);
 8001da2:	2001      	movs	r0, #1
 8001da4:	f000 fef2 	bl	8002b8c <HAL_Delay>
    for (int i = 0; i < num_samples; i++) {
 8001da8:	69bb      	ldr	r3, [r7, #24]
 8001daa:	3301      	adds	r3, #1
 8001dac:	61bb      	str	r3, [r7, #24]
 8001dae:	69ba      	ldr	r2, [r7, #24]
 8001db0:	697b      	ldr	r3, [r7, #20]
 8001db2:	429a      	cmp	r2, r3
 8001db4:	db83      	blt.n	8001cbe <calculate_gyroscope_bias+0x1e>
    }

    gx_bias = gx_sum / num_samples;
 8001db6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001db8:	697b      	ldr	r3, [r7, #20]
 8001dba:	fb92 f3f3 	sdiv	r3, r2, r3
 8001dbe:	ee07 3a90 	vmov	s15, r3
 8001dc2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001dc6:	4b11      	ldr	r3, [pc, #68]	@ (8001e0c <calculate_gyroscope_bias+0x16c>)
 8001dc8:	edc3 7a00 	vstr	s15, [r3]
    gy_bias = gy_sum / num_samples;
 8001dcc:	6a3a      	ldr	r2, [r7, #32]
 8001dce:	697b      	ldr	r3, [r7, #20]
 8001dd0:	fb92 f3f3 	sdiv	r3, r2, r3
 8001dd4:	ee07 3a90 	vmov	s15, r3
 8001dd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001ddc:	4b0c      	ldr	r3, [pc, #48]	@ (8001e10 <calculate_gyroscope_bias+0x170>)
 8001dde:	edc3 7a00 	vstr	s15, [r3]
    gz_bias = gz_sum / num_samples;
 8001de2:	69fa      	ldr	r2, [r7, #28]
 8001de4:	697b      	ldr	r3, [r7, #20]
 8001de6:	fb92 f3f3 	sdiv	r3, r2, r3
 8001dea:	ee07 3a90 	vmov	s15, r3
 8001dee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001df2:	4b08      	ldr	r3, [pc, #32]	@ (8001e14 <calculate_gyroscope_bias+0x174>)
 8001df4:	edc3 7a00 	vstr	s15, [r3]
}
 8001df8:	bf00      	nop
 8001dfa:	3728      	adds	r7, #40	@ 0x28
 8001dfc:	46bd      	mov	sp, r7
 8001dfe:	bdb0      	pop	{r4, r5, r7, pc}
 8001e00:	00000000 	.word	0x00000000
 8001e04:	40506000 	.word	0x40506000
 8001e08:	2000009c 	.word	0x2000009c
 8001e0c:	200001ac 	.word	0x200001ac
 8001e10:	200001b0 	.word	0x200001b0
 8001e14:	200001b4 	.word	0x200001b4

08001e18 <calculate_accelerometer_bias>:

/*Accelerometer bias calculate*/
void calculate_accelerometer_bias() {
 8001e18:	b5b0      	push	{r4, r5, r7, lr}
 8001e1a:	b08e      	sub	sp, #56	@ 0x38
 8001e1c:	af04      	add	r7, sp, #16
	// Number of samples to average
    int num_samples = 2000;
 8001e1e:	f44f 63fa 	mov.w	r3, #2000	@ 0x7d0
 8001e22:	617b      	str	r3, [r7, #20]
    long ax_sum = 0;
 8001e24:	2300      	movs	r3, #0
 8001e26:	627b      	str	r3, [r7, #36]	@ 0x24
    long ay_sum = 0;
 8001e28:	2300      	movs	r3, #0
 8001e2a:	623b      	str	r3, [r7, #32]
    long az_sum = 0;
 8001e2c:	2300      	movs	r3, #0
 8001e2e:	61fb      	str	r3, [r7, #28]

    for (int i = 0; i < num_samples; i++) {
 8001e30:	2300      	movs	r3, #0
 8001e32:	61bb      	str	r3, [r7, #24]
 8001e34:	e077      	b.n	8001f26 <calculate_accelerometer_bias+0x10e>
    	uint8_t buffer[14];
    	HAL_I2C_Mem_Read(&hi2c1, IMU_ADDR, ACCEL_XOUT_H_REG, I2C_MEMADD_SIZE_8BIT, buffer, 14, 100);
 8001e36:	2364      	movs	r3, #100	@ 0x64
 8001e38:	9302      	str	r3, [sp, #8]
 8001e3a:	230e      	movs	r3, #14
 8001e3c:	9301      	str	r3, [sp, #4]
 8001e3e:	1d3b      	adds	r3, r7, #4
 8001e40:	9300      	str	r3, [sp, #0]
 8001e42:	2301      	movs	r3, #1
 8001e44:	223b      	movs	r2, #59	@ 0x3b
 8001e46:	21d0      	movs	r1, #208	@ 0xd0
 8001e48:	484b      	ldr	r0, [pc, #300]	@ (8001f78 <calculate_accelerometer_bias+0x160>)
 8001e4a:	f001 fbd9 	bl	8003600 <HAL_I2C_Mem_Read>
    	ax_sum += (int16_t) (buffer[0] << 8 | buffer[1]) / ACC_SCALE;
 8001e4e:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8001e50:	f7fe fb2c 	bl	80004ac <__aeabi_i2d>
 8001e54:	4604      	mov	r4, r0
 8001e56:	460d      	mov	r5, r1
 8001e58:	793b      	ldrb	r3, [r7, #4]
 8001e5a:	021b      	lsls	r3, r3, #8
 8001e5c:	b21a      	sxth	r2, r3
 8001e5e:	797b      	ldrb	r3, [r7, #5]
 8001e60:	b21b      	sxth	r3, r3
 8001e62:	4313      	orrs	r3, r2
 8001e64:	b21b      	sxth	r3, r3
 8001e66:	4618      	mov	r0, r3
 8001e68:	f7fe fb20 	bl	80004ac <__aeabi_i2d>
 8001e6c:	f04f 0200 	mov.w	r2, #0
 8001e70:	4b42      	ldr	r3, [pc, #264]	@ (8001f7c <calculate_accelerometer_bias+0x164>)
 8001e72:	f7fe fcaf 	bl	80007d4 <__aeabi_ddiv>
 8001e76:	4602      	mov	r2, r0
 8001e78:	460b      	mov	r3, r1
 8001e7a:	4620      	mov	r0, r4
 8001e7c:	4629      	mov	r1, r5
 8001e7e:	f7fe f9c9 	bl	8000214 <__adddf3>
 8001e82:	4602      	mov	r2, r0
 8001e84:	460b      	mov	r3, r1
 8001e86:	4610      	mov	r0, r2
 8001e88:	4619      	mov	r1, r3
 8001e8a:	f7fe fe29 	bl	8000ae0 <__aeabi_d2iz>
 8001e8e:	4603      	mov	r3, r0
 8001e90:	627b      	str	r3, [r7, #36]	@ 0x24
    	ay_sum += (int16_t) (buffer[2] << 8 | buffer[3]) / ACC_SCALE;
 8001e92:	6a38      	ldr	r0, [r7, #32]
 8001e94:	f7fe fb0a 	bl	80004ac <__aeabi_i2d>
 8001e98:	4604      	mov	r4, r0
 8001e9a:	460d      	mov	r5, r1
 8001e9c:	79bb      	ldrb	r3, [r7, #6]
 8001e9e:	021b      	lsls	r3, r3, #8
 8001ea0:	b21a      	sxth	r2, r3
 8001ea2:	79fb      	ldrb	r3, [r7, #7]
 8001ea4:	b21b      	sxth	r3, r3
 8001ea6:	4313      	orrs	r3, r2
 8001ea8:	b21b      	sxth	r3, r3
 8001eaa:	4618      	mov	r0, r3
 8001eac:	f7fe fafe 	bl	80004ac <__aeabi_i2d>
 8001eb0:	f04f 0200 	mov.w	r2, #0
 8001eb4:	4b31      	ldr	r3, [pc, #196]	@ (8001f7c <calculate_accelerometer_bias+0x164>)
 8001eb6:	f7fe fc8d 	bl	80007d4 <__aeabi_ddiv>
 8001eba:	4602      	mov	r2, r0
 8001ebc:	460b      	mov	r3, r1
 8001ebe:	4620      	mov	r0, r4
 8001ec0:	4629      	mov	r1, r5
 8001ec2:	f7fe f9a7 	bl	8000214 <__adddf3>
 8001ec6:	4602      	mov	r2, r0
 8001ec8:	460b      	mov	r3, r1
 8001eca:	4610      	mov	r0, r2
 8001ecc:	4619      	mov	r1, r3
 8001ece:	f7fe fe07 	bl	8000ae0 <__aeabi_d2iz>
 8001ed2:	4603      	mov	r3, r0
 8001ed4:	623b      	str	r3, [r7, #32]
    	az_sum += (int16_t) (buffer[4] << 8 | buffer[5]) / ACC_SCALE;
 8001ed6:	69f8      	ldr	r0, [r7, #28]
 8001ed8:	f7fe fae8 	bl	80004ac <__aeabi_i2d>
 8001edc:	4604      	mov	r4, r0
 8001ede:	460d      	mov	r5, r1
 8001ee0:	7a3b      	ldrb	r3, [r7, #8]
 8001ee2:	021b      	lsls	r3, r3, #8
 8001ee4:	b21a      	sxth	r2, r3
 8001ee6:	7a7b      	ldrb	r3, [r7, #9]
 8001ee8:	b21b      	sxth	r3, r3
 8001eea:	4313      	orrs	r3, r2
 8001eec:	b21b      	sxth	r3, r3
 8001eee:	4618      	mov	r0, r3
 8001ef0:	f7fe fadc 	bl	80004ac <__aeabi_i2d>
 8001ef4:	f04f 0200 	mov.w	r2, #0
 8001ef8:	4b20      	ldr	r3, [pc, #128]	@ (8001f7c <calculate_accelerometer_bias+0x164>)
 8001efa:	f7fe fc6b 	bl	80007d4 <__aeabi_ddiv>
 8001efe:	4602      	mov	r2, r0
 8001f00:	460b      	mov	r3, r1
 8001f02:	4620      	mov	r0, r4
 8001f04:	4629      	mov	r1, r5
 8001f06:	f7fe f985 	bl	8000214 <__adddf3>
 8001f0a:	4602      	mov	r2, r0
 8001f0c:	460b      	mov	r3, r1
 8001f0e:	4610      	mov	r0, r2
 8001f10:	4619      	mov	r1, r3
 8001f12:	f7fe fde5 	bl	8000ae0 <__aeabi_d2iz>
 8001f16:	4603      	mov	r3, r0
 8001f18:	61fb      	str	r3, [r7, #28]
    	HAL_Delay(1);
 8001f1a:	2001      	movs	r0, #1
 8001f1c:	f000 fe36 	bl	8002b8c <HAL_Delay>
    for (int i = 0; i < num_samples; i++) {
 8001f20:	69bb      	ldr	r3, [r7, #24]
 8001f22:	3301      	adds	r3, #1
 8001f24:	61bb      	str	r3, [r7, #24]
 8001f26:	69ba      	ldr	r2, [r7, #24]
 8001f28:	697b      	ldr	r3, [r7, #20]
 8001f2a:	429a      	cmp	r2, r3
 8001f2c:	db83      	blt.n	8001e36 <calculate_accelerometer_bias+0x1e>
    }

    ax_bias = ax_sum / num_samples;
 8001f2e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001f30:	697b      	ldr	r3, [r7, #20]
 8001f32:	fb92 f3f3 	sdiv	r3, r2, r3
 8001f36:	ee07 3a90 	vmov	s15, r3
 8001f3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001f3e:	4b10      	ldr	r3, [pc, #64]	@ (8001f80 <calculate_accelerometer_bias+0x168>)
 8001f40:	edc3 7a00 	vstr	s15, [r3]
    ay_bias = ay_sum / num_samples;
 8001f44:	6a3a      	ldr	r2, [r7, #32]
 8001f46:	697b      	ldr	r3, [r7, #20]
 8001f48:	fb92 f3f3 	sdiv	r3, r2, r3
 8001f4c:	ee07 3a90 	vmov	s15, r3
 8001f50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001f54:	4b0b      	ldr	r3, [pc, #44]	@ (8001f84 <calculate_accelerometer_bias+0x16c>)
 8001f56:	edc3 7a00 	vstr	s15, [r3]
    az_bias = az_sum / num_samples;
 8001f5a:	69fa      	ldr	r2, [r7, #28]
 8001f5c:	697b      	ldr	r3, [r7, #20]
 8001f5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8001f62:	ee07 3a90 	vmov	s15, r3
 8001f66:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001f6a:	4b07      	ldr	r3, [pc, #28]	@ (8001f88 <calculate_accelerometer_bias+0x170>)
 8001f6c:	edc3 7a00 	vstr	s15, [r3]
}
 8001f70:	bf00      	nop
 8001f72:	3728      	adds	r7, #40	@ 0x28
 8001f74:	46bd      	mov	sp, r7
 8001f76:	bdb0      	pop	{r4, r5, r7, pc}
 8001f78:	2000009c 	.word	0x2000009c
 8001f7c:	40d00000 	.word	0x40d00000
 8001f80:	200001a0 	.word	0x200001a0
 8001f84:	200001a4 	.word	0x200001a4
 8001f88:	200001a8 	.word	0x200001a8
 8001f8c:	00000000 	.word	0x00000000

08001f90 <mpu6050_data>:
	res.data = imu_data / GYRO_SCALE;
	return res;
}

/* All data reading MPU6050 */
mpu_data mpu6050_data() {
 8001f90:	b5b0      	push	{r4, r5, r7, lr}
 8001f92:	b090      	sub	sp, #64	@ 0x40
 8001f94:	af04      	add	r7, sp, #16
 8001f96:	6078      	str	r0, [r7, #4]
	uint8_t buffer[14];
	 HAL_I2C_Mem_Read(&hi2c1, IMU_ADDR, ACCEL_XOUT_H_REG, I2C_MEMADD_SIZE_8BIT, buffer, 14, 100);
 8001f98:	2364      	movs	r3, #100	@ 0x64
 8001f9a:	9302      	str	r3, [sp, #8]
 8001f9c:	230e      	movs	r3, #14
 8001f9e:	9301      	str	r3, [sp, #4]
 8001fa0:	f107 0320 	add.w	r3, r7, #32
 8001fa4:	9300      	str	r3, [sp, #0]
 8001fa6:	2301      	movs	r3, #1
 8001fa8:	223b      	movs	r2, #59	@ 0x3b
 8001faa:	21d0      	movs	r1, #208	@ 0xd0
 8001fac:	486c      	ldr	r0, [pc, #432]	@ (8002160 <mpu6050_data+0x1d0>)
 8001fae:	f001 fb27 	bl	8003600 <HAL_I2C_Mem_Read>
	 mpu_data data;
	 data.ax = (int16_t) (buffer[0] << 8 | buffer[1]) / ACC_SCALE - ax_bias;
 8001fb2:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001fb6:	021b      	lsls	r3, r3, #8
 8001fb8:	b21a      	sxth	r2, r3
 8001fba:	f897 3021 	ldrb.w	r3, [r7, #33]	@ 0x21
 8001fbe:	b21b      	sxth	r3, r3
 8001fc0:	4313      	orrs	r3, r2
 8001fc2:	b21b      	sxth	r3, r3
 8001fc4:	4618      	mov	r0, r3
 8001fc6:	f7fe fa71 	bl	80004ac <__aeabi_i2d>
 8001fca:	f04f 0200 	mov.w	r2, #0
 8001fce:	4b65      	ldr	r3, [pc, #404]	@ (8002164 <mpu6050_data+0x1d4>)
 8001fd0:	f7fe fc00 	bl	80007d4 <__aeabi_ddiv>
 8001fd4:	4602      	mov	r2, r0
 8001fd6:	460b      	mov	r3, r1
 8001fd8:	4614      	mov	r4, r2
 8001fda:	461d      	mov	r5, r3
 8001fdc:	4b62      	ldr	r3, [pc, #392]	@ (8002168 <mpu6050_data+0x1d8>)
 8001fde:	681b      	ldr	r3, [r3, #0]
 8001fe0:	4618      	mov	r0, r3
 8001fe2:	f7fe fa75 	bl	80004d0 <__aeabi_f2d>
 8001fe6:	4602      	mov	r2, r0
 8001fe8:	460b      	mov	r3, r1
 8001fea:	4620      	mov	r0, r4
 8001fec:	4629      	mov	r1, r5
 8001fee:	f7fe f90f 	bl	8000210 <__aeabi_dsub>
 8001ff2:	4602      	mov	r2, r0
 8001ff4:	460b      	mov	r3, r1
 8001ff6:	4610      	mov	r0, r2
 8001ff8:	4619      	mov	r1, r3
 8001ffa:	f7fe fdb9 	bl	8000b70 <__aeabi_d2f>
 8001ffe:	4603      	mov	r3, r0
 8002000:	60bb      	str	r3, [r7, #8]
	 data.ay = (int16_t) (buffer[2] << 8 | buffer[3]) / ACC_SCALE - ay_bias;
 8002002:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 8002006:	021b      	lsls	r3, r3, #8
 8002008:	b21a      	sxth	r2, r3
 800200a:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800200e:	b21b      	sxth	r3, r3
 8002010:	4313      	orrs	r3, r2
 8002012:	b21b      	sxth	r3, r3
 8002014:	4618      	mov	r0, r3
 8002016:	f7fe fa49 	bl	80004ac <__aeabi_i2d>
 800201a:	f04f 0200 	mov.w	r2, #0
 800201e:	4b51      	ldr	r3, [pc, #324]	@ (8002164 <mpu6050_data+0x1d4>)
 8002020:	f7fe fbd8 	bl	80007d4 <__aeabi_ddiv>
 8002024:	4602      	mov	r2, r0
 8002026:	460b      	mov	r3, r1
 8002028:	4614      	mov	r4, r2
 800202a:	461d      	mov	r5, r3
 800202c:	4b4f      	ldr	r3, [pc, #316]	@ (800216c <mpu6050_data+0x1dc>)
 800202e:	681b      	ldr	r3, [r3, #0]
 8002030:	4618      	mov	r0, r3
 8002032:	f7fe fa4d 	bl	80004d0 <__aeabi_f2d>
 8002036:	4602      	mov	r2, r0
 8002038:	460b      	mov	r3, r1
 800203a:	4620      	mov	r0, r4
 800203c:	4629      	mov	r1, r5
 800203e:	f7fe f8e7 	bl	8000210 <__aeabi_dsub>
 8002042:	4602      	mov	r2, r0
 8002044:	460b      	mov	r3, r1
 8002046:	4610      	mov	r0, r2
 8002048:	4619      	mov	r1, r3
 800204a:	f7fe fd91 	bl	8000b70 <__aeabi_d2f>
 800204e:	4603      	mov	r3, r0
 8002050:	60fb      	str	r3, [r7, #12]
	 data.az = (int16_t) (buffer[4] << 8 | buffer[5]) / ACC_SCALE - az_bias;
 8002052:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8002056:	021b      	lsls	r3, r3, #8
 8002058:	b21a      	sxth	r2, r3
 800205a:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 800205e:	b21b      	sxth	r3, r3
 8002060:	4313      	orrs	r3, r2
 8002062:	b21b      	sxth	r3, r3
 8002064:	4618      	mov	r0, r3
 8002066:	f7fe fa21 	bl	80004ac <__aeabi_i2d>
 800206a:	f04f 0200 	mov.w	r2, #0
 800206e:	4b3d      	ldr	r3, [pc, #244]	@ (8002164 <mpu6050_data+0x1d4>)
 8002070:	f7fe fbb0 	bl	80007d4 <__aeabi_ddiv>
 8002074:	4602      	mov	r2, r0
 8002076:	460b      	mov	r3, r1
 8002078:	4614      	mov	r4, r2
 800207a:	461d      	mov	r5, r3
 800207c:	4b3c      	ldr	r3, [pc, #240]	@ (8002170 <mpu6050_data+0x1e0>)
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	4618      	mov	r0, r3
 8002082:	f7fe fa25 	bl	80004d0 <__aeabi_f2d>
 8002086:	4602      	mov	r2, r0
 8002088:	460b      	mov	r3, r1
 800208a:	4620      	mov	r0, r4
 800208c:	4629      	mov	r1, r5
 800208e:	f7fe f8bf 	bl	8000210 <__aeabi_dsub>
 8002092:	4602      	mov	r2, r0
 8002094:	460b      	mov	r3, r1
 8002096:	4610      	mov	r0, r2
 8002098:	4619      	mov	r1, r3
 800209a:	f7fe fd69 	bl	8000b70 <__aeabi_d2f>
 800209e:	4603      	mov	r3, r0
 80020a0:	613b      	str	r3, [r7, #16]
	 data.gx = (int16_t) (buffer[8] << 8 | buffer[9]) / GYRO_SCALE;
 80020a2:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 80020a6:	021b      	lsls	r3, r3, #8
 80020a8:	b21a      	sxth	r2, r3
 80020aa:	f897 3029 	ldrb.w	r3, [r7, #41]	@ 0x29
 80020ae:	b21b      	sxth	r3, r3
 80020b0:	4313      	orrs	r3, r2
 80020b2:	b21b      	sxth	r3, r3
 80020b4:	4618      	mov	r0, r3
 80020b6:	f7fe f9f9 	bl	80004ac <__aeabi_i2d>
 80020ba:	a327      	add	r3, pc, #156	@ (adr r3, 8002158 <mpu6050_data+0x1c8>)
 80020bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020c0:	f7fe fb88 	bl	80007d4 <__aeabi_ddiv>
 80020c4:	4602      	mov	r2, r0
 80020c6:	460b      	mov	r3, r1
 80020c8:	4610      	mov	r0, r2
 80020ca:	4619      	mov	r1, r3
 80020cc:	f7fe fd50 	bl	8000b70 <__aeabi_d2f>
 80020d0:	4603      	mov	r3, r0
 80020d2:	617b      	str	r3, [r7, #20]
	 data.gy = (int16_t) (buffer[10] << 8 | buffer[11]) / GYRO_SCALE;
 80020d4:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 80020d8:	021b      	lsls	r3, r3, #8
 80020da:	b21a      	sxth	r2, r3
 80020dc:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 80020e0:	b21b      	sxth	r3, r3
 80020e2:	4313      	orrs	r3, r2
 80020e4:	b21b      	sxth	r3, r3
 80020e6:	4618      	mov	r0, r3
 80020e8:	f7fe f9e0 	bl	80004ac <__aeabi_i2d>
 80020ec:	a31a      	add	r3, pc, #104	@ (adr r3, 8002158 <mpu6050_data+0x1c8>)
 80020ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020f2:	f7fe fb6f 	bl	80007d4 <__aeabi_ddiv>
 80020f6:	4602      	mov	r2, r0
 80020f8:	460b      	mov	r3, r1
 80020fa:	4610      	mov	r0, r2
 80020fc:	4619      	mov	r1, r3
 80020fe:	f7fe fd37 	bl	8000b70 <__aeabi_d2f>
 8002102:	4603      	mov	r3, r0
 8002104:	61bb      	str	r3, [r7, #24]
	 data.gz = (int16_t) (buffer[12] << 8 | buffer[13]) / GYRO_SCALE;
 8002106:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 800210a:	021b      	lsls	r3, r3, #8
 800210c:	b21a      	sxth	r2, r3
 800210e:	f897 302d 	ldrb.w	r3, [r7, #45]	@ 0x2d
 8002112:	b21b      	sxth	r3, r3
 8002114:	4313      	orrs	r3, r2
 8002116:	b21b      	sxth	r3, r3
 8002118:	4618      	mov	r0, r3
 800211a:	f7fe f9c7 	bl	80004ac <__aeabi_i2d>
 800211e:	a30e      	add	r3, pc, #56	@ (adr r3, 8002158 <mpu6050_data+0x1c8>)
 8002120:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002124:	f7fe fb56 	bl	80007d4 <__aeabi_ddiv>
 8002128:	4602      	mov	r2, r0
 800212a:	460b      	mov	r3, r1
 800212c:	4610      	mov	r0, r2
 800212e:	4619      	mov	r1, r3
 8002130:	f7fe fd1e 	bl	8000b70 <__aeabi_d2f>
 8002134:	4603      	mov	r3, r0
 8002136:	61fb      	str	r3, [r7, #28]
	 return data;
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	461d      	mov	r5, r3
 800213c:	f107 0408 	add.w	r4, r7, #8
 8002140:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002142:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002144:	e894 0003 	ldmia.w	r4, {r0, r1}
 8002148:	e885 0003 	stmia.w	r5, {r0, r1}
}
 800214c:	6878      	ldr	r0, [r7, #4]
 800214e:	3730      	adds	r7, #48	@ 0x30
 8002150:	46bd      	mov	sp, r7
 8002152:	bdb0      	pop	{r4, r5, r7, pc}
 8002154:	f3af 8000 	nop.w
 8002158:	00000000 	.word	0x00000000
 800215c:	40506000 	.word	0x40506000
 8002160:	2000009c 	.word	0x2000009c
 8002164:	40d00000 	.word	0x40d00000
 8002168:	200001a0 	.word	0x200001a0
 800216c:	200001a4 	.word	0x200001a4
 8002170:	200001a8 	.word	0x200001a8

08002174 <nidec_h24_init>:

/*Default timer settings*/
extern  TIM_HandleTypeDef htim5;

/* To initialize the PWM and direction pins of the motor */
void nidec_h24_init(){
 8002174:	b580      	push	{r7, lr}
 8002176:	b086      	sub	sp, #24
 8002178:	af00      	add	r7, sp, #0

    GPIO_InitTypeDef GPIO_InitStruct = {0};  // Declare the GPIO init struct
 800217a:	1d3b      	adds	r3, r7, #4
 800217c:	2200      	movs	r2, #0
 800217e:	601a      	str	r2, [r3, #0]
 8002180:	605a      	str	r2, [r3, #4]
 8002182:	609a      	str	r2, [r3, #8]
 8002184:	60da      	str	r2, [r3, #12]
 8002186:	611a      	str	r2, [r3, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002188:	2300      	movs	r3, #0
 800218a:	603b      	str	r3, [r7, #0]
 800218c:	4b22      	ldr	r3, [pc, #136]	@ (8002218 <nidec_h24_init+0xa4>)
 800218e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002190:	4a21      	ldr	r2, [pc, #132]	@ (8002218 <nidec_h24_init+0xa4>)
 8002192:	f043 0302 	orr.w	r3, r3, #2
 8002196:	6313      	str	r3, [r2, #48]	@ 0x30
 8002198:	4b1f      	ldr	r3, [pc, #124]	@ (8002218 <nidec_h24_init+0xa4>)
 800219a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800219c:	f003 0302 	and.w	r3, r3, #2
 80021a0:	603b      	str	r3, [r7, #0]
 80021a2:	683b      	ldr	r3, [r7, #0]

	/*Configure GPIO pin : Direction_Pin */
	GPIO_InitStruct.Pin = DIRECTION_PIN;
 80021a4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80021a8:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80021aa:	2301      	movs	r3, #1
 80021ac:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80021ae:	2302      	movs	r3, #2
 80021b0:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021b2:	2300      	movs	r3, #0
 80021b4:	613b      	str	r3, [r7, #16]
	HAL_GPIO_Init(DIRECTION_PORT, &GPIO_InitStruct);
 80021b6:	1d3b      	adds	r3, r7, #4
 80021b8:	4619      	mov	r1, r3
 80021ba:	4818      	ldr	r0, [pc, #96]	@ (800221c <nidec_h24_init+0xa8>)
 80021bc:	f000 fe1c 	bl	8002df8 <HAL_GPIO_Init>

    /*Configure GPIO pin : Brake_Pin */
	GPIO_InitStruct.Pin = BRAKE_PIN;
 80021c0:	2310      	movs	r3, #16
 80021c2:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80021c4:	2301      	movs	r3, #1
 80021c6:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80021c8:	2302      	movs	r3, #2
 80021ca:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021cc:	2300      	movs	r3, #0
 80021ce:	613b      	str	r3, [r7, #16]
	HAL_GPIO_Init(BRAKE_PORT, &GPIO_InitStruct);
 80021d0:	1d3b      	adds	r3, r7, #4
 80021d2:	4619      	mov	r1, r3
 80021d4:	4811      	ldr	r0, [pc, #68]	@ (800221c <nidec_h24_init+0xa8>)
 80021d6:	f000 fe0f 	bl	8002df8 <HAL_GPIO_Init>

	// Set the direction pin to low initially
	HAL_GPIO_WritePin(DIRECTION_PORT, DIRECTION_PIN, GPIO_PIN_RESET);
 80021da:	2200      	movs	r2, #0
 80021dc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80021e0:	480e      	ldr	r0, [pc, #56]	@ (800221c <nidec_h24_init+0xa8>)
 80021e2:	f000 ffb5 	bl	8003150 <HAL_GPIO_WritePin>
    
	// Set the brake pin to low initially
	HAL_GPIO_WritePin(BRAKE_PORT, BRAKE_PIN, GPIO_PIN_RESET);
 80021e6:	2200      	movs	r2, #0
 80021e8:	2110      	movs	r1, #16
 80021ea:	480c      	ldr	r0, [pc, #48]	@ (800221c <nidec_h24_init+0xa8>)
 80021ec:	f000 ffb0 	bl	8003150 <HAL_GPIO_WritePin>

	// Start PWM on the specified timer and channel
	TIM5->CCR1 = 0;
 80021f0:	4b0b      	ldr	r3, [pc, #44]	@ (8002220 <nidec_h24_init+0xac>)
 80021f2:	2200      	movs	r2, #0
 80021f4:	635a      	str	r2, [r3, #52]	@ 0x34
    HAL_TIM_Base_Start(&htim5);
 80021f6:	480b      	ldr	r0, [pc, #44]	@ (8002224 <nidec_h24_init+0xb0>)
 80021f8:	f002 feb4 	bl	8004f64 <HAL_TIM_Base_Start>
	HAL_TIM_PWM_Start(&htim5, CHANNEL);
 80021fc:	2100      	movs	r1, #0
 80021fe:	4809      	ldr	r0, [pc, #36]	@ (8002224 <nidec_h24_init+0xb0>)
 8002200:	f002 ffd8 	bl	80051b4 <HAL_TIM_PWM_Start>
	nidec_h24_Move(0, 0);
 8002204:	2000      	movs	r0, #0
 8002206:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8002228 <nidec_h24_init+0xb4>
 800220a:	f000 f80f 	bl	800222c <nidec_h24_Move>
}
 800220e:	bf00      	nop
 8002210:	3718      	adds	r7, #24
 8002212:	46bd      	mov	sp, r7
 8002214:	bd80      	pop	{r7, pc}
 8002216:	bf00      	nop
 8002218:	40023800 	.word	0x40023800
 800221c:	40020400 	.word	0x40020400
 8002220:	40000c00 	.word	0x40000c00
 8002224:	2000025c 	.word	0x2000025c
 8002228:	00000000 	.word	0x00000000

0800222c <nidec_h24_Move>:

/* To make the motor turn based on the input */
void nidec_h24_Move(float dutyCycle, uint8_t brk){
 800222c:	b5b0      	push	{r4, r5, r7, lr}
 800222e:	b082      	sub	sp, #8
 8002230:	af00      	add	r7, sp, #0
 8002232:	ed87 0a01 	vstr	s0, [r7, #4]
 8002236:	4603      	mov	r3, r0
 8002238:	70fb      	strb	r3, [r7, #3]

    // Set the PWM duty cycle
	TIM5->CCR1 = htim5.Instance->ARR*(1 - fabs(dutyCycle)/100);
 800223a:	4b24      	ldr	r3, [pc, #144]	@ (80022cc <nidec_h24_Move+0xa0>)
 800223c:	681b      	ldr	r3, [r3, #0]
 800223e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002240:	4618      	mov	r0, r3
 8002242:	f7fe f923 	bl	800048c <__aeabi_ui2d>
 8002246:	4604      	mov	r4, r0
 8002248:	460d      	mov	r5, r1
 800224a:	edd7 7a01 	vldr	s15, [r7, #4]
 800224e:	eef0 7ae7 	vabs.f32	s15, s15
 8002252:	ee17 0a90 	vmov	r0, s15
 8002256:	f7fe f93b 	bl	80004d0 <__aeabi_f2d>
 800225a:	f04f 0200 	mov.w	r2, #0
 800225e:	4b1c      	ldr	r3, [pc, #112]	@ (80022d0 <nidec_h24_Move+0xa4>)
 8002260:	f7fe fab8 	bl	80007d4 <__aeabi_ddiv>
 8002264:	4602      	mov	r2, r0
 8002266:	460b      	mov	r3, r1
 8002268:	f04f 0000 	mov.w	r0, #0
 800226c:	4919      	ldr	r1, [pc, #100]	@ (80022d4 <nidec_h24_Move+0xa8>)
 800226e:	f7fd ffcf 	bl	8000210 <__aeabi_dsub>
 8002272:	4602      	mov	r2, r0
 8002274:	460b      	mov	r3, r1
 8002276:	4620      	mov	r0, r4
 8002278:	4629      	mov	r1, r5
 800227a:	f7fe f981 	bl	8000580 <__aeabi_dmul>
 800227e:	4602      	mov	r2, r0
 8002280:	460b      	mov	r3, r1
 8002282:	4c15      	ldr	r4, [pc, #84]	@ (80022d8 <nidec_h24_Move+0xac>)
 8002284:	4610      	mov	r0, r2
 8002286:	4619      	mov	r1, r3
 8002288:	f7fe fc52 	bl	8000b30 <__aeabi_d2uiz>
 800228c:	4603      	mov	r3, r0
 800228e:	6363      	str	r3, [r4, #52]	@ 0x34

    if (dutyCycle > 0) {
 8002290:	edd7 7a01 	vldr	s15, [r7, #4]
 8002294:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002298:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800229c:	dd06      	ble.n	80022ac <nidec_h24_Move+0x80>
        // counter-clockwise
        HAL_GPIO_WritePin(DIRECTION_PORT, DIRECTION_PIN, GPIO_PIN_RESET);
 800229e:	2200      	movs	r2, #0
 80022a0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80022a4:	480d      	ldr	r0, [pc, #52]	@ (80022dc <nidec_h24_Move+0xb0>)
 80022a6:	f000 ff53 	bl	8003150 <HAL_GPIO_WritePin>
 80022aa:	e005      	b.n	80022b8 <nidec_h24_Move+0x8c>
    }else{
        // clockwise
        HAL_GPIO_WritePin(DIRECTION_PORT, DIRECTION_PIN, GPIO_PIN_SET);
 80022ac:	2201      	movs	r2, #1
 80022ae:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80022b2:	480a      	ldr	r0, [pc, #40]	@ (80022dc <nidec_h24_Move+0xb0>)
 80022b4:	f000 ff4c 	bl	8003150 <HAL_GPIO_WritePin>
    }

    // brk -> 0: brakes
    HAL_GPIO_WritePin(BRAKE_PORT, BRAKE_PIN, brk);
 80022b8:	78fb      	ldrb	r3, [r7, #3]
 80022ba:	461a      	mov	r2, r3
 80022bc:	2110      	movs	r1, #16
 80022be:	4807      	ldr	r0, [pc, #28]	@ (80022dc <nidec_h24_Move+0xb0>)
 80022c0:	f000 ff46 	bl	8003150 <HAL_GPIO_WritePin>

    // Generate an update event to reload the value immediately
}
 80022c4:	bf00      	nop
 80022c6:	3708      	adds	r7, #8
 80022c8:	46bd      	mov	sp, r7
 80022ca:	bdb0      	pop	{r4, r5, r7, pc}
 80022cc:	2000025c 	.word	0x2000025c
 80022d0:	40590000 	.word	0x40590000
 80022d4:	3ff00000 	.word	0x3ff00000
 80022d8:	40000c00 	.word	0x40000c00
 80022dc:	40020400 	.word	0x40020400

080022e0 <pid_init>:

float p_action, i_action, d_action, error_debug;
static float last_u;

void pid_init(PID_t *p, float k_p, float k_i, float k_d, float min_out,
		float max_out) {
 80022e0:	b480      	push	{r7}
 80022e2:	b087      	sub	sp, #28
 80022e4:	af00      	add	r7, sp, #0
 80022e6:	6178      	str	r0, [r7, #20]
 80022e8:	ed87 0a04 	vstr	s0, [r7, #16]
 80022ec:	edc7 0a03 	vstr	s1, [r7, #12]
 80022f0:	ed87 1a02 	vstr	s2, [r7, #8]
 80022f4:	edc7 1a01 	vstr	s3, [r7, #4]
 80022f8:	ed87 2a00 	vstr	s4, [r7]
	p->k_p = k_p;
 80022fc:	697b      	ldr	r3, [r7, #20]
 80022fe:	693a      	ldr	r2, [r7, #16]
 8002300:	611a      	str	r2, [r3, #16]
	p->k_i = k_i;
 8002302:	697b      	ldr	r3, [r7, #20]
 8002304:	68fa      	ldr	r2, [r7, #12]
 8002306:	615a      	str	r2, [r3, #20]
	p->k_d = k_d;
 8002308:	697b      	ldr	r3, [r7, #20]
 800230a:	68ba      	ldr	r2, [r7, #8]
 800230c:	619a      	str	r2, [r3, #24]
	p->integral_error = 0;
 800230e:	697b      	ldr	r3, [r7, #20]
 8002310:	f04f 0200 	mov.w	r2, #0
 8002314:	609a      	str	r2, [r3, #8]
	p->last_error = 0;
 8002316:	697b      	ldr	r3, [r7, #20]
 8002318:	f04f 0200 	mov.w	r2, #0
 800231c:	60da      	str	r2, [r3, #12]
	p->last_updated_ts = 0;
 800231e:	697b      	ldr	r3, [r7, #20]
 8002320:	2200      	movs	r2, #0
 8002322:	601a      	str	r2, [r3, #0]
	p->min_output = min_out;
 8002324:	697b      	ldr	r3, [r7, #20]
 8002326:	687a      	ldr	r2, [r7, #4]
 8002328:	621a      	str	r2, [r3, #32]
	p->max_output = max_out;
 800232a:	697b      	ldr	r3, [r7, #20]
 800232c:	683a      	ldr	r2, [r7, #0]
 800232e:	61da      	str	r2, [r3, #28]
}
 8002330:	bf00      	nop
 8002332:	371c      	adds	r7, #28
 8002334:	46bd      	mov	sp, r7
 8002336:	f85d 7b04 	ldr.w	r7, [sp], #4
 800233a:	4770      	bx	lr

0800233c <pid_set_setpoint>:

void pid_set_setpoint(PID_t *p, float set_point) {
 800233c:	b480      	push	{r7}
 800233e:	b083      	sub	sp, #12
 8002340:	af00      	add	r7, sp, #0
 8002342:	6078      	str	r0, [r7, #4]
 8002344:	ed87 0a00 	vstr	s0, [r7]
	p->set_point = set_point;
 8002348:	687b      	ldr	r3, [r7, #4]
 800234a:	683a      	ldr	r2, [r7, #0]
 800234c:	605a      	str	r2, [r3, #4]
}
 800234e:	bf00      	nop
 8002350:	370c      	adds	r7, #12
 8002352:	46bd      	mov	sp, r7
 8002354:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002358:	4770      	bx	lr
	...

0800235c <pid_compute_control_action>:

float pid_compute_control_action(PID_t *p, float est_output) {
 800235c:	b580      	push	{r7, lr}
 800235e:	b08a      	sub	sp, #40	@ 0x28
 8002360:	af00      	add	r7, sp, #0
 8002362:	6078      	str	r0, [r7, #4]
 8002364:	ed87 0a00 	vstr	s0, [r7]
	float error, integral_error, u, derivative, delta_T;
	float alpha = 0.9;
 8002368:	4b72      	ldr	r3, [pc, #456]	@ (8002534 <pid_compute_control_action+0x1d8>)
 800236a:	61bb      	str	r3, [r7, #24]
	float k_p = p->k_p;
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	691b      	ldr	r3, [r3, #16]
 8002370:	617b      	str	r3, [r7, #20]

	error = pid_get_setpoint(p) - est_output;
 8002372:	6878      	ldr	r0, [r7, #4]
 8002374:	f000 f8ea 	bl	800254c <pid_get_setpoint>
 8002378:	eeb0 7a40 	vmov.f32	s14, s0
 800237c:	edd7 7a00 	vldr	s15, [r7]
 8002380:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002384:	edc7 7a04 	vstr	s15, [r7, #16]

	delta_T = pid_get_current_sampling_time(p);
 8002388:	6878      	ldr	r0, [r7, #4]
 800238a:	f000 f8ef 	bl	800256c <pid_get_current_sampling_time>
 800238e:	ed87 0a03 	vstr	s0, [r7, #12]

	if (delta_T > 0.0 && p->k_d != 0.0) {
 8002392:	edd7 7a03 	vldr	s15, [r7, #12]
 8002396:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800239a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800239e:	dd26      	ble.n	80023ee <pid_compute_control_action+0x92>
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	edd3 7a06 	vldr	s15, [r3, #24]
 80023a6:	eef5 7a40 	vcmp.f32	s15, #0.0
 80023aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80023ae:	d01e      	beq.n	80023ee <pid_compute_control_action+0x92>
		// Apply the low-pass filter to the derivative
		derivative = alpha * p->d_term
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	ed93 7a0d 	vldr	s14, [r3, #52]	@ 0x34
 80023b6:	edd7 7a06 	vldr	s15, [r7, #24]
 80023ba:	ee27 7a27 	vmul.f32	s14, s14, s15
				+ (1 - alpha) * (error - p->last_error) / delta_T;
 80023be:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80023c2:	edd7 7a06 	vldr	s15, [r7, #24]
 80023c6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80023ca:	687b      	ldr	r3, [r7, #4]
 80023cc:	edd3 7a03 	vldr	s15, [r3, #12]
 80023d0:	ed97 6a04 	vldr	s12, [r7, #16]
 80023d4:	ee76 7a67 	vsub.f32	s15, s12, s15
 80023d8:	ee26 6aa7 	vmul.f32	s12, s13, s15
 80023dc:	edd7 6a03 	vldr	s13, [r7, #12]
 80023e0:	eec6 7a26 	vdiv.f32	s15, s12, s13
		derivative = alpha * p->d_term
 80023e4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80023e8:	edc7 7a07 	vstr	s15, [r7, #28]
 80023ec:	e002      	b.n	80023f4 <pid_compute_control_action+0x98>
	} else {
		derivative = 0;
 80023ee:	f04f 0300 	mov.w	r3, #0
 80023f2:	61fb      	str	r3, [r7, #28]
	}

	if (p->neg_deadzone < error && error < p->pos_deadzone) {
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 80023fa:	ed97 7a04 	vldr	s14, [r7, #16]
 80023fe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002402:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002406:	dd17      	ble.n	8002438 <pid_compute_control_action+0xdc>
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800240e:	ed97 7a04 	vldr	s14, [r7, #16]
 8002412:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002416:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800241a:	d50d      	bpl.n	8002438 <pid_compute_control_action+0xdc>
		integral_error = p->integral_error + delta_T * error;
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	ed93 7a02 	vldr	s14, [r3, #8]
 8002422:	edd7 6a03 	vldr	s13, [r7, #12]
 8002426:	edd7 7a04 	vldr	s15, [r7, #16]
 800242a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800242e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002432:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24
 8002436:	e006      	b.n	8002446 <pid_compute_control_action+0xea>
	} else {
		p->integral_error = 0;
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	f04f 0200 	mov.w	r2, #0
 800243e:	609a      	str	r2, [r3, #8]
		integral_error = 0;
 8002440:	f04f 0300 	mov.w	r3, #0
 8002444:	627b      	str	r3, [r7, #36]	@ 0x24
	}

	u = k_p * error + p->k_i * integral_error + p->k_d * derivative;
 8002446:	ed97 7a05 	vldr	s14, [r7, #20]
 800244a:	edd7 7a04 	vldr	s15, [r7, #16]
 800244e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8002452:	687b      	ldr	r3, [r7, #4]
 8002454:	edd3 6a05 	vldr	s13, [r3, #20]
 8002458:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800245c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002460:	ee37 7a27 	vadd.f32	s14, s14, s15
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	edd3 6a06 	vldr	s13, [r3, #24]
 800246a:	edd7 7a07 	vldr	s15, [r7, #28]
 800246e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002472:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002476:	edc7 7a08 	vstr	s15, [r7, #32]
	p->p_term = k_p * error;
 800247a:	ed97 7a05 	vldr	s14, [r7, #20]
 800247e:	edd7 7a04 	vldr	s15, [r7, #16]
 8002482:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002486:	687b      	ldr	r3, [r7, #4]
 8002488:	edc3 7a0b 	vstr	s15, [r3, #44]	@ 0x2c
	p->i_term = p->k_i * integral_error;
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	ed93 7a05 	vldr	s14, [r3, #20]
 8002492:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 8002496:	ee67 7a27 	vmul.f32	s15, s14, s15
 800249a:	687b      	ldr	r3, [r7, #4]
 800249c:	edc3 7a0c 	vstr	s15, [r3, #48]	@ 0x30
	p->d_term = p->k_d * derivative;
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	ed93 7a06 	vldr	s14, [r3, #24]
 80024a6:	edd7 7a07 	vldr	s15, [r7, #28]
 80024aa:	ee67 7a27 	vmul.f32	s15, s14, s15
 80024ae:	687b      	ldr	r3, [r7, #4]
 80024b0:	edc3 7a0d 	vstr	s15, [r3, #52]	@ 0x34

	p_action = p->p_term;
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80024b8:	4a1f      	ldr	r2, [pc, #124]	@ (8002538 <pid_compute_control_action+0x1dc>)
 80024ba:	6013      	str	r3, [r2, #0]
	i_action = p->i_term;
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80024c0:	4a1e      	ldr	r2, [pc, #120]	@ (800253c <pid_compute_control_action+0x1e0>)
 80024c2:	6013      	str	r3, [r2, #0]
	d_action = p->d_term;
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80024c8:	4a1d      	ldr	r2, [pc, #116]	@ (8002540 <pid_compute_control_action+0x1e4>)
 80024ca:	6013      	str	r3, [r2, #0]

	// reset wind-up
	if (u < p->min_output) {
 80024cc:	687b      	ldr	r3, [r7, #4]
 80024ce:	edd3 7a08 	vldr	s15, [r3, #32]
 80024d2:	ed97 7a08 	vldr	s14, [r7, #32]
 80024d6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80024da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80024de:	d503      	bpl.n	80024e8 <pid_compute_control_action+0x18c>
		u = p->min_output;
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	6a1b      	ldr	r3, [r3, #32]
 80024e4:	623b      	str	r3, [r7, #32]
 80024e6:	e010      	b.n	800250a <pid_compute_control_action+0x1ae>
	} else if (u > p->max_output) {
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	edd3 7a07 	vldr	s15, [r3, #28]
 80024ee:	ed97 7a08 	vldr	s14, [r7, #32]
 80024f2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80024f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80024fa:	dd03      	ble.n	8002504 <pid_compute_control_action+0x1a8>
		u = p->max_output;
 80024fc:	687b      	ldr	r3, [r7, #4]
 80024fe:	69db      	ldr	r3, [r3, #28]
 8002500:	623b      	str	r3, [r7, #32]
 8002502:	e002      	b.n	800250a <pid_compute_control_action+0x1ae>
	} else {
		p->integral_error = integral_error;
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8002508:	609a      	str	r2, [r3, #8]
	}

	last_u = u;
 800250a:	4a0e      	ldr	r2, [pc, #56]	@ (8002544 <pid_compute_control_action+0x1e8>)
 800250c:	6a3b      	ldr	r3, [r7, #32]
 800250e:	6013      	str	r3, [r2, #0]

	p->last_error = error;
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	693a      	ldr	r2, [r7, #16]
 8002514:	60da      	str	r2, [r3, #12]
	error_debug = error;
 8002516:	4a0c      	ldr	r2, [pc, #48]	@ (8002548 <pid_compute_control_action+0x1ec>)
 8002518:	693b      	ldr	r3, [r7, #16]
 800251a:	6013      	str	r3, [r2, #0]
	pid_update_ts(p);
 800251c:	6878      	ldr	r0, [r7, #4]
 800251e:	f000 f84d 	bl	80025bc <pid_update_ts>
	return u;
 8002522:	6a3b      	ldr	r3, [r7, #32]
 8002524:	ee07 3a90 	vmov	s15, r3
}
 8002528:	eeb0 0a67 	vmov.f32	s0, s15
 800252c:	3728      	adds	r7, #40	@ 0x28
 800252e:	46bd      	mov	sp, r7
 8002530:	bd80      	pop	{r7, pc}
 8002532:	bf00      	nop
 8002534:	3f666666 	.word	0x3f666666
 8002538:	200001b8 	.word	0x200001b8
 800253c:	200001bc 	.word	0x200001bc
 8002540:	200001c0 	.word	0x200001c0
 8002544:	200001c8 	.word	0x200001c8
 8002548:	200001c4 	.word	0x200001c4

0800254c <pid_get_setpoint>:

float pid_get_error(PID_t *p) {
	return p->last_error;
}

float pid_get_setpoint(PID_t *p) {
 800254c:	b480      	push	{r7}
 800254e:	b083      	sub	sp, #12
 8002550:	af00      	add	r7, sp, #0
 8002552:	6078      	str	r0, [r7, #4]
	return p->set_point;
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	685b      	ldr	r3, [r3, #4]
 8002558:	ee07 3a90 	vmov	s15, r3
}
 800255c:	eeb0 0a67 	vmov.f32	s0, s15
 8002560:	370c      	adds	r7, #12
 8002562:	46bd      	mov	sp, r7
 8002564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002568:	4770      	bx	lr
	...

0800256c <pid_get_current_sampling_time>:

static float pid_get_current_sampling_time(PID_t *p) {
 800256c:	b580      	push	{r7, lr}
 800256e:	b082      	sub	sp, #8
 8002570:	af00      	add	r7, sp, #0
 8002572:	6078      	str	r0, [r7, #4]
	return (float) (HAL_GetTick() - p->last_updated_ts) / 1000.0;
 8002574:	f000 fafe 	bl	8002b74 <HAL_GetTick>
 8002578:	4602      	mov	r2, r0
 800257a:	687b      	ldr	r3, [r7, #4]
 800257c:	681b      	ldr	r3, [r3, #0]
 800257e:	1ad3      	subs	r3, r2, r3
 8002580:	ee07 3a90 	vmov	s15, r3
 8002584:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002588:	ee17 0a90 	vmov	r0, s15
 800258c:	f7fd ffa0 	bl	80004d0 <__aeabi_f2d>
 8002590:	f04f 0200 	mov.w	r2, #0
 8002594:	4b08      	ldr	r3, [pc, #32]	@ (80025b8 <pid_get_current_sampling_time+0x4c>)
 8002596:	f7fe f91d 	bl	80007d4 <__aeabi_ddiv>
 800259a:	4602      	mov	r2, r0
 800259c:	460b      	mov	r3, r1
 800259e:	4610      	mov	r0, r2
 80025a0:	4619      	mov	r1, r3
 80025a2:	f7fe fae5 	bl	8000b70 <__aeabi_d2f>
 80025a6:	4603      	mov	r3, r0
 80025a8:	ee07 3a90 	vmov	s15, r3
}
 80025ac:	eeb0 0a67 	vmov.f32	s0, s15
 80025b0:	3708      	adds	r7, #8
 80025b2:	46bd      	mov	sp, r7
 80025b4:	bd80      	pop	{r7, pc}
 80025b6:	bf00      	nop
 80025b8:	408f4000 	.word	0x408f4000

080025bc <pid_update_ts>:

void pid_update_ts(PID_t *p) {
 80025bc:	b580      	push	{r7, lr}
 80025be:	b082      	sub	sp, #8
 80025c0:	af00      	add	r7, sp, #0
 80025c2:	6078      	str	r0, [r7, #4]
	p->last_updated_ts = HAL_GetTick();
 80025c4:	f000 fad6 	bl	8002b74 <HAL_GetTick>
 80025c8:	4602      	mov	r2, r0
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	601a      	str	r2, [r3, #0]
}
 80025ce:	bf00      	nop
 80025d0:	3708      	adds	r7, #8
 80025d2:	46bd      	mov	sp, r7
 80025d4:	bd80      	pop	{r7, pc}
	...

080025d8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80025d8:	b480      	push	{r7}
 80025da:	b083      	sub	sp, #12
 80025dc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80025de:	2300      	movs	r3, #0
 80025e0:	607b      	str	r3, [r7, #4]
 80025e2:	4b10      	ldr	r3, [pc, #64]	@ (8002624 <HAL_MspInit+0x4c>)
 80025e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80025e6:	4a0f      	ldr	r2, [pc, #60]	@ (8002624 <HAL_MspInit+0x4c>)
 80025e8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80025ec:	6453      	str	r3, [r2, #68]	@ 0x44
 80025ee:	4b0d      	ldr	r3, [pc, #52]	@ (8002624 <HAL_MspInit+0x4c>)
 80025f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80025f2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80025f6:	607b      	str	r3, [r7, #4]
 80025f8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80025fa:	2300      	movs	r3, #0
 80025fc:	603b      	str	r3, [r7, #0]
 80025fe:	4b09      	ldr	r3, [pc, #36]	@ (8002624 <HAL_MspInit+0x4c>)
 8002600:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002602:	4a08      	ldr	r2, [pc, #32]	@ (8002624 <HAL_MspInit+0x4c>)
 8002604:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002608:	6413      	str	r3, [r2, #64]	@ 0x40
 800260a:	4b06      	ldr	r3, [pc, #24]	@ (8002624 <HAL_MspInit+0x4c>)
 800260c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800260e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002612:	603b      	str	r3, [r7, #0]
 8002614:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002616:	bf00      	nop
 8002618:	370c      	adds	r7, #12
 800261a:	46bd      	mov	sp, r7
 800261c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002620:	4770      	bx	lr
 8002622:	bf00      	nop
 8002624:	40023800 	.word	0x40023800

08002628 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002628:	b480      	push	{r7}
 800262a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800262c:	bf00      	nop
 800262e:	e7fd      	b.n	800262c <NMI_Handler+0x4>

08002630 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002630:	b480      	push	{r7}
 8002632:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002634:	bf00      	nop
 8002636:	e7fd      	b.n	8002634 <HardFault_Handler+0x4>

08002638 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002638:	b480      	push	{r7}
 800263a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800263c:	bf00      	nop
 800263e:	e7fd      	b.n	800263c <MemManage_Handler+0x4>

08002640 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002640:	b480      	push	{r7}
 8002642:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002644:	bf00      	nop
 8002646:	e7fd      	b.n	8002644 <BusFault_Handler+0x4>

08002648 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002648:	b480      	push	{r7}
 800264a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800264c:	bf00      	nop
 800264e:	e7fd      	b.n	800264c <UsageFault_Handler+0x4>

08002650 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002650:	b480      	push	{r7}
 8002652:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002654:	bf00      	nop
 8002656:	46bd      	mov	sp, r7
 8002658:	f85d 7b04 	ldr.w	r7, [sp], #4
 800265c:	4770      	bx	lr

0800265e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800265e:	b480      	push	{r7}
 8002660:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002662:	bf00      	nop
 8002664:	46bd      	mov	sp, r7
 8002666:	f85d 7b04 	ldr.w	r7, [sp], #4
 800266a:	4770      	bx	lr

0800266c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800266c:	b480      	push	{r7}
 800266e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002670:	bf00      	nop
 8002672:	46bd      	mov	sp, r7
 8002674:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002678:	4770      	bx	lr

0800267a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800267a:	b580      	push	{r7, lr}
 800267c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800267e:	f000 fa65 	bl	8002b4c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002682:	bf00      	nop
 8002684:	bd80      	pop	{r7, pc}
	...

08002688 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8002688:	b580      	push	{r7, lr}
 800268a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 800268c:	4802      	ldr	r0, [pc, #8]	@ (8002698 <TIM2_IRQHandler+0x10>)
 800268e:	f002 ff8d 	bl	80055ac <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8002692:	bf00      	nop
 8002694:	bd80      	pop	{r7, pc}
 8002696:	bf00      	nop
 8002698:	20000214 	.word	0x20000214

0800269c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800269c:	b480      	push	{r7}
 800269e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80026a0:	4b06      	ldr	r3, [pc, #24]	@ (80026bc <SystemInit+0x20>)
 80026a2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80026a6:	4a05      	ldr	r2, [pc, #20]	@ (80026bc <SystemInit+0x20>)
 80026a8:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80026ac:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80026b0:	bf00      	nop
 80026b2:	46bd      	mov	sp, r7
 80026b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026b8:	4770      	bx	lr
 80026ba:	bf00      	nop
 80026bc:	e000ed00 	.word	0xe000ed00

080026c0 <MX_TIM1_Init>:
TIM_HandleTypeDef htim2;
TIM_HandleTypeDef htim5;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 80026c0:	b580      	push	{r7, lr}
 80026c2:	b08c      	sub	sp, #48	@ 0x30
 80026c4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 80026c6:	f107 030c 	add.w	r3, r7, #12
 80026ca:	2224      	movs	r2, #36	@ 0x24
 80026cc:	2100      	movs	r1, #0
 80026ce:	4618      	mov	r0, r3
 80026d0:	f003 fdba 	bl	8006248 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80026d4:	1d3b      	adds	r3, r7, #4
 80026d6:	2200      	movs	r2, #0
 80026d8:	601a      	str	r2, [r3, #0]
 80026da:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80026dc:	4b22      	ldr	r3, [pc, #136]	@ (8002768 <MX_TIM1_Init+0xa8>)
 80026de:	4a23      	ldr	r2, [pc, #140]	@ (800276c <MX_TIM1_Init+0xac>)
 80026e0:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 80026e2:	4b21      	ldr	r3, [pc, #132]	@ (8002768 <MX_TIM1_Init+0xa8>)
 80026e4:	2200      	movs	r2, #0
 80026e6:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80026e8:	4b1f      	ldr	r3, [pc, #124]	@ (8002768 <MX_TIM1_Init+0xa8>)
 80026ea:	2200      	movs	r2, #0
 80026ec:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 80026ee:	4b1e      	ldr	r3, [pc, #120]	@ (8002768 <MX_TIM1_Init+0xa8>)
 80026f0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80026f4:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80026f6:	4b1c      	ldr	r3, [pc, #112]	@ (8002768 <MX_TIM1_Init+0xa8>)
 80026f8:	2200      	movs	r2, #0
 80026fa:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80026fc:	4b1a      	ldr	r3, [pc, #104]	@ (8002768 <MX_TIM1_Init+0xa8>)
 80026fe:	2200      	movs	r2, #0
 8002700:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002702:	4b19      	ldr	r3, [pc, #100]	@ (8002768 <MX_TIM1_Init+0xa8>)
 8002704:	2200      	movs	r2, #0
 8002706:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8002708:	2303      	movs	r3, #3
 800270a:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 800270c:	2300      	movs	r3, #0
 800270e:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8002710:	2301      	movs	r3, #1
 8002712:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8002714:	2300      	movs	r3, #0
 8002716:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8002718:	2300      	movs	r3, #0
 800271a:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 800271c:	2300      	movs	r3, #0
 800271e:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8002720:	2301      	movs	r3, #1
 8002722:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8002724:	2300      	movs	r3, #0
 8002726:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 8002728:	2300      	movs	r3, #0
 800272a:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK)
 800272c:	f107 030c 	add.w	r3, r7, #12
 8002730:	4619      	mov	r1, r3
 8002732:	480d      	ldr	r0, [pc, #52]	@ (8002768 <MX_TIM1_Init+0xa8>)
 8002734:	f002 fe06 	bl	8005344 <HAL_TIM_Encoder_Init>
 8002738:	4603      	mov	r3, r0
 800273a:	2b00      	cmp	r3, #0
 800273c:	d001      	beq.n	8002742 <MX_TIM1_Init+0x82>
  {
    Error_Handler();
 800273e:	f7ff fa57 	bl	8001bf0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002742:	2300      	movs	r3, #0
 8002744:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002746:	2300      	movs	r3, #0
 8002748:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800274a:	1d3b      	adds	r3, r7, #4
 800274c:	4619      	mov	r1, r3
 800274e:	4806      	ldr	r0, [pc, #24]	@ (8002768 <MX_TIM1_Init+0xa8>)
 8002750:	f003 fcea 	bl	8006128 <HAL_TIMEx_MasterConfigSynchronization>
 8002754:	4603      	mov	r3, r0
 8002756:	2b00      	cmp	r3, #0
 8002758:	d001      	beq.n	800275e <MX_TIM1_Init+0x9e>
  {
    Error_Handler();
 800275a:	f7ff fa49 	bl	8001bf0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 800275e:	bf00      	nop
 8002760:	3730      	adds	r7, #48	@ 0x30
 8002762:	46bd      	mov	sp, r7
 8002764:	bd80      	pop	{r7, pc}
 8002766:	bf00      	nop
 8002768:	200001cc 	.word	0x200001cc
 800276c:	40010000 	.word	0x40010000

08002770 <MX_TIM2_Init>:
/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8002770:	b580      	push	{r7, lr}
 8002772:	b086      	sub	sp, #24
 8002774:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002776:	f107 0308 	add.w	r3, r7, #8
 800277a:	2200      	movs	r2, #0
 800277c:	601a      	str	r2, [r3, #0]
 800277e:	605a      	str	r2, [r3, #4]
 8002780:	609a      	str	r2, [r3, #8]
 8002782:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002784:	463b      	mov	r3, r7
 8002786:	2200      	movs	r2, #0
 8002788:	601a      	str	r2, [r3, #0]
 800278a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800278c:	4b1d      	ldr	r3, [pc, #116]	@ (8002804 <MX_TIM2_Init+0x94>)
 800278e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8002792:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8002794:	4b1b      	ldr	r3, [pc, #108]	@ (8002804 <MX_TIM2_Init+0x94>)
 8002796:	2200      	movs	r2, #0
 8002798:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800279a:	4b1a      	ldr	r3, [pc, #104]	@ (8002804 <MX_TIM2_Init+0x94>)
 800279c:	2200      	movs	r2, #0
 800279e:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 336000-1;
 80027a0:	4b18      	ldr	r3, [pc, #96]	@ (8002804 <MX_TIM2_Init+0x94>)
 80027a2:	4a19      	ldr	r2, [pc, #100]	@ (8002808 <MX_TIM2_Init+0x98>)
 80027a4:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80027a6:	4b17      	ldr	r3, [pc, #92]	@ (8002804 <MX_TIM2_Init+0x94>)
 80027a8:	2200      	movs	r2, #0
 80027aa:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80027ac:	4b15      	ldr	r3, [pc, #84]	@ (8002804 <MX_TIM2_Init+0x94>)
 80027ae:	2200      	movs	r2, #0
 80027b0:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80027b2:	4814      	ldr	r0, [pc, #80]	@ (8002804 <MX_TIM2_Init+0x94>)
 80027b4:	f002 fb86 	bl	8004ec4 <HAL_TIM_Base_Init>
 80027b8:	4603      	mov	r3, r0
 80027ba:	2b00      	cmp	r3, #0
 80027bc:	d001      	beq.n	80027c2 <MX_TIM2_Init+0x52>
  {
    Error_Handler();
 80027be:	f7ff fa17 	bl	8001bf0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80027c2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80027c6:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80027c8:	f107 0308 	add.w	r3, r7, #8
 80027cc:	4619      	mov	r1, r3
 80027ce:	480d      	ldr	r0, [pc, #52]	@ (8002804 <MX_TIM2_Init+0x94>)
 80027d0:	f003 f89e 	bl	8005910 <HAL_TIM_ConfigClockSource>
 80027d4:	4603      	mov	r3, r0
 80027d6:	2b00      	cmp	r3, #0
 80027d8:	d001      	beq.n	80027de <MX_TIM2_Init+0x6e>
  {
    Error_Handler();
 80027da:	f7ff fa09 	bl	8001bf0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80027de:	2300      	movs	r3, #0
 80027e0:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80027e2:	2300      	movs	r3, #0
 80027e4:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80027e6:	463b      	mov	r3, r7
 80027e8:	4619      	mov	r1, r3
 80027ea:	4806      	ldr	r0, [pc, #24]	@ (8002804 <MX_TIM2_Init+0x94>)
 80027ec:	f003 fc9c 	bl	8006128 <HAL_TIMEx_MasterConfigSynchronization>
 80027f0:	4603      	mov	r3, r0
 80027f2:	2b00      	cmp	r3, #0
 80027f4:	d001      	beq.n	80027fa <MX_TIM2_Init+0x8a>
  {
    Error_Handler();
 80027f6:	f7ff f9fb 	bl	8001bf0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80027fa:	bf00      	nop
 80027fc:	3718      	adds	r7, #24
 80027fe:	46bd      	mov	sp, r7
 8002800:	bd80      	pop	{r7, pc}
 8002802:	bf00      	nop
 8002804:	20000214 	.word	0x20000214
 8002808:	0005207f 	.word	0x0005207f

0800280c <MX_TIM5_Init>:
/* TIM5 init function */
void MX_TIM5_Init(void)
{
 800280c:	b580      	push	{r7, lr}
 800280e:	b08a      	sub	sp, #40	@ 0x28
 8002810:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002812:	f107 0320 	add.w	r3, r7, #32
 8002816:	2200      	movs	r2, #0
 8002818:	601a      	str	r2, [r3, #0]
 800281a:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800281c:	1d3b      	adds	r3, r7, #4
 800281e:	2200      	movs	r2, #0
 8002820:	601a      	str	r2, [r3, #0]
 8002822:	605a      	str	r2, [r3, #4]
 8002824:	609a      	str	r2, [r3, #8]
 8002826:	60da      	str	r2, [r3, #12]
 8002828:	611a      	str	r2, [r3, #16]
 800282a:	615a      	str	r2, [r3, #20]
 800282c:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 800282e:	4b22      	ldr	r3, [pc, #136]	@ (80028b8 <MX_TIM5_Init+0xac>)
 8002830:	4a22      	ldr	r2, [pc, #136]	@ (80028bc <MX_TIM5_Init+0xb0>)
 8002832:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 0;
 8002834:	4b20      	ldr	r3, [pc, #128]	@ (80028b8 <MX_TIM5_Init+0xac>)
 8002836:	2200      	movs	r2, #0
 8002838:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 800283a:	4b1f      	ldr	r3, [pc, #124]	@ (80028b8 <MX_TIM5_Init+0xac>)
 800283c:	2200      	movs	r2, #0
 800283e:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4199;
 8002840:	4b1d      	ldr	r3, [pc, #116]	@ (80028b8 <MX_TIM5_Init+0xac>)
 8002842:	f241 0267 	movw	r2, #4199	@ 0x1067
 8002846:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002848:	4b1b      	ldr	r3, [pc, #108]	@ (80028b8 <MX_TIM5_Init+0xac>)
 800284a:	2200      	movs	r2, #0
 800284c:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800284e:	4b1a      	ldr	r3, [pc, #104]	@ (80028b8 <MX_TIM5_Init+0xac>)
 8002850:	2280      	movs	r2, #128	@ 0x80
 8002852:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 8002854:	4818      	ldr	r0, [pc, #96]	@ (80028b8 <MX_TIM5_Init+0xac>)
 8002856:	f002 fc5d 	bl	8005114 <HAL_TIM_PWM_Init>
 800285a:	4603      	mov	r3, r0
 800285c:	2b00      	cmp	r3, #0
 800285e:	d001      	beq.n	8002864 <MX_TIM5_Init+0x58>
  {
    Error_Handler();
 8002860:	f7ff f9c6 	bl	8001bf0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002864:	2300      	movs	r3, #0
 8002866:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002868:	2300      	movs	r3, #0
 800286a:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 800286c:	f107 0320 	add.w	r3, r7, #32
 8002870:	4619      	mov	r1, r3
 8002872:	4811      	ldr	r0, [pc, #68]	@ (80028b8 <MX_TIM5_Init+0xac>)
 8002874:	f003 fc58 	bl	8006128 <HAL_TIMEx_MasterConfigSynchronization>
 8002878:	4603      	mov	r3, r0
 800287a:	2b00      	cmp	r3, #0
 800287c:	d001      	beq.n	8002882 <MX_TIM5_Init+0x76>
  {
    Error_Handler();
 800287e:	f7ff f9b7 	bl	8001bf0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002882:	2360      	movs	r3, #96	@ 0x60
 8002884:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8002886:	2300      	movs	r3, #0
 8002888:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800288a:	2300      	movs	r3, #0
 800288c:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800288e:	2300      	movs	r3, #0
 8002890:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002892:	1d3b      	adds	r3, r7, #4
 8002894:	2200      	movs	r2, #0
 8002896:	4619      	mov	r1, r3
 8002898:	4807      	ldr	r0, [pc, #28]	@ (80028b8 <MX_TIM5_Init+0xac>)
 800289a:	f002 ff77 	bl	800578c <HAL_TIM_PWM_ConfigChannel>
 800289e:	4603      	mov	r3, r0
 80028a0:	2b00      	cmp	r3, #0
 80028a2:	d001      	beq.n	80028a8 <MX_TIM5_Init+0x9c>
  {
    Error_Handler();
 80028a4:	f7ff f9a4 	bl	8001bf0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */
  HAL_TIM_MspPostInit(&htim5);
 80028a8:	4803      	ldr	r0, [pc, #12]	@ (80028b8 <MX_TIM5_Init+0xac>)
 80028aa:	f000 f899 	bl	80029e0 <HAL_TIM_MspPostInit>

}
 80028ae:	bf00      	nop
 80028b0:	3728      	adds	r7, #40	@ 0x28
 80028b2:	46bd      	mov	sp, r7
 80028b4:	bd80      	pop	{r7, pc}
 80028b6:	bf00      	nop
 80028b8:	2000025c 	.word	0x2000025c
 80028bc:	40000c00 	.word	0x40000c00

080028c0 <HAL_TIM_Encoder_MspInit>:

void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
{
 80028c0:	b580      	push	{r7, lr}
 80028c2:	b08a      	sub	sp, #40	@ 0x28
 80028c4:	af00      	add	r7, sp, #0
 80028c6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80028c8:	f107 0314 	add.w	r3, r7, #20
 80028cc:	2200      	movs	r2, #0
 80028ce:	601a      	str	r2, [r3, #0]
 80028d0:	605a      	str	r2, [r3, #4]
 80028d2:	609a      	str	r2, [r3, #8]
 80028d4:	60da      	str	r2, [r3, #12]
 80028d6:	611a      	str	r2, [r3, #16]
  if(tim_encoderHandle->Instance==TIM1)
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	681b      	ldr	r3, [r3, #0]
 80028dc:	4a19      	ldr	r2, [pc, #100]	@ (8002944 <HAL_TIM_Encoder_MspInit+0x84>)
 80028de:	4293      	cmp	r3, r2
 80028e0:	d12c      	bne.n	800293c <HAL_TIM_Encoder_MspInit+0x7c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80028e2:	2300      	movs	r3, #0
 80028e4:	613b      	str	r3, [r7, #16]
 80028e6:	4b18      	ldr	r3, [pc, #96]	@ (8002948 <HAL_TIM_Encoder_MspInit+0x88>)
 80028e8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80028ea:	4a17      	ldr	r2, [pc, #92]	@ (8002948 <HAL_TIM_Encoder_MspInit+0x88>)
 80028ec:	f043 0301 	orr.w	r3, r3, #1
 80028f0:	6453      	str	r3, [r2, #68]	@ 0x44
 80028f2:	4b15      	ldr	r3, [pc, #84]	@ (8002948 <HAL_TIM_Encoder_MspInit+0x88>)
 80028f4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80028f6:	f003 0301 	and.w	r3, r3, #1
 80028fa:	613b      	str	r3, [r7, #16]
 80028fc:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80028fe:	2300      	movs	r3, #0
 8002900:	60fb      	str	r3, [r7, #12]
 8002902:	4b11      	ldr	r3, [pc, #68]	@ (8002948 <HAL_TIM_Encoder_MspInit+0x88>)
 8002904:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002906:	4a10      	ldr	r2, [pc, #64]	@ (8002948 <HAL_TIM_Encoder_MspInit+0x88>)
 8002908:	f043 0301 	orr.w	r3, r3, #1
 800290c:	6313      	str	r3, [r2, #48]	@ 0x30
 800290e:	4b0e      	ldr	r3, [pc, #56]	@ (8002948 <HAL_TIM_Encoder_MspInit+0x88>)
 8002910:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002912:	f003 0301 	and.w	r3, r3, #1
 8002916:	60fb      	str	r3, [r7, #12]
 8002918:	68fb      	ldr	r3, [r7, #12]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA9     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 800291a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800291e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002920:	2302      	movs	r3, #2
 8002922:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002924:	2301      	movs	r3, #1
 8002926:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002928:	2300      	movs	r3, #0
 800292a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 800292c:	2301      	movs	r3, #1
 800292e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002930:	f107 0314 	add.w	r3, r7, #20
 8002934:	4619      	mov	r1, r3
 8002936:	4805      	ldr	r0, [pc, #20]	@ (800294c <HAL_TIM_Encoder_MspInit+0x8c>)
 8002938:	f000 fa5e 	bl	8002df8 <HAL_GPIO_Init>

  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
}
 800293c:	bf00      	nop
 800293e:	3728      	adds	r7, #40	@ 0x28
 8002940:	46bd      	mov	sp, r7
 8002942:	bd80      	pop	{r7, pc}
 8002944:	40010000 	.word	0x40010000
 8002948:	40023800 	.word	0x40023800
 800294c:	40020000 	.word	0x40020000

08002950 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8002950:	b580      	push	{r7, lr}
 8002952:	b084      	sub	sp, #16
 8002954:	af00      	add	r7, sp, #0
 8002956:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	681b      	ldr	r3, [r3, #0]
 800295c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002960:	d115      	bne.n	800298e <HAL_TIM_Base_MspInit+0x3e>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002962:	2300      	movs	r3, #0
 8002964:	60fb      	str	r3, [r7, #12]
 8002966:	4b0c      	ldr	r3, [pc, #48]	@ (8002998 <HAL_TIM_Base_MspInit+0x48>)
 8002968:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800296a:	4a0b      	ldr	r2, [pc, #44]	@ (8002998 <HAL_TIM_Base_MspInit+0x48>)
 800296c:	f043 0301 	orr.w	r3, r3, #1
 8002970:	6413      	str	r3, [r2, #64]	@ 0x40
 8002972:	4b09      	ldr	r3, [pc, #36]	@ (8002998 <HAL_TIM_Base_MspInit+0x48>)
 8002974:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002976:	f003 0301 	and.w	r3, r3, #1
 800297a:	60fb      	str	r3, [r7, #12]
 800297c:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 800297e:	2200      	movs	r2, #0
 8002980:	2100      	movs	r1, #0
 8002982:	201c      	movs	r0, #28
 8002984:	f000 fa01 	bl	8002d8a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002988:	201c      	movs	r0, #28
 800298a:	f000 fa1a 	bl	8002dc2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
}
 800298e:	bf00      	nop
 8002990:	3710      	adds	r7, #16
 8002992:	46bd      	mov	sp, r7
 8002994:	bd80      	pop	{r7, pc}
 8002996:	bf00      	nop
 8002998:	40023800 	.word	0x40023800

0800299c <HAL_TIM_PWM_MspInit>:

void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
{
 800299c:	b480      	push	{r7}
 800299e:	b085      	sub	sp, #20
 80029a0:	af00      	add	r7, sp, #0
 80029a2:	6078      	str	r0, [r7, #4]

  if(tim_pwmHandle->Instance==TIM5)
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	681b      	ldr	r3, [r3, #0]
 80029a8:	4a0b      	ldr	r2, [pc, #44]	@ (80029d8 <HAL_TIM_PWM_MspInit+0x3c>)
 80029aa:	4293      	cmp	r3, r2
 80029ac:	d10d      	bne.n	80029ca <HAL_TIM_PWM_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM5_MspInit 0 */

  /* USER CODE END TIM5_MspInit 0 */
    /* TIM5 clock enable */
    __HAL_RCC_TIM5_CLK_ENABLE();
 80029ae:	2300      	movs	r3, #0
 80029b0:	60fb      	str	r3, [r7, #12]
 80029b2:	4b0a      	ldr	r3, [pc, #40]	@ (80029dc <HAL_TIM_PWM_MspInit+0x40>)
 80029b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80029b6:	4a09      	ldr	r2, [pc, #36]	@ (80029dc <HAL_TIM_PWM_MspInit+0x40>)
 80029b8:	f043 0308 	orr.w	r3, r3, #8
 80029bc:	6413      	str	r3, [r2, #64]	@ 0x40
 80029be:	4b07      	ldr	r3, [pc, #28]	@ (80029dc <HAL_TIM_PWM_MspInit+0x40>)
 80029c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80029c2:	f003 0308 	and.w	r3, r3, #8
 80029c6:	60fb      	str	r3, [r7, #12]
 80029c8:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }
}
 80029ca:	bf00      	nop
 80029cc:	3714      	adds	r7, #20
 80029ce:	46bd      	mov	sp, r7
 80029d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029d4:	4770      	bx	lr
 80029d6:	bf00      	nop
 80029d8:	40000c00 	.word	0x40000c00
 80029dc:	40023800 	.word	0x40023800

080029e0 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 80029e0:	b580      	push	{r7, lr}
 80029e2:	b088      	sub	sp, #32
 80029e4:	af00      	add	r7, sp, #0
 80029e6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029e8:	f107 030c 	add.w	r3, r7, #12
 80029ec:	2200      	movs	r2, #0
 80029ee:	601a      	str	r2, [r3, #0]
 80029f0:	605a      	str	r2, [r3, #4]
 80029f2:	609a      	str	r2, [r3, #8]
 80029f4:	60da      	str	r2, [r3, #12]
 80029f6:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM5)
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	681b      	ldr	r3, [r3, #0]
 80029fc:	4a12      	ldr	r2, [pc, #72]	@ (8002a48 <HAL_TIM_MspPostInit+0x68>)
 80029fe:	4293      	cmp	r3, r2
 8002a00:	d11d      	bne.n	8002a3e <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM5_MspPostInit 0 */

  /* USER CODE END TIM5_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002a02:	2300      	movs	r3, #0
 8002a04:	60bb      	str	r3, [r7, #8]
 8002a06:	4b11      	ldr	r3, [pc, #68]	@ (8002a4c <HAL_TIM_MspPostInit+0x6c>)
 8002a08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a0a:	4a10      	ldr	r2, [pc, #64]	@ (8002a4c <HAL_TIM_MspPostInit+0x6c>)
 8002a0c:	f043 0301 	orr.w	r3, r3, #1
 8002a10:	6313      	str	r3, [r2, #48]	@ 0x30
 8002a12:	4b0e      	ldr	r3, [pc, #56]	@ (8002a4c <HAL_TIM_MspPostInit+0x6c>)
 8002a14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a16:	f003 0301 	and.w	r3, r3, #1
 8002a1a:	60bb      	str	r3, [r7, #8]
 8002a1c:	68bb      	ldr	r3, [r7, #8]
    /**TIM5 GPIO Configuration
    PA0-WKUP     ------> TIM5_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002a1e:	2301      	movs	r3, #1
 8002a20:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a22:	2302      	movs	r3, #2
 8002a24:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a26:	2300      	movs	r3, #0
 8002a28:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002a2a:	2300      	movs	r3, #0
 8002a2c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 8002a2e:	2302      	movs	r3, #2
 8002a30:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a32:	f107 030c 	add.w	r3, r7, #12
 8002a36:	4619      	mov	r1, r3
 8002a38:	4805      	ldr	r0, [pc, #20]	@ (8002a50 <HAL_TIM_MspPostInit+0x70>)
 8002a3a:	f000 f9dd 	bl	8002df8 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM5_MspPostInit 1 */

  /* USER CODE END TIM5_MspPostInit 1 */
  }

}
 8002a3e:	bf00      	nop
 8002a40:	3720      	adds	r7, #32
 8002a42:	46bd      	mov	sp, r7
 8002a44:	bd80      	pop	{r7, pc}
 8002a46:	bf00      	nop
 8002a48:	40000c00 	.word	0x40000c00
 8002a4c:	40023800 	.word	0x40023800
 8002a50:	40020000 	.word	0x40020000

08002a54 <Reset_Handler>:
 8002a54:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002a8c <LoopFillZerobss+0xe>
 8002a58:	f7ff fe20 	bl	800269c <SystemInit>
 8002a5c:	480c      	ldr	r0, [pc, #48]	@ (8002a90 <LoopFillZerobss+0x12>)
 8002a5e:	490d      	ldr	r1, [pc, #52]	@ (8002a94 <LoopFillZerobss+0x16>)
 8002a60:	4a0d      	ldr	r2, [pc, #52]	@ (8002a98 <LoopFillZerobss+0x1a>)
 8002a62:	2300      	movs	r3, #0
 8002a64:	e002      	b.n	8002a6c <LoopCopyDataInit>

08002a66 <CopyDataInit>:
 8002a66:	58d4      	ldr	r4, [r2, r3]
 8002a68:	50c4      	str	r4, [r0, r3]
 8002a6a:	3304      	adds	r3, #4

08002a6c <LoopCopyDataInit>:
 8002a6c:	18c4      	adds	r4, r0, r3
 8002a6e:	428c      	cmp	r4, r1
 8002a70:	d3f9      	bcc.n	8002a66 <CopyDataInit>
 8002a72:	4a0a      	ldr	r2, [pc, #40]	@ (8002a9c <LoopFillZerobss+0x1e>)
 8002a74:	4c0a      	ldr	r4, [pc, #40]	@ (8002aa0 <LoopFillZerobss+0x22>)
 8002a76:	2300      	movs	r3, #0
 8002a78:	e001      	b.n	8002a7e <LoopFillZerobss>

08002a7a <FillZerobss>:
 8002a7a:	6013      	str	r3, [r2, #0]
 8002a7c:	3204      	adds	r2, #4

08002a7e <LoopFillZerobss>:
 8002a7e:	42a2      	cmp	r2, r4
 8002a80:	d3fb      	bcc.n	8002a7a <FillZerobss>
 8002a82:	f003 fbef 	bl	8006264 <__libc_init_array>
 8002a86:	f7fe fe4b 	bl	8001720 <main>
 8002a8a:	4770      	bx	lr
 8002a8c:	20020000 	.word	0x20020000
 8002a90:	20000000 	.word	0x20000000
 8002a94:	20000080 	.word	0x20000080
 8002a98:	08006880 	.word	0x08006880
 8002a9c:	20000080 	.word	0x20000080
 8002aa0:	200003e0 	.word	0x200003e0

08002aa4 <ADC_IRQHandler>:
 8002aa4:	e7fe      	b.n	8002aa4 <ADC_IRQHandler>
	...

08002aa8 <HAL_Init>:
 8002aa8:	b580      	push	{r7, lr}
 8002aaa:	af00      	add	r7, sp, #0
 8002aac:	4b0e      	ldr	r3, [pc, #56]	@ (8002ae8 <HAL_Init+0x40>)
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	4a0d      	ldr	r2, [pc, #52]	@ (8002ae8 <HAL_Init+0x40>)
 8002ab2:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002ab6:	6013      	str	r3, [r2, #0]
 8002ab8:	4b0b      	ldr	r3, [pc, #44]	@ (8002ae8 <HAL_Init+0x40>)
 8002aba:	681b      	ldr	r3, [r3, #0]
 8002abc:	4a0a      	ldr	r2, [pc, #40]	@ (8002ae8 <HAL_Init+0x40>)
 8002abe:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002ac2:	6013      	str	r3, [r2, #0]
 8002ac4:	4b08      	ldr	r3, [pc, #32]	@ (8002ae8 <HAL_Init+0x40>)
 8002ac6:	681b      	ldr	r3, [r3, #0]
 8002ac8:	4a07      	ldr	r2, [pc, #28]	@ (8002ae8 <HAL_Init+0x40>)
 8002aca:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002ace:	6013      	str	r3, [r2, #0]
 8002ad0:	2003      	movs	r0, #3
 8002ad2:	f000 f94f 	bl	8002d74 <HAL_NVIC_SetPriorityGrouping>
 8002ad6:	200f      	movs	r0, #15
 8002ad8:	f000 f808 	bl	8002aec <HAL_InitTick>
 8002adc:	f7ff fd7c 	bl	80025d8 <HAL_MspInit>
 8002ae0:	2300      	movs	r3, #0
 8002ae2:	4618      	mov	r0, r3
 8002ae4:	bd80      	pop	{r7, pc}
 8002ae6:	bf00      	nop
 8002ae8:	40023c00 	.word	0x40023c00

08002aec <HAL_InitTick>:
 8002aec:	b580      	push	{r7, lr}
 8002aee:	b082      	sub	sp, #8
 8002af0:	af00      	add	r7, sp, #0
 8002af2:	6078      	str	r0, [r7, #4]
 8002af4:	4b12      	ldr	r3, [pc, #72]	@ (8002b40 <HAL_InitTick+0x54>)
 8002af6:	681a      	ldr	r2, [r3, #0]
 8002af8:	4b12      	ldr	r3, [pc, #72]	@ (8002b44 <HAL_InitTick+0x58>)
 8002afa:	781b      	ldrb	r3, [r3, #0]
 8002afc:	4619      	mov	r1, r3
 8002afe:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002b02:	fbb3 f3f1 	udiv	r3, r3, r1
 8002b06:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b0a:	4618      	mov	r0, r3
 8002b0c:	f000 f967 	bl	8002dde <HAL_SYSTICK_Config>
 8002b10:	4603      	mov	r3, r0
 8002b12:	2b00      	cmp	r3, #0
 8002b14:	d001      	beq.n	8002b1a <HAL_InitTick+0x2e>
 8002b16:	2301      	movs	r3, #1
 8002b18:	e00e      	b.n	8002b38 <HAL_InitTick+0x4c>
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	2b0f      	cmp	r3, #15
 8002b1e:	d80a      	bhi.n	8002b36 <HAL_InitTick+0x4a>
 8002b20:	2200      	movs	r2, #0
 8002b22:	6879      	ldr	r1, [r7, #4]
 8002b24:	f04f 30ff 	mov.w	r0, #4294967295
 8002b28:	f000 f92f 	bl	8002d8a <HAL_NVIC_SetPriority>
 8002b2c:	4a06      	ldr	r2, [pc, #24]	@ (8002b48 <HAL_InitTick+0x5c>)
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	6013      	str	r3, [r2, #0]
 8002b32:	2300      	movs	r3, #0
 8002b34:	e000      	b.n	8002b38 <HAL_InitTick+0x4c>
 8002b36:	2301      	movs	r3, #1
 8002b38:	4618      	mov	r0, r3
 8002b3a:	3708      	adds	r7, #8
 8002b3c:	46bd      	mov	sp, r7
 8002b3e:	bd80      	pop	{r7, pc}
 8002b40:	20000010 	.word	0x20000010
 8002b44:	20000018 	.word	0x20000018
 8002b48:	20000014 	.word	0x20000014

08002b4c <HAL_IncTick>:
 8002b4c:	b480      	push	{r7}
 8002b4e:	af00      	add	r7, sp, #0
 8002b50:	4b06      	ldr	r3, [pc, #24]	@ (8002b6c <HAL_IncTick+0x20>)
 8002b52:	781b      	ldrb	r3, [r3, #0]
 8002b54:	461a      	mov	r2, r3
 8002b56:	4b06      	ldr	r3, [pc, #24]	@ (8002b70 <HAL_IncTick+0x24>)
 8002b58:	681b      	ldr	r3, [r3, #0]
 8002b5a:	4413      	add	r3, r2
 8002b5c:	4a04      	ldr	r2, [pc, #16]	@ (8002b70 <HAL_IncTick+0x24>)
 8002b5e:	6013      	str	r3, [r2, #0]
 8002b60:	bf00      	nop
 8002b62:	46bd      	mov	sp, r7
 8002b64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b68:	4770      	bx	lr
 8002b6a:	bf00      	nop
 8002b6c:	20000018 	.word	0x20000018
 8002b70:	200002a4 	.word	0x200002a4

08002b74 <HAL_GetTick>:
 8002b74:	b480      	push	{r7}
 8002b76:	af00      	add	r7, sp, #0
 8002b78:	4b03      	ldr	r3, [pc, #12]	@ (8002b88 <HAL_GetTick+0x14>)
 8002b7a:	681b      	ldr	r3, [r3, #0]
 8002b7c:	4618      	mov	r0, r3
 8002b7e:	46bd      	mov	sp, r7
 8002b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b84:	4770      	bx	lr
 8002b86:	bf00      	nop
 8002b88:	200002a4 	.word	0x200002a4

08002b8c <HAL_Delay>:
 8002b8c:	b580      	push	{r7, lr}
 8002b8e:	b084      	sub	sp, #16
 8002b90:	af00      	add	r7, sp, #0
 8002b92:	6078      	str	r0, [r7, #4]
 8002b94:	f7ff ffee 	bl	8002b74 <HAL_GetTick>
 8002b98:	60b8      	str	r0, [r7, #8]
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	60fb      	str	r3, [r7, #12]
 8002b9e:	68fb      	ldr	r3, [r7, #12]
 8002ba0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002ba4:	d005      	beq.n	8002bb2 <HAL_Delay+0x26>
 8002ba6:	4b0a      	ldr	r3, [pc, #40]	@ (8002bd0 <HAL_Delay+0x44>)
 8002ba8:	781b      	ldrb	r3, [r3, #0]
 8002baa:	461a      	mov	r2, r3
 8002bac:	68fb      	ldr	r3, [r7, #12]
 8002bae:	4413      	add	r3, r2
 8002bb0:	60fb      	str	r3, [r7, #12]
 8002bb2:	bf00      	nop
 8002bb4:	f7ff ffde 	bl	8002b74 <HAL_GetTick>
 8002bb8:	4602      	mov	r2, r0
 8002bba:	68bb      	ldr	r3, [r7, #8]
 8002bbc:	1ad3      	subs	r3, r2, r3
 8002bbe:	68fa      	ldr	r2, [r7, #12]
 8002bc0:	429a      	cmp	r2, r3
 8002bc2:	d8f7      	bhi.n	8002bb4 <HAL_Delay+0x28>
 8002bc4:	bf00      	nop
 8002bc6:	bf00      	nop
 8002bc8:	3710      	adds	r7, #16
 8002bca:	46bd      	mov	sp, r7
 8002bcc:	bd80      	pop	{r7, pc}
 8002bce:	bf00      	nop
 8002bd0:	20000018 	.word	0x20000018

08002bd4 <__NVIC_SetPriorityGrouping>:
 8002bd4:	b480      	push	{r7}
 8002bd6:	b085      	sub	sp, #20
 8002bd8:	af00      	add	r7, sp, #0
 8002bda:	6078      	str	r0, [r7, #4]
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	f003 0307 	and.w	r3, r3, #7
 8002be2:	60fb      	str	r3, [r7, #12]
 8002be4:	4b0c      	ldr	r3, [pc, #48]	@ (8002c18 <__NVIC_SetPriorityGrouping+0x44>)
 8002be6:	68db      	ldr	r3, [r3, #12]
 8002be8:	60bb      	str	r3, [r7, #8]
 8002bea:	68ba      	ldr	r2, [r7, #8]
 8002bec:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002bf0:	4013      	ands	r3, r2
 8002bf2:	60bb      	str	r3, [r7, #8]
 8002bf4:	68fb      	ldr	r3, [r7, #12]
 8002bf6:	021a      	lsls	r2, r3, #8
 8002bf8:	68bb      	ldr	r3, [r7, #8]
 8002bfa:	4313      	orrs	r3, r2
 8002bfc:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002c00:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002c04:	60bb      	str	r3, [r7, #8]
 8002c06:	4a04      	ldr	r2, [pc, #16]	@ (8002c18 <__NVIC_SetPriorityGrouping+0x44>)
 8002c08:	68bb      	ldr	r3, [r7, #8]
 8002c0a:	60d3      	str	r3, [r2, #12]
 8002c0c:	bf00      	nop
 8002c0e:	3714      	adds	r7, #20
 8002c10:	46bd      	mov	sp, r7
 8002c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c16:	4770      	bx	lr
 8002c18:	e000ed00 	.word	0xe000ed00

08002c1c <__NVIC_GetPriorityGrouping>:
 8002c1c:	b480      	push	{r7}
 8002c1e:	af00      	add	r7, sp, #0
 8002c20:	4b04      	ldr	r3, [pc, #16]	@ (8002c34 <__NVIC_GetPriorityGrouping+0x18>)
 8002c22:	68db      	ldr	r3, [r3, #12]
 8002c24:	0a1b      	lsrs	r3, r3, #8
 8002c26:	f003 0307 	and.w	r3, r3, #7
 8002c2a:	4618      	mov	r0, r3
 8002c2c:	46bd      	mov	sp, r7
 8002c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c32:	4770      	bx	lr
 8002c34:	e000ed00 	.word	0xe000ed00

08002c38 <__NVIC_EnableIRQ>:
 8002c38:	b480      	push	{r7}
 8002c3a:	b083      	sub	sp, #12
 8002c3c:	af00      	add	r7, sp, #0
 8002c3e:	4603      	mov	r3, r0
 8002c40:	71fb      	strb	r3, [r7, #7]
 8002c42:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c46:	2b00      	cmp	r3, #0
 8002c48:	db0b      	blt.n	8002c62 <__NVIC_EnableIRQ+0x2a>
 8002c4a:	79fb      	ldrb	r3, [r7, #7]
 8002c4c:	f003 021f 	and.w	r2, r3, #31
 8002c50:	4907      	ldr	r1, [pc, #28]	@ (8002c70 <__NVIC_EnableIRQ+0x38>)
 8002c52:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c56:	095b      	lsrs	r3, r3, #5
 8002c58:	2001      	movs	r0, #1
 8002c5a:	fa00 f202 	lsl.w	r2, r0, r2
 8002c5e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002c62:	bf00      	nop
 8002c64:	370c      	adds	r7, #12
 8002c66:	46bd      	mov	sp, r7
 8002c68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c6c:	4770      	bx	lr
 8002c6e:	bf00      	nop
 8002c70:	e000e100 	.word	0xe000e100

08002c74 <__NVIC_SetPriority>:
 8002c74:	b480      	push	{r7}
 8002c76:	b083      	sub	sp, #12
 8002c78:	af00      	add	r7, sp, #0
 8002c7a:	4603      	mov	r3, r0
 8002c7c:	6039      	str	r1, [r7, #0]
 8002c7e:	71fb      	strb	r3, [r7, #7]
 8002c80:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c84:	2b00      	cmp	r3, #0
 8002c86:	db0a      	blt.n	8002c9e <__NVIC_SetPriority+0x2a>
 8002c88:	683b      	ldr	r3, [r7, #0]
 8002c8a:	b2da      	uxtb	r2, r3
 8002c8c:	490c      	ldr	r1, [pc, #48]	@ (8002cc0 <__NVIC_SetPriority+0x4c>)
 8002c8e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c92:	0112      	lsls	r2, r2, #4
 8002c94:	b2d2      	uxtb	r2, r2
 8002c96:	440b      	add	r3, r1
 8002c98:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002c9c:	e00a      	b.n	8002cb4 <__NVIC_SetPriority+0x40>
 8002c9e:	683b      	ldr	r3, [r7, #0]
 8002ca0:	b2da      	uxtb	r2, r3
 8002ca2:	4908      	ldr	r1, [pc, #32]	@ (8002cc4 <__NVIC_SetPriority+0x50>)
 8002ca4:	79fb      	ldrb	r3, [r7, #7]
 8002ca6:	f003 030f 	and.w	r3, r3, #15
 8002caa:	3b04      	subs	r3, #4
 8002cac:	0112      	lsls	r2, r2, #4
 8002cae:	b2d2      	uxtb	r2, r2
 8002cb0:	440b      	add	r3, r1
 8002cb2:	761a      	strb	r2, [r3, #24]
 8002cb4:	bf00      	nop
 8002cb6:	370c      	adds	r7, #12
 8002cb8:	46bd      	mov	sp, r7
 8002cba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cbe:	4770      	bx	lr
 8002cc0:	e000e100 	.word	0xe000e100
 8002cc4:	e000ed00 	.word	0xe000ed00

08002cc8 <NVIC_EncodePriority>:
 8002cc8:	b480      	push	{r7}
 8002cca:	b089      	sub	sp, #36	@ 0x24
 8002ccc:	af00      	add	r7, sp, #0
 8002cce:	60f8      	str	r0, [r7, #12]
 8002cd0:	60b9      	str	r1, [r7, #8]
 8002cd2:	607a      	str	r2, [r7, #4]
 8002cd4:	68fb      	ldr	r3, [r7, #12]
 8002cd6:	f003 0307 	and.w	r3, r3, #7
 8002cda:	61fb      	str	r3, [r7, #28]
 8002cdc:	69fb      	ldr	r3, [r7, #28]
 8002cde:	f1c3 0307 	rsb	r3, r3, #7
 8002ce2:	2b04      	cmp	r3, #4
 8002ce4:	bf28      	it	cs
 8002ce6:	2304      	movcs	r3, #4
 8002ce8:	61bb      	str	r3, [r7, #24]
 8002cea:	69fb      	ldr	r3, [r7, #28]
 8002cec:	3304      	adds	r3, #4
 8002cee:	2b06      	cmp	r3, #6
 8002cf0:	d902      	bls.n	8002cf8 <NVIC_EncodePriority+0x30>
 8002cf2:	69fb      	ldr	r3, [r7, #28]
 8002cf4:	3b03      	subs	r3, #3
 8002cf6:	e000      	b.n	8002cfa <NVIC_EncodePriority+0x32>
 8002cf8:	2300      	movs	r3, #0
 8002cfa:	617b      	str	r3, [r7, #20]
 8002cfc:	f04f 32ff 	mov.w	r2, #4294967295
 8002d00:	69bb      	ldr	r3, [r7, #24]
 8002d02:	fa02 f303 	lsl.w	r3, r2, r3
 8002d06:	43da      	mvns	r2, r3
 8002d08:	68bb      	ldr	r3, [r7, #8]
 8002d0a:	401a      	ands	r2, r3
 8002d0c:	697b      	ldr	r3, [r7, #20]
 8002d0e:	409a      	lsls	r2, r3
 8002d10:	f04f 31ff 	mov.w	r1, #4294967295
 8002d14:	697b      	ldr	r3, [r7, #20]
 8002d16:	fa01 f303 	lsl.w	r3, r1, r3
 8002d1a:	43d9      	mvns	r1, r3
 8002d1c:	687b      	ldr	r3, [r7, #4]
 8002d1e:	400b      	ands	r3, r1
 8002d20:	4313      	orrs	r3, r2
 8002d22:	4618      	mov	r0, r3
 8002d24:	3724      	adds	r7, #36	@ 0x24
 8002d26:	46bd      	mov	sp, r7
 8002d28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d2c:	4770      	bx	lr
	...

08002d30 <SysTick_Config>:
 8002d30:	b580      	push	{r7, lr}
 8002d32:	b082      	sub	sp, #8
 8002d34:	af00      	add	r7, sp, #0
 8002d36:	6078      	str	r0, [r7, #4]
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	3b01      	subs	r3, #1
 8002d3c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002d40:	d301      	bcc.n	8002d46 <SysTick_Config+0x16>
 8002d42:	2301      	movs	r3, #1
 8002d44:	e00f      	b.n	8002d66 <SysTick_Config+0x36>
 8002d46:	4a0a      	ldr	r2, [pc, #40]	@ (8002d70 <SysTick_Config+0x40>)
 8002d48:	687b      	ldr	r3, [r7, #4]
 8002d4a:	3b01      	subs	r3, #1
 8002d4c:	6053      	str	r3, [r2, #4]
 8002d4e:	210f      	movs	r1, #15
 8002d50:	f04f 30ff 	mov.w	r0, #4294967295
 8002d54:	f7ff ff8e 	bl	8002c74 <__NVIC_SetPriority>
 8002d58:	4b05      	ldr	r3, [pc, #20]	@ (8002d70 <SysTick_Config+0x40>)
 8002d5a:	2200      	movs	r2, #0
 8002d5c:	609a      	str	r2, [r3, #8]
 8002d5e:	4b04      	ldr	r3, [pc, #16]	@ (8002d70 <SysTick_Config+0x40>)
 8002d60:	2207      	movs	r2, #7
 8002d62:	601a      	str	r2, [r3, #0]
 8002d64:	2300      	movs	r3, #0
 8002d66:	4618      	mov	r0, r3
 8002d68:	3708      	adds	r7, #8
 8002d6a:	46bd      	mov	sp, r7
 8002d6c:	bd80      	pop	{r7, pc}
 8002d6e:	bf00      	nop
 8002d70:	e000e010 	.word	0xe000e010

08002d74 <HAL_NVIC_SetPriorityGrouping>:
 8002d74:	b580      	push	{r7, lr}
 8002d76:	b082      	sub	sp, #8
 8002d78:	af00      	add	r7, sp, #0
 8002d7a:	6078      	str	r0, [r7, #4]
 8002d7c:	6878      	ldr	r0, [r7, #4]
 8002d7e:	f7ff ff29 	bl	8002bd4 <__NVIC_SetPriorityGrouping>
 8002d82:	bf00      	nop
 8002d84:	3708      	adds	r7, #8
 8002d86:	46bd      	mov	sp, r7
 8002d88:	bd80      	pop	{r7, pc}

08002d8a <HAL_NVIC_SetPriority>:
 8002d8a:	b580      	push	{r7, lr}
 8002d8c:	b086      	sub	sp, #24
 8002d8e:	af00      	add	r7, sp, #0
 8002d90:	4603      	mov	r3, r0
 8002d92:	60b9      	str	r1, [r7, #8]
 8002d94:	607a      	str	r2, [r7, #4]
 8002d96:	73fb      	strb	r3, [r7, #15]
 8002d98:	2300      	movs	r3, #0
 8002d9a:	617b      	str	r3, [r7, #20]
 8002d9c:	f7ff ff3e 	bl	8002c1c <__NVIC_GetPriorityGrouping>
 8002da0:	6178      	str	r0, [r7, #20]
 8002da2:	687a      	ldr	r2, [r7, #4]
 8002da4:	68b9      	ldr	r1, [r7, #8]
 8002da6:	6978      	ldr	r0, [r7, #20]
 8002da8:	f7ff ff8e 	bl	8002cc8 <NVIC_EncodePriority>
 8002dac:	4602      	mov	r2, r0
 8002dae:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002db2:	4611      	mov	r1, r2
 8002db4:	4618      	mov	r0, r3
 8002db6:	f7ff ff5d 	bl	8002c74 <__NVIC_SetPriority>
 8002dba:	bf00      	nop
 8002dbc:	3718      	adds	r7, #24
 8002dbe:	46bd      	mov	sp, r7
 8002dc0:	bd80      	pop	{r7, pc}

08002dc2 <HAL_NVIC_EnableIRQ>:
 8002dc2:	b580      	push	{r7, lr}
 8002dc4:	b082      	sub	sp, #8
 8002dc6:	af00      	add	r7, sp, #0
 8002dc8:	4603      	mov	r3, r0
 8002dca:	71fb      	strb	r3, [r7, #7]
 8002dcc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002dd0:	4618      	mov	r0, r3
 8002dd2:	f7ff ff31 	bl	8002c38 <__NVIC_EnableIRQ>
 8002dd6:	bf00      	nop
 8002dd8:	3708      	adds	r7, #8
 8002dda:	46bd      	mov	sp, r7
 8002ddc:	bd80      	pop	{r7, pc}

08002dde <HAL_SYSTICK_Config>:
 8002dde:	b580      	push	{r7, lr}
 8002de0:	b082      	sub	sp, #8
 8002de2:	af00      	add	r7, sp, #0
 8002de4:	6078      	str	r0, [r7, #4]
 8002de6:	6878      	ldr	r0, [r7, #4]
 8002de8:	f7ff ffa2 	bl	8002d30 <SysTick_Config>
 8002dec:	4603      	mov	r3, r0
 8002dee:	4618      	mov	r0, r3
 8002df0:	3708      	adds	r7, #8
 8002df2:	46bd      	mov	sp, r7
 8002df4:	bd80      	pop	{r7, pc}
	...

08002df8 <HAL_GPIO_Init>:
 8002df8:	b480      	push	{r7}
 8002dfa:	b089      	sub	sp, #36	@ 0x24
 8002dfc:	af00      	add	r7, sp, #0
 8002dfe:	6078      	str	r0, [r7, #4]
 8002e00:	6039      	str	r1, [r7, #0]
 8002e02:	2300      	movs	r3, #0
 8002e04:	617b      	str	r3, [r7, #20]
 8002e06:	2300      	movs	r3, #0
 8002e08:	613b      	str	r3, [r7, #16]
 8002e0a:	2300      	movs	r3, #0
 8002e0c:	61bb      	str	r3, [r7, #24]
 8002e0e:	2300      	movs	r3, #0
 8002e10:	61fb      	str	r3, [r7, #28]
 8002e12:	e165      	b.n	80030e0 <HAL_GPIO_Init+0x2e8>
 8002e14:	2201      	movs	r2, #1
 8002e16:	69fb      	ldr	r3, [r7, #28]
 8002e18:	fa02 f303 	lsl.w	r3, r2, r3
 8002e1c:	617b      	str	r3, [r7, #20]
 8002e1e:	683b      	ldr	r3, [r7, #0]
 8002e20:	681b      	ldr	r3, [r3, #0]
 8002e22:	697a      	ldr	r2, [r7, #20]
 8002e24:	4013      	ands	r3, r2
 8002e26:	613b      	str	r3, [r7, #16]
 8002e28:	693a      	ldr	r2, [r7, #16]
 8002e2a:	697b      	ldr	r3, [r7, #20]
 8002e2c:	429a      	cmp	r2, r3
 8002e2e:	f040 8154 	bne.w	80030da <HAL_GPIO_Init+0x2e2>
 8002e32:	683b      	ldr	r3, [r7, #0]
 8002e34:	685b      	ldr	r3, [r3, #4]
 8002e36:	f003 0303 	and.w	r3, r3, #3
 8002e3a:	2b01      	cmp	r3, #1
 8002e3c:	d005      	beq.n	8002e4a <HAL_GPIO_Init+0x52>
 8002e3e:	683b      	ldr	r3, [r7, #0]
 8002e40:	685b      	ldr	r3, [r3, #4]
 8002e42:	f003 0303 	and.w	r3, r3, #3
 8002e46:	2b02      	cmp	r3, #2
 8002e48:	d130      	bne.n	8002eac <HAL_GPIO_Init+0xb4>
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	689b      	ldr	r3, [r3, #8]
 8002e4e:	61bb      	str	r3, [r7, #24]
 8002e50:	69fb      	ldr	r3, [r7, #28]
 8002e52:	005b      	lsls	r3, r3, #1
 8002e54:	2203      	movs	r2, #3
 8002e56:	fa02 f303 	lsl.w	r3, r2, r3
 8002e5a:	43db      	mvns	r3, r3
 8002e5c:	69ba      	ldr	r2, [r7, #24]
 8002e5e:	4013      	ands	r3, r2
 8002e60:	61bb      	str	r3, [r7, #24]
 8002e62:	683b      	ldr	r3, [r7, #0]
 8002e64:	68da      	ldr	r2, [r3, #12]
 8002e66:	69fb      	ldr	r3, [r7, #28]
 8002e68:	005b      	lsls	r3, r3, #1
 8002e6a:	fa02 f303 	lsl.w	r3, r2, r3
 8002e6e:	69ba      	ldr	r2, [r7, #24]
 8002e70:	4313      	orrs	r3, r2
 8002e72:	61bb      	str	r3, [r7, #24]
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	69ba      	ldr	r2, [r7, #24]
 8002e78:	609a      	str	r2, [r3, #8]
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	685b      	ldr	r3, [r3, #4]
 8002e7e:	61bb      	str	r3, [r7, #24]
 8002e80:	2201      	movs	r2, #1
 8002e82:	69fb      	ldr	r3, [r7, #28]
 8002e84:	fa02 f303 	lsl.w	r3, r2, r3
 8002e88:	43db      	mvns	r3, r3
 8002e8a:	69ba      	ldr	r2, [r7, #24]
 8002e8c:	4013      	ands	r3, r2
 8002e8e:	61bb      	str	r3, [r7, #24]
 8002e90:	683b      	ldr	r3, [r7, #0]
 8002e92:	685b      	ldr	r3, [r3, #4]
 8002e94:	091b      	lsrs	r3, r3, #4
 8002e96:	f003 0201 	and.w	r2, r3, #1
 8002e9a:	69fb      	ldr	r3, [r7, #28]
 8002e9c:	fa02 f303 	lsl.w	r3, r2, r3
 8002ea0:	69ba      	ldr	r2, [r7, #24]
 8002ea2:	4313      	orrs	r3, r2
 8002ea4:	61bb      	str	r3, [r7, #24]
 8002ea6:	687b      	ldr	r3, [r7, #4]
 8002ea8:	69ba      	ldr	r2, [r7, #24]
 8002eaa:	605a      	str	r2, [r3, #4]
 8002eac:	683b      	ldr	r3, [r7, #0]
 8002eae:	685b      	ldr	r3, [r3, #4]
 8002eb0:	f003 0303 	and.w	r3, r3, #3
 8002eb4:	2b03      	cmp	r3, #3
 8002eb6:	d017      	beq.n	8002ee8 <HAL_GPIO_Init+0xf0>
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	68db      	ldr	r3, [r3, #12]
 8002ebc:	61bb      	str	r3, [r7, #24]
 8002ebe:	69fb      	ldr	r3, [r7, #28]
 8002ec0:	005b      	lsls	r3, r3, #1
 8002ec2:	2203      	movs	r2, #3
 8002ec4:	fa02 f303 	lsl.w	r3, r2, r3
 8002ec8:	43db      	mvns	r3, r3
 8002eca:	69ba      	ldr	r2, [r7, #24]
 8002ecc:	4013      	ands	r3, r2
 8002ece:	61bb      	str	r3, [r7, #24]
 8002ed0:	683b      	ldr	r3, [r7, #0]
 8002ed2:	689a      	ldr	r2, [r3, #8]
 8002ed4:	69fb      	ldr	r3, [r7, #28]
 8002ed6:	005b      	lsls	r3, r3, #1
 8002ed8:	fa02 f303 	lsl.w	r3, r2, r3
 8002edc:	69ba      	ldr	r2, [r7, #24]
 8002ede:	4313      	orrs	r3, r2
 8002ee0:	61bb      	str	r3, [r7, #24]
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	69ba      	ldr	r2, [r7, #24]
 8002ee6:	60da      	str	r2, [r3, #12]
 8002ee8:	683b      	ldr	r3, [r7, #0]
 8002eea:	685b      	ldr	r3, [r3, #4]
 8002eec:	f003 0303 	and.w	r3, r3, #3
 8002ef0:	2b02      	cmp	r3, #2
 8002ef2:	d123      	bne.n	8002f3c <HAL_GPIO_Init+0x144>
 8002ef4:	69fb      	ldr	r3, [r7, #28]
 8002ef6:	08da      	lsrs	r2, r3, #3
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	3208      	adds	r2, #8
 8002efc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002f00:	61bb      	str	r3, [r7, #24]
 8002f02:	69fb      	ldr	r3, [r7, #28]
 8002f04:	f003 0307 	and.w	r3, r3, #7
 8002f08:	009b      	lsls	r3, r3, #2
 8002f0a:	220f      	movs	r2, #15
 8002f0c:	fa02 f303 	lsl.w	r3, r2, r3
 8002f10:	43db      	mvns	r3, r3
 8002f12:	69ba      	ldr	r2, [r7, #24]
 8002f14:	4013      	ands	r3, r2
 8002f16:	61bb      	str	r3, [r7, #24]
 8002f18:	683b      	ldr	r3, [r7, #0]
 8002f1a:	691a      	ldr	r2, [r3, #16]
 8002f1c:	69fb      	ldr	r3, [r7, #28]
 8002f1e:	f003 0307 	and.w	r3, r3, #7
 8002f22:	009b      	lsls	r3, r3, #2
 8002f24:	fa02 f303 	lsl.w	r3, r2, r3
 8002f28:	69ba      	ldr	r2, [r7, #24]
 8002f2a:	4313      	orrs	r3, r2
 8002f2c:	61bb      	str	r3, [r7, #24]
 8002f2e:	69fb      	ldr	r3, [r7, #28]
 8002f30:	08da      	lsrs	r2, r3, #3
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	3208      	adds	r2, #8
 8002f36:	69b9      	ldr	r1, [r7, #24]
 8002f38:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	681b      	ldr	r3, [r3, #0]
 8002f40:	61bb      	str	r3, [r7, #24]
 8002f42:	69fb      	ldr	r3, [r7, #28]
 8002f44:	005b      	lsls	r3, r3, #1
 8002f46:	2203      	movs	r2, #3
 8002f48:	fa02 f303 	lsl.w	r3, r2, r3
 8002f4c:	43db      	mvns	r3, r3
 8002f4e:	69ba      	ldr	r2, [r7, #24]
 8002f50:	4013      	ands	r3, r2
 8002f52:	61bb      	str	r3, [r7, #24]
 8002f54:	683b      	ldr	r3, [r7, #0]
 8002f56:	685b      	ldr	r3, [r3, #4]
 8002f58:	f003 0203 	and.w	r2, r3, #3
 8002f5c:	69fb      	ldr	r3, [r7, #28]
 8002f5e:	005b      	lsls	r3, r3, #1
 8002f60:	fa02 f303 	lsl.w	r3, r2, r3
 8002f64:	69ba      	ldr	r2, [r7, #24]
 8002f66:	4313      	orrs	r3, r2
 8002f68:	61bb      	str	r3, [r7, #24]
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	69ba      	ldr	r2, [r7, #24]
 8002f6e:	601a      	str	r2, [r3, #0]
 8002f70:	683b      	ldr	r3, [r7, #0]
 8002f72:	685b      	ldr	r3, [r3, #4]
 8002f74:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002f78:	2b00      	cmp	r3, #0
 8002f7a:	f000 80ae 	beq.w	80030da <HAL_GPIO_Init+0x2e2>
 8002f7e:	2300      	movs	r3, #0
 8002f80:	60fb      	str	r3, [r7, #12]
 8002f82:	4b5d      	ldr	r3, [pc, #372]	@ (80030f8 <HAL_GPIO_Init+0x300>)
 8002f84:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f86:	4a5c      	ldr	r2, [pc, #368]	@ (80030f8 <HAL_GPIO_Init+0x300>)
 8002f88:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002f8c:	6453      	str	r3, [r2, #68]	@ 0x44
 8002f8e:	4b5a      	ldr	r3, [pc, #360]	@ (80030f8 <HAL_GPIO_Init+0x300>)
 8002f90:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f92:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002f96:	60fb      	str	r3, [r7, #12]
 8002f98:	68fb      	ldr	r3, [r7, #12]
 8002f9a:	4a58      	ldr	r2, [pc, #352]	@ (80030fc <HAL_GPIO_Init+0x304>)
 8002f9c:	69fb      	ldr	r3, [r7, #28]
 8002f9e:	089b      	lsrs	r3, r3, #2
 8002fa0:	3302      	adds	r3, #2
 8002fa2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002fa6:	61bb      	str	r3, [r7, #24]
 8002fa8:	69fb      	ldr	r3, [r7, #28]
 8002faa:	f003 0303 	and.w	r3, r3, #3
 8002fae:	009b      	lsls	r3, r3, #2
 8002fb0:	220f      	movs	r2, #15
 8002fb2:	fa02 f303 	lsl.w	r3, r2, r3
 8002fb6:	43db      	mvns	r3, r3
 8002fb8:	69ba      	ldr	r2, [r7, #24]
 8002fba:	4013      	ands	r3, r2
 8002fbc:	61bb      	str	r3, [r7, #24]
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	4a4f      	ldr	r2, [pc, #316]	@ (8003100 <HAL_GPIO_Init+0x308>)
 8002fc2:	4293      	cmp	r3, r2
 8002fc4:	d025      	beq.n	8003012 <HAL_GPIO_Init+0x21a>
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	4a4e      	ldr	r2, [pc, #312]	@ (8003104 <HAL_GPIO_Init+0x30c>)
 8002fca:	4293      	cmp	r3, r2
 8002fcc:	d01f      	beq.n	800300e <HAL_GPIO_Init+0x216>
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	4a4d      	ldr	r2, [pc, #308]	@ (8003108 <HAL_GPIO_Init+0x310>)
 8002fd2:	4293      	cmp	r3, r2
 8002fd4:	d019      	beq.n	800300a <HAL_GPIO_Init+0x212>
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	4a4c      	ldr	r2, [pc, #304]	@ (800310c <HAL_GPIO_Init+0x314>)
 8002fda:	4293      	cmp	r3, r2
 8002fdc:	d013      	beq.n	8003006 <HAL_GPIO_Init+0x20e>
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	4a4b      	ldr	r2, [pc, #300]	@ (8003110 <HAL_GPIO_Init+0x318>)
 8002fe2:	4293      	cmp	r3, r2
 8002fe4:	d00d      	beq.n	8003002 <HAL_GPIO_Init+0x20a>
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	4a4a      	ldr	r2, [pc, #296]	@ (8003114 <HAL_GPIO_Init+0x31c>)
 8002fea:	4293      	cmp	r3, r2
 8002fec:	d007      	beq.n	8002ffe <HAL_GPIO_Init+0x206>
 8002fee:	687b      	ldr	r3, [r7, #4]
 8002ff0:	4a49      	ldr	r2, [pc, #292]	@ (8003118 <HAL_GPIO_Init+0x320>)
 8002ff2:	4293      	cmp	r3, r2
 8002ff4:	d101      	bne.n	8002ffa <HAL_GPIO_Init+0x202>
 8002ff6:	2306      	movs	r3, #6
 8002ff8:	e00c      	b.n	8003014 <HAL_GPIO_Init+0x21c>
 8002ffa:	2307      	movs	r3, #7
 8002ffc:	e00a      	b.n	8003014 <HAL_GPIO_Init+0x21c>
 8002ffe:	2305      	movs	r3, #5
 8003000:	e008      	b.n	8003014 <HAL_GPIO_Init+0x21c>
 8003002:	2304      	movs	r3, #4
 8003004:	e006      	b.n	8003014 <HAL_GPIO_Init+0x21c>
 8003006:	2303      	movs	r3, #3
 8003008:	e004      	b.n	8003014 <HAL_GPIO_Init+0x21c>
 800300a:	2302      	movs	r3, #2
 800300c:	e002      	b.n	8003014 <HAL_GPIO_Init+0x21c>
 800300e:	2301      	movs	r3, #1
 8003010:	e000      	b.n	8003014 <HAL_GPIO_Init+0x21c>
 8003012:	2300      	movs	r3, #0
 8003014:	69fa      	ldr	r2, [r7, #28]
 8003016:	f002 0203 	and.w	r2, r2, #3
 800301a:	0092      	lsls	r2, r2, #2
 800301c:	4093      	lsls	r3, r2
 800301e:	69ba      	ldr	r2, [r7, #24]
 8003020:	4313      	orrs	r3, r2
 8003022:	61bb      	str	r3, [r7, #24]
 8003024:	4935      	ldr	r1, [pc, #212]	@ (80030fc <HAL_GPIO_Init+0x304>)
 8003026:	69fb      	ldr	r3, [r7, #28]
 8003028:	089b      	lsrs	r3, r3, #2
 800302a:	3302      	adds	r3, #2
 800302c:	69ba      	ldr	r2, [r7, #24]
 800302e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003032:	4b3a      	ldr	r3, [pc, #232]	@ (800311c <HAL_GPIO_Init+0x324>)
 8003034:	689b      	ldr	r3, [r3, #8]
 8003036:	61bb      	str	r3, [r7, #24]
 8003038:	693b      	ldr	r3, [r7, #16]
 800303a:	43db      	mvns	r3, r3
 800303c:	69ba      	ldr	r2, [r7, #24]
 800303e:	4013      	ands	r3, r2
 8003040:	61bb      	str	r3, [r7, #24]
 8003042:	683b      	ldr	r3, [r7, #0]
 8003044:	685b      	ldr	r3, [r3, #4]
 8003046:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800304a:	2b00      	cmp	r3, #0
 800304c:	d003      	beq.n	8003056 <HAL_GPIO_Init+0x25e>
 800304e:	69ba      	ldr	r2, [r7, #24]
 8003050:	693b      	ldr	r3, [r7, #16]
 8003052:	4313      	orrs	r3, r2
 8003054:	61bb      	str	r3, [r7, #24]
 8003056:	4a31      	ldr	r2, [pc, #196]	@ (800311c <HAL_GPIO_Init+0x324>)
 8003058:	69bb      	ldr	r3, [r7, #24]
 800305a:	6093      	str	r3, [r2, #8]
 800305c:	4b2f      	ldr	r3, [pc, #188]	@ (800311c <HAL_GPIO_Init+0x324>)
 800305e:	68db      	ldr	r3, [r3, #12]
 8003060:	61bb      	str	r3, [r7, #24]
 8003062:	693b      	ldr	r3, [r7, #16]
 8003064:	43db      	mvns	r3, r3
 8003066:	69ba      	ldr	r2, [r7, #24]
 8003068:	4013      	ands	r3, r2
 800306a:	61bb      	str	r3, [r7, #24]
 800306c:	683b      	ldr	r3, [r7, #0]
 800306e:	685b      	ldr	r3, [r3, #4]
 8003070:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003074:	2b00      	cmp	r3, #0
 8003076:	d003      	beq.n	8003080 <HAL_GPIO_Init+0x288>
 8003078:	69ba      	ldr	r2, [r7, #24]
 800307a:	693b      	ldr	r3, [r7, #16]
 800307c:	4313      	orrs	r3, r2
 800307e:	61bb      	str	r3, [r7, #24]
 8003080:	4a26      	ldr	r2, [pc, #152]	@ (800311c <HAL_GPIO_Init+0x324>)
 8003082:	69bb      	ldr	r3, [r7, #24]
 8003084:	60d3      	str	r3, [r2, #12]
 8003086:	4b25      	ldr	r3, [pc, #148]	@ (800311c <HAL_GPIO_Init+0x324>)
 8003088:	685b      	ldr	r3, [r3, #4]
 800308a:	61bb      	str	r3, [r7, #24]
 800308c:	693b      	ldr	r3, [r7, #16]
 800308e:	43db      	mvns	r3, r3
 8003090:	69ba      	ldr	r2, [r7, #24]
 8003092:	4013      	ands	r3, r2
 8003094:	61bb      	str	r3, [r7, #24]
 8003096:	683b      	ldr	r3, [r7, #0]
 8003098:	685b      	ldr	r3, [r3, #4]
 800309a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d003      	beq.n	80030aa <HAL_GPIO_Init+0x2b2>
 80030a2:	69ba      	ldr	r2, [r7, #24]
 80030a4:	693b      	ldr	r3, [r7, #16]
 80030a6:	4313      	orrs	r3, r2
 80030a8:	61bb      	str	r3, [r7, #24]
 80030aa:	4a1c      	ldr	r2, [pc, #112]	@ (800311c <HAL_GPIO_Init+0x324>)
 80030ac:	69bb      	ldr	r3, [r7, #24]
 80030ae:	6053      	str	r3, [r2, #4]
 80030b0:	4b1a      	ldr	r3, [pc, #104]	@ (800311c <HAL_GPIO_Init+0x324>)
 80030b2:	681b      	ldr	r3, [r3, #0]
 80030b4:	61bb      	str	r3, [r7, #24]
 80030b6:	693b      	ldr	r3, [r7, #16]
 80030b8:	43db      	mvns	r3, r3
 80030ba:	69ba      	ldr	r2, [r7, #24]
 80030bc:	4013      	ands	r3, r2
 80030be:	61bb      	str	r3, [r7, #24]
 80030c0:	683b      	ldr	r3, [r7, #0]
 80030c2:	685b      	ldr	r3, [r3, #4]
 80030c4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80030c8:	2b00      	cmp	r3, #0
 80030ca:	d003      	beq.n	80030d4 <HAL_GPIO_Init+0x2dc>
 80030cc:	69ba      	ldr	r2, [r7, #24]
 80030ce:	693b      	ldr	r3, [r7, #16]
 80030d0:	4313      	orrs	r3, r2
 80030d2:	61bb      	str	r3, [r7, #24]
 80030d4:	4a11      	ldr	r2, [pc, #68]	@ (800311c <HAL_GPIO_Init+0x324>)
 80030d6:	69bb      	ldr	r3, [r7, #24]
 80030d8:	6013      	str	r3, [r2, #0]
 80030da:	69fb      	ldr	r3, [r7, #28]
 80030dc:	3301      	adds	r3, #1
 80030de:	61fb      	str	r3, [r7, #28]
 80030e0:	69fb      	ldr	r3, [r7, #28]
 80030e2:	2b0f      	cmp	r3, #15
 80030e4:	f67f ae96 	bls.w	8002e14 <HAL_GPIO_Init+0x1c>
 80030e8:	bf00      	nop
 80030ea:	bf00      	nop
 80030ec:	3724      	adds	r7, #36	@ 0x24
 80030ee:	46bd      	mov	sp, r7
 80030f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030f4:	4770      	bx	lr
 80030f6:	bf00      	nop
 80030f8:	40023800 	.word	0x40023800
 80030fc:	40013800 	.word	0x40013800
 8003100:	40020000 	.word	0x40020000
 8003104:	40020400 	.word	0x40020400
 8003108:	40020800 	.word	0x40020800
 800310c:	40020c00 	.word	0x40020c00
 8003110:	40021000 	.word	0x40021000
 8003114:	40021400 	.word	0x40021400
 8003118:	40021800 	.word	0x40021800
 800311c:	40013c00 	.word	0x40013c00

08003120 <HAL_GPIO_ReadPin>:
 8003120:	b480      	push	{r7}
 8003122:	b085      	sub	sp, #20
 8003124:	af00      	add	r7, sp, #0
 8003126:	6078      	str	r0, [r7, #4]
 8003128:	460b      	mov	r3, r1
 800312a:	807b      	strh	r3, [r7, #2]
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	691a      	ldr	r2, [r3, #16]
 8003130:	887b      	ldrh	r3, [r7, #2]
 8003132:	4013      	ands	r3, r2
 8003134:	2b00      	cmp	r3, #0
 8003136:	d002      	beq.n	800313e <HAL_GPIO_ReadPin+0x1e>
 8003138:	2301      	movs	r3, #1
 800313a:	73fb      	strb	r3, [r7, #15]
 800313c:	e001      	b.n	8003142 <HAL_GPIO_ReadPin+0x22>
 800313e:	2300      	movs	r3, #0
 8003140:	73fb      	strb	r3, [r7, #15]
 8003142:	7bfb      	ldrb	r3, [r7, #15]
 8003144:	4618      	mov	r0, r3
 8003146:	3714      	adds	r7, #20
 8003148:	46bd      	mov	sp, r7
 800314a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800314e:	4770      	bx	lr

08003150 <HAL_GPIO_WritePin>:
 8003150:	b480      	push	{r7}
 8003152:	b083      	sub	sp, #12
 8003154:	af00      	add	r7, sp, #0
 8003156:	6078      	str	r0, [r7, #4]
 8003158:	460b      	mov	r3, r1
 800315a:	807b      	strh	r3, [r7, #2]
 800315c:	4613      	mov	r3, r2
 800315e:	707b      	strb	r3, [r7, #1]
 8003160:	787b      	ldrb	r3, [r7, #1]
 8003162:	2b00      	cmp	r3, #0
 8003164:	d003      	beq.n	800316e <HAL_GPIO_WritePin+0x1e>
 8003166:	887a      	ldrh	r2, [r7, #2]
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	619a      	str	r2, [r3, #24]
 800316c:	e003      	b.n	8003176 <HAL_GPIO_WritePin+0x26>
 800316e:	887b      	ldrh	r3, [r7, #2]
 8003170:	041a      	lsls	r2, r3, #16
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	619a      	str	r2, [r3, #24]
 8003176:	bf00      	nop
 8003178:	370c      	adds	r7, #12
 800317a:	46bd      	mov	sp, r7
 800317c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003180:	4770      	bx	lr
	...

08003184 <HAL_I2C_Init>:
 8003184:	b580      	push	{r7, lr}
 8003186:	b084      	sub	sp, #16
 8003188:	af00      	add	r7, sp, #0
 800318a:	6078      	str	r0, [r7, #4]
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	2b00      	cmp	r3, #0
 8003190:	d101      	bne.n	8003196 <HAL_I2C_Init+0x12>
 8003192:	2301      	movs	r3, #1
 8003194:	e12b      	b.n	80033ee <HAL_I2C_Init+0x26a>
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800319c:	b2db      	uxtb	r3, r3
 800319e:	2b00      	cmp	r3, #0
 80031a0:	d106      	bne.n	80031b0 <HAL_I2C_Init+0x2c>
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	2200      	movs	r2, #0
 80031a6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80031aa:	6878      	ldr	r0, [r7, #4]
 80031ac:	f7fe f850 	bl	8001250 <HAL_I2C_MspInit>
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	2224      	movs	r2, #36	@ 0x24
 80031b4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	681b      	ldr	r3, [r3, #0]
 80031bc:	681a      	ldr	r2, [r3, #0]
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	681b      	ldr	r3, [r3, #0]
 80031c2:	f022 0201 	bic.w	r2, r2, #1
 80031c6:	601a      	str	r2, [r3, #0]
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	681a      	ldr	r2, [r3, #0]
 80031ce:	687b      	ldr	r3, [r7, #4]
 80031d0:	681b      	ldr	r3, [r3, #0]
 80031d2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80031d6:	601a      	str	r2, [r3, #0]
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	681a      	ldr	r2, [r3, #0]
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	681b      	ldr	r3, [r3, #0]
 80031e2:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80031e6:	601a      	str	r2, [r3, #0]
 80031e8:	f001 fa10 	bl	800460c <HAL_RCC_GetPCLK1Freq>
 80031ec:	60f8      	str	r0, [r7, #12]
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	685b      	ldr	r3, [r3, #4]
 80031f2:	4a81      	ldr	r2, [pc, #516]	@ (80033f8 <HAL_I2C_Init+0x274>)
 80031f4:	4293      	cmp	r3, r2
 80031f6:	d807      	bhi.n	8003208 <HAL_I2C_Init+0x84>
 80031f8:	68fb      	ldr	r3, [r7, #12]
 80031fa:	4a80      	ldr	r2, [pc, #512]	@ (80033fc <HAL_I2C_Init+0x278>)
 80031fc:	4293      	cmp	r3, r2
 80031fe:	bf94      	ite	ls
 8003200:	2301      	movls	r3, #1
 8003202:	2300      	movhi	r3, #0
 8003204:	b2db      	uxtb	r3, r3
 8003206:	e006      	b.n	8003216 <HAL_I2C_Init+0x92>
 8003208:	68fb      	ldr	r3, [r7, #12]
 800320a:	4a7d      	ldr	r2, [pc, #500]	@ (8003400 <HAL_I2C_Init+0x27c>)
 800320c:	4293      	cmp	r3, r2
 800320e:	bf94      	ite	ls
 8003210:	2301      	movls	r3, #1
 8003212:	2300      	movhi	r3, #0
 8003214:	b2db      	uxtb	r3, r3
 8003216:	2b00      	cmp	r3, #0
 8003218:	d001      	beq.n	800321e <HAL_I2C_Init+0x9a>
 800321a:	2301      	movs	r3, #1
 800321c:	e0e7      	b.n	80033ee <HAL_I2C_Init+0x26a>
 800321e:	68fb      	ldr	r3, [r7, #12]
 8003220:	4a78      	ldr	r2, [pc, #480]	@ (8003404 <HAL_I2C_Init+0x280>)
 8003222:	fba2 2303 	umull	r2, r3, r2, r3
 8003226:	0c9b      	lsrs	r3, r3, #18
 8003228:	60bb      	str	r3, [r7, #8]
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	681b      	ldr	r3, [r3, #0]
 800322e:	685b      	ldr	r3, [r3, #4]
 8003230:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	68ba      	ldr	r2, [r7, #8]
 800323a:	430a      	orrs	r2, r1
 800323c:	605a      	str	r2, [r3, #4]
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	6a1b      	ldr	r3, [r3, #32]
 8003244:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	685b      	ldr	r3, [r3, #4]
 800324c:	4a6a      	ldr	r2, [pc, #424]	@ (80033f8 <HAL_I2C_Init+0x274>)
 800324e:	4293      	cmp	r3, r2
 8003250:	d802      	bhi.n	8003258 <HAL_I2C_Init+0xd4>
 8003252:	68bb      	ldr	r3, [r7, #8]
 8003254:	3301      	adds	r3, #1
 8003256:	e009      	b.n	800326c <HAL_I2C_Init+0xe8>
 8003258:	68bb      	ldr	r3, [r7, #8]
 800325a:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800325e:	fb02 f303 	mul.w	r3, r2, r3
 8003262:	4a69      	ldr	r2, [pc, #420]	@ (8003408 <HAL_I2C_Init+0x284>)
 8003264:	fba2 2303 	umull	r2, r3, r2, r3
 8003268:	099b      	lsrs	r3, r3, #6
 800326a:	3301      	adds	r3, #1
 800326c:	687a      	ldr	r2, [r7, #4]
 800326e:	6812      	ldr	r2, [r2, #0]
 8003270:	430b      	orrs	r3, r1
 8003272:	6213      	str	r3, [r2, #32]
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	681b      	ldr	r3, [r3, #0]
 8003278:	69db      	ldr	r3, [r3, #28]
 800327a:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800327e:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8003282:	687b      	ldr	r3, [r7, #4]
 8003284:	685b      	ldr	r3, [r3, #4]
 8003286:	495c      	ldr	r1, [pc, #368]	@ (80033f8 <HAL_I2C_Init+0x274>)
 8003288:	428b      	cmp	r3, r1
 800328a:	d819      	bhi.n	80032c0 <HAL_I2C_Init+0x13c>
 800328c:	68fb      	ldr	r3, [r7, #12]
 800328e:	1e59      	subs	r1, r3, #1
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	685b      	ldr	r3, [r3, #4]
 8003294:	005b      	lsls	r3, r3, #1
 8003296:	fbb1 f3f3 	udiv	r3, r1, r3
 800329a:	1c59      	adds	r1, r3, #1
 800329c:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80032a0:	400b      	ands	r3, r1
 80032a2:	2b00      	cmp	r3, #0
 80032a4:	d00a      	beq.n	80032bc <HAL_I2C_Init+0x138>
 80032a6:	68fb      	ldr	r3, [r7, #12]
 80032a8:	1e59      	subs	r1, r3, #1
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	685b      	ldr	r3, [r3, #4]
 80032ae:	005b      	lsls	r3, r3, #1
 80032b0:	fbb1 f3f3 	udiv	r3, r1, r3
 80032b4:	3301      	adds	r3, #1
 80032b6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80032ba:	e051      	b.n	8003360 <HAL_I2C_Init+0x1dc>
 80032bc:	2304      	movs	r3, #4
 80032be:	e04f      	b.n	8003360 <HAL_I2C_Init+0x1dc>
 80032c0:	687b      	ldr	r3, [r7, #4]
 80032c2:	689b      	ldr	r3, [r3, #8]
 80032c4:	2b00      	cmp	r3, #0
 80032c6:	d111      	bne.n	80032ec <HAL_I2C_Init+0x168>
 80032c8:	68fb      	ldr	r3, [r7, #12]
 80032ca:	1e58      	subs	r0, r3, #1
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	6859      	ldr	r1, [r3, #4]
 80032d0:	460b      	mov	r3, r1
 80032d2:	005b      	lsls	r3, r3, #1
 80032d4:	440b      	add	r3, r1
 80032d6:	fbb0 f3f3 	udiv	r3, r0, r3
 80032da:	3301      	adds	r3, #1
 80032dc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80032e0:	2b00      	cmp	r3, #0
 80032e2:	bf0c      	ite	eq
 80032e4:	2301      	moveq	r3, #1
 80032e6:	2300      	movne	r3, #0
 80032e8:	b2db      	uxtb	r3, r3
 80032ea:	e012      	b.n	8003312 <HAL_I2C_Init+0x18e>
 80032ec:	68fb      	ldr	r3, [r7, #12]
 80032ee:	1e58      	subs	r0, r3, #1
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	6859      	ldr	r1, [r3, #4]
 80032f4:	460b      	mov	r3, r1
 80032f6:	009b      	lsls	r3, r3, #2
 80032f8:	440b      	add	r3, r1
 80032fa:	0099      	lsls	r1, r3, #2
 80032fc:	440b      	add	r3, r1
 80032fe:	fbb0 f3f3 	udiv	r3, r0, r3
 8003302:	3301      	adds	r3, #1
 8003304:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003308:	2b00      	cmp	r3, #0
 800330a:	bf0c      	ite	eq
 800330c:	2301      	moveq	r3, #1
 800330e:	2300      	movne	r3, #0
 8003310:	b2db      	uxtb	r3, r3
 8003312:	2b00      	cmp	r3, #0
 8003314:	d001      	beq.n	800331a <HAL_I2C_Init+0x196>
 8003316:	2301      	movs	r3, #1
 8003318:	e022      	b.n	8003360 <HAL_I2C_Init+0x1dc>
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	689b      	ldr	r3, [r3, #8]
 800331e:	2b00      	cmp	r3, #0
 8003320:	d10e      	bne.n	8003340 <HAL_I2C_Init+0x1bc>
 8003322:	68fb      	ldr	r3, [r7, #12]
 8003324:	1e58      	subs	r0, r3, #1
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	6859      	ldr	r1, [r3, #4]
 800332a:	460b      	mov	r3, r1
 800332c:	005b      	lsls	r3, r3, #1
 800332e:	440b      	add	r3, r1
 8003330:	fbb0 f3f3 	udiv	r3, r0, r3
 8003334:	3301      	adds	r3, #1
 8003336:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800333a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800333e:	e00f      	b.n	8003360 <HAL_I2C_Init+0x1dc>
 8003340:	68fb      	ldr	r3, [r7, #12]
 8003342:	1e58      	subs	r0, r3, #1
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	6859      	ldr	r1, [r3, #4]
 8003348:	460b      	mov	r3, r1
 800334a:	009b      	lsls	r3, r3, #2
 800334c:	440b      	add	r3, r1
 800334e:	0099      	lsls	r1, r3, #2
 8003350:	440b      	add	r3, r1
 8003352:	fbb0 f3f3 	udiv	r3, r0, r3
 8003356:	3301      	adds	r3, #1
 8003358:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800335c:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8003360:	6879      	ldr	r1, [r7, #4]
 8003362:	6809      	ldr	r1, [r1, #0]
 8003364:	4313      	orrs	r3, r2
 8003366:	61cb      	str	r3, [r1, #28]
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	681b      	ldr	r3, [r3, #0]
 800336e:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	69da      	ldr	r2, [r3, #28]
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	6a1b      	ldr	r3, [r3, #32]
 800337a:	431a      	orrs	r2, r3
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	681b      	ldr	r3, [r3, #0]
 8003380:	430a      	orrs	r2, r1
 8003382:	601a      	str	r2, [r3, #0]
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	681b      	ldr	r3, [r3, #0]
 8003388:	689b      	ldr	r3, [r3, #8]
 800338a:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800338e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8003392:	687a      	ldr	r2, [r7, #4]
 8003394:	6911      	ldr	r1, [r2, #16]
 8003396:	687a      	ldr	r2, [r7, #4]
 8003398:	68d2      	ldr	r2, [r2, #12]
 800339a:	4311      	orrs	r1, r2
 800339c:	687a      	ldr	r2, [r7, #4]
 800339e:	6812      	ldr	r2, [r2, #0]
 80033a0:	430b      	orrs	r3, r1
 80033a2:	6093      	str	r3, [r2, #8]
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	681b      	ldr	r3, [r3, #0]
 80033a8:	68db      	ldr	r3, [r3, #12]
 80033aa:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	695a      	ldr	r2, [r3, #20]
 80033b2:	687b      	ldr	r3, [r7, #4]
 80033b4:	699b      	ldr	r3, [r3, #24]
 80033b6:	431a      	orrs	r2, r3
 80033b8:	687b      	ldr	r3, [r7, #4]
 80033ba:	681b      	ldr	r3, [r3, #0]
 80033bc:	430a      	orrs	r2, r1
 80033be:	60da      	str	r2, [r3, #12]
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	681b      	ldr	r3, [r3, #0]
 80033c4:	681a      	ldr	r2, [r3, #0]
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	681b      	ldr	r3, [r3, #0]
 80033ca:	f042 0201 	orr.w	r2, r2, #1
 80033ce:	601a      	str	r2, [r3, #0]
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	2200      	movs	r2, #0
 80033d4:	641a      	str	r2, [r3, #64]	@ 0x40
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	2220      	movs	r2, #32
 80033da:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	2200      	movs	r2, #0
 80033e2:	631a      	str	r2, [r3, #48]	@ 0x30
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	2200      	movs	r2, #0
 80033e8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80033ec:	2300      	movs	r3, #0
 80033ee:	4618      	mov	r0, r3
 80033f0:	3710      	adds	r7, #16
 80033f2:	46bd      	mov	sp, r7
 80033f4:	bd80      	pop	{r7, pc}
 80033f6:	bf00      	nop
 80033f8:	000186a0 	.word	0x000186a0
 80033fc:	001e847f 	.word	0x001e847f
 8003400:	003d08ff 	.word	0x003d08ff
 8003404:	431bde83 	.word	0x431bde83
 8003408:	10624dd3 	.word	0x10624dd3

0800340c <HAL_I2C_Mem_Write>:
 800340c:	b580      	push	{r7, lr}
 800340e:	b088      	sub	sp, #32
 8003410:	af02      	add	r7, sp, #8
 8003412:	60f8      	str	r0, [r7, #12]
 8003414:	4608      	mov	r0, r1
 8003416:	4611      	mov	r1, r2
 8003418:	461a      	mov	r2, r3
 800341a:	4603      	mov	r3, r0
 800341c:	817b      	strh	r3, [r7, #10]
 800341e:	460b      	mov	r3, r1
 8003420:	813b      	strh	r3, [r7, #8]
 8003422:	4613      	mov	r3, r2
 8003424:	80fb      	strh	r3, [r7, #6]
 8003426:	f7ff fba5 	bl	8002b74 <HAL_GetTick>
 800342a:	6178      	str	r0, [r7, #20]
 800342c:	68fb      	ldr	r3, [r7, #12]
 800342e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003432:	b2db      	uxtb	r3, r3
 8003434:	2b20      	cmp	r3, #32
 8003436:	f040 80d9 	bne.w	80035ec <HAL_I2C_Mem_Write+0x1e0>
 800343a:	697b      	ldr	r3, [r7, #20]
 800343c:	9300      	str	r3, [sp, #0]
 800343e:	2319      	movs	r3, #25
 8003440:	2201      	movs	r2, #1
 8003442:	496d      	ldr	r1, [pc, #436]	@ (80035f8 <HAL_I2C_Mem_Write+0x1ec>)
 8003444:	68f8      	ldr	r0, [r7, #12]
 8003446:	f000 fdb9 	bl	8003fbc <I2C_WaitOnFlagUntilTimeout>
 800344a:	4603      	mov	r3, r0
 800344c:	2b00      	cmp	r3, #0
 800344e:	d001      	beq.n	8003454 <HAL_I2C_Mem_Write+0x48>
 8003450:	2302      	movs	r3, #2
 8003452:	e0cc      	b.n	80035ee <HAL_I2C_Mem_Write+0x1e2>
 8003454:	68fb      	ldr	r3, [r7, #12]
 8003456:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800345a:	2b01      	cmp	r3, #1
 800345c:	d101      	bne.n	8003462 <HAL_I2C_Mem_Write+0x56>
 800345e:	2302      	movs	r3, #2
 8003460:	e0c5      	b.n	80035ee <HAL_I2C_Mem_Write+0x1e2>
 8003462:	68fb      	ldr	r3, [r7, #12]
 8003464:	2201      	movs	r2, #1
 8003466:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	681b      	ldr	r3, [r3, #0]
 8003470:	f003 0301 	and.w	r3, r3, #1
 8003474:	2b01      	cmp	r3, #1
 8003476:	d007      	beq.n	8003488 <HAL_I2C_Mem_Write+0x7c>
 8003478:	68fb      	ldr	r3, [r7, #12]
 800347a:	681b      	ldr	r3, [r3, #0]
 800347c:	681a      	ldr	r2, [r3, #0]
 800347e:	68fb      	ldr	r3, [r7, #12]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	f042 0201 	orr.w	r2, r2, #1
 8003486:	601a      	str	r2, [r3, #0]
 8003488:	68fb      	ldr	r3, [r7, #12]
 800348a:	681b      	ldr	r3, [r3, #0]
 800348c:	681a      	ldr	r2, [r3, #0]
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003496:	601a      	str	r2, [r3, #0]
 8003498:	68fb      	ldr	r3, [r7, #12]
 800349a:	2221      	movs	r2, #33	@ 0x21
 800349c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80034a0:	68fb      	ldr	r3, [r7, #12]
 80034a2:	2240      	movs	r2, #64	@ 0x40
 80034a4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	2200      	movs	r2, #0
 80034ac:	641a      	str	r2, [r3, #64]	@ 0x40
 80034ae:	68fb      	ldr	r3, [r7, #12]
 80034b0:	6a3a      	ldr	r2, [r7, #32]
 80034b2:	625a      	str	r2, [r3, #36]	@ 0x24
 80034b4:	68fb      	ldr	r3, [r7, #12]
 80034b6:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 80034b8:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80034be:	b29a      	uxth	r2, r3
 80034c0:	68fb      	ldr	r3, [r7, #12]
 80034c2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80034c4:	68fb      	ldr	r3, [r7, #12]
 80034c6:	4a4d      	ldr	r2, [pc, #308]	@ (80035fc <HAL_I2C_Mem_Write+0x1f0>)
 80034c8:	62da      	str	r2, [r3, #44]	@ 0x2c
 80034ca:	88f8      	ldrh	r0, [r7, #6]
 80034cc:	893a      	ldrh	r2, [r7, #8]
 80034ce:	8979      	ldrh	r1, [r7, #10]
 80034d0:	697b      	ldr	r3, [r7, #20]
 80034d2:	9301      	str	r3, [sp, #4]
 80034d4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80034d6:	9300      	str	r3, [sp, #0]
 80034d8:	4603      	mov	r3, r0
 80034da:	68f8      	ldr	r0, [r7, #12]
 80034dc:	f000 fbf0 	bl	8003cc0 <I2C_RequestMemoryWrite>
 80034e0:	4603      	mov	r3, r0
 80034e2:	2b00      	cmp	r3, #0
 80034e4:	d052      	beq.n	800358c <HAL_I2C_Mem_Write+0x180>
 80034e6:	2301      	movs	r3, #1
 80034e8:	e081      	b.n	80035ee <HAL_I2C_Mem_Write+0x1e2>
 80034ea:	697a      	ldr	r2, [r7, #20]
 80034ec:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80034ee:	68f8      	ldr	r0, [r7, #12]
 80034f0:	f000 fe7e 	bl	80041f0 <I2C_WaitOnTXEFlagUntilTimeout>
 80034f4:	4603      	mov	r3, r0
 80034f6:	2b00      	cmp	r3, #0
 80034f8:	d00d      	beq.n	8003516 <HAL_I2C_Mem_Write+0x10a>
 80034fa:	68fb      	ldr	r3, [r7, #12]
 80034fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034fe:	2b04      	cmp	r3, #4
 8003500:	d107      	bne.n	8003512 <HAL_I2C_Mem_Write+0x106>
 8003502:	68fb      	ldr	r3, [r7, #12]
 8003504:	681b      	ldr	r3, [r3, #0]
 8003506:	681a      	ldr	r2, [r3, #0]
 8003508:	68fb      	ldr	r3, [r7, #12]
 800350a:	681b      	ldr	r3, [r3, #0]
 800350c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003510:	601a      	str	r2, [r3, #0]
 8003512:	2301      	movs	r3, #1
 8003514:	e06b      	b.n	80035ee <HAL_I2C_Mem_Write+0x1e2>
 8003516:	68fb      	ldr	r3, [r7, #12]
 8003518:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800351a:	781a      	ldrb	r2, [r3, #0]
 800351c:	68fb      	ldr	r3, [r7, #12]
 800351e:	681b      	ldr	r3, [r3, #0]
 8003520:	611a      	str	r2, [r3, #16]
 8003522:	68fb      	ldr	r3, [r7, #12]
 8003524:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003526:	1c5a      	adds	r2, r3, #1
 8003528:	68fb      	ldr	r3, [r7, #12]
 800352a:	625a      	str	r2, [r3, #36]	@ 0x24
 800352c:	68fb      	ldr	r3, [r7, #12]
 800352e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003530:	3b01      	subs	r3, #1
 8003532:	b29a      	uxth	r2, r3
 8003534:	68fb      	ldr	r3, [r7, #12]
 8003536:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003538:	68fb      	ldr	r3, [r7, #12]
 800353a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800353c:	b29b      	uxth	r3, r3
 800353e:	3b01      	subs	r3, #1
 8003540:	b29a      	uxth	r2, r3
 8003542:	68fb      	ldr	r3, [r7, #12]
 8003544:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003546:	68fb      	ldr	r3, [r7, #12]
 8003548:	681b      	ldr	r3, [r3, #0]
 800354a:	695b      	ldr	r3, [r3, #20]
 800354c:	f003 0304 	and.w	r3, r3, #4
 8003550:	2b04      	cmp	r3, #4
 8003552:	d11b      	bne.n	800358c <HAL_I2C_Mem_Write+0x180>
 8003554:	68fb      	ldr	r3, [r7, #12]
 8003556:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003558:	2b00      	cmp	r3, #0
 800355a:	d017      	beq.n	800358c <HAL_I2C_Mem_Write+0x180>
 800355c:	68fb      	ldr	r3, [r7, #12]
 800355e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003560:	781a      	ldrb	r2, [r3, #0]
 8003562:	68fb      	ldr	r3, [r7, #12]
 8003564:	681b      	ldr	r3, [r3, #0]
 8003566:	611a      	str	r2, [r3, #16]
 8003568:	68fb      	ldr	r3, [r7, #12]
 800356a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800356c:	1c5a      	adds	r2, r3, #1
 800356e:	68fb      	ldr	r3, [r7, #12]
 8003570:	625a      	str	r2, [r3, #36]	@ 0x24
 8003572:	68fb      	ldr	r3, [r7, #12]
 8003574:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003576:	3b01      	subs	r3, #1
 8003578:	b29a      	uxth	r2, r3
 800357a:	68fb      	ldr	r3, [r7, #12]
 800357c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800357e:	68fb      	ldr	r3, [r7, #12]
 8003580:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003582:	b29b      	uxth	r3, r3
 8003584:	3b01      	subs	r3, #1
 8003586:	b29a      	uxth	r2, r3
 8003588:	68fb      	ldr	r3, [r7, #12]
 800358a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800358c:	68fb      	ldr	r3, [r7, #12]
 800358e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003590:	2b00      	cmp	r3, #0
 8003592:	d1aa      	bne.n	80034ea <HAL_I2C_Mem_Write+0xde>
 8003594:	697a      	ldr	r2, [r7, #20]
 8003596:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003598:	68f8      	ldr	r0, [r7, #12]
 800359a:	f000 fe71 	bl	8004280 <I2C_WaitOnBTFFlagUntilTimeout>
 800359e:	4603      	mov	r3, r0
 80035a0:	2b00      	cmp	r3, #0
 80035a2:	d00d      	beq.n	80035c0 <HAL_I2C_Mem_Write+0x1b4>
 80035a4:	68fb      	ldr	r3, [r7, #12]
 80035a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80035a8:	2b04      	cmp	r3, #4
 80035aa:	d107      	bne.n	80035bc <HAL_I2C_Mem_Write+0x1b0>
 80035ac:	68fb      	ldr	r3, [r7, #12]
 80035ae:	681b      	ldr	r3, [r3, #0]
 80035b0:	681a      	ldr	r2, [r3, #0]
 80035b2:	68fb      	ldr	r3, [r7, #12]
 80035b4:	681b      	ldr	r3, [r3, #0]
 80035b6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80035ba:	601a      	str	r2, [r3, #0]
 80035bc:	2301      	movs	r3, #1
 80035be:	e016      	b.n	80035ee <HAL_I2C_Mem_Write+0x1e2>
 80035c0:	68fb      	ldr	r3, [r7, #12]
 80035c2:	681b      	ldr	r3, [r3, #0]
 80035c4:	681a      	ldr	r2, [r3, #0]
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80035ce:	601a      	str	r2, [r3, #0]
 80035d0:	68fb      	ldr	r3, [r7, #12]
 80035d2:	2220      	movs	r2, #32
 80035d4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80035d8:	68fb      	ldr	r3, [r7, #12]
 80035da:	2200      	movs	r2, #0
 80035dc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80035e0:	68fb      	ldr	r3, [r7, #12]
 80035e2:	2200      	movs	r2, #0
 80035e4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80035e8:	2300      	movs	r3, #0
 80035ea:	e000      	b.n	80035ee <HAL_I2C_Mem_Write+0x1e2>
 80035ec:	2302      	movs	r3, #2
 80035ee:	4618      	mov	r0, r3
 80035f0:	3718      	adds	r7, #24
 80035f2:	46bd      	mov	sp, r7
 80035f4:	bd80      	pop	{r7, pc}
 80035f6:	bf00      	nop
 80035f8:	00100002 	.word	0x00100002
 80035fc:	ffff0000 	.word	0xffff0000

08003600 <HAL_I2C_Mem_Read>:
 8003600:	b580      	push	{r7, lr}
 8003602:	b08c      	sub	sp, #48	@ 0x30
 8003604:	af02      	add	r7, sp, #8
 8003606:	60f8      	str	r0, [r7, #12]
 8003608:	4608      	mov	r0, r1
 800360a:	4611      	mov	r1, r2
 800360c:	461a      	mov	r2, r3
 800360e:	4603      	mov	r3, r0
 8003610:	817b      	strh	r3, [r7, #10]
 8003612:	460b      	mov	r3, r1
 8003614:	813b      	strh	r3, [r7, #8]
 8003616:	4613      	mov	r3, r2
 8003618:	80fb      	strh	r3, [r7, #6]
 800361a:	f7ff faab 	bl	8002b74 <HAL_GetTick>
 800361e:	6278      	str	r0, [r7, #36]	@ 0x24
 8003620:	68fb      	ldr	r3, [r7, #12]
 8003622:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003626:	b2db      	uxtb	r3, r3
 8003628:	2b20      	cmp	r3, #32
 800362a:	f040 8214 	bne.w	8003a56 <HAL_I2C_Mem_Read+0x456>
 800362e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003630:	9300      	str	r3, [sp, #0]
 8003632:	2319      	movs	r3, #25
 8003634:	2201      	movs	r2, #1
 8003636:	497b      	ldr	r1, [pc, #492]	@ (8003824 <HAL_I2C_Mem_Read+0x224>)
 8003638:	68f8      	ldr	r0, [r7, #12]
 800363a:	f000 fcbf 	bl	8003fbc <I2C_WaitOnFlagUntilTimeout>
 800363e:	4603      	mov	r3, r0
 8003640:	2b00      	cmp	r3, #0
 8003642:	d001      	beq.n	8003648 <HAL_I2C_Mem_Read+0x48>
 8003644:	2302      	movs	r3, #2
 8003646:	e207      	b.n	8003a58 <HAL_I2C_Mem_Read+0x458>
 8003648:	68fb      	ldr	r3, [r7, #12]
 800364a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800364e:	2b01      	cmp	r3, #1
 8003650:	d101      	bne.n	8003656 <HAL_I2C_Mem_Read+0x56>
 8003652:	2302      	movs	r3, #2
 8003654:	e200      	b.n	8003a58 <HAL_I2C_Mem_Read+0x458>
 8003656:	68fb      	ldr	r3, [r7, #12]
 8003658:	2201      	movs	r2, #1
 800365a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800365e:	68fb      	ldr	r3, [r7, #12]
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	681b      	ldr	r3, [r3, #0]
 8003664:	f003 0301 	and.w	r3, r3, #1
 8003668:	2b01      	cmp	r3, #1
 800366a:	d007      	beq.n	800367c <HAL_I2C_Mem_Read+0x7c>
 800366c:	68fb      	ldr	r3, [r7, #12]
 800366e:	681b      	ldr	r3, [r3, #0]
 8003670:	681a      	ldr	r2, [r3, #0]
 8003672:	68fb      	ldr	r3, [r7, #12]
 8003674:	681b      	ldr	r3, [r3, #0]
 8003676:	f042 0201 	orr.w	r2, r2, #1
 800367a:	601a      	str	r2, [r3, #0]
 800367c:	68fb      	ldr	r3, [r7, #12]
 800367e:	681b      	ldr	r3, [r3, #0]
 8003680:	681a      	ldr	r2, [r3, #0]
 8003682:	68fb      	ldr	r3, [r7, #12]
 8003684:	681b      	ldr	r3, [r3, #0]
 8003686:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800368a:	601a      	str	r2, [r3, #0]
 800368c:	68fb      	ldr	r3, [r7, #12]
 800368e:	2222      	movs	r2, #34	@ 0x22
 8003690:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003694:	68fb      	ldr	r3, [r7, #12]
 8003696:	2240      	movs	r2, #64	@ 0x40
 8003698:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800369c:	68fb      	ldr	r3, [r7, #12]
 800369e:	2200      	movs	r2, #0
 80036a0:	641a      	str	r2, [r3, #64]	@ 0x40
 80036a2:	68fb      	ldr	r3, [r7, #12]
 80036a4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80036a6:	625a      	str	r2, [r3, #36]	@ 0x24
 80036a8:	68fb      	ldr	r3, [r7, #12]
 80036aa:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 80036ac:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80036ae:	68fb      	ldr	r3, [r7, #12]
 80036b0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80036b2:	b29a      	uxth	r2, r3
 80036b4:	68fb      	ldr	r3, [r7, #12]
 80036b6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80036b8:	68fb      	ldr	r3, [r7, #12]
 80036ba:	4a5b      	ldr	r2, [pc, #364]	@ (8003828 <HAL_I2C_Mem_Read+0x228>)
 80036bc:	62da      	str	r2, [r3, #44]	@ 0x2c
 80036be:	88f8      	ldrh	r0, [r7, #6]
 80036c0:	893a      	ldrh	r2, [r7, #8]
 80036c2:	8979      	ldrh	r1, [r7, #10]
 80036c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80036c6:	9301      	str	r3, [sp, #4]
 80036c8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80036ca:	9300      	str	r3, [sp, #0]
 80036cc:	4603      	mov	r3, r0
 80036ce:	68f8      	ldr	r0, [r7, #12]
 80036d0:	f000 fb8c 	bl	8003dec <I2C_RequestMemoryRead>
 80036d4:	4603      	mov	r3, r0
 80036d6:	2b00      	cmp	r3, #0
 80036d8:	d001      	beq.n	80036de <HAL_I2C_Mem_Read+0xde>
 80036da:	2301      	movs	r3, #1
 80036dc:	e1bc      	b.n	8003a58 <HAL_I2C_Mem_Read+0x458>
 80036de:	68fb      	ldr	r3, [r7, #12]
 80036e0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80036e2:	2b00      	cmp	r3, #0
 80036e4:	d113      	bne.n	800370e <HAL_I2C_Mem_Read+0x10e>
 80036e6:	2300      	movs	r3, #0
 80036e8:	623b      	str	r3, [r7, #32]
 80036ea:	68fb      	ldr	r3, [r7, #12]
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	695b      	ldr	r3, [r3, #20]
 80036f0:	623b      	str	r3, [r7, #32]
 80036f2:	68fb      	ldr	r3, [r7, #12]
 80036f4:	681b      	ldr	r3, [r3, #0]
 80036f6:	699b      	ldr	r3, [r3, #24]
 80036f8:	623b      	str	r3, [r7, #32]
 80036fa:	6a3b      	ldr	r3, [r7, #32]
 80036fc:	68fb      	ldr	r3, [r7, #12]
 80036fe:	681b      	ldr	r3, [r3, #0]
 8003700:	681a      	ldr	r2, [r3, #0]
 8003702:	68fb      	ldr	r3, [r7, #12]
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800370a:	601a      	str	r2, [r3, #0]
 800370c:	e190      	b.n	8003a30 <HAL_I2C_Mem_Read+0x430>
 800370e:	68fb      	ldr	r3, [r7, #12]
 8003710:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003712:	2b01      	cmp	r3, #1
 8003714:	d11b      	bne.n	800374e <HAL_I2C_Mem_Read+0x14e>
 8003716:	68fb      	ldr	r3, [r7, #12]
 8003718:	681b      	ldr	r3, [r3, #0]
 800371a:	681a      	ldr	r2, [r3, #0]
 800371c:	68fb      	ldr	r3, [r7, #12]
 800371e:	681b      	ldr	r3, [r3, #0]
 8003720:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003724:	601a      	str	r2, [r3, #0]
 8003726:	2300      	movs	r3, #0
 8003728:	61fb      	str	r3, [r7, #28]
 800372a:	68fb      	ldr	r3, [r7, #12]
 800372c:	681b      	ldr	r3, [r3, #0]
 800372e:	695b      	ldr	r3, [r3, #20]
 8003730:	61fb      	str	r3, [r7, #28]
 8003732:	68fb      	ldr	r3, [r7, #12]
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	699b      	ldr	r3, [r3, #24]
 8003738:	61fb      	str	r3, [r7, #28]
 800373a:	69fb      	ldr	r3, [r7, #28]
 800373c:	68fb      	ldr	r3, [r7, #12]
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	681a      	ldr	r2, [r3, #0]
 8003742:	68fb      	ldr	r3, [r7, #12]
 8003744:	681b      	ldr	r3, [r3, #0]
 8003746:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800374a:	601a      	str	r2, [r3, #0]
 800374c:	e170      	b.n	8003a30 <HAL_I2C_Mem_Read+0x430>
 800374e:	68fb      	ldr	r3, [r7, #12]
 8003750:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003752:	2b02      	cmp	r3, #2
 8003754:	d11b      	bne.n	800378e <HAL_I2C_Mem_Read+0x18e>
 8003756:	68fb      	ldr	r3, [r7, #12]
 8003758:	681b      	ldr	r3, [r3, #0]
 800375a:	681a      	ldr	r2, [r3, #0]
 800375c:	68fb      	ldr	r3, [r7, #12]
 800375e:	681b      	ldr	r3, [r3, #0]
 8003760:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003764:	601a      	str	r2, [r3, #0]
 8003766:	68fb      	ldr	r3, [r7, #12]
 8003768:	681b      	ldr	r3, [r3, #0]
 800376a:	681a      	ldr	r2, [r3, #0]
 800376c:	68fb      	ldr	r3, [r7, #12]
 800376e:	681b      	ldr	r3, [r3, #0]
 8003770:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003774:	601a      	str	r2, [r3, #0]
 8003776:	2300      	movs	r3, #0
 8003778:	61bb      	str	r3, [r7, #24]
 800377a:	68fb      	ldr	r3, [r7, #12]
 800377c:	681b      	ldr	r3, [r3, #0]
 800377e:	695b      	ldr	r3, [r3, #20]
 8003780:	61bb      	str	r3, [r7, #24]
 8003782:	68fb      	ldr	r3, [r7, #12]
 8003784:	681b      	ldr	r3, [r3, #0]
 8003786:	699b      	ldr	r3, [r3, #24]
 8003788:	61bb      	str	r3, [r7, #24]
 800378a:	69bb      	ldr	r3, [r7, #24]
 800378c:	e150      	b.n	8003a30 <HAL_I2C_Mem_Read+0x430>
 800378e:	2300      	movs	r3, #0
 8003790:	617b      	str	r3, [r7, #20]
 8003792:	68fb      	ldr	r3, [r7, #12]
 8003794:	681b      	ldr	r3, [r3, #0]
 8003796:	695b      	ldr	r3, [r3, #20]
 8003798:	617b      	str	r3, [r7, #20]
 800379a:	68fb      	ldr	r3, [r7, #12]
 800379c:	681b      	ldr	r3, [r3, #0]
 800379e:	699b      	ldr	r3, [r3, #24]
 80037a0:	617b      	str	r3, [r7, #20]
 80037a2:	697b      	ldr	r3, [r7, #20]
 80037a4:	e144      	b.n	8003a30 <HAL_I2C_Mem_Read+0x430>
 80037a6:	68fb      	ldr	r3, [r7, #12]
 80037a8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80037aa:	2b03      	cmp	r3, #3
 80037ac:	f200 80f1 	bhi.w	8003992 <HAL_I2C_Mem_Read+0x392>
 80037b0:	68fb      	ldr	r3, [r7, #12]
 80037b2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80037b4:	2b01      	cmp	r3, #1
 80037b6:	d123      	bne.n	8003800 <HAL_I2C_Mem_Read+0x200>
 80037b8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80037ba:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 80037bc:	68f8      	ldr	r0, [r7, #12]
 80037be:	f000 fda7 	bl	8004310 <I2C_WaitOnRXNEFlagUntilTimeout>
 80037c2:	4603      	mov	r3, r0
 80037c4:	2b00      	cmp	r3, #0
 80037c6:	d001      	beq.n	80037cc <HAL_I2C_Mem_Read+0x1cc>
 80037c8:	2301      	movs	r3, #1
 80037ca:	e145      	b.n	8003a58 <HAL_I2C_Mem_Read+0x458>
 80037cc:	68fb      	ldr	r3, [r7, #12]
 80037ce:	681b      	ldr	r3, [r3, #0]
 80037d0:	691a      	ldr	r2, [r3, #16]
 80037d2:	68fb      	ldr	r3, [r7, #12]
 80037d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80037d6:	b2d2      	uxtb	r2, r2
 80037d8:	701a      	strb	r2, [r3, #0]
 80037da:	68fb      	ldr	r3, [r7, #12]
 80037dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80037de:	1c5a      	adds	r2, r3, #1
 80037e0:	68fb      	ldr	r3, [r7, #12]
 80037e2:	625a      	str	r2, [r3, #36]	@ 0x24
 80037e4:	68fb      	ldr	r3, [r7, #12]
 80037e6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80037e8:	3b01      	subs	r3, #1
 80037ea:	b29a      	uxth	r2, r3
 80037ec:	68fb      	ldr	r3, [r7, #12]
 80037ee:	851a      	strh	r2, [r3, #40]	@ 0x28
 80037f0:	68fb      	ldr	r3, [r7, #12]
 80037f2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80037f4:	b29b      	uxth	r3, r3
 80037f6:	3b01      	subs	r3, #1
 80037f8:	b29a      	uxth	r2, r3
 80037fa:	68fb      	ldr	r3, [r7, #12]
 80037fc:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80037fe:	e117      	b.n	8003a30 <HAL_I2C_Mem_Read+0x430>
 8003800:	68fb      	ldr	r3, [r7, #12]
 8003802:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003804:	2b02      	cmp	r3, #2
 8003806:	d14e      	bne.n	80038a6 <HAL_I2C_Mem_Read+0x2a6>
 8003808:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800380a:	9300      	str	r3, [sp, #0]
 800380c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800380e:	2200      	movs	r2, #0
 8003810:	4906      	ldr	r1, [pc, #24]	@ (800382c <HAL_I2C_Mem_Read+0x22c>)
 8003812:	68f8      	ldr	r0, [r7, #12]
 8003814:	f000 fbd2 	bl	8003fbc <I2C_WaitOnFlagUntilTimeout>
 8003818:	4603      	mov	r3, r0
 800381a:	2b00      	cmp	r3, #0
 800381c:	d008      	beq.n	8003830 <HAL_I2C_Mem_Read+0x230>
 800381e:	2301      	movs	r3, #1
 8003820:	e11a      	b.n	8003a58 <HAL_I2C_Mem_Read+0x458>
 8003822:	bf00      	nop
 8003824:	00100002 	.word	0x00100002
 8003828:	ffff0000 	.word	0xffff0000
 800382c:	00010004 	.word	0x00010004
 8003830:	68fb      	ldr	r3, [r7, #12]
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	681a      	ldr	r2, [r3, #0]
 8003836:	68fb      	ldr	r3, [r7, #12]
 8003838:	681b      	ldr	r3, [r3, #0]
 800383a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800383e:	601a      	str	r2, [r3, #0]
 8003840:	68fb      	ldr	r3, [r7, #12]
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	691a      	ldr	r2, [r3, #16]
 8003846:	68fb      	ldr	r3, [r7, #12]
 8003848:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800384a:	b2d2      	uxtb	r2, r2
 800384c:	701a      	strb	r2, [r3, #0]
 800384e:	68fb      	ldr	r3, [r7, #12]
 8003850:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003852:	1c5a      	adds	r2, r3, #1
 8003854:	68fb      	ldr	r3, [r7, #12]
 8003856:	625a      	str	r2, [r3, #36]	@ 0x24
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800385c:	3b01      	subs	r3, #1
 800385e:	b29a      	uxth	r2, r3
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003864:	68fb      	ldr	r3, [r7, #12]
 8003866:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003868:	b29b      	uxth	r3, r3
 800386a:	3b01      	subs	r3, #1
 800386c:	b29a      	uxth	r2, r3
 800386e:	68fb      	ldr	r3, [r7, #12]
 8003870:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003872:	68fb      	ldr	r3, [r7, #12]
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	691a      	ldr	r2, [r3, #16]
 8003878:	68fb      	ldr	r3, [r7, #12]
 800387a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800387c:	b2d2      	uxtb	r2, r2
 800387e:	701a      	strb	r2, [r3, #0]
 8003880:	68fb      	ldr	r3, [r7, #12]
 8003882:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003884:	1c5a      	adds	r2, r3, #1
 8003886:	68fb      	ldr	r3, [r7, #12]
 8003888:	625a      	str	r2, [r3, #36]	@ 0x24
 800388a:	68fb      	ldr	r3, [r7, #12]
 800388c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800388e:	3b01      	subs	r3, #1
 8003890:	b29a      	uxth	r2, r3
 8003892:	68fb      	ldr	r3, [r7, #12]
 8003894:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003896:	68fb      	ldr	r3, [r7, #12]
 8003898:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800389a:	b29b      	uxth	r3, r3
 800389c:	3b01      	subs	r3, #1
 800389e:	b29a      	uxth	r2, r3
 80038a0:	68fb      	ldr	r3, [r7, #12]
 80038a2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80038a4:	e0c4      	b.n	8003a30 <HAL_I2C_Mem_Read+0x430>
 80038a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80038a8:	9300      	str	r3, [sp, #0]
 80038aa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80038ac:	2200      	movs	r2, #0
 80038ae:	496c      	ldr	r1, [pc, #432]	@ (8003a60 <HAL_I2C_Mem_Read+0x460>)
 80038b0:	68f8      	ldr	r0, [r7, #12]
 80038b2:	f000 fb83 	bl	8003fbc <I2C_WaitOnFlagUntilTimeout>
 80038b6:	4603      	mov	r3, r0
 80038b8:	2b00      	cmp	r3, #0
 80038ba:	d001      	beq.n	80038c0 <HAL_I2C_Mem_Read+0x2c0>
 80038bc:	2301      	movs	r3, #1
 80038be:	e0cb      	b.n	8003a58 <HAL_I2C_Mem_Read+0x458>
 80038c0:	68fb      	ldr	r3, [r7, #12]
 80038c2:	681b      	ldr	r3, [r3, #0]
 80038c4:	681a      	ldr	r2, [r3, #0]
 80038c6:	68fb      	ldr	r3, [r7, #12]
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80038ce:	601a      	str	r2, [r3, #0]
 80038d0:	68fb      	ldr	r3, [r7, #12]
 80038d2:	681b      	ldr	r3, [r3, #0]
 80038d4:	691a      	ldr	r2, [r3, #16]
 80038d6:	68fb      	ldr	r3, [r7, #12]
 80038d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80038da:	b2d2      	uxtb	r2, r2
 80038dc:	701a      	strb	r2, [r3, #0]
 80038de:	68fb      	ldr	r3, [r7, #12]
 80038e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80038e2:	1c5a      	adds	r2, r3, #1
 80038e4:	68fb      	ldr	r3, [r7, #12]
 80038e6:	625a      	str	r2, [r3, #36]	@ 0x24
 80038e8:	68fb      	ldr	r3, [r7, #12]
 80038ea:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80038ec:	3b01      	subs	r3, #1
 80038ee:	b29a      	uxth	r2, r3
 80038f0:	68fb      	ldr	r3, [r7, #12]
 80038f2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80038f4:	68fb      	ldr	r3, [r7, #12]
 80038f6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80038f8:	b29b      	uxth	r3, r3
 80038fa:	3b01      	subs	r3, #1
 80038fc:	b29a      	uxth	r2, r3
 80038fe:	68fb      	ldr	r3, [r7, #12]
 8003900:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003902:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003904:	9300      	str	r3, [sp, #0]
 8003906:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003908:	2200      	movs	r2, #0
 800390a:	4955      	ldr	r1, [pc, #340]	@ (8003a60 <HAL_I2C_Mem_Read+0x460>)
 800390c:	68f8      	ldr	r0, [r7, #12]
 800390e:	f000 fb55 	bl	8003fbc <I2C_WaitOnFlagUntilTimeout>
 8003912:	4603      	mov	r3, r0
 8003914:	2b00      	cmp	r3, #0
 8003916:	d001      	beq.n	800391c <HAL_I2C_Mem_Read+0x31c>
 8003918:	2301      	movs	r3, #1
 800391a:	e09d      	b.n	8003a58 <HAL_I2C_Mem_Read+0x458>
 800391c:	68fb      	ldr	r3, [r7, #12]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	681a      	ldr	r2, [r3, #0]
 8003922:	68fb      	ldr	r3, [r7, #12]
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800392a:	601a      	str	r2, [r3, #0]
 800392c:	68fb      	ldr	r3, [r7, #12]
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	691a      	ldr	r2, [r3, #16]
 8003932:	68fb      	ldr	r3, [r7, #12]
 8003934:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003936:	b2d2      	uxtb	r2, r2
 8003938:	701a      	strb	r2, [r3, #0]
 800393a:	68fb      	ldr	r3, [r7, #12]
 800393c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800393e:	1c5a      	adds	r2, r3, #1
 8003940:	68fb      	ldr	r3, [r7, #12]
 8003942:	625a      	str	r2, [r3, #36]	@ 0x24
 8003944:	68fb      	ldr	r3, [r7, #12]
 8003946:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003948:	3b01      	subs	r3, #1
 800394a:	b29a      	uxth	r2, r3
 800394c:	68fb      	ldr	r3, [r7, #12]
 800394e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003950:	68fb      	ldr	r3, [r7, #12]
 8003952:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003954:	b29b      	uxth	r3, r3
 8003956:	3b01      	subs	r3, #1
 8003958:	b29a      	uxth	r2, r3
 800395a:	68fb      	ldr	r3, [r7, #12]
 800395c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800395e:	68fb      	ldr	r3, [r7, #12]
 8003960:	681b      	ldr	r3, [r3, #0]
 8003962:	691a      	ldr	r2, [r3, #16]
 8003964:	68fb      	ldr	r3, [r7, #12]
 8003966:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003968:	b2d2      	uxtb	r2, r2
 800396a:	701a      	strb	r2, [r3, #0]
 800396c:	68fb      	ldr	r3, [r7, #12]
 800396e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003970:	1c5a      	adds	r2, r3, #1
 8003972:	68fb      	ldr	r3, [r7, #12]
 8003974:	625a      	str	r2, [r3, #36]	@ 0x24
 8003976:	68fb      	ldr	r3, [r7, #12]
 8003978:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800397a:	3b01      	subs	r3, #1
 800397c:	b29a      	uxth	r2, r3
 800397e:	68fb      	ldr	r3, [r7, #12]
 8003980:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003982:	68fb      	ldr	r3, [r7, #12]
 8003984:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003986:	b29b      	uxth	r3, r3
 8003988:	3b01      	subs	r3, #1
 800398a:	b29a      	uxth	r2, r3
 800398c:	68fb      	ldr	r3, [r7, #12]
 800398e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003990:	e04e      	b.n	8003a30 <HAL_I2C_Mem_Read+0x430>
 8003992:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003994:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8003996:	68f8      	ldr	r0, [r7, #12]
 8003998:	f000 fcba 	bl	8004310 <I2C_WaitOnRXNEFlagUntilTimeout>
 800399c:	4603      	mov	r3, r0
 800399e:	2b00      	cmp	r3, #0
 80039a0:	d001      	beq.n	80039a6 <HAL_I2C_Mem_Read+0x3a6>
 80039a2:	2301      	movs	r3, #1
 80039a4:	e058      	b.n	8003a58 <HAL_I2C_Mem_Read+0x458>
 80039a6:	68fb      	ldr	r3, [r7, #12]
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	691a      	ldr	r2, [r3, #16]
 80039ac:	68fb      	ldr	r3, [r7, #12]
 80039ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80039b0:	b2d2      	uxtb	r2, r2
 80039b2:	701a      	strb	r2, [r3, #0]
 80039b4:	68fb      	ldr	r3, [r7, #12]
 80039b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80039b8:	1c5a      	adds	r2, r3, #1
 80039ba:	68fb      	ldr	r3, [r7, #12]
 80039bc:	625a      	str	r2, [r3, #36]	@ 0x24
 80039be:	68fb      	ldr	r3, [r7, #12]
 80039c0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80039c2:	3b01      	subs	r3, #1
 80039c4:	b29a      	uxth	r2, r3
 80039c6:	68fb      	ldr	r3, [r7, #12]
 80039c8:	851a      	strh	r2, [r3, #40]	@ 0x28
 80039ca:	68fb      	ldr	r3, [r7, #12]
 80039cc:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80039ce:	b29b      	uxth	r3, r3
 80039d0:	3b01      	subs	r3, #1
 80039d2:	b29a      	uxth	r2, r3
 80039d4:	68fb      	ldr	r3, [r7, #12]
 80039d6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80039d8:	68fb      	ldr	r3, [r7, #12]
 80039da:	681b      	ldr	r3, [r3, #0]
 80039dc:	695b      	ldr	r3, [r3, #20]
 80039de:	f003 0304 	and.w	r3, r3, #4
 80039e2:	2b04      	cmp	r3, #4
 80039e4:	d124      	bne.n	8003a30 <HAL_I2C_Mem_Read+0x430>
 80039e6:	68fb      	ldr	r3, [r7, #12]
 80039e8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80039ea:	2b03      	cmp	r3, #3
 80039ec:	d107      	bne.n	80039fe <HAL_I2C_Mem_Read+0x3fe>
 80039ee:	68fb      	ldr	r3, [r7, #12]
 80039f0:	681b      	ldr	r3, [r3, #0]
 80039f2:	681a      	ldr	r2, [r3, #0]
 80039f4:	68fb      	ldr	r3, [r7, #12]
 80039f6:	681b      	ldr	r3, [r3, #0]
 80039f8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80039fc:	601a      	str	r2, [r3, #0]
 80039fe:	68fb      	ldr	r3, [r7, #12]
 8003a00:	681b      	ldr	r3, [r3, #0]
 8003a02:	691a      	ldr	r2, [r3, #16]
 8003a04:	68fb      	ldr	r3, [r7, #12]
 8003a06:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a08:	b2d2      	uxtb	r2, r2
 8003a0a:	701a      	strb	r2, [r3, #0]
 8003a0c:	68fb      	ldr	r3, [r7, #12]
 8003a0e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a10:	1c5a      	adds	r2, r3, #1
 8003a12:	68fb      	ldr	r3, [r7, #12]
 8003a14:	625a      	str	r2, [r3, #36]	@ 0x24
 8003a16:	68fb      	ldr	r3, [r7, #12]
 8003a18:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003a1a:	3b01      	subs	r3, #1
 8003a1c:	b29a      	uxth	r2, r3
 8003a1e:	68fb      	ldr	r3, [r7, #12]
 8003a20:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003a22:	68fb      	ldr	r3, [r7, #12]
 8003a24:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003a26:	b29b      	uxth	r3, r3
 8003a28:	3b01      	subs	r3, #1
 8003a2a:	b29a      	uxth	r2, r3
 8003a2c:	68fb      	ldr	r3, [r7, #12]
 8003a2e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003a30:	68fb      	ldr	r3, [r7, #12]
 8003a32:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003a34:	2b00      	cmp	r3, #0
 8003a36:	f47f aeb6 	bne.w	80037a6 <HAL_I2C_Mem_Read+0x1a6>
 8003a3a:	68fb      	ldr	r3, [r7, #12]
 8003a3c:	2220      	movs	r2, #32
 8003a3e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003a42:	68fb      	ldr	r3, [r7, #12]
 8003a44:	2200      	movs	r2, #0
 8003a46:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003a4a:	68fb      	ldr	r3, [r7, #12]
 8003a4c:	2200      	movs	r2, #0
 8003a4e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003a52:	2300      	movs	r3, #0
 8003a54:	e000      	b.n	8003a58 <HAL_I2C_Mem_Read+0x458>
 8003a56:	2302      	movs	r3, #2
 8003a58:	4618      	mov	r0, r3
 8003a5a:	3728      	adds	r7, #40	@ 0x28
 8003a5c:	46bd      	mov	sp, r7
 8003a5e:	bd80      	pop	{r7, pc}
 8003a60:	00010004 	.word	0x00010004

08003a64 <HAL_I2C_IsDeviceReady>:
 8003a64:	b580      	push	{r7, lr}
 8003a66:	b08a      	sub	sp, #40	@ 0x28
 8003a68:	af02      	add	r7, sp, #8
 8003a6a:	60f8      	str	r0, [r7, #12]
 8003a6c:	607a      	str	r2, [r7, #4]
 8003a6e:	603b      	str	r3, [r7, #0]
 8003a70:	460b      	mov	r3, r1
 8003a72:	817b      	strh	r3, [r7, #10]
 8003a74:	f7ff f87e 	bl	8002b74 <HAL_GetTick>
 8003a78:	61f8      	str	r0, [r7, #28]
 8003a7a:	2300      	movs	r3, #0
 8003a7c:	61bb      	str	r3, [r7, #24]
 8003a7e:	68fb      	ldr	r3, [r7, #12]
 8003a80:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003a84:	b2db      	uxtb	r3, r3
 8003a86:	2b20      	cmp	r3, #32
 8003a88:	f040 8111 	bne.w	8003cae <HAL_I2C_IsDeviceReady+0x24a>
 8003a8c:	69fb      	ldr	r3, [r7, #28]
 8003a8e:	9300      	str	r3, [sp, #0]
 8003a90:	2319      	movs	r3, #25
 8003a92:	2201      	movs	r2, #1
 8003a94:	4988      	ldr	r1, [pc, #544]	@ (8003cb8 <HAL_I2C_IsDeviceReady+0x254>)
 8003a96:	68f8      	ldr	r0, [r7, #12]
 8003a98:	f000 fa90 	bl	8003fbc <I2C_WaitOnFlagUntilTimeout>
 8003a9c:	4603      	mov	r3, r0
 8003a9e:	2b00      	cmp	r3, #0
 8003aa0:	d001      	beq.n	8003aa6 <HAL_I2C_IsDeviceReady+0x42>
 8003aa2:	2302      	movs	r3, #2
 8003aa4:	e104      	b.n	8003cb0 <HAL_I2C_IsDeviceReady+0x24c>
 8003aa6:	68fb      	ldr	r3, [r7, #12]
 8003aa8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003aac:	2b01      	cmp	r3, #1
 8003aae:	d101      	bne.n	8003ab4 <HAL_I2C_IsDeviceReady+0x50>
 8003ab0:	2302      	movs	r3, #2
 8003ab2:	e0fd      	b.n	8003cb0 <HAL_I2C_IsDeviceReady+0x24c>
 8003ab4:	68fb      	ldr	r3, [r7, #12]
 8003ab6:	2201      	movs	r2, #1
 8003ab8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003abc:	68fb      	ldr	r3, [r7, #12]
 8003abe:	681b      	ldr	r3, [r3, #0]
 8003ac0:	681b      	ldr	r3, [r3, #0]
 8003ac2:	f003 0301 	and.w	r3, r3, #1
 8003ac6:	2b01      	cmp	r3, #1
 8003ac8:	d007      	beq.n	8003ada <HAL_I2C_IsDeviceReady+0x76>
 8003aca:	68fb      	ldr	r3, [r7, #12]
 8003acc:	681b      	ldr	r3, [r3, #0]
 8003ace:	681a      	ldr	r2, [r3, #0]
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	f042 0201 	orr.w	r2, r2, #1
 8003ad8:	601a      	str	r2, [r3, #0]
 8003ada:	68fb      	ldr	r3, [r7, #12]
 8003adc:	681b      	ldr	r3, [r3, #0]
 8003ade:	681a      	ldr	r2, [r3, #0]
 8003ae0:	68fb      	ldr	r3, [r7, #12]
 8003ae2:	681b      	ldr	r3, [r3, #0]
 8003ae4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003ae8:	601a      	str	r2, [r3, #0]
 8003aea:	68fb      	ldr	r3, [r7, #12]
 8003aec:	2224      	movs	r2, #36	@ 0x24
 8003aee:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003af2:	68fb      	ldr	r3, [r7, #12]
 8003af4:	2200      	movs	r2, #0
 8003af6:	641a      	str	r2, [r3, #64]	@ 0x40
 8003af8:	68fb      	ldr	r3, [r7, #12]
 8003afa:	4a70      	ldr	r2, [pc, #448]	@ (8003cbc <HAL_I2C_IsDeviceReady+0x258>)
 8003afc:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003afe:	68fb      	ldr	r3, [r7, #12]
 8003b00:	681b      	ldr	r3, [r3, #0]
 8003b02:	681a      	ldr	r2, [r3, #0]
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	681b      	ldr	r3, [r3, #0]
 8003b08:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003b0c:	601a      	str	r2, [r3, #0]
 8003b0e:	69fb      	ldr	r3, [r7, #28]
 8003b10:	9300      	str	r3, [sp, #0]
 8003b12:	683b      	ldr	r3, [r7, #0]
 8003b14:	2200      	movs	r2, #0
 8003b16:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003b1a:	68f8      	ldr	r0, [r7, #12]
 8003b1c:	f000 fa4e 	bl	8003fbc <I2C_WaitOnFlagUntilTimeout>
 8003b20:	4603      	mov	r3, r0
 8003b22:	2b00      	cmp	r3, #0
 8003b24:	d00d      	beq.n	8003b42 <HAL_I2C_IsDeviceReady+0xde>
 8003b26:	68fb      	ldr	r3, [r7, #12]
 8003b28:	681b      	ldr	r3, [r3, #0]
 8003b2a:	681b      	ldr	r3, [r3, #0]
 8003b2c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003b30:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003b34:	d103      	bne.n	8003b3e <HAL_I2C_IsDeviceReady+0xda>
 8003b36:	68fb      	ldr	r3, [r7, #12]
 8003b38:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003b3c:	641a      	str	r2, [r3, #64]	@ 0x40
 8003b3e:	2303      	movs	r3, #3
 8003b40:	e0b6      	b.n	8003cb0 <HAL_I2C_IsDeviceReady+0x24c>
 8003b42:	897b      	ldrh	r3, [r7, #10]
 8003b44:	b2db      	uxtb	r3, r3
 8003b46:	461a      	mov	r2, r3
 8003b48:	68fb      	ldr	r3, [r7, #12]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8003b50:	611a      	str	r2, [r3, #16]
 8003b52:	f7ff f80f 	bl	8002b74 <HAL_GetTick>
 8003b56:	61f8      	str	r0, [r7, #28]
 8003b58:	68fb      	ldr	r3, [r7, #12]
 8003b5a:	681b      	ldr	r3, [r3, #0]
 8003b5c:	695b      	ldr	r3, [r3, #20]
 8003b5e:	f003 0302 	and.w	r3, r3, #2
 8003b62:	2b02      	cmp	r3, #2
 8003b64:	bf0c      	ite	eq
 8003b66:	2301      	moveq	r3, #1
 8003b68:	2300      	movne	r3, #0
 8003b6a:	b2db      	uxtb	r3, r3
 8003b6c:	75fb      	strb	r3, [r7, #23]
 8003b6e:	68fb      	ldr	r3, [r7, #12]
 8003b70:	681b      	ldr	r3, [r3, #0]
 8003b72:	695b      	ldr	r3, [r3, #20]
 8003b74:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003b78:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003b7c:	bf0c      	ite	eq
 8003b7e:	2301      	moveq	r3, #1
 8003b80:	2300      	movne	r3, #0
 8003b82:	b2db      	uxtb	r3, r3
 8003b84:	75bb      	strb	r3, [r7, #22]
 8003b86:	e025      	b.n	8003bd4 <HAL_I2C_IsDeviceReady+0x170>
 8003b88:	f7fe fff4 	bl	8002b74 <HAL_GetTick>
 8003b8c:	4602      	mov	r2, r0
 8003b8e:	69fb      	ldr	r3, [r7, #28]
 8003b90:	1ad3      	subs	r3, r2, r3
 8003b92:	683a      	ldr	r2, [r7, #0]
 8003b94:	429a      	cmp	r2, r3
 8003b96:	d302      	bcc.n	8003b9e <HAL_I2C_IsDeviceReady+0x13a>
 8003b98:	683b      	ldr	r3, [r7, #0]
 8003b9a:	2b00      	cmp	r3, #0
 8003b9c:	d103      	bne.n	8003ba6 <HAL_I2C_IsDeviceReady+0x142>
 8003b9e:	68fb      	ldr	r3, [r7, #12]
 8003ba0:	22a0      	movs	r2, #160	@ 0xa0
 8003ba2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003ba6:	68fb      	ldr	r3, [r7, #12]
 8003ba8:	681b      	ldr	r3, [r3, #0]
 8003baa:	695b      	ldr	r3, [r3, #20]
 8003bac:	f003 0302 	and.w	r3, r3, #2
 8003bb0:	2b02      	cmp	r3, #2
 8003bb2:	bf0c      	ite	eq
 8003bb4:	2301      	moveq	r3, #1
 8003bb6:	2300      	movne	r3, #0
 8003bb8:	b2db      	uxtb	r3, r3
 8003bba:	75fb      	strb	r3, [r7, #23]
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	681b      	ldr	r3, [r3, #0]
 8003bc0:	695b      	ldr	r3, [r3, #20]
 8003bc2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003bc6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003bca:	bf0c      	ite	eq
 8003bcc:	2301      	moveq	r3, #1
 8003bce:	2300      	movne	r3, #0
 8003bd0:	b2db      	uxtb	r3, r3
 8003bd2:	75bb      	strb	r3, [r7, #22]
 8003bd4:	68fb      	ldr	r3, [r7, #12]
 8003bd6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003bda:	b2db      	uxtb	r3, r3
 8003bdc:	2ba0      	cmp	r3, #160	@ 0xa0
 8003bde:	d005      	beq.n	8003bec <HAL_I2C_IsDeviceReady+0x188>
 8003be0:	7dfb      	ldrb	r3, [r7, #23]
 8003be2:	2b00      	cmp	r3, #0
 8003be4:	d102      	bne.n	8003bec <HAL_I2C_IsDeviceReady+0x188>
 8003be6:	7dbb      	ldrb	r3, [r7, #22]
 8003be8:	2b00      	cmp	r3, #0
 8003bea:	d0cd      	beq.n	8003b88 <HAL_I2C_IsDeviceReady+0x124>
 8003bec:	68fb      	ldr	r3, [r7, #12]
 8003bee:	2220      	movs	r2, #32
 8003bf0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003bf4:	68fb      	ldr	r3, [r7, #12]
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	695b      	ldr	r3, [r3, #20]
 8003bfa:	f003 0302 	and.w	r3, r3, #2
 8003bfe:	2b02      	cmp	r3, #2
 8003c00:	d129      	bne.n	8003c56 <HAL_I2C_IsDeviceReady+0x1f2>
 8003c02:	68fb      	ldr	r3, [r7, #12]
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	681a      	ldr	r2, [r3, #0]
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003c10:	601a      	str	r2, [r3, #0]
 8003c12:	2300      	movs	r3, #0
 8003c14:	613b      	str	r3, [r7, #16]
 8003c16:	68fb      	ldr	r3, [r7, #12]
 8003c18:	681b      	ldr	r3, [r3, #0]
 8003c1a:	695b      	ldr	r3, [r3, #20]
 8003c1c:	613b      	str	r3, [r7, #16]
 8003c1e:	68fb      	ldr	r3, [r7, #12]
 8003c20:	681b      	ldr	r3, [r3, #0]
 8003c22:	699b      	ldr	r3, [r3, #24]
 8003c24:	613b      	str	r3, [r7, #16]
 8003c26:	693b      	ldr	r3, [r7, #16]
 8003c28:	69fb      	ldr	r3, [r7, #28]
 8003c2a:	9300      	str	r3, [sp, #0]
 8003c2c:	2319      	movs	r3, #25
 8003c2e:	2201      	movs	r2, #1
 8003c30:	4921      	ldr	r1, [pc, #132]	@ (8003cb8 <HAL_I2C_IsDeviceReady+0x254>)
 8003c32:	68f8      	ldr	r0, [r7, #12]
 8003c34:	f000 f9c2 	bl	8003fbc <I2C_WaitOnFlagUntilTimeout>
 8003c38:	4603      	mov	r3, r0
 8003c3a:	2b00      	cmp	r3, #0
 8003c3c:	d001      	beq.n	8003c42 <HAL_I2C_IsDeviceReady+0x1de>
 8003c3e:	2301      	movs	r3, #1
 8003c40:	e036      	b.n	8003cb0 <HAL_I2C_IsDeviceReady+0x24c>
 8003c42:	68fb      	ldr	r3, [r7, #12]
 8003c44:	2220      	movs	r2, #32
 8003c46:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003c4a:	68fb      	ldr	r3, [r7, #12]
 8003c4c:	2200      	movs	r2, #0
 8003c4e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003c52:	2300      	movs	r3, #0
 8003c54:	e02c      	b.n	8003cb0 <HAL_I2C_IsDeviceReady+0x24c>
 8003c56:	68fb      	ldr	r3, [r7, #12]
 8003c58:	681b      	ldr	r3, [r3, #0]
 8003c5a:	681a      	ldr	r2, [r3, #0]
 8003c5c:	68fb      	ldr	r3, [r7, #12]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003c64:	601a      	str	r2, [r3, #0]
 8003c66:	68fb      	ldr	r3, [r7, #12]
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8003c6e:	615a      	str	r2, [r3, #20]
 8003c70:	69fb      	ldr	r3, [r7, #28]
 8003c72:	9300      	str	r3, [sp, #0]
 8003c74:	2319      	movs	r3, #25
 8003c76:	2201      	movs	r2, #1
 8003c78:	490f      	ldr	r1, [pc, #60]	@ (8003cb8 <HAL_I2C_IsDeviceReady+0x254>)
 8003c7a:	68f8      	ldr	r0, [r7, #12]
 8003c7c:	f000 f99e 	bl	8003fbc <I2C_WaitOnFlagUntilTimeout>
 8003c80:	4603      	mov	r3, r0
 8003c82:	2b00      	cmp	r3, #0
 8003c84:	d001      	beq.n	8003c8a <HAL_I2C_IsDeviceReady+0x226>
 8003c86:	2301      	movs	r3, #1
 8003c88:	e012      	b.n	8003cb0 <HAL_I2C_IsDeviceReady+0x24c>
 8003c8a:	69bb      	ldr	r3, [r7, #24]
 8003c8c:	3301      	adds	r3, #1
 8003c8e:	61bb      	str	r3, [r7, #24]
 8003c90:	69ba      	ldr	r2, [r7, #24]
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	429a      	cmp	r2, r3
 8003c96:	f4ff af32 	bcc.w	8003afe <HAL_I2C_IsDeviceReady+0x9a>
 8003c9a:	68fb      	ldr	r3, [r7, #12]
 8003c9c:	2220      	movs	r2, #32
 8003c9e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003ca2:	68fb      	ldr	r3, [r7, #12]
 8003ca4:	2200      	movs	r2, #0
 8003ca6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003caa:	2301      	movs	r3, #1
 8003cac:	e000      	b.n	8003cb0 <HAL_I2C_IsDeviceReady+0x24c>
 8003cae:	2302      	movs	r3, #2
 8003cb0:	4618      	mov	r0, r3
 8003cb2:	3720      	adds	r7, #32
 8003cb4:	46bd      	mov	sp, r7
 8003cb6:	bd80      	pop	{r7, pc}
 8003cb8:	00100002 	.word	0x00100002
 8003cbc:	ffff0000 	.word	0xffff0000

08003cc0 <I2C_RequestMemoryWrite>:
 8003cc0:	b580      	push	{r7, lr}
 8003cc2:	b088      	sub	sp, #32
 8003cc4:	af02      	add	r7, sp, #8
 8003cc6:	60f8      	str	r0, [r7, #12]
 8003cc8:	4608      	mov	r0, r1
 8003cca:	4611      	mov	r1, r2
 8003ccc:	461a      	mov	r2, r3
 8003cce:	4603      	mov	r3, r0
 8003cd0:	817b      	strh	r3, [r7, #10]
 8003cd2:	460b      	mov	r3, r1
 8003cd4:	813b      	strh	r3, [r7, #8]
 8003cd6:	4613      	mov	r3, r2
 8003cd8:	80fb      	strh	r3, [r7, #6]
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	681a      	ldr	r2, [r3, #0]
 8003ce0:	68fb      	ldr	r3, [r7, #12]
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003ce8:	601a      	str	r2, [r3, #0]
 8003cea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003cec:	9300      	str	r3, [sp, #0]
 8003cee:	6a3b      	ldr	r3, [r7, #32]
 8003cf0:	2200      	movs	r2, #0
 8003cf2:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003cf6:	68f8      	ldr	r0, [r7, #12]
 8003cf8:	f000 f960 	bl	8003fbc <I2C_WaitOnFlagUntilTimeout>
 8003cfc:	4603      	mov	r3, r0
 8003cfe:	2b00      	cmp	r3, #0
 8003d00:	d00d      	beq.n	8003d1e <I2C_RequestMemoryWrite+0x5e>
 8003d02:	68fb      	ldr	r3, [r7, #12]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	681b      	ldr	r3, [r3, #0]
 8003d08:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003d0c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003d10:	d103      	bne.n	8003d1a <I2C_RequestMemoryWrite+0x5a>
 8003d12:	68fb      	ldr	r3, [r7, #12]
 8003d14:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003d18:	641a      	str	r2, [r3, #64]	@ 0x40
 8003d1a:	2303      	movs	r3, #3
 8003d1c:	e05f      	b.n	8003dde <I2C_RequestMemoryWrite+0x11e>
 8003d1e:	897b      	ldrh	r3, [r7, #10]
 8003d20:	b2db      	uxtb	r3, r3
 8003d22:	461a      	mov	r2, r3
 8003d24:	68fb      	ldr	r3, [r7, #12]
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8003d2c:	611a      	str	r2, [r3, #16]
 8003d2e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003d30:	6a3a      	ldr	r2, [r7, #32]
 8003d32:	492d      	ldr	r1, [pc, #180]	@ (8003de8 <I2C_RequestMemoryWrite+0x128>)
 8003d34:	68f8      	ldr	r0, [r7, #12]
 8003d36:	f000 f9bb 	bl	80040b0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003d3a:	4603      	mov	r3, r0
 8003d3c:	2b00      	cmp	r3, #0
 8003d3e:	d001      	beq.n	8003d44 <I2C_RequestMemoryWrite+0x84>
 8003d40:	2301      	movs	r3, #1
 8003d42:	e04c      	b.n	8003dde <I2C_RequestMemoryWrite+0x11e>
 8003d44:	2300      	movs	r3, #0
 8003d46:	617b      	str	r3, [r7, #20]
 8003d48:	68fb      	ldr	r3, [r7, #12]
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	695b      	ldr	r3, [r3, #20]
 8003d4e:	617b      	str	r3, [r7, #20]
 8003d50:	68fb      	ldr	r3, [r7, #12]
 8003d52:	681b      	ldr	r3, [r3, #0]
 8003d54:	699b      	ldr	r3, [r3, #24]
 8003d56:	617b      	str	r3, [r7, #20]
 8003d58:	697b      	ldr	r3, [r7, #20]
 8003d5a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003d5c:	6a39      	ldr	r1, [r7, #32]
 8003d5e:	68f8      	ldr	r0, [r7, #12]
 8003d60:	f000 fa46 	bl	80041f0 <I2C_WaitOnTXEFlagUntilTimeout>
 8003d64:	4603      	mov	r3, r0
 8003d66:	2b00      	cmp	r3, #0
 8003d68:	d00d      	beq.n	8003d86 <I2C_RequestMemoryWrite+0xc6>
 8003d6a:	68fb      	ldr	r3, [r7, #12]
 8003d6c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003d6e:	2b04      	cmp	r3, #4
 8003d70:	d107      	bne.n	8003d82 <I2C_RequestMemoryWrite+0xc2>
 8003d72:	68fb      	ldr	r3, [r7, #12]
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	681a      	ldr	r2, [r3, #0]
 8003d78:	68fb      	ldr	r3, [r7, #12]
 8003d7a:	681b      	ldr	r3, [r3, #0]
 8003d7c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003d80:	601a      	str	r2, [r3, #0]
 8003d82:	2301      	movs	r3, #1
 8003d84:	e02b      	b.n	8003dde <I2C_RequestMemoryWrite+0x11e>
 8003d86:	88fb      	ldrh	r3, [r7, #6]
 8003d88:	2b01      	cmp	r3, #1
 8003d8a:	d105      	bne.n	8003d98 <I2C_RequestMemoryWrite+0xd8>
 8003d8c:	893b      	ldrh	r3, [r7, #8]
 8003d8e:	b2da      	uxtb	r2, r3
 8003d90:	68fb      	ldr	r3, [r7, #12]
 8003d92:	681b      	ldr	r3, [r3, #0]
 8003d94:	611a      	str	r2, [r3, #16]
 8003d96:	e021      	b.n	8003ddc <I2C_RequestMemoryWrite+0x11c>
 8003d98:	893b      	ldrh	r3, [r7, #8]
 8003d9a:	0a1b      	lsrs	r3, r3, #8
 8003d9c:	b29b      	uxth	r3, r3
 8003d9e:	b2da      	uxtb	r2, r3
 8003da0:	68fb      	ldr	r3, [r7, #12]
 8003da2:	681b      	ldr	r3, [r3, #0]
 8003da4:	611a      	str	r2, [r3, #16]
 8003da6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003da8:	6a39      	ldr	r1, [r7, #32]
 8003daa:	68f8      	ldr	r0, [r7, #12]
 8003dac:	f000 fa20 	bl	80041f0 <I2C_WaitOnTXEFlagUntilTimeout>
 8003db0:	4603      	mov	r3, r0
 8003db2:	2b00      	cmp	r3, #0
 8003db4:	d00d      	beq.n	8003dd2 <I2C_RequestMemoryWrite+0x112>
 8003db6:	68fb      	ldr	r3, [r7, #12]
 8003db8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003dba:	2b04      	cmp	r3, #4
 8003dbc:	d107      	bne.n	8003dce <I2C_RequestMemoryWrite+0x10e>
 8003dbe:	68fb      	ldr	r3, [r7, #12]
 8003dc0:	681b      	ldr	r3, [r3, #0]
 8003dc2:	681a      	ldr	r2, [r3, #0]
 8003dc4:	68fb      	ldr	r3, [r7, #12]
 8003dc6:	681b      	ldr	r3, [r3, #0]
 8003dc8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003dcc:	601a      	str	r2, [r3, #0]
 8003dce:	2301      	movs	r3, #1
 8003dd0:	e005      	b.n	8003dde <I2C_RequestMemoryWrite+0x11e>
 8003dd2:	893b      	ldrh	r3, [r7, #8]
 8003dd4:	b2da      	uxtb	r2, r3
 8003dd6:	68fb      	ldr	r3, [r7, #12]
 8003dd8:	681b      	ldr	r3, [r3, #0]
 8003dda:	611a      	str	r2, [r3, #16]
 8003ddc:	2300      	movs	r3, #0
 8003dde:	4618      	mov	r0, r3
 8003de0:	3718      	adds	r7, #24
 8003de2:	46bd      	mov	sp, r7
 8003de4:	bd80      	pop	{r7, pc}
 8003de6:	bf00      	nop
 8003de8:	00010002 	.word	0x00010002

08003dec <I2C_RequestMemoryRead>:
 8003dec:	b580      	push	{r7, lr}
 8003dee:	b088      	sub	sp, #32
 8003df0:	af02      	add	r7, sp, #8
 8003df2:	60f8      	str	r0, [r7, #12]
 8003df4:	4608      	mov	r0, r1
 8003df6:	4611      	mov	r1, r2
 8003df8:	461a      	mov	r2, r3
 8003dfa:	4603      	mov	r3, r0
 8003dfc:	817b      	strh	r3, [r7, #10]
 8003dfe:	460b      	mov	r3, r1
 8003e00:	813b      	strh	r3, [r7, #8]
 8003e02:	4613      	mov	r3, r2
 8003e04:	80fb      	strh	r3, [r7, #6]
 8003e06:	68fb      	ldr	r3, [r7, #12]
 8003e08:	681b      	ldr	r3, [r3, #0]
 8003e0a:	681a      	ldr	r2, [r3, #0]
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003e14:	601a      	str	r2, [r3, #0]
 8003e16:	68fb      	ldr	r3, [r7, #12]
 8003e18:	681b      	ldr	r3, [r3, #0]
 8003e1a:	681a      	ldr	r2, [r3, #0]
 8003e1c:	68fb      	ldr	r3, [r7, #12]
 8003e1e:	681b      	ldr	r3, [r3, #0]
 8003e20:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003e24:	601a      	str	r2, [r3, #0]
 8003e26:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003e28:	9300      	str	r3, [sp, #0]
 8003e2a:	6a3b      	ldr	r3, [r7, #32]
 8003e2c:	2200      	movs	r2, #0
 8003e2e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003e32:	68f8      	ldr	r0, [r7, #12]
 8003e34:	f000 f8c2 	bl	8003fbc <I2C_WaitOnFlagUntilTimeout>
 8003e38:	4603      	mov	r3, r0
 8003e3a:	2b00      	cmp	r3, #0
 8003e3c:	d00d      	beq.n	8003e5a <I2C_RequestMemoryRead+0x6e>
 8003e3e:	68fb      	ldr	r3, [r7, #12]
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	681b      	ldr	r3, [r3, #0]
 8003e44:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003e48:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003e4c:	d103      	bne.n	8003e56 <I2C_RequestMemoryRead+0x6a>
 8003e4e:	68fb      	ldr	r3, [r7, #12]
 8003e50:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003e54:	641a      	str	r2, [r3, #64]	@ 0x40
 8003e56:	2303      	movs	r3, #3
 8003e58:	e0aa      	b.n	8003fb0 <I2C_RequestMemoryRead+0x1c4>
 8003e5a:	897b      	ldrh	r3, [r7, #10]
 8003e5c:	b2db      	uxtb	r3, r3
 8003e5e:	461a      	mov	r2, r3
 8003e60:	68fb      	ldr	r3, [r7, #12]
 8003e62:	681b      	ldr	r3, [r3, #0]
 8003e64:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8003e68:	611a      	str	r2, [r3, #16]
 8003e6a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003e6c:	6a3a      	ldr	r2, [r7, #32]
 8003e6e:	4952      	ldr	r1, [pc, #328]	@ (8003fb8 <I2C_RequestMemoryRead+0x1cc>)
 8003e70:	68f8      	ldr	r0, [r7, #12]
 8003e72:	f000 f91d 	bl	80040b0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003e76:	4603      	mov	r3, r0
 8003e78:	2b00      	cmp	r3, #0
 8003e7a:	d001      	beq.n	8003e80 <I2C_RequestMemoryRead+0x94>
 8003e7c:	2301      	movs	r3, #1
 8003e7e:	e097      	b.n	8003fb0 <I2C_RequestMemoryRead+0x1c4>
 8003e80:	2300      	movs	r3, #0
 8003e82:	617b      	str	r3, [r7, #20]
 8003e84:	68fb      	ldr	r3, [r7, #12]
 8003e86:	681b      	ldr	r3, [r3, #0]
 8003e88:	695b      	ldr	r3, [r3, #20]
 8003e8a:	617b      	str	r3, [r7, #20]
 8003e8c:	68fb      	ldr	r3, [r7, #12]
 8003e8e:	681b      	ldr	r3, [r3, #0]
 8003e90:	699b      	ldr	r3, [r3, #24]
 8003e92:	617b      	str	r3, [r7, #20]
 8003e94:	697b      	ldr	r3, [r7, #20]
 8003e96:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003e98:	6a39      	ldr	r1, [r7, #32]
 8003e9a:	68f8      	ldr	r0, [r7, #12]
 8003e9c:	f000 f9a8 	bl	80041f0 <I2C_WaitOnTXEFlagUntilTimeout>
 8003ea0:	4603      	mov	r3, r0
 8003ea2:	2b00      	cmp	r3, #0
 8003ea4:	d00d      	beq.n	8003ec2 <I2C_RequestMemoryRead+0xd6>
 8003ea6:	68fb      	ldr	r3, [r7, #12]
 8003ea8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003eaa:	2b04      	cmp	r3, #4
 8003eac:	d107      	bne.n	8003ebe <I2C_RequestMemoryRead+0xd2>
 8003eae:	68fb      	ldr	r3, [r7, #12]
 8003eb0:	681b      	ldr	r3, [r3, #0]
 8003eb2:	681a      	ldr	r2, [r3, #0]
 8003eb4:	68fb      	ldr	r3, [r7, #12]
 8003eb6:	681b      	ldr	r3, [r3, #0]
 8003eb8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003ebc:	601a      	str	r2, [r3, #0]
 8003ebe:	2301      	movs	r3, #1
 8003ec0:	e076      	b.n	8003fb0 <I2C_RequestMemoryRead+0x1c4>
 8003ec2:	88fb      	ldrh	r3, [r7, #6]
 8003ec4:	2b01      	cmp	r3, #1
 8003ec6:	d105      	bne.n	8003ed4 <I2C_RequestMemoryRead+0xe8>
 8003ec8:	893b      	ldrh	r3, [r7, #8]
 8003eca:	b2da      	uxtb	r2, r3
 8003ecc:	68fb      	ldr	r3, [r7, #12]
 8003ece:	681b      	ldr	r3, [r3, #0]
 8003ed0:	611a      	str	r2, [r3, #16]
 8003ed2:	e021      	b.n	8003f18 <I2C_RequestMemoryRead+0x12c>
 8003ed4:	893b      	ldrh	r3, [r7, #8]
 8003ed6:	0a1b      	lsrs	r3, r3, #8
 8003ed8:	b29b      	uxth	r3, r3
 8003eda:	b2da      	uxtb	r2, r3
 8003edc:	68fb      	ldr	r3, [r7, #12]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	611a      	str	r2, [r3, #16]
 8003ee2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003ee4:	6a39      	ldr	r1, [r7, #32]
 8003ee6:	68f8      	ldr	r0, [r7, #12]
 8003ee8:	f000 f982 	bl	80041f0 <I2C_WaitOnTXEFlagUntilTimeout>
 8003eec:	4603      	mov	r3, r0
 8003eee:	2b00      	cmp	r3, #0
 8003ef0:	d00d      	beq.n	8003f0e <I2C_RequestMemoryRead+0x122>
 8003ef2:	68fb      	ldr	r3, [r7, #12]
 8003ef4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ef6:	2b04      	cmp	r3, #4
 8003ef8:	d107      	bne.n	8003f0a <I2C_RequestMemoryRead+0x11e>
 8003efa:	68fb      	ldr	r3, [r7, #12]
 8003efc:	681b      	ldr	r3, [r3, #0]
 8003efe:	681a      	ldr	r2, [r3, #0]
 8003f00:	68fb      	ldr	r3, [r7, #12]
 8003f02:	681b      	ldr	r3, [r3, #0]
 8003f04:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003f08:	601a      	str	r2, [r3, #0]
 8003f0a:	2301      	movs	r3, #1
 8003f0c:	e050      	b.n	8003fb0 <I2C_RequestMemoryRead+0x1c4>
 8003f0e:	893b      	ldrh	r3, [r7, #8]
 8003f10:	b2da      	uxtb	r2, r3
 8003f12:	68fb      	ldr	r3, [r7, #12]
 8003f14:	681b      	ldr	r3, [r3, #0]
 8003f16:	611a      	str	r2, [r3, #16]
 8003f18:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003f1a:	6a39      	ldr	r1, [r7, #32]
 8003f1c:	68f8      	ldr	r0, [r7, #12]
 8003f1e:	f000 f967 	bl	80041f0 <I2C_WaitOnTXEFlagUntilTimeout>
 8003f22:	4603      	mov	r3, r0
 8003f24:	2b00      	cmp	r3, #0
 8003f26:	d00d      	beq.n	8003f44 <I2C_RequestMemoryRead+0x158>
 8003f28:	68fb      	ldr	r3, [r7, #12]
 8003f2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003f2c:	2b04      	cmp	r3, #4
 8003f2e:	d107      	bne.n	8003f40 <I2C_RequestMemoryRead+0x154>
 8003f30:	68fb      	ldr	r3, [r7, #12]
 8003f32:	681b      	ldr	r3, [r3, #0]
 8003f34:	681a      	ldr	r2, [r3, #0]
 8003f36:	68fb      	ldr	r3, [r7, #12]
 8003f38:	681b      	ldr	r3, [r3, #0]
 8003f3a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003f3e:	601a      	str	r2, [r3, #0]
 8003f40:	2301      	movs	r3, #1
 8003f42:	e035      	b.n	8003fb0 <I2C_RequestMemoryRead+0x1c4>
 8003f44:	68fb      	ldr	r3, [r7, #12]
 8003f46:	681b      	ldr	r3, [r3, #0]
 8003f48:	681a      	ldr	r2, [r3, #0]
 8003f4a:	68fb      	ldr	r3, [r7, #12]
 8003f4c:	681b      	ldr	r3, [r3, #0]
 8003f4e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003f52:	601a      	str	r2, [r3, #0]
 8003f54:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003f56:	9300      	str	r3, [sp, #0]
 8003f58:	6a3b      	ldr	r3, [r7, #32]
 8003f5a:	2200      	movs	r2, #0
 8003f5c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003f60:	68f8      	ldr	r0, [r7, #12]
 8003f62:	f000 f82b 	bl	8003fbc <I2C_WaitOnFlagUntilTimeout>
 8003f66:	4603      	mov	r3, r0
 8003f68:	2b00      	cmp	r3, #0
 8003f6a:	d00d      	beq.n	8003f88 <I2C_RequestMemoryRead+0x19c>
 8003f6c:	68fb      	ldr	r3, [r7, #12]
 8003f6e:	681b      	ldr	r3, [r3, #0]
 8003f70:	681b      	ldr	r3, [r3, #0]
 8003f72:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003f76:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003f7a:	d103      	bne.n	8003f84 <I2C_RequestMemoryRead+0x198>
 8003f7c:	68fb      	ldr	r3, [r7, #12]
 8003f7e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003f82:	641a      	str	r2, [r3, #64]	@ 0x40
 8003f84:	2303      	movs	r3, #3
 8003f86:	e013      	b.n	8003fb0 <I2C_RequestMemoryRead+0x1c4>
 8003f88:	897b      	ldrh	r3, [r7, #10]
 8003f8a:	b2db      	uxtb	r3, r3
 8003f8c:	f043 0301 	orr.w	r3, r3, #1
 8003f90:	b2da      	uxtb	r2, r3
 8003f92:	68fb      	ldr	r3, [r7, #12]
 8003f94:	681b      	ldr	r3, [r3, #0]
 8003f96:	611a      	str	r2, [r3, #16]
 8003f98:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003f9a:	6a3a      	ldr	r2, [r7, #32]
 8003f9c:	4906      	ldr	r1, [pc, #24]	@ (8003fb8 <I2C_RequestMemoryRead+0x1cc>)
 8003f9e:	68f8      	ldr	r0, [r7, #12]
 8003fa0:	f000 f886 	bl	80040b0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003fa4:	4603      	mov	r3, r0
 8003fa6:	2b00      	cmp	r3, #0
 8003fa8:	d001      	beq.n	8003fae <I2C_RequestMemoryRead+0x1c2>
 8003faa:	2301      	movs	r3, #1
 8003fac:	e000      	b.n	8003fb0 <I2C_RequestMemoryRead+0x1c4>
 8003fae:	2300      	movs	r3, #0
 8003fb0:	4618      	mov	r0, r3
 8003fb2:	3718      	adds	r7, #24
 8003fb4:	46bd      	mov	sp, r7
 8003fb6:	bd80      	pop	{r7, pc}
 8003fb8:	00010002 	.word	0x00010002

08003fbc <I2C_WaitOnFlagUntilTimeout>:
 8003fbc:	b580      	push	{r7, lr}
 8003fbe:	b084      	sub	sp, #16
 8003fc0:	af00      	add	r7, sp, #0
 8003fc2:	60f8      	str	r0, [r7, #12]
 8003fc4:	60b9      	str	r1, [r7, #8]
 8003fc6:	603b      	str	r3, [r7, #0]
 8003fc8:	4613      	mov	r3, r2
 8003fca:	71fb      	strb	r3, [r7, #7]
 8003fcc:	e048      	b.n	8004060 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003fce:	683b      	ldr	r3, [r7, #0]
 8003fd0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003fd4:	d044      	beq.n	8004060 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003fd6:	f7fe fdcd 	bl	8002b74 <HAL_GetTick>
 8003fda:	4602      	mov	r2, r0
 8003fdc:	69bb      	ldr	r3, [r7, #24]
 8003fde:	1ad3      	subs	r3, r2, r3
 8003fe0:	683a      	ldr	r2, [r7, #0]
 8003fe2:	429a      	cmp	r2, r3
 8003fe4:	d302      	bcc.n	8003fec <I2C_WaitOnFlagUntilTimeout+0x30>
 8003fe6:	683b      	ldr	r3, [r7, #0]
 8003fe8:	2b00      	cmp	r3, #0
 8003fea:	d139      	bne.n	8004060 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003fec:	68bb      	ldr	r3, [r7, #8]
 8003fee:	0c1b      	lsrs	r3, r3, #16
 8003ff0:	b2db      	uxtb	r3, r3
 8003ff2:	2b01      	cmp	r3, #1
 8003ff4:	d10d      	bne.n	8004012 <I2C_WaitOnFlagUntilTimeout+0x56>
 8003ff6:	68fb      	ldr	r3, [r7, #12]
 8003ff8:	681b      	ldr	r3, [r3, #0]
 8003ffa:	695b      	ldr	r3, [r3, #20]
 8003ffc:	43da      	mvns	r2, r3
 8003ffe:	68bb      	ldr	r3, [r7, #8]
 8004000:	4013      	ands	r3, r2
 8004002:	b29b      	uxth	r3, r3
 8004004:	2b00      	cmp	r3, #0
 8004006:	bf0c      	ite	eq
 8004008:	2301      	moveq	r3, #1
 800400a:	2300      	movne	r3, #0
 800400c:	b2db      	uxtb	r3, r3
 800400e:	461a      	mov	r2, r3
 8004010:	e00c      	b.n	800402c <I2C_WaitOnFlagUntilTimeout+0x70>
 8004012:	68fb      	ldr	r3, [r7, #12]
 8004014:	681b      	ldr	r3, [r3, #0]
 8004016:	699b      	ldr	r3, [r3, #24]
 8004018:	43da      	mvns	r2, r3
 800401a:	68bb      	ldr	r3, [r7, #8]
 800401c:	4013      	ands	r3, r2
 800401e:	b29b      	uxth	r3, r3
 8004020:	2b00      	cmp	r3, #0
 8004022:	bf0c      	ite	eq
 8004024:	2301      	moveq	r3, #1
 8004026:	2300      	movne	r3, #0
 8004028:	b2db      	uxtb	r3, r3
 800402a:	461a      	mov	r2, r3
 800402c:	79fb      	ldrb	r3, [r7, #7]
 800402e:	429a      	cmp	r2, r3
 8004030:	d116      	bne.n	8004060 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8004032:	68fb      	ldr	r3, [r7, #12]
 8004034:	2200      	movs	r2, #0
 8004036:	631a      	str	r2, [r3, #48]	@ 0x30
 8004038:	68fb      	ldr	r3, [r7, #12]
 800403a:	2220      	movs	r2, #32
 800403c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004040:	68fb      	ldr	r3, [r7, #12]
 8004042:	2200      	movs	r2, #0
 8004044:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004048:	68fb      	ldr	r3, [r7, #12]
 800404a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800404c:	f043 0220 	orr.w	r2, r3, #32
 8004050:	68fb      	ldr	r3, [r7, #12]
 8004052:	641a      	str	r2, [r3, #64]	@ 0x40
 8004054:	68fb      	ldr	r3, [r7, #12]
 8004056:	2200      	movs	r2, #0
 8004058:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800405c:	2301      	movs	r3, #1
 800405e:	e023      	b.n	80040a8 <I2C_WaitOnFlagUntilTimeout+0xec>
 8004060:	68bb      	ldr	r3, [r7, #8]
 8004062:	0c1b      	lsrs	r3, r3, #16
 8004064:	b2db      	uxtb	r3, r3
 8004066:	2b01      	cmp	r3, #1
 8004068:	d10d      	bne.n	8004086 <I2C_WaitOnFlagUntilTimeout+0xca>
 800406a:	68fb      	ldr	r3, [r7, #12]
 800406c:	681b      	ldr	r3, [r3, #0]
 800406e:	695b      	ldr	r3, [r3, #20]
 8004070:	43da      	mvns	r2, r3
 8004072:	68bb      	ldr	r3, [r7, #8]
 8004074:	4013      	ands	r3, r2
 8004076:	b29b      	uxth	r3, r3
 8004078:	2b00      	cmp	r3, #0
 800407a:	bf0c      	ite	eq
 800407c:	2301      	moveq	r3, #1
 800407e:	2300      	movne	r3, #0
 8004080:	b2db      	uxtb	r3, r3
 8004082:	461a      	mov	r2, r3
 8004084:	e00c      	b.n	80040a0 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8004086:	68fb      	ldr	r3, [r7, #12]
 8004088:	681b      	ldr	r3, [r3, #0]
 800408a:	699b      	ldr	r3, [r3, #24]
 800408c:	43da      	mvns	r2, r3
 800408e:	68bb      	ldr	r3, [r7, #8]
 8004090:	4013      	ands	r3, r2
 8004092:	b29b      	uxth	r3, r3
 8004094:	2b00      	cmp	r3, #0
 8004096:	bf0c      	ite	eq
 8004098:	2301      	moveq	r3, #1
 800409a:	2300      	movne	r3, #0
 800409c:	b2db      	uxtb	r3, r3
 800409e:	461a      	mov	r2, r3
 80040a0:	79fb      	ldrb	r3, [r7, #7]
 80040a2:	429a      	cmp	r2, r3
 80040a4:	d093      	beq.n	8003fce <I2C_WaitOnFlagUntilTimeout+0x12>
 80040a6:	2300      	movs	r3, #0
 80040a8:	4618      	mov	r0, r3
 80040aa:	3710      	adds	r7, #16
 80040ac:	46bd      	mov	sp, r7
 80040ae:	bd80      	pop	{r7, pc}

080040b0 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 80040b0:	b580      	push	{r7, lr}
 80040b2:	b084      	sub	sp, #16
 80040b4:	af00      	add	r7, sp, #0
 80040b6:	60f8      	str	r0, [r7, #12]
 80040b8:	60b9      	str	r1, [r7, #8]
 80040ba:	607a      	str	r2, [r7, #4]
 80040bc:	603b      	str	r3, [r7, #0]
 80040be:	e071      	b.n	80041a4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80040c0:	68fb      	ldr	r3, [r7, #12]
 80040c2:	681b      	ldr	r3, [r3, #0]
 80040c4:	695b      	ldr	r3, [r3, #20]
 80040c6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80040ca:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80040ce:	d123      	bne.n	8004118 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 80040d0:	68fb      	ldr	r3, [r7, #12]
 80040d2:	681b      	ldr	r3, [r3, #0]
 80040d4:	681a      	ldr	r2, [r3, #0]
 80040d6:	68fb      	ldr	r3, [r7, #12]
 80040d8:	681b      	ldr	r3, [r3, #0]
 80040da:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80040de:	601a      	str	r2, [r3, #0]
 80040e0:	68fb      	ldr	r3, [r7, #12]
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80040e8:	615a      	str	r2, [r3, #20]
 80040ea:	68fb      	ldr	r3, [r7, #12]
 80040ec:	2200      	movs	r2, #0
 80040ee:	631a      	str	r2, [r3, #48]	@ 0x30
 80040f0:	68fb      	ldr	r3, [r7, #12]
 80040f2:	2220      	movs	r2, #32
 80040f4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80040f8:	68fb      	ldr	r3, [r7, #12]
 80040fa:	2200      	movs	r2, #0
 80040fc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004100:	68fb      	ldr	r3, [r7, #12]
 8004102:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004104:	f043 0204 	orr.w	r2, r3, #4
 8004108:	68fb      	ldr	r3, [r7, #12]
 800410a:	641a      	str	r2, [r3, #64]	@ 0x40
 800410c:	68fb      	ldr	r3, [r7, #12]
 800410e:	2200      	movs	r2, #0
 8004110:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004114:	2301      	movs	r3, #1
 8004116:	e067      	b.n	80041e8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8004118:	687b      	ldr	r3, [r7, #4]
 800411a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800411e:	d041      	beq.n	80041a4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8004120:	f7fe fd28 	bl	8002b74 <HAL_GetTick>
 8004124:	4602      	mov	r2, r0
 8004126:	683b      	ldr	r3, [r7, #0]
 8004128:	1ad3      	subs	r3, r2, r3
 800412a:	687a      	ldr	r2, [r7, #4]
 800412c:	429a      	cmp	r2, r3
 800412e:	d302      	bcc.n	8004136 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	2b00      	cmp	r3, #0
 8004134:	d136      	bne.n	80041a4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8004136:	68bb      	ldr	r3, [r7, #8]
 8004138:	0c1b      	lsrs	r3, r3, #16
 800413a:	b2db      	uxtb	r3, r3
 800413c:	2b01      	cmp	r3, #1
 800413e:	d10c      	bne.n	800415a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8004140:	68fb      	ldr	r3, [r7, #12]
 8004142:	681b      	ldr	r3, [r3, #0]
 8004144:	695b      	ldr	r3, [r3, #20]
 8004146:	43da      	mvns	r2, r3
 8004148:	68bb      	ldr	r3, [r7, #8]
 800414a:	4013      	ands	r3, r2
 800414c:	b29b      	uxth	r3, r3
 800414e:	2b00      	cmp	r3, #0
 8004150:	bf14      	ite	ne
 8004152:	2301      	movne	r3, #1
 8004154:	2300      	moveq	r3, #0
 8004156:	b2db      	uxtb	r3, r3
 8004158:	e00b      	b.n	8004172 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 800415a:	68fb      	ldr	r3, [r7, #12]
 800415c:	681b      	ldr	r3, [r3, #0]
 800415e:	699b      	ldr	r3, [r3, #24]
 8004160:	43da      	mvns	r2, r3
 8004162:	68bb      	ldr	r3, [r7, #8]
 8004164:	4013      	ands	r3, r2
 8004166:	b29b      	uxth	r3, r3
 8004168:	2b00      	cmp	r3, #0
 800416a:	bf14      	ite	ne
 800416c:	2301      	movne	r3, #1
 800416e:	2300      	moveq	r3, #0
 8004170:	b2db      	uxtb	r3, r3
 8004172:	2b00      	cmp	r3, #0
 8004174:	d016      	beq.n	80041a4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8004176:	68fb      	ldr	r3, [r7, #12]
 8004178:	2200      	movs	r2, #0
 800417a:	631a      	str	r2, [r3, #48]	@ 0x30
 800417c:	68fb      	ldr	r3, [r7, #12]
 800417e:	2220      	movs	r2, #32
 8004180:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004184:	68fb      	ldr	r3, [r7, #12]
 8004186:	2200      	movs	r2, #0
 8004188:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800418c:	68fb      	ldr	r3, [r7, #12]
 800418e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004190:	f043 0220 	orr.w	r2, r3, #32
 8004194:	68fb      	ldr	r3, [r7, #12]
 8004196:	641a      	str	r2, [r3, #64]	@ 0x40
 8004198:	68fb      	ldr	r3, [r7, #12]
 800419a:	2200      	movs	r2, #0
 800419c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80041a0:	2301      	movs	r3, #1
 80041a2:	e021      	b.n	80041e8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 80041a4:	68bb      	ldr	r3, [r7, #8]
 80041a6:	0c1b      	lsrs	r3, r3, #16
 80041a8:	b2db      	uxtb	r3, r3
 80041aa:	2b01      	cmp	r3, #1
 80041ac:	d10c      	bne.n	80041c8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 80041ae:	68fb      	ldr	r3, [r7, #12]
 80041b0:	681b      	ldr	r3, [r3, #0]
 80041b2:	695b      	ldr	r3, [r3, #20]
 80041b4:	43da      	mvns	r2, r3
 80041b6:	68bb      	ldr	r3, [r7, #8]
 80041b8:	4013      	ands	r3, r2
 80041ba:	b29b      	uxth	r3, r3
 80041bc:	2b00      	cmp	r3, #0
 80041be:	bf14      	ite	ne
 80041c0:	2301      	movne	r3, #1
 80041c2:	2300      	moveq	r3, #0
 80041c4:	b2db      	uxtb	r3, r3
 80041c6:	e00b      	b.n	80041e0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 80041c8:	68fb      	ldr	r3, [r7, #12]
 80041ca:	681b      	ldr	r3, [r3, #0]
 80041cc:	699b      	ldr	r3, [r3, #24]
 80041ce:	43da      	mvns	r2, r3
 80041d0:	68bb      	ldr	r3, [r7, #8]
 80041d2:	4013      	ands	r3, r2
 80041d4:	b29b      	uxth	r3, r3
 80041d6:	2b00      	cmp	r3, #0
 80041d8:	bf14      	ite	ne
 80041da:	2301      	movne	r3, #1
 80041dc:	2300      	moveq	r3, #0
 80041de:	b2db      	uxtb	r3, r3
 80041e0:	2b00      	cmp	r3, #0
 80041e2:	f47f af6d 	bne.w	80040c0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 80041e6:	2300      	movs	r3, #0
 80041e8:	4618      	mov	r0, r3
 80041ea:	3710      	adds	r7, #16
 80041ec:	46bd      	mov	sp, r7
 80041ee:	bd80      	pop	{r7, pc}

080041f0 <I2C_WaitOnTXEFlagUntilTimeout>:
 80041f0:	b580      	push	{r7, lr}
 80041f2:	b084      	sub	sp, #16
 80041f4:	af00      	add	r7, sp, #0
 80041f6:	60f8      	str	r0, [r7, #12]
 80041f8:	60b9      	str	r1, [r7, #8]
 80041fa:	607a      	str	r2, [r7, #4]
 80041fc:	e034      	b.n	8004268 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80041fe:	68f8      	ldr	r0, [r7, #12]
 8004200:	f000 f8e3 	bl	80043ca <I2C_IsAcknowledgeFailed>
 8004204:	4603      	mov	r3, r0
 8004206:	2b00      	cmp	r3, #0
 8004208:	d001      	beq.n	800420e <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 800420a:	2301      	movs	r3, #1
 800420c:	e034      	b.n	8004278 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 800420e:	68bb      	ldr	r3, [r7, #8]
 8004210:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004214:	d028      	beq.n	8004268 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8004216:	f7fe fcad 	bl	8002b74 <HAL_GetTick>
 800421a:	4602      	mov	r2, r0
 800421c:	687b      	ldr	r3, [r7, #4]
 800421e:	1ad3      	subs	r3, r2, r3
 8004220:	68ba      	ldr	r2, [r7, #8]
 8004222:	429a      	cmp	r2, r3
 8004224:	d302      	bcc.n	800422c <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8004226:	68bb      	ldr	r3, [r7, #8]
 8004228:	2b00      	cmp	r3, #0
 800422a:	d11d      	bne.n	8004268 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800422c:	68fb      	ldr	r3, [r7, #12]
 800422e:	681b      	ldr	r3, [r3, #0]
 8004230:	695b      	ldr	r3, [r3, #20]
 8004232:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004236:	2b80      	cmp	r3, #128	@ 0x80
 8004238:	d016      	beq.n	8004268 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800423a:	68fb      	ldr	r3, [r7, #12]
 800423c:	2200      	movs	r2, #0
 800423e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004240:	68fb      	ldr	r3, [r7, #12]
 8004242:	2220      	movs	r2, #32
 8004244:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004248:	68fb      	ldr	r3, [r7, #12]
 800424a:	2200      	movs	r2, #0
 800424c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004250:	68fb      	ldr	r3, [r7, #12]
 8004252:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004254:	f043 0220 	orr.w	r2, r3, #32
 8004258:	68fb      	ldr	r3, [r7, #12]
 800425a:	641a      	str	r2, [r3, #64]	@ 0x40
 800425c:	68fb      	ldr	r3, [r7, #12]
 800425e:	2200      	movs	r2, #0
 8004260:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004264:	2301      	movs	r3, #1
 8004266:	e007      	b.n	8004278 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8004268:	68fb      	ldr	r3, [r7, #12]
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	695b      	ldr	r3, [r3, #20]
 800426e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004272:	2b80      	cmp	r3, #128	@ 0x80
 8004274:	d1c3      	bne.n	80041fe <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8004276:	2300      	movs	r3, #0
 8004278:	4618      	mov	r0, r3
 800427a:	3710      	adds	r7, #16
 800427c:	46bd      	mov	sp, r7
 800427e:	bd80      	pop	{r7, pc}

08004280 <I2C_WaitOnBTFFlagUntilTimeout>:
 8004280:	b580      	push	{r7, lr}
 8004282:	b084      	sub	sp, #16
 8004284:	af00      	add	r7, sp, #0
 8004286:	60f8      	str	r0, [r7, #12]
 8004288:	60b9      	str	r1, [r7, #8]
 800428a:	607a      	str	r2, [r7, #4]
 800428c:	e034      	b.n	80042f8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800428e:	68f8      	ldr	r0, [r7, #12]
 8004290:	f000 f89b 	bl	80043ca <I2C_IsAcknowledgeFailed>
 8004294:	4603      	mov	r3, r0
 8004296:	2b00      	cmp	r3, #0
 8004298:	d001      	beq.n	800429e <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800429a:	2301      	movs	r3, #1
 800429c:	e034      	b.n	8004308 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 800429e:	68bb      	ldr	r3, [r7, #8]
 80042a0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80042a4:	d028      	beq.n	80042f8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80042a6:	f7fe fc65 	bl	8002b74 <HAL_GetTick>
 80042aa:	4602      	mov	r2, r0
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	1ad3      	subs	r3, r2, r3
 80042b0:	68ba      	ldr	r2, [r7, #8]
 80042b2:	429a      	cmp	r2, r3
 80042b4:	d302      	bcc.n	80042bc <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80042b6:	68bb      	ldr	r3, [r7, #8]
 80042b8:	2b00      	cmp	r3, #0
 80042ba:	d11d      	bne.n	80042f8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80042bc:	68fb      	ldr	r3, [r7, #12]
 80042be:	681b      	ldr	r3, [r3, #0]
 80042c0:	695b      	ldr	r3, [r3, #20]
 80042c2:	f003 0304 	and.w	r3, r3, #4
 80042c6:	2b04      	cmp	r3, #4
 80042c8:	d016      	beq.n	80042f8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80042ca:	68fb      	ldr	r3, [r7, #12]
 80042cc:	2200      	movs	r2, #0
 80042ce:	631a      	str	r2, [r3, #48]	@ 0x30
 80042d0:	68fb      	ldr	r3, [r7, #12]
 80042d2:	2220      	movs	r2, #32
 80042d4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80042d8:	68fb      	ldr	r3, [r7, #12]
 80042da:	2200      	movs	r2, #0
 80042dc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80042e0:	68fb      	ldr	r3, [r7, #12]
 80042e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80042e4:	f043 0220 	orr.w	r2, r3, #32
 80042e8:	68fb      	ldr	r3, [r7, #12]
 80042ea:	641a      	str	r2, [r3, #64]	@ 0x40
 80042ec:	68fb      	ldr	r3, [r7, #12]
 80042ee:	2200      	movs	r2, #0
 80042f0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80042f4:	2301      	movs	r3, #1
 80042f6:	e007      	b.n	8004308 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 80042f8:	68fb      	ldr	r3, [r7, #12]
 80042fa:	681b      	ldr	r3, [r3, #0]
 80042fc:	695b      	ldr	r3, [r3, #20]
 80042fe:	f003 0304 	and.w	r3, r3, #4
 8004302:	2b04      	cmp	r3, #4
 8004304:	d1c3      	bne.n	800428e <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8004306:	2300      	movs	r3, #0
 8004308:	4618      	mov	r0, r3
 800430a:	3710      	adds	r7, #16
 800430c:	46bd      	mov	sp, r7
 800430e:	bd80      	pop	{r7, pc}

08004310 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8004310:	b580      	push	{r7, lr}
 8004312:	b084      	sub	sp, #16
 8004314:	af00      	add	r7, sp, #0
 8004316:	60f8      	str	r0, [r7, #12]
 8004318:	60b9      	str	r1, [r7, #8]
 800431a:	607a      	str	r2, [r7, #4]
 800431c:	e049      	b.n	80043b2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 800431e:	68fb      	ldr	r3, [r7, #12]
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	695b      	ldr	r3, [r3, #20]
 8004324:	f003 0310 	and.w	r3, r3, #16
 8004328:	2b10      	cmp	r3, #16
 800432a:	d119      	bne.n	8004360 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 800432c:	68fb      	ldr	r3, [r7, #12]
 800432e:	681b      	ldr	r3, [r3, #0]
 8004330:	f06f 0210 	mvn.w	r2, #16
 8004334:	615a      	str	r2, [r3, #20]
 8004336:	68fb      	ldr	r3, [r7, #12]
 8004338:	2200      	movs	r2, #0
 800433a:	631a      	str	r2, [r3, #48]	@ 0x30
 800433c:	68fb      	ldr	r3, [r7, #12]
 800433e:	2220      	movs	r2, #32
 8004340:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004344:	68fb      	ldr	r3, [r7, #12]
 8004346:	2200      	movs	r2, #0
 8004348:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800434c:	68fb      	ldr	r3, [r7, #12]
 800434e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004350:	68fb      	ldr	r3, [r7, #12]
 8004352:	641a      	str	r2, [r3, #64]	@ 0x40
 8004354:	68fb      	ldr	r3, [r7, #12]
 8004356:	2200      	movs	r2, #0
 8004358:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800435c:	2301      	movs	r3, #1
 800435e:	e030      	b.n	80043c2 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8004360:	f7fe fc08 	bl	8002b74 <HAL_GetTick>
 8004364:	4602      	mov	r2, r0
 8004366:	687b      	ldr	r3, [r7, #4]
 8004368:	1ad3      	subs	r3, r2, r3
 800436a:	68ba      	ldr	r2, [r7, #8]
 800436c:	429a      	cmp	r2, r3
 800436e:	d302      	bcc.n	8004376 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8004370:	68bb      	ldr	r3, [r7, #8]
 8004372:	2b00      	cmp	r3, #0
 8004374:	d11d      	bne.n	80043b2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8004376:	68fb      	ldr	r3, [r7, #12]
 8004378:	681b      	ldr	r3, [r3, #0]
 800437a:	695b      	ldr	r3, [r3, #20]
 800437c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004380:	2b40      	cmp	r3, #64	@ 0x40
 8004382:	d016      	beq.n	80043b2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8004384:	68fb      	ldr	r3, [r7, #12]
 8004386:	2200      	movs	r2, #0
 8004388:	631a      	str	r2, [r3, #48]	@ 0x30
 800438a:	68fb      	ldr	r3, [r7, #12]
 800438c:	2220      	movs	r2, #32
 800438e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004392:	68fb      	ldr	r3, [r7, #12]
 8004394:	2200      	movs	r2, #0
 8004396:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800439a:	68fb      	ldr	r3, [r7, #12]
 800439c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800439e:	f043 0220 	orr.w	r2, r3, #32
 80043a2:	68fb      	ldr	r3, [r7, #12]
 80043a4:	641a      	str	r2, [r3, #64]	@ 0x40
 80043a6:	68fb      	ldr	r3, [r7, #12]
 80043a8:	2200      	movs	r2, #0
 80043aa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80043ae:	2301      	movs	r3, #1
 80043b0:	e007      	b.n	80043c2 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 80043b2:	68fb      	ldr	r3, [r7, #12]
 80043b4:	681b      	ldr	r3, [r3, #0]
 80043b6:	695b      	ldr	r3, [r3, #20]
 80043b8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80043bc:	2b40      	cmp	r3, #64	@ 0x40
 80043be:	d1ae      	bne.n	800431e <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 80043c0:	2300      	movs	r3, #0
 80043c2:	4618      	mov	r0, r3
 80043c4:	3710      	adds	r7, #16
 80043c6:	46bd      	mov	sp, r7
 80043c8:	bd80      	pop	{r7, pc}

080043ca <I2C_IsAcknowledgeFailed>:
 80043ca:	b480      	push	{r7}
 80043cc:	b083      	sub	sp, #12
 80043ce:	af00      	add	r7, sp, #0
 80043d0:	6078      	str	r0, [r7, #4]
 80043d2:	687b      	ldr	r3, [r7, #4]
 80043d4:	681b      	ldr	r3, [r3, #0]
 80043d6:	695b      	ldr	r3, [r3, #20]
 80043d8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80043dc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80043e0:	d11b      	bne.n	800441a <I2C_IsAcknowledgeFailed+0x50>
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80043ea:	615a      	str	r2, [r3, #20]
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	2200      	movs	r2, #0
 80043f0:	631a      	str	r2, [r3, #48]	@ 0x30
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	2220      	movs	r2, #32
 80043f6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	2200      	movs	r2, #0
 80043fe:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004406:	f043 0204 	orr.w	r2, r3, #4
 800440a:	687b      	ldr	r3, [r7, #4]
 800440c:	641a      	str	r2, [r3, #64]	@ 0x40
 800440e:	687b      	ldr	r3, [r7, #4]
 8004410:	2200      	movs	r2, #0
 8004412:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004416:	2301      	movs	r3, #1
 8004418:	e000      	b.n	800441c <I2C_IsAcknowledgeFailed+0x52>
 800441a:	2300      	movs	r3, #0
 800441c:	4618      	mov	r0, r3
 800441e:	370c      	adds	r7, #12
 8004420:	46bd      	mov	sp, r7
 8004422:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004426:	4770      	bx	lr

08004428 <HAL_RCC_ClockConfig>:
 8004428:	b580      	push	{r7, lr}
 800442a:	b084      	sub	sp, #16
 800442c:	af00      	add	r7, sp, #0
 800442e:	6078      	str	r0, [r7, #4]
 8004430:	6039      	str	r1, [r7, #0]
 8004432:	687b      	ldr	r3, [r7, #4]
 8004434:	2b00      	cmp	r3, #0
 8004436:	d101      	bne.n	800443c <HAL_RCC_ClockConfig+0x14>
 8004438:	2301      	movs	r3, #1
 800443a:	e0cc      	b.n	80045d6 <HAL_RCC_ClockConfig+0x1ae>
 800443c:	4b68      	ldr	r3, [pc, #416]	@ (80045e0 <HAL_RCC_ClockConfig+0x1b8>)
 800443e:	681b      	ldr	r3, [r3, #0]
 8004440:	f003 030f 	and.w	r3, r3, #15
 8004444:	683a      	ldr	r2, [r7, #0]
 8004446:	429a      	cmp	r2, r3
 8004448:	d90c      	bls.n	8004464 <HAL_RCC_ClockConfig+0x3c>
 800444a:	4b65      	ldr	r3, [pc, #404]	@ (80045e0 <HAL_RCC_ClockConfig+0x1b8>)
 800444c:	683a      	ldr	r2, [r7, #0]
 800444e:	b2d2      	uxtb	r2, r2
 8004450:	701a      	strb	r2, [r3, #0]
 8004452:	4b63      	ldr	r3, [pc, #396]	@ (80045e0 <HAL_RCC_ClockConfig+0x1b8>)
 8004454:	681b      	ldr	r3, [r3, #0]
 8004456:	f003 030f 	and.w	r3, r3, #15
 800445a:	683a      	ldr	r2, [r7, #0]
 800445c:	429a      	cmp	r2, r3
 800445e:	d001      	beq.n	8004464 <HAL_RCC_ClockConfig+0x3c>
 8004460:	2301      	movs	r3, #1
 8004462:	e0b8      	b.n	80045d6 <HAL_RCC_ClockConfig+0x1ae>
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	681b      	ldr	r3, [r3, #0]
 8004468:	f003 0302 	and.w	r3, r3, #2
 800446c:	2b00      	cmp	r3, #0
 800446e:	d020      	beq.n	80044b2 <HAL_RCC_ClockConfig+0x8a>
 8004470:	687b      	ldr	r3, [r7, #4]
 8004472:	681b      	ldr	r3, [r3, #0]
 8004474:	f003 0304 	and.w	r3, r3, #4
 8004478:	2b00      	cmp	r3, #0
 800447a:	d005      	beq.n	8004488 <HAL_RCC_ClockConfig+0x60>
 800447c:	4b59      	ldr	r3, [pc, #356]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 800447e:	689b      	ldr	r3, [r3, #8]
 8004480:	4a58      	ldr	r2, [pc, #352]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 8004482:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8004486:	6093      	str	r3, [r2, #8]
 8004488:	687b      	ldr	r3, [r7, #4]
 800448a:	681b      	ldr	r3, [r3, #0]
 800448c:	f003 0308 	and.w	r3, r3, #8
 8004490:	2b00      	cmp	r3, #0
 8004492:	d005      	beq.n	80044a0 <HAL_RCC_ClockConfig+0x78>
 8004494:	4b53      	ldr	r3, [pc, #332]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 8004496:	689b      	ldr	r3, [r3, #8]
 8004498:	4a52      	ldr	r2, [pc, #328]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 800449a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800449e:	6093      	str	r3, [r2, #8]
 80044a0:	4b50      	ldr	r3, [pc, #320]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 80044a2:	689b      	ldr	r3, [r3, #8]
 80044a4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80044a8:	687b      	ldr	r3, [r7, #4]
 80044aa:	689b      	ldr	r3, [r3, #8]
 80044ac:	494d      	ldr	r1, [pc, #308]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 80044ae:	4313      	orrs	r3, r2
 80044b0:	608b      	str	r3, [r1, #8]
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	f003 0301 	and.w	r3, r3, #1
 80044ba:	2b00      	cmp	r3, #0
 80044bc:	d044      	beq.n	8004548 <HAL_RCC_ClockConfig+0x120>
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	685b      	ldr	r3, [r3, #4]
 80044c2:	2b01      	cmp	r3, #1
 80044c4:	d107      	bne.n	80044d6 <HAL_RCC_ClockConfig+0xae>
 80044c6:	4b47      	ldr	r3, [pc, #284]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80044ce:	2b00      	cmp	r3, #0
 80044d0:	d119      	bne.n	8004506 <HAL_RCC_ClockConfig+0xde>
 80044d2:	2301      	movs	r3, #1
 80044d4:	e07f      	b.n	80045d6 <HAL_RCC_ClockConfig+0x1ae>
 80044d6:	687b      	ldr	r3, [r7, #4]
 80044d8:	685b      	ldr	r3, [r3, #4]
 80044da:	2b02      	cmp	r3, #2
 80044dc:	d003      	beq.n	80044e6 <HAL_RCC_ClockConfig+0xbe>
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	685b      	ldr	r3, [r3, #4]
 80044e2:	2b03      	cmp	r3, #3
 80044e4:	d107      	bne.n	80044f6 <HAL_RCC_ClockConfig+0xce>
 80044e6:	4b3f      	ldr	r3, [pc, #252]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 80044e8:	681b      	ldr	r3, [r3, #0]
 80044ea:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80044ee:	2b00      	cmp	r3, #0
 80044f0:	d109      	bne.n	8004506 <HAL_RCC_ClockConfig+0xde>
 80044f2:	2301      	movs	r3, #1
 80044f4:	e06f      	b.n	80045d6 <HAL_RCC_ClockConfig+0x1ae>
 80044f6:	4b3b      	ldr	r3, [pc, #236]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 80044f8:	681b      	ldr	r3, [r3, #0]
 80044fa:	f003 0302 	and.w	r3, r3, #2
 80044fe:	2b00      	cmp	r3, #0
 8004500:	d101      	bne.n	8004506 <HAL_RCC_ClockConfig+0xde>
 8004502:	2301      	movs	r3, #1
 8004504:	e067      	b.n	80045d6 <HAL_RCC_ClockConfig+0x1ae>
 8004506:	4b37      	ldr	r3, [pc, #220]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 8004508:	689b      	ldr	r3, [r3, #8]
 800450a:	f023 0203 	bic.w	r2, r3, #3
 800450e:	687b      	ldr	r3, [r7, #4]
 8004510:	685b      	ldr	r3, [r3, #4]
 8004512:	4934      	ldr	r1, [pc, #208]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 8004514:	4313      	orrs	r3, r2
 8004516:	608b      	str	r3, [r1, #8]
 8004518:	f7fe fb2c 	bl	8002b74 <HAL_GetTick>
 800451c:	60f8      	str	r0, [r7, #12]
 800451e:	e00a      	b.n	8004536 <HAL_RCC_ClockConfig+0x10e>
 8004520:	f7fe fb28 	bl	8002b74 <HAL_GetTick>
 8004524:	4602      	mov	r2, r0
 8004526:	68fb      	ldr	r3, [r7, #12]
 8004528:	1ad3      	subs	r3, r2, r3
 800452a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800452e:	4293      	cmp	r3, r2
 8004530:	d901      	bls.n	8004536 <HAL_RCC_ClockConfig+0x10e>
 8004532:	2303      	movs	r3, #3
 8004534:	e04f      	b.n	80045d6 <HAL_RCC_ClockConfig+0x1ae>
 8004536:	4b2b      	ldr	r3, [pc, #172]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 8004538:	689b      	ldr	r3, [r3, #8]
 800453a:	f003 020c 	and.w	r2, r3, #12
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	685b      	ldr	r3, [r3, #4]
 8004542:	009b      	lsls	r3, r3, #2
 8004544:	429a      	cmp	r2, r3
 8004546:	d1eb      	bne.n	8004520 <HAL_RCC_ClockConfig+0xf8>
 8004548:	4b25      	ldr	r3, [pc, #148]	@ (80045e0 <HAL_RCC_ClockConfig+0x1b8>)
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	f003 030f 	and.w	r3, r3, #15
 8004550:	683a      	ldr	r2, [r7, #0]
 8004552:	429a      	cmp	r2, r3
 8004554:	d20c      	bcs.n	8004570 <HAL_RCC_ClockConfig+0x148>
 8004556:	4b22      	ldr	r3, [pc, #136]	@ (80045e0 <HAL_RCC_ClockConfig+0x1b8>)
 8004558:	683a      	ldr	r2, [r7, #0]
 800455a:	b2d2      	uxtb	r2, r2
 800455c:	701a      	strb	r2, [r3, #0]
 800455e:	4b20      	ldr	r3, [pc, #128]	@ (80045e0 <HAL_RCC_ClockConfig+0x1b8>)
 8004560:	681b      	ldr	r3, [r3, #0]
 8004562:	f003 030f 	and.w	r3, r3, #15
 8004566:	683a      	ldr	r2, [r7, #0]
 8004568:	429a      	cmp	r2, r3
 800456a:	d001      	beq.n	8004570 <HAL_RCC_ClockConfig+0x148>
 800456c:	2301      	movs	r3, #1
 800456e:	e032      	b.n	80045d6 <HAL_RCC_ClockConfig+0x1ae>
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	f003 0304 	and.w	r3, r3, #4
 8004578:	2b00      	cmp	r3, #0
 800457a:	d008      	beq.n	800458e <HAL_RCC_ClockConfig+0x166>
 800457c:	4b19      	ldr	r3, [pc, #100]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 800457e:	689b      	ldr	r3, [r3, #8]
 8004580:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	68db      	ldr	r3, [r3, #12]
 8004588:	4916      	ldr	r1, [pc, #88]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 800458a:	4313      	orrs	r3, r2
 800458c:	608b      	str	r3, [r1, #8]
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	681b      	ldr	r3, [r3, #0]
 8004592:	f003 0308 	and.w	r3, r3, #8
 8004596:	2b00      	cmp	r3, #0
 8004598:	d009      	beq.n	80045ae <HAL_RCC_ClockConfig+0x186>
 800459a:	4b12      	ldr	r3, [pc, #72]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 800459c:	689b      	ldr	r3, [r3, #8]
 800459e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	691b      	ldr	r3, [r3, #16]
 80045a6:	00db      	lsls	r3, r3, #3
 80045a8:	490e      	ldr	r1, [pc, #56]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 80045aa:	4313      	orrs	r3, r2
 80045ac:	608b      	str	r3, [r1, #8]
 80045ae:	f000 f841 	bl	8004634 <HAL_RCC_GetSysClockFreq>
 80045b2:	4602      	mov	r2, r0
 80045b4:	4b0b      	ldr	r3, [pc, #44]	@ (80045e4 <HAL_RCC_ClockConfig+0x1bc>)
 80045b6:	689b      	ldr	r3, [r3, #8]
 80045b8:	091b      	lsrs	r3, r3, #4
 80045ba:	f003 030f 	and.w	r3, r3, #15
 80045be:	490a      	ldr	r1, [pc, #40]	@ (80045e8 <HAL_RCC_ClockConfig+0x1c0>)
 80045c0:	5ccb      	ldrb	r3, [r1, r3]
 80045c2:	fa22 f303 	lsr.w	r3, r2, r3
 80045c6:	4a09      	ldr	r2, [pc, #36]	@ (80045ec <HAL_RCC_ClockConfig+0x1c4>)
 80045c8:	6013      	str	r3, [r2, #0]
 80045ca:	4b09      	ldr	r3, [pc, #36]	@ (80045f0 <HAL_RCC_ClockConfig+0x1c8>)
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	4618      	mov	r0, r3
 80045d0:	f7fe fa8c 	bl	8002aec <HAL_InitTick>
 80045d4:	2300      	movs	r3, #0
 80045d6:	4618      	mov	r0, r3
 80045d8:	3710      	adds	r7, #16
 80045da:	46bd      	mov	sp, r7
 80045dc:	bd80      	pop	{r7, pc}
 80045de:	bf00      	nop
 80045e0:	40023c00 	.word	0x40023c00
 80045e4:	40023800 	.word	0x40023800
 80045e8:	08006818 	.word	0x08006818
 80045ec:	20000010 	.word	0x20000010
 80045f0:	20000014 	.word	0x20000014

080045f4 <HAL_RCC_GetHCLKFreq>:
 80045f4:	b480      	push	{r7}
 80045f6:	af00      	add	r7, sp, #0
 80045f8:	4b03      	ldr	r3, [pc, #12]	@ (8004608 <HAL_RCC_GetHCLKFreq+0x14>)
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	4618      	mov	r0, r3
 80045fe:	46bd      	mov	sp, r7
 8004600:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004604:	4770      	bx	lr
 8004606:	bf00      	nop
 8004608:	20000010 	.word	0x20000010

0800460c <HAL_RCC_GetPCLK1Freq>:
 800460c:	b580      	push	{r7, lr}
 800460e:	af00      	add	r7, sp, #0
 8004610:	f7ff fff0 	bl	80045f4 <HAL_RCC_GetHCLKFreq>
 8004614:	4602      	mov	r2, r0
 8004616:	4b05      	ldr	r3, [pc, #20]	@ (800462c <HAL_RCC_GetPCLK1Freq+0x20>)
 8004618:	689b      	ldr	r3, [r3, #8]
 800461a:	0a9b      	lsrs	r3, r3, #10
 800461c:	f003 0307 	and.w	r3, r3, #7
 8004620:	4903      	ldr	r1, [pc, #12]	@ (8004630 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004622:	5ccb      	ldrb	r3, [r1, r3]
 8004624:	fa22 f303 	lsr.w	r3, r2, r3
 8004628:	4618      	mov	r0, r3
 800462a:	bd80      	pop	{r7, pc}
 800462c:	40023800 	.word	0x40023800
 8004630:	08006828 	.word	0x08006828

08004634 <HAL_RCC_GetSysClockFreq>:
 8004634:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004638:	b0a6      	sub	sp, #152	@ 0x98
 800463a:	af00      	add	r7, sp, #0
 800463c:	2300      	movs	r3, #0
 800463e:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004642:	2300      	movs	r3, #0
 8004644:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8004648:	2300      	movs	r3, #0
 800464a:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800464e:	2300      	movs	r3, #0
 8004650:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004654:	2300      	movs	r3, #0
 8004656:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800465a:	4bc8      	ldr	r3, [pc, #800]	@ (800497c <HAL_RCC_GetSysClockFreq+0x348>)
 800465c:	689b      	ldr	r3, [r3, #8]
 800465e:	f003 030c 	and.w	r3, r3, #12
 8004662:	2b0c      	cmp	r3, #12
 8004664:	f200 817e 	bhi.w	8004964 <HAL_RCC_GetSysClockFreq+0x330>
 8004668:	a201      	add	r2, pc, #4	@ (adr r2, 8004670 <HAL_RCC_GetSysClockFreq+0x3c>)
 800466a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800466e:	bf00      	nop
 8004670:	080046a5 	.word	0x080046a5
 8004674:	08004965 	.word	0x08004965
 8004678:	08004965 	.word	0x08004965
 800467c:	08004965 	.word	0x08004965
 8004680:	080046ad 	.word	0x080046ad
 8004684:	08004965 	.word	0x08004965
 8004688:	08004965 	.word	0x08004965
 800468c:	08004965 	.word	0x08004965
 8004690:	080046b5 	.word	0x080046b5
 8004694:	08004965 	.word	0x08004965
 8004698:	08004965 	.word	0x08004965
 800469c:	08004965 	.word	0x08004965
 80046a0:	0800481f 	.word	0x0800481f
 80046a4:	4bb6      	ldr	r3, [pc, #728]	@ (8004980 <HAL_RCC_GetSysClockFreq+0x34c>)
 80046a6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80046aa:	e15f      	b.n	800496c <HAL_RCC_GetSysClockFreq+0x338>
 80046ac:	4bb5      	ldr	r3, [pc, #724]	@ (8004984 <HAL_RCC_GetSysClockFreq+0x350>)
 80046ae:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80046b2:	e15b      	b.n	800496c <HAL_RCC_GetSysClockFreq+0x338>
 80046b4:	4bb1      	ldr	r3, [pc, #708]	@ (800497c <HAL_RCC_GetSysClockFreq+0x348>)
 80046b6:	685b      	ldr	r3, [r3, #4]
 80046b8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80046bc:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80046c0:	4bae      	ldr	r3, [pc, #696]	@ (800497c <HAL_RCC_GetSysClockFreq+0x348>)
 80046c2:	685b      	ldr	r3, [r3, #4]
 80046c4:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80046c8:	2b00      	cmp	r3, #0
 80046ca:	d031      	beq.n	8004730 <HAL_RCC_GetSysClockFreq+0xfc>
 80046cc:	4bab      	ldr	r3, [pc, #684]	@ (800497c <HAL_RCC_GetSysClockFreq+0x348>)
 80046ce:	685b      	ldr	r3, [r3, #4]
 80046d0:	099b      	lsrs	r3, r3, #6
 80046d2:	2200      	movs	r2, #0
 80046d4:	66bb      	str	r3, [r7, #104]	@ 0x68
 80046d6:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80046d8:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80046da:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80046de:	663b      	str	r3, [r7, #96]	@ 0x60
 80046e0:	2300      	movs	r3, #0
 80046e2:	667b      	str	r3, [r7, #100]	@ 0x64
 80046e4:	4ba7      	ldr	r3, [pc, #668]	@ (8004984 <HAL_RCC_GetSysClockFreq+0x350>)
 80046e6:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 80046ea:	462a      	mov	r2, r5
 80046ec:	fb03 f202 	mul.w	r2, r3, r2
 80046f0:	2300      	movs	r3, #0
 80046f2:	4621      	mov	r1, r4
 80046f4:	fb01 f303 	mul.w	r3, r1, r3
 80046f8:	4413      	add	r3, r2
 80046fa:	4aa2      	ldr	r2, [pc, #648]	@ (8004984 <HAL_RCC_GetSysClockFreq+0x350>)
 80046fc:	4621      	mov	r1, r4
 80046fe:	fba1 1202 	umull	r1, r2, r1, r2
 8004702:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8004704:	460a      	mov	r2, r1
 8004706:	67ba      	str	r2, [r7, #120]	@ 0x78
 8004708:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 800470a:	4413      	add	r3, r2
 800470c:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800470e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004712:	2200      	movs	r2, #0
 8004714:	65bb      	str	r3, [r7, #88]	@ 0x58
 8004716:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8004718:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800471c:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8004720:	f7fc fa76 	bl	8000c10 <__aeabi_uldivmod>
 8004724:	4602      	mov	r2, r0
 8004726:	460b      	mov	r3, r1
 8004728:	4613      	mov	r3, r2
 800472a:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800472e:	e064      	b.n	80047fa <HAL_RCC_GetSysClockFreq+0x1c6>
 8004730:	4b92      	ldr	r3, [pc, #584]	@ (800497c <HAL_RCC_GetSysClockFreq+0x348>)
 8004732:	685b      	ldr	r3, [r3, #4]
 8004734:	099b      	lsrs	r3, r3, #6
 8004736:	2200      	movs	r2, #0
 8004738:	653b      	str	r3, [r7, #80]	@ 0x50
 800473a:	657a      	str	r2, [r7, #84]	@ 0x54
 800473c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800473e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004742:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004744:	2300      	movs	r3, #0
 8004746:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004748:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	@ 0x48
 800474c:	4622      	mov	r2, r4
 800474e:	462b      	mov	r3, r5
 8004750:	f04f 0000 	mov.w	r0, #0
 8004754:	f04f 0100 	mov.w	r1, #0
 8004758:	0159      	lsls	r1, r3, #5
 800475a:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800475e:	0150      	lsls	r0, r2, #5
 8004760:	4602      	mov	r2, r0
 8004762:	460b      	mov	r3, r1
 8004764:	4621      	mov	r1, r4
 8004766:	1a51      	subs	r1, r2, r1
 8004768:	6139      	str	r1, [r7, #16]
 800476a:	4629      	mov	r1, r5
 800476c:	eb63 0301 	sbc.w	r3, r3, r1
 8004770:	617b      	str	r3, [r7, #20]
 8004772:	f04f 0200 	mov.w	r2, #0
 8004776:	f04f 0300 	mov.w	r3, #0
 800477a:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800477e:	4659      	mov	r1, fp
 8004780:	018b      	lsls	r3, r1, #6
 8004782:	4651      	mov	r1, sl
 8004784:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004788:	4651      	mov	r1, sl
 800478a:	018a      	lsls	r2, r1, #6
 800478c:	4651      	mov	r1, sl
 800478e:	ebb2 0801 	subs.w	r8, r2, r1
 8004792:	4659      	mov	r1, fp
 8004794:	eb63 0901 	sbc.w	r9, r3, r1
 8004798:	f04f 0200 	mov.w	r2, #0
 800479c:	f04f 0300 	mov.w	r3, #0
 80047a0:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80047a4:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80047a8:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80047ac:	4690      	mov	r8, r2
 80047ae:	4699      	mov	r9, r3
 80047b0:	4623      	mov	r3, r4
 80047b2:	eb18 0303 	adds.w	r3, r8, r3
 80047b6:	60bb      	str	r3, [r7, #8]
 80047b8:	462b      	mov	r3, r5
 80047ba:	eb49 0303 	adc.w	r3, r9, r3
 80047be:	60fb      	str	r3, [r7, #12]
 80047c0:	f04f 0200 	mov.w	r2, #0
 80047c4:	f04f 0300 	mov.w	r3, #0
 80047c8:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80047cc:	4629      	mov	r1, r5
 80047ce:	028b      	lsls	r3, r1, #10
 80047d0:	4621      	mov	r1, r4
 80047d2:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80047d6:	4621      	mov	r1, r4
 80047d8:	028a      	lsls	r2, r1, #10
 80047da:	4610      	mov	r0, r2
 80047dc:	4619      	mov	r1, r3
 80047de:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80047e2:	2200      	movs	r2, #0
 80047e4:	643b      	str	r3, [r7, #64]	@ 0x40
 80047e6:	647a      	str	r2, [r7, #68]	@ 0x44
 80047e8:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80047ec:	f7fc fa10 	bl	8000c10 <__aeabi_uldivmod>
 80047f0:	4602      	mov	r2, r0
 80047f2:	460b      	mov	r3, r1
 80047f4:	4613      	mov	r3, r2
 80047f6:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80047fa:	4b60      	ldr	r3, [pc, #384]	@ (800497c <HAL_RCC_GetSysClockFreq+0x348>)
 80047fc:	685b      	ldr	r3, [r3, #4]
 80047fe:	0c1b      	lsrs	r3, r3, #16
 8004800:	f003 0303 	and.w	r3, r3, #3
 8004804:	3301      	adds	r3, #1
 8004806:	005b      	lsls	r3, r3, #1
 8004808:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800480c:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8004810:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8004814:	fbb2 f3f3 	udiv	r3, r2, r3
 8004818:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800481c:	e0a6      	b.n	800496c <HAL_RCC_GetSysClockFreq+0x338>
 800481e:	4b57      	ldr	r3, [pc, #348]	@ (800497c <HAL_RCC_GetSysClockFreq+0x348>)
 8004820:	685b      	ldr	r3, [r3, #4]
 8004822:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8004826:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800482a:	4b54      	ldr	r3, [pc, #336]	@ (800497c <HAL_RCC_GetSysClockFreq+0x348>)
 800482c:	685b      	ldr	r3, [r3, #4]
 800482e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004832:	2b00      	cmp	r3, #0
 8004834:	d02a      	beq.n	800488c <HAL_RCC_GetSysClockFreq+0x258>
 8004836:	4b51      	ldr	r3, [pc, #324]	@ (800497c <HAL_RCC_GetSysClockFreq+0x348>)
 8004838:	685b      	ldr	r3, [r3, #4]
 800483a:	099b      	lsrs	r3, r3, #6
 800483c:	2200      	movs	r2, #0
 800483e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004840:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8004842:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004844:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8004848:	2100      	movs	r1, #0
 800484a:	4b4e      	ldr	r3, [pc, #312]	@ (8004984 <HAL_RCC_GetSysClockFreq+0x350>)
 800484c:	fb03 f201 	mul.w	r2, r3, r1
 8004850:	2300      	movs	r3, #0
 8004852:	fb00 f303 	mul.w	r3, r0, r3
 8004856:	4413      	add	r3, r2
 8004858:	4a4a      	ldr	r2, [pc, #296]	@ (8004984 <HAL_RCC_GetSysClockFreq+0x350>)
 800485a:	fba0 1202 	umull	r1, r2, r0, r2
 800485e:	677a      	str	r2, [r7, #116]	@ 0x74
 8004860:	460a      	mov	r2, r1
 8004862:	673a      	str	r2, [r7, #112]	@ 0x70
 8004864:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8004866:	4413      	add	r3, r2
 8004868:	677b      	str	r3, [r7, #116]	@ 0x74
 800486a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800486e:	2200      	movs	r2, #0
 8004870:	633b      	str	r3, [r7, #48]	@ 0x30
 8004872:	637a      	str	r2, [r7, #52]	@ 0x34
 8004874:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8004878:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 800487c:	f7fc f9c8 	bl	8000c10 <__aeabi_uldivmod>
 8004880:	4602      	mov	r2, r0
 8004882:	460b      	mov	r3, r1
 8004884:	4613      	mov	r3, r2
 8004886:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800488a:	e05b      	b.n	8004944 <HAL_RCC_GetSysClockFreq+0x310>
 800488c:	4b3b      	ldr	r3, [pc, #236]	@ (800497c <HAL_RCC_GetSysClockFreq+0x348>)
 800488e:	685b      	ldr	r3, [r3, #4]
 8004890:	099b      	lsrs	r3, r3, #6
 8004892:	2200      	movs	r2, #0
 8004894:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004896:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004898:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800489a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800489e:	623b      	str	r3, [r7, #32]
 80048a0:	2300      	movs	r3, #0
 80048a2:	627b      	str	r3, [r7, #36]	@ 0x24
 80048a4:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 80048a8:	4642      	mov	r2, r8
 80048aa:	464b      	mov	r3, r9
 80048ac:	f04f 0000 	mov.w	r0, #0
 80048b0:	f04f 0100 	mov.w	r1, #0
 80048b4:	0159      	lsls	r1, r3, #5
 80048b6:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80048ba:	0150      	lsls	r0, r2, #5
 80048bc:	4602      	mov	r2, r0
 80048be:	460b      	mov	r3, r1
 80048c0:	4641      	mov	r1, r8
 80048c2:	ebb2 0a01 	subs.w	sl, r2, r1
 80048c6:	4649      	mov	r1, r9
 80048c8:	eb63 0b01 	sbc.w	fp, r3, r1
 80048cc:	f04f 0200 	mov.w	r2, #0
 80048d0:	f04f 0300 	mov.w	r3, #0
 80048d4:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80048d8:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80048dc:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80048e0:	ebb2 040a 	subs.w	r4, r2, sl
 80048e4:	eb63 050b 	sbc.w	r5, r3, fp
 80048e8:	f04f 0200 	mov.w	r2, #0
 80048ec:	f04f 0300 	mov.w	r3, #0
 80048f0:	00eb      	lsls	r3, r5, #3
 80048f2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80048f6:	00e2      	lsls	r2, r4, #3
 80048f8:	4614      	mov	r4, r2
 80048fa:	461d      	mov	r5, r3
 80048fc:	4643      	mov	r3, r8
 80048fe:	18e3      	adds	r3, r4, r3
 8004900:	603b      	str	r3, [r7, #0]
 8004902:	464b      	mov	r3, r9
 8004904:	eb45 0303 	adc.w	r3, r5, r3
 8004908:	607b      	str	r3, [r7, #4]
 800490a:	f04f 0200 	mov.w	r2, #0
 800490e:	f04f 0300 	mov.w	r3, #0
 8004912:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004916:	4629      	mov	r1, r5
 8004918:	028b      	lsls	r3, r1, #10
 800491a:	4621      	mov	r1, r4
 800491c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004920:	4621      	mov	r1, r4
 8004922:	028a      	lsls	r2, r1, #10
 8004924:	4610      	mov	r0, r2
 8004926:	4619      	mov	r1, r3
 8004928:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800492c:	2200      	movs	r2, #0
 800492e:	61bb      	str	r3, [r7, #24]
 8004930:	61fa      	str	r2, [r7, #28]
 8004932:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004936:	f7fc f96b 	bl	8000c10 <__aeabi_uldivmod>
 800493a:	4602      	mov	r2, r0
 800493c:	460b      	mov	r3, r1
 800493e:	4613      	mov	r3, r2
 8004940:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8004944:	4b0d      	ldr	r3, [pc, #52]	@ (800497c <HAL_RCC_GetSysClockFreq+0x348>)
 8004946:	685b      	ldr	r3, [r3, #4]
 8004948:	0f1b      	lsrs	r3, r3, #28
 800494a:	f003 0307 	and.w	r3, r3, #7
 800494e:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004952:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8004956:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800495a:	fbb2 f3f3 	udiv	r3, r2, r3
 800495e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004962:	e003      	b.n	800496c <HAL_RCC_GetSysClockFreq+0x338>
 8004964:	4b06      	ldr	r3, [pc, #24]	@ (8004980 <HAL_RCC_GetSysClockFreq+0x34c>)
 8004966:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800496a:	bf00      	nop
 800496c:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8004970:	4618      	mov	r0, r3
 8004972:	3798      	adds	r7, #152	@ 0x98
 8004974:	46bd      	mov	sp, r7
 8004976:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800497a:	bf00      	nop
 800497c:	40023800 	.word	0x40023800
 8004980:	00f42400 	.word	0x00f42400
 8004984:	017d7840 	.word	0x017d7840

08004988 <HAL_RCC_OscConfig>:
 8004988:	b580      	push	{r7, lr}
 800498a:	b086      	sub	sp, #24
 800498c:	af00      	add	r7, sp, #0
 800498e:	6078      	str	r0, [r7, #4]
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	2b00      	cmp	r3, #0
 8004994:	d101      	bne.n	800499a <HAL_RCC_OscConfig+0x12>
 8004996:	2301      	movs	r3, #1
 8004998:	e28d      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	681b      	ldr	r3, [r3, #0]
 800499e:	f003 0301 	and.w	r3, r3, #1
 80049a2:	2b00      	cmp	r3, #0
 80049a4:	f000 8083 	beq.w	8004aae <HAL_RCC_OscConfig+0x126>
 80049a8:	4b94      	ldr	r3, [pc, #592]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 80049aa:	689b      	ldr	r3, [r3, #8]
 80049ac:	f003 030c 	and.w	r3, r3, #12
 80049b0:	2b04      	cmp	r3, #4
 80049b2:	d019      	beq.n	80049e8 <HAL_RCC_OscConfig+0x60>
 80049b4:	4b91      	ldr	r3, [pc, #580]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 80049b6:	689b      	ldr	r3, [r3, #8]
 80049b8:	f003 030c 	and.w	r3, r3, #12
 80049bc:	2b08      	cmp	r3, #8
 80049be:	d106      	bne.n	80049ce <HAL_RCC_OscConfig+0x46>
 80049c0:	4b8e      	ldr	r3, [pc, #568]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 80049c2:	685b      	ldr	r3, [r3, #4]
 80049c4:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80049c8:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80049cc:	d00c      	beq.n	80049e8 <HAL_RCC_OscConfig+0x60>
 80049ce:	4b8b      	ldr	r3, [pc, #556]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 80049d0:	689b      	ldr	r3, [r3, #8]
 80049d2:	f003 030c 	and.w	r3, r3, #12
 80049d6:	2b0c      	cmp	r3, #12
 80049d8:	d112      	bne.n	8004a00 <HAL_RCC_OscConfig+0x78>
 80049da:	4b88      	ldr	r3, [pc, #544]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 80049dc:	685b      	ldr	r3, [r3, #4]
 80049de:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80049e2:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80049e6:	d10b      	bne.n	8004a00 <HAL_RCC_OscConfig+0x78>
 80049e8:	4b84      	ldr	r3, [pc, #528]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 80049ea:	681b      	ldr	r3, [r3, #0]
 80049ec:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80049f0:	2b00      	cmp	r3, #0
 80049f2:	d05b      	beq.n	8004aac <HAL_RCC_OscConfig+0x124>
 80049f4:	687b      	ldr	r3, [r7, #4]
 80049f6:	685b      	ldr	r3, [r3, #4]
 80049f8:	2b00      	cmp	r3, #0
 80049fa:	d157      	bne.n	8004aac <HAL_RCC_OscConfig+0x124>
 80049fc:	2301      	movs	r3, #1
 80049fe:	e25a      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	685b      	ldr	r3, [r3, #4]
 8004a04:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004a08:	d106      	bne.n	8004a18 <HAL_RCC_OscConfig+0x90>
 8004a0a:	4b7c      	ldr	r3, [pc, #496]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	4a7b      	ldr	r2, [pc, #492]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004a10:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004a14:	6013      	str	r3, [r2, #0]
 8004a16:	e01d      	b.n	8004a54 <HAL_RCC_OscConfig+0xcc>
 8004a18:	687b      	ldr	r3, [r7, #4]
 8004a1a:	685b      	ldr	r3, [r3, #4]
 8004a1c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004a20:	d10c      	bne.n	8004a3c <HAL_RCC_OscConfig+0xb4>
 8004a22:	4b76      	ldr	r3, [pc, #472]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004a24:	681b      	ldr	r3, [r3, #0]
 8004a26:	4a75      	ldr	r2, [pc, #468]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004a28:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004a2c:	6013      	str	r3, [r2, #0]
 8004a2e:	4b73      	ldr	r3, [pc, #460]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004a30:	681b      	ldr	r3, [r3, #0]
 8004a32:	4a72      	ldr	r2, [pc, #456]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004a34:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004a38:	6013      	str	r3, [r2, #0]
 8004a3a:	e00b      	b.n	8004a54 <HAL_RCC_OscConfig+0xcc>
 8004a3c:	4b6f      	ldr	r3, [pc, #444]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	4a6e      	ldr	r2, [pc, #440]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004a42:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004a46:	6013      	str	r3, [r2, #0]
 8004a48:	4b6c      	ldr	r3, [pc, #432]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004a4a:	681b      	ldr	r3, [r3, #0]
 8004a4c:	4a6b      	ldr	r2, [pc, #428]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004a4e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004a52:	6013      	str	r3, [r2, #0]
 8004a54:	687b      	ldr	r3, [r7, #4]
 8004a56:	685b      	ldr	r3, [r3, #4]
 8004a58:	2b00      	cmp	r3, #0
 8004a5a:	d013      	beq.n	8004a84 <HAL_RCC_OscConfig+0xfc>
 8004a5c:	f7fe f88a 	bl	8002b74 <HAL_GetTick>
 8004a60:	6138      	str	r0, [r7, #16]
 8004a62:	e008      	b.n	8004a76 <HAL_RCC_OscConfig+0xee>
 8004a64:	f7fe f886 	bl	8002b74 <HAL_GetTick>
 8004a68:	4602      	mov	r2, r0
 8004a6a:	693b      	ldr	r3, [r7, #16]
 8004a6c:	1ad3      	subs	r3, r2, r3
 8004a6e:	2b64      	cmp	r3, #100	@ 0x64
 8004a70:	d901      	bls.n	8004a76 <HAL_RCC_OscConfig+0xee>
 8004a72:	2303      	movs	r3, #3
 8004a74:	e21f      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004a76:	4b61      	ldr	r3, [pc, #388]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004a78:	681b      	ldr	r3, [r3, #0]
 8004a7a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004a7e:	2b00      	cmp	r3, #0
 8004a80:	d0f0      	beq.n	8004a64 <HAL_RCC_OscConfig+0xdc>
 8004a82:	e014      	b.n	8004aae <HAL_RCC_OscConfig+0x126>
 8004a84:	f7fe f876 	bl	8002b74 <HAL_GetTick>
 8004a88:	6138      	str	r0, [r7, #16]
 8004a8a:	e008      	b.n	8004a9e <HAL_RCC_OscConfig+0x116>
 8004a8c:	f7fe f872 	bl	8002b74 <HAL_GetTick>
 8004a90:	4602      	mov	r2, r0
 8004a92:	693b      	ldr	r3, [r7, #16]
 8004a94:	1ad3      	subs	r3, r2, r3
 8004a96:	2b64      	cmp	r3, #100	@ 0x64
 8004a98:	d901      	bls.n	8004a9e <HAL_RCC_OscConfig+0x116>
 8004a9a:	2303      	movs	r3, #3
 8004a9c:	e20b      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004a9e:	4b57      	ldr	r3, [pc, #348]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004aa0:	681b      	ldr	r3, [r3, #0]
 8004aa2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004aa6:	2b00      	cmp	r3, #0
 8004aa8:	d1f0      	bne.n	8004a8c <HAL_RCC_OscConfig+0x104>
 8004aaa:	e000      	b.n	8004aae <HAL_RCC_OscConfig+0x126>
 8004aac:	bf00      	nop
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	f003 0302 	and.w	r3, r3, #2
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	d06f      	beq.n	8004b9a <HAL_RCC_OscConfig+0x212>
 8004aba:	4b50      	ldr	r3, [pc, #320]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004abc:	689b      	ldr	r3, [r3, #8]
 8004abe:	f003 030c 	and.w	r3, r3, #12
 8004ac2:	2b00      	cmp	r3, #0
 8004ac4:	d017      	beq.n	8004af6 <HAL_RCC_OscConfig+0x16e>
 8004ac6:	4b4d      	ldr	r3, [pc, #308]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004ac8:	689b      	ldr	r3, [r3, #8]
 8004aca:	f003 030c 	and.w	r3, r3, #12
 8004ace:	2b08      	cmp	r3, #8
 8004ad0:	d105      	bne.n	8004ade <HAL_RCC_OscConfig+0x156>
 8004ad2:	4b4a      	ldr	r3, [pc, #296]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004ad4:	685b      	ldr	r3, [r3, #4]
 8004ad6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004ada:	2b00      	cmp	r3, #0
 8004adc:	d00b      	beq.n	8004af6 <HAL_RCC_OscConfig+0x16e>
 8004ade:	4b47      	ldr	r3, [pc, #284]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004ae0:	689b      	ldr	r3, [r3, #8]
 8004ae2:	f003 030c 	and.w	r3, r3, #12
 8004ae6:	2b0c      	cmp	r3, #12
 8004ae8:	d11c      	bne.n	8004b24 <HAL_RCC_OscConfig+0x19c>
 8004aea:	4b44      	ldr	r3, [pc, #272]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004aec:	685b      	ldr	r3, [r3, #4]
 8004aee:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004af2:	2b00      	cmp	r3, #0
 8004af4:	d116      	bne.n	8004b24 <HAL_RCC_OscConfig+0x19c>
 8004af6:	4b41      	ldr	r3, [pc, #260]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004af8:	681b      	ldr	r3, [r3, #0]
 8004afa:	f003 0302 	and.w	r3, r3, #2
 8004afe:	2b00      	cmp	r3, #0
 8004b00:	d005      	beq.n	8004b0e <HAL_RCC_OscConfig+0x186>
 8004b02:	687b      	ldr	r3, [r7, #4]
 8004b04:	68db      	ldr	r3, [r3, #12]
 8004b06:	2b01      	cmp	r3, #1
 8004b08:	d001      	beq.n	8004b0e <HAL_RCC_OscConfig+0x186>
 8004b0a:	2301      	movs	r3, #1
 8004b0c:	e1d3      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004b0e:	4b3b      	ldr	r3, [pc, #236]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004b10:	681b      	ldr	r3, [r3, #0]
 8004b12:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004b16:	687b      	ldr	r3, [r7, #4]
 8004b18:	691b      	ldr	r3, [r3, #16]
 8004b1a:	00db      	lsls	r3, r3, #3
 8004b1c:	4937      	ldr	r1, [pc, #220]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004b1e:	4313      	orrs	r3, r2
 8004b20:	600b      	str	r3, [r1, #0]
 8004b22:	e03a      	b.n	8004b9a <HAL_RCC_OscConfig+0x212>
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	68db      	ldr	r3, [r3, #12]
 8004b28:	2b00      	cmp	r3, #0
 8004b2a:	d020      	beq.n	8004b6e <HAL_RCC_OscConfig+0x1e6>
 8004b2c:	4b34      	ldr	r3, [pc, #208]	@ (8004c00 <HAL_RCC_OscConfig+0x278>)
 8004b2e:	2201      	movs	r2, #1
 8004b30:	601a      	str	r2, [r3, #0]
 8004b32:	f7fe f81f 	bl	8002b74 <HAL_GetTick>
 8004b36:	6138      	str	r0, [r7, #16]
 8004b38:	e008      	b.n	8004b4c <HAL_RCC_OscConfig+0x1c4>
 8004b3a:	f7fe f81b 	bl	8002b74 <HAL_GetTick>
 8004b3e:	4602      	mov	r2, r0
 8004b40:	693b      	ldr	r3, [r7, #16]
 8004b42:	1ad3      	subs	r3, r2, r3
 8004b44:	2b02      	cmp	r3, #2
 8004b46:	d901      	bls.n	8004b4c <HAL_RCC_OscConfig+0x1c4>
 8004b48:	2303      	movs	r3, #3
 8004b4a:	e1b4      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004b4c:	4b2b      	ldr	r3, [pc, #172]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004b4e:	681b      	ldr	r3, [r3, #0]
 8004b50:	f003 0302 	and.w	r3, r3, #2
 8004b54:	2b00      	cmp	r3, #0
 8004b56:	d0f0      	beq.n	8004b3a <HAL_RCC_OscConfig+0x1b2>
 8004b58:	4b28      	ldr	r3, [pc, #160]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004b5a:	681b      	ldr	r3, [r3, #0]
 8004b5c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	691b      	ldr	r3, [r3, #16]
 8004b64:	00db      	lsls	r3, r3, #3
 8004b66:	4925      	ldr	r1, [pc, #148]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004b68:	4313      	orrs	r3, r2
 8004b6a:	600b      	str	r3, [r1, #0]
 8004b6c:	e015      	b.n	8004b9a <HAL_RCC_OscConfig+0x212>
 8004b6e:	4b24      	ldr	r3, [pc, #144]	@ (8004c00 <HAL_RCC_OscConfig+0x278>)
 8004b70:	2200      	movs	r2, #0
 8004b72:	601a      	str	r2, [r3, #0]
 8004b74:	f7fd fffe 	bl	8002b74 <HAL_GetTick>
 8004b78:	6138      	str	r0, [r7, #16]
 8004b7a:	e008      	b.n	8004b8e <HAL_RCC_OscConfig+0x206>
 8004b7c:	f7fd fffa 	bl	8002b74 <HAL_GetTick>
 8004b80:	4602      	mov	r2, r0
 8004b82:	693b      	ldr	r3, [r7, #16]
 8004b84:	1ad3      	subs	r3, r2, r3
 8004b86:	2b02      	cmp	r3, #2
 8004b88:	d901      	bls.n	8004b8e <HAL_RCC_OscConfig+0x206>
 8004b8a:	2303      	movs	r3, #3
 8004b8c:	e193      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004b8e:	4b1b      	ldr	r3, [pc, #108]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004b90:	681b      	ldr	r3, [r3, #0]
 8004b92:	f003 0302 	and.w	r3, r3, #2
 8004b96:	2b00      	cmp	r3, #0
 8004b98:	d1f0      	bne.n	8004b7c <HAL_RCC_OscConfig+0x1f4>
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	681b      	ldr	r3, [r3, #0]
 8004b9e:	f003 0308 	and.w	r3, r3, #8
 8004ba2:	2b00      	cmp	r3, #0
 8004ba4:	d036      	beq.n	8004c14 <HAL_RCC_OscConfig+0x28c>
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	695b      	ldr	r3, [r3, #20]
 8004baa:	2b00      	cmp	r3, #0
 8004bac:	d016      	beq.n	8004bdc <HAL_RCC_OscConfig+0x254>
 8004bae:	4b15      	ldr	r3, [pc, #84]	@ (8004c04 <HAL_RCC_OscConfig+0x27c>)
 8004bb0:	2201      	movs	r2, #1
 8004bb2:	601a      	str	r2, [r3, #0]
 8004bb4:	f7fd ffde 	bl	8002b74 <HAL_GetTick>
 8004bb8:	6138      	str	r0, [r7, #16]
 8004bba:	e008      	b.n	8004bce <HAL_RCC_OscConfig+0x246>
 8004bbc:	f7fd ffda 	bl	8002b74 <HAL_GetTick>
 8004bc0:	4602      	mov	r2, r0
 8004bc2:	693b      	ldr	r3, [r7, #16]
 8004bc4:	1ad3      	subs	r3, r2, r3
 8004bc6:	2b02      	cmp	r3, #2
 8004bc8:	d901      	bls.n	8004bce <HAL_RCC_OscConfig+0x246>
 8004bca:	2303      	movs	r3, #3
 8004bcc:	e173      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004bce:	4b0b      	ldr	r3, [pc, #44]	@ (8004bfc <HAL_RCC_OscConfig+0x274>)
 8004bd0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004bd2:	f003 0302 	and.w	r3, r3, #2
 8004bd6:	2b00      	cmp	r3, #0
 8004bd8:	d0f0      	beq.n	8004bbc <HAL_RCC_OscConfig+0x234>
 8004bda:	e01b      	b.n	8004c14 <HAL_RCC_OscConfig+0x28c>
 8004bdc:	4b09      	ldr	r3, [pc, #36]	@ (8004c04 <HAL_RCC_OscConfig+0x27c>)
 8004bde:	2200      	movs	r2, #0
 8004be0:	601a      	str	r2, [r3, #0]
 8004be2:	f7fd ffc7 	bl	8002b74 <HAL_GetTick>
 8004be6:	6138      	str	r0, [r7, #16]
 8004be8:	e00e      	b.n	8004c08 <HAL_RCC_OscConfig+0x280>
 8004bea:	f7fd ffc3 	bl	8002b74 <HAL_GetTick>
 8004bee:	4602      	mov	r2, r0
 8004bf0:	693b      	ldr	r3, [r7, #16]
 8004bf2:	1ad3      	subs	r3, r2, r3
 8004bf4:	2b02      	cmp	r3, #2
 8004bf6:	d907      	bls.n	8004c08 <HAL_RCC_OscConfig+0x280>
 8004bf8:	2303      	movs	r3, #3
 8004bfa:	e15c      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004bfc:	40023800 	.word	0x40023800
 8004c00:	42470000 	.word	0x42470000
 8004c04:	42470e80 	.word	0x42470e80
 8004c08:	4b8a      	ldr	r3, [pc, #552]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004c0a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004c0c:	f003 0302 	and.w	r3, r3, #2
 8004c10:	2b00      	cmp	r3, #0
 8004c12:	d1ea      	bne.n	8004bea <HAL_RCC_OscConfig+0x262>
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	f003 0304 	and.w	r3, r3, #4
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	f000 8097 	beq.w	8004d50 <HAL_RCC_OscConfig+0x3c8>
 8004c22:	2300      	movs	r3, #0
 8004c24:	75fb      	strb	r3, [r7, #23]
 8004c26:	4b83      	ldr	r3, [pc, #524]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004c28:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004c2a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004c2e:	2b00      	cmp	r3, #0
 8004c30:	d10f      	bne.n	8004c52 <HAL_RCC_OscConfig+0x2ca>
 8004c32:	2300      	movs	r3, #0
 8004c34:	60bb      	str	r3, [r7, #8]
 8004c36:	4b7f      	ldr	r3, [pc, #508]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004c38:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004c3a:	4a7e      	ldr	r2, [pc, #504]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004c3c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004c40:	6413      	str	r3, [r2, #64]	@ 0x40
 8004c42:	4b7c      	ldr	r3, [pc, #496]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004c44:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004c46:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004c4a:	60bb      	str	r3, [r7, #8]
 8004c4c:	68bb      	ldr	r3, [r7, #8]
 8004c4e:	2301      	movs	r3, #1
 8004c50:	75fb      	strb	r3, [r7, #23]
 8004c52:	4b79      	ldr	r3, [pc, #484]	@ (8004e38 <HAL_RCC_OscConfig+0x4b0>)
 8004c54:	681b      	ldr	r3, [r3, #0]
 8004c56:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004c5a:	2b00      	cmp	r3, #0
 8004c5c:	d118      	bne.n	8004c90 <HAL_RCC_OscConfig+0x308>
 8004c5e:	4b76      	ldr	r3, [pc, #472]	@ (8004e38 <HAL_RCC_OscConfig+0x4b0>)
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	4a75      	ldr	r2, [pc, #468]	@ (8004e38 <HAL_RCC_OscConfig+0x4b0>)
 8004c64:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004c68:	6013      	str	r3, [r2, #0]
 8004c6a:	f7fd ff83 	bl	8002b74 <HAL_GetTick>
 8004c6e:	6138      	str	r0, [r7, #16]
 8004c70:	e008      	b.n	8004c84 <HAL_RCC_OscConfig+0x2fc>
 8004c72:	f7fd ff7f 	bl	8002b74 <HAL_GetTick>
 8004c76:	4602      	mov	r2, r0
 8004c78:	693b      	ldr	r3, [r7, #16]
 8004c7a:	1ad3      	subs	r3, r2, r3
 8004c7c:	2b02      	cmp	r3, #2
 8004c7e:	d901      	bls.n	8004c84 <HAL_RCC_OscConfig+0x2fc>
 8004c80:	2303      	movs	r3, #3
 8004c82:	e118      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004c84:	4b6c      	ldr	r3, [pc, #432]	@ (8004e38 <HAL_RCC_OscConfig+0x4b0>)
 8004c86:	681b      	ldr	r3, [r3, #0]
 8004c88:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004c8c:	2b00      	cmp	r3, #0
 8004c8e:	d0f0      	beq.n	8004c72 <HAL_RCC_OscConfig+0x2ea>
 8004c90:	687b      	ldr	r3, [r7, #4]
 8004c92:	689b      	ldr	r3, [r3, #8]
 8004c94:	2b01      	cmp	r3, #1
 8004c96:	d106      	bne.n	8004ca6 <HAL_RCC_OscConfig+0x31e>
 8004c98:	4b66      	ldr	r3, [pc, #408]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004c9a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004c9c:	4a65      	ldr	r2, [pc, #404]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004c9e:	f043 0301 	orr.w	r3, r3, #1
 8004ca2:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ca4:	e01c      	b.n	8004ce0 <HAL_RCC_OscConfig+0x358>
 8004ca6:	687b      	ldr	r3, [r7, #4]
 8004ca8:	689b      	ldr	r3, [r3, #8]
 8004caa:	2b05      	cmp	r3, #5
 8004cac:	d10c      	bne.n	8004cc8 <HAL_RCC_OscConfig+0x340>
 8004cae:	4b61      	ldr	r3, [pc, #388]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004cb0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004cb2:	4a60      	ldr	r2, [pc, #384]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004cb4:	f043 0304 	orr.w	r3, r3, #4
 8004cb8:	6713      	str	r3, [r2, #112]	@ 0x70
 8004cba:	4b5e      	ldr	r3, [pc, #376]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004cbc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004cbe:	4a5d      	ldr	r2, [pc, #372]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004cc0:	f043 0301 	orr.w	r3, r3, #1
 8004cc4:	6713      	str	r3, [r2, #112]	@ 0x70
 8004cc6:	e00b      	b.n	8004ce0 <HAL_RCC_OscConfig+0x358>
 8004cc8:	4b5a      	ldr	r3, [pc, #360]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004cca:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ccc:	4a59      	ldr	r2, [pc, #356]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004cce:	f023 0301 	bic.w	r3, r3, #1
 8004cd2:	6713      	str	r3, [r2, #112]	@ 0x70
 8004cd4:	4b57      	ldr	r3, [pc, #348]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004cd6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004cd8:	4a56      	ldr	r2, [pc, #344]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004cda:	f023 0304 	bic.w	r3, r3, #4
 8004cde:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	689b      	ldr	r3, [r3, #8]
 8004ce4:	2b00      	cmp	r3, #0
 8004ce6:	d015      	beq.n	8004d14 <HAL_RCC_OscConfig+0x38c>
 8004ce8:	f7fd ff44 	bl	8002b74 <HAL_GetTick>
 8004cec:	6138      	str	r0, [r7, #16]
 8004cee:	e00a      	b.n	8004d06 <HAL_RCC_OscConfig+0x37e>
 8004cf0:	f7fd ff40 	bl	8002b74 <HAL_GetTick>
 8004cf4:	4602      	mov	r2, r0
 8004cf6:	693b      	ldr	r3, [r7, #16]
 8004cf8:	1ad3      	subs	r3, r2, r3
 8004cfa:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004cfe:	4293      	cmp	r3, r2
 8004d00:	d901      	bls.n	8004d06 <HAL_RCC_OscConfig+0x37e>
 8004d02:	2303      	movs	r3, #3
 8004d04:	e0d7      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004d06:	4b4b      	ldr	r3, [pc, #300]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004d08:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004d0a:	f003 0302 	and.w	r3, r3, #2
 8004d0e:	2b00      	cmp	r3, #0
 8004d10:	d0ee      	beq.n	8004cf0 <HAL_RCC_OscConfig+0x368>
 8004d12:	e014      	b.n	8004d3e <HAL_RCC_OscConfig+0x3b6>
 8004d14:	f7fd ff2e 	bl	8002b74 <HAL_GetTick>
 8004d18:	6138      	str	r0, [r7, #16]
 8004d1a:	e00a      	b.n	8004d32 <HAL_RCC_OscConfig+0x3aa>
 8004d1c:	f7fd ff2a 	bl	8002b74 <HAL_GetTick>
 8004d20:	4602      	mov	r2, r0
 8004d22:	693b      	ldr	r3, [r7, #16]
 8004d24:	1ad3      	subs	r3, r2, r3
 8004d26:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004d2a:	4293      	cmp	r3, r2
 8004d2c:	d901      	bls.n	8004d32 <HAL_RCC_OscConfig+0x3aa>
 8004d2e:	2303      	movs	r3, #3
 8004d30:	e0c1      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004d32:	4b40      	ldr	r3, [pc, #256]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004d34:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004d36:	f003 0302 	and.w	r3, r3, #2
 8004d3a:	2b00      	cmp	r3, #0
 8004d3c:	d1ee      	bne.n	8004d1c <HAL_RCC_OscConfig+0x394>
 8004d3e:	7dfb      	ldrb	r3, [r7, #23]
 8004d40:	2b01      	cmp	r3, #1
 8004d42:	d105      	bne.n	8004d50 <HAL_RCC_OscConfig+0x3c8>
 8004d44:	4b3b      	ldr	r3, [pc, #236]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004d46:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004d48:	4a3a      	ldr	r2, [pc, #232]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004d4a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004d4e:	6413      	str	r3, [r2, #64]	@ 0x40
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	699b      	ldr	r3, [r3, #24]
 8004d54:	2b00      	cmp	r3, #0
 8004d56:	f000 80ad 	beq.w	8004eb4 <HAL_RCC_OscConfig+0x52c>
 8004d5a:	4b36      	ldr	r3, [pc, #216]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004d5c:	689b      	ldr	r3, [r3, #8]
 8004d5e:	f003 030c 	and.w	r3, r3, #12
 8004d62:	2b08      	cmp	r3, #8
 8004d64:	d060      	beq.n	8004e28 <HAL_RCC_OscConfig+0x4a0>
 8004d66:	687b      	ldr	r3, [r7, #4]
 8004d68:	699b      	ldr	r3, [r3, #24]
 8004d6a:	2b02      	cmp	r3, #2
 8004d6c:	d145      	bne.n	8004dfa <HAL_RCC_OscConfig+0x472>
 8004d6e:	4b33      	ldr	r3, [pc, #204]	@ (8004e3c <HAL_RCC_OscConfig+0x4b4>)
 8004d70:	2200      	movs	r2, #0
 8004d72:	601a      	str	r2, [r3, #0]
 8004d74:	f7fd fefe 	bl	8002b74 <HAL_GetTick>
 8004d78:	6138      	str	r0, [r7, #16]
 8004d7a:	e008      	b.n	8004d8e <HAL_RCC_OscConfig+0x406>
 8004d7c:	f7fd fefa 	bl	8002b74 <HAL_GetTick>
 8004d80:	4602      	mov	r2, r0
 8004d82:	693b      	ldr	r3, [r7, #16]
 8004d84:	1ad3      	subs	r3, r2, r3
 8004d86:	2b02      	cmp	r3, #2
 8004d88:	d901      	bls.n	8004d8e <HAL_RCC_OscConfig+0x406>
 8004d8a:	2303      	movs	r3, #3
 8004d8c:	e093      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004d8e:	4b29      	ldr	r3, [pc, #164]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004d90:	681b      	ldr	r3, [r3, #0]
 8004d92:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004d96:	2b00      	cmp	r3, #0
 8004d98:	d1f0      	bne.n	8004d7c <HAL_RCC_OscConfig+0x3f4>
 8004d9a:	687b      	ldr	r3, [r7, #4]
 8004d9c:	69da      	ldr	r2, [r3, #28]
 8004d9e:	687b      	ldr	r3, [r7, #4]
 8004da0:	6a1b      	ldr	r3, [r3, #32]
 8004da2:	431a      	orrs	r2, r3
 8004da4:	687b      	ldr	r3, [r7, #4]
 8004da6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004da8:	019b      	lsls	r3, r3, #6
 8004daa:	431a      	orrs	r2, r3
 8004dac:	687b      	ldr	r3, [r7, #4]
 8004dae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004db0:	085b      	lsrs	r3, r3, #1
 8004db2:	3b01      	subs	r3, #1
 8004db4:	041b      	lsls	r3, r3, #16
 8004db6:	431a      	orrs	r2, r3
 8004db8:	687b      	ldr	r3, [r7, #4]
 8004dba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004dbc:	061b      	lsls	r3, r3, #24
 8004dbe:	431a      	orrs	r2, r3
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004dc4:	071b      	lsls	r3, r3, #28
 8004dc6:	491b      	ldr	r1, [pc, #108]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004dc8:	4313      	orrs	r3, r2
 8004dca:	604b      	str	r3, [r1, #4]
 8004dcc:	4b1b      	ldr	r3, [pc, #108]	@ (8004e3c <HAL_RCC_OscConfig+0x4b4>)
 8004dce:	2201      	movs	r2, #1
 8004dd0:	601a      	str	r2, [r3, #0]
 8004dd2:	f7fd fecf 	bl	8002b74 <HAL_GetTick>
 8004dd6:	6138      	str	r0, [r7, #16]
 8004dd8:	e008      	b.n	8004dec <HAL_RCC_OscConfig+0x464>
 8004dda:	f7fd fecb 	bl	8002b74 <HAL_GetTick>
 8004dde:	4602      	mov	r2, r0
 8004de0:	693b      	ldr	r3, [r7, #16]
 8004de2:	1ad3      	subs	r3, r2, r3
 8004de4:	2b02      	cmp	r3, #2
 8004de6:	d901      	bls.n	8004dec <HAL_RCC_OscConfig+0x464>
 8004de8:	2303      	movs	r3, #3
 8004dea:	e064      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004dec:	4b11      	ldr	r3, [pc, #68]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004dee:	681b      	ldr	r3, [r3, #0]
 8004df0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004df4:	2b00      	cmp	r3, #0
 8004df6:	d0f0      	beq.n	8004dda <HAL_RCC_OscConfig+0x452>
 8004df8:	e05c      	b.n	8004eb4 <HAL_RCC_OscConfig+0x52c>
 8004dfa:	4b10      	ldr	r3, [pc, #64]	@ (8004e3c <HAL_RCC_OscConfig+0x4b4>)
 8004dfc:	2200      	movs	r2, #0
 8004dfe:	601a      	str	r2, [r3, #0]
 8004e00:	f7fd feb8 	bl	8002b74 <HAL_GetTick>
 8004e04:	6138      	str	r0, [r7, #16]
 8004e06:	e008      	b.n	8004e1a <HAL_RCC_OscConfig+0x492>
 8004e08:	f7fd feb4 	bl	8002b74 <HAL_GetTick>
 8004e0c:	4602      	mov	r2, r0
 8004e0e:	693b      	ldr	r3, [r7, #16]
 8004e10:	1ad3      	subs	r3, r2, r3
 8004e12:	2b02      	cmp	r3, #2
 8004e14:	d901      	bls.n	8004e1a <HAL_RCC_OscConfig+0x492>
 8004e16:	2303      	movs	r3, #3
 8004e18:	e04d      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004e1a:	4b06      	ldr	r3, [pc, #24]	@ (8004e34 <HAL_RCC_OscConfig+0x4ac>)
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004e22:	2b00      	cmp	r3, #0
 8004e24:	d1f0      	bne.n	8004e08 <HAL_RCC_OscConfig+0x480>
 8004e26:	e045      	b.n	8004eb4 <HAL_RCC_OscConfig+0x52c>
 8004e28:	687b      	ldr	r3, [r7, #4]
 8004e2a:	699b      	ldr	r3, [r3, #24]
 8004e2c:	2b01      	cmp	r3, #1
 8004e2e:	d107      	bne.n	8004e40 <HAL_RCC_OscConfig+0x4b8>
 8004e30:	2301      	movs	r3, #1
 8004e32:	e040      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004e34:	40023800 	.word	0x40023800
 8004e38:	40007000 	.word	0x40007000
 8004e3c:	42470060 	.word	0x42470060
 8004e40:	4b1f      	ldr	r3, [pc, #124]	@ (8004ec0 <HAL_RCC_OscConfig+0x538>)
 8004e42:	685b      	ldr	r3, [r3, #4]
 8004e44:	60fb      	str	r3, [r7, #12]
 8004e46:	687b      	ldr	r3, [r7, #4]
 8004e48:	699b      	ldr	r3, [r3, #24]
 8004e4a:	2b01      	cmp	r3, #1
 8004e4c:	d030      	beq.n	8004eb0 <HAL_RCC_OscConfig+0x528>
 8004e4e:	68fb      	ldr	r3, [r7, #12]
 8004e50:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	69db      	ldr	r3, [r3, #28]
 8004e58:	429a      	cmp	r2, r3
 8004e5a:	d129      	bne.n	8004eb0 <HAL_RCC_OscConfig+0x528>
 8004e5c:	68fb      	ldr	r3, [r7, #12]
 8004e5e:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	6a1b      	ldr	r3, [r3, #32]
 8004e66:	429a      	cmp	r2, r3
 8004e68:	d122      	bne.n	8004eb0 <HAL_RCC_OscConfig+0x528>
 8004e6a:	68fa      	ldr	r2, [r7, #12]
 8004e6c:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8004e70:	4013      	ands	r3, r2
 8004e72:	687a      	ldr	r2, [r7, #4]
 8004e74:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8004e76:	0192      	lsls	r2, r2, #6
 8004e78:	4293      	cmp	r3, r2
 8004e7a:	d119      	bne.n	8004eb0 <HAL_RCC_OscConfig+0x528>
 8004e7c:	68fb      	ldr	r3, [r7, #12]
 8004e7e:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8004e82:	687b      	ldr	r3, [r7, #4]
 8004e84:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004e86:	085b      	lsrs	r3, r3, #1
 8004e88:	3b01      	subs	r3, #1
 8004e8a:	041b      	lsls	r3, r3, #16
 8004e8c:	429a      	cmp	r2, r3
 8004e8e:	d10f      	bne.n	8004eb0 <HAL_RCC_OscConfig+0x528>
 8004e90:	68fb      	ldr	r3, [r7, #12]
 8004e92:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8004e96:	687b      	ldr	r3, [r7, #4]
 8004e98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004e9a:	061b      	lsls	r3, r3, #24
 8004e9c:	429a      	cmp	r2, r3
 8004e9e:	d107      	bne.n	8004eb0 <HAL_RCC_OscConfig+0x528>
 8004ea0:	68fb      	ldr	r3, [r7, #12]
 8004ea2:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8004ea6:	687b      	ldr	r3, [r7, #4]
 8004ea8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004eaa:	071b      	lsls	r3, r3, #28
 8004eac:	429a      	cmp	r2, r3
 8004eae:	d001      	beq.n	8004eb4 <HAL_RCC_OscConfig+0x52c>
 8004eb0:	2301      	movs	r3, #1
 8004eb2:	e000      	b.n	8004eb6 <HAL_RCC_OscConfig+0x52e>
 8004eb4:	2300      	movs	r3, #0
 8004eb6:	4618      	mov	r0, r3
 8004eb8:	3718      	adds	r7, #24
 8004eba:	46bd      	mov	sp, r7
 8004ebc:	bd80      	pop	{r7, pc}
 8004ebe:	bf00      	nop
 8004ec0:	40023800 	.word	0x40023800

08004ec4 <HAL_TIM_Base_Init>:
 8004ec4:	b580      	push	{r7, lr}
 8004ec6:	b082      	sub	sp, #8
 8004ec8:	af00      	add	r7, sp, #0
 8004eca:	6078      	str	r0, [r7, #4]
 8004ecc:	687b      	ldr	r3, [r7, #4]
 8004ece:	2b00      	cmp	r3, #0
 8004ed0:	d101      	bne.n	8004ed6 <HAL_TIM_Base_Init+0x12>
 8004ed2:	2301      	movs	r3, #1
 8004ed4:	e041      	b.n	8004f5a <HAL_TIM_Base_Init+0x96>
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004edc:	b2db      	uxtb	r3, r3
 8004ede:	2b00      	cmp	r3, #0
 8004ee0:	d106      	bne.n	8004ef0 <HAL_TIM_Base_Init+0x2c>
 8004ee2:	687b      	ldr	r3, [r7, #4]
 8004ee4:	2200      	movs	r2, #0
 8004ee6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004eea:	6878      	ldr	r0, [r7, #4]
 8004eec:	f7fd fd30 	bl	8002950 <HAL_TIM_Base_MspInit>
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	2202      	movs	r2, #2
 8004ef4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	681a      	ldr	r2, [r3, #0]
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	3304      	adds	r3, #4
 8004f00:	4619      	mov	r1, r3
 8004f02:	4610      	mov	r0, r2
 8004f04:	f000 fdf4 	bl	8005af0 <TIM_Base_SetConfig>
 8004f08:	687b      	ldr	r3, [r7, #4]
 8004f0a:	2201      	movs	r2, #1
 8004f0c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	2201      	movs	r2, #1
 8004f14:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	2201      	movs	r2, #1
 8004f1c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004f20:	687b      	ldr	r3, [r7, #4]
 8004f22:	2201      	movs	r2, #1
 8004f24:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	2201      	movs	r2, #1
 8004f2c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004f30:	687b      	ldr	r3, [r7, #4]
 8004f32:	2201      	movs	r2, #1
 8004f34:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	2201      	movs	r2, #1
 8004f3c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004f40:	687b      	ldr	r3, [r7, #4]
 8004f42:	2201      	movs	r2, #1
 8004f44:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004f48:	687b      	ldr	r3, [r7, #4]
 8004f4a:	2201      	movs	r2, #1
 8004f4c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	2201      	movs	r2, #1
 8004f54:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004f58:	2300      	movs	r3, #0
 8004f5a:	4618      	mov	r0, r3
 8004f5c:	3708      	adds	r7, #8
 8004f5e:	46bd      	mov	sp, r7
 8004f60:	bd80      	pop	{r7, pc}
	...

08004f64 <HAL_TIM_Base_Start>:
 8004f64:	b480      	push	{r7}
 8004f66:	b085      	sub	sp, #20
 8004f68:	af00      	add	r7, sp, #0
 8004f6a:	6078      	str	r0, [r7, #4]
 8004f6c:	687b      	ldr	r3, [r7, #4]
 8004f6e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004f72:	b2db      	uxtb	r3, r3
 8004f74:	2b01      	cmp	r3, #1
 8004f76:	d001      	beq.n	8004f7c <HAL_TIM_Base_Start+0x18>
 8004f78:	2301      	movs	r3, #1
 8004f7a:	e046      	b.n	800500a <HAL_TIM_Base_Start+0xa6>
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	2202      	movs	r2, #2
 8004f80:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	4a23      	ldr	r2, [pc, #140]	@ (8005018 <HAL_TIM_Base_Start+0xb4>)
 8004f8a:	4293      	cmp	r3, r2
 8004f8c:	d022      	beq.n	8004fd4 <HAL_TIM_Base_Start+0x70>
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	681b      	ldr	r3, [r3, #0]
 8004f92:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004f96:	d01d      	beq.n	8004fd4 <HAL_TIM_Base_Start+0x70>
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	681b      	ldr	r3, [r3, #0]
 8004f9c:	4a1f      	ldr	r2, [pc, #124]	@ (800501c <HAL_TIM_Base_Start+0xb8>)
 8004f9e:	4293      	cmp	r3, r2
 8004fa0:	d018      	beq.n	8004fd4 <HAL_TIM_Base_Start+0x70>
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	681b      	ldr	r3, [r3, #0]
 8004fa6:	4a1e      	ldr	r2, [pc, #120]	@ (8005020 <HAL_TIM_Base_Start+0xbc>)
 8004fa8:	4293      	cmp	r3, r2
 8004faa:	d013      	beq.n	8004fd4 <HAL_TIM_Base_Start+0x70>
 8004fac:	687b      	ldr	r3, [r7, #4]
 8004fae:	681b      	ldr	r3, [r3, #0]
 8004fb0:	4a1c      	ldr	r2, [pc, #112]	@ (8005024 <HAL_TIM_Base_Start+0xc0>)
 8004fb2:	4293      	cmp	r3, r2
 8004fb4:	d00e      	beq.n	8004fd4 <HAL_TIM_Base_Start+0x70>
 8004fb6:	687b      	ldr	r3, [r7, #4]
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	4a1b      	ldr	r2, [pc, #108]	@ (8005028 <HAL_TIM_Base_Start+0xc4>)
 8004fbc:	4293      	cmp	r3, r2
 8004fbe:	d009      	beq.n	8004fd4 <HAL_TIM_Base_Start+0x70>
 8004fc0:	687b      	ldr	r3, [r7, #4]
 8004fc2:	681b      	ldr	r3, [r3, #0]
 8004fc4:	4a19      	ldr	r2, [pc, #100]	@ (800502c <HAL_TIM_Base_Start+0xc8>)
 8004fc6:	4293      	cmp	r3, r2
 8004fc8:	d004      	beq.n	8004fd4 <HAL_TIM_Base_Start+0x70>
 8004fca:	687b      	ldr	r3, [r7, #4]
 8004fcc:	681b      	ldr	r3, [r3, #0]
 8004fce:	4a18      	ldr	r2, [pc, #96]	@ (8005030 <HAL_TIM_Base_Start+0xcc>)
 8004fd0:	4293      	cmp	r3, r2
 8004fd2:	d111      	bne.n	8004ff8 <HAL_TIM_Base_Start+0x94>
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	681b      	ldr	r3, [r3, #0]
 8004fd8:	689b      	ldr	r3, [r3, #8]
 8004fda:	f003 0307 	and.w	r3, r3, #7
 8004fde:	60fb      	str	r3, [r7, #12]
 8004fe0:	68fb      	ldr	r3, [r7, #12]
 8004fe2:	2b06      	cmp	r3, #6
 8004fe4:	d010      	beq.n	8005008 <HAL_TIM_Base_Start+0xa4>
 8004fe6:	687b      	ldr	r3, [r7, #4]
 8004fe8:	681b      	ldr	r3, [r3, #0]
 8004fea:	681a      	ldr	r2, [r3, #0]
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	f042 0201 	orr.w	r2, r2, #1
 8004ff4:	601a      	str	r2, [r3, #0]
 8004ff6:	e007      	b.n	8005008 <HAL_TIM_Base_Start+0xa4>
 8004ff8:	687b      	ldr	r3, [r7, #4]
 8004ffa:	681b      	ldr	r3, [r3, #0]
 8004ffc:	681a      	ldr	r2, [r3, #0]
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	681b      	ldr	r3, [r3, #0]
 8005002:	f042 0201 	orr.w	r2, r2, #1
 8005006:	601a      	str	r2, [r3, #0]
 8005008:	2300      	movs	r3, #0
 800500a:	4618      	mov	r0, r3
 800500c:	3714      	adds	r7, #20
 800500e:	46bd      	mov	sp, r7
 8005010:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005014:	4770      	bx	lr
 8005016:	bf00      	nop
 8005018:	40010000 	.word	0x40010000
 800501c:	40000400 	.word	0x40000400
 8005020:	40000800 	.word	0x40000800
 8005024:	40000c00 	.word	0x40000c00
 8005028:	40010400 	.word	0x40010400
 800502c:	40014000 	.word	0x40014000
 8005030:	40001800 	.word	0x40001800

08005034 <HAL_TIM_Base_Start_IT>:
 8005034:	b480      	push	{r7}
 8005036:	b085      	sub	sp, #20
 8005038:	af00      	add	r7, sp, #0
 800503a:	6078      	str	r0, [r7, #4]
 800503c:	687b      	ldr	r3, [r7, #4]
 800503e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005042:	b2db      	uxtb	r3, r3
 8005044:	2b01      	cmp	r3, #1
 8005046:	d001      	beq.n	800504c <HAL_TIM_Base_Start_IT+0x18>
 8005048:	2301      	movs	r3, #1
 800504a:	e04e      	b.n	80050ea <HAL_TIM_Base_Start_IT+0xb6>
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	2202      	movs	r2, #2
 8005050:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005054:	687b      	ldr	r3, [r7, #4]
 8005056:	681b      	ldr	r3, [r3, #0]
 8005058:	68da      	ldr	r2, [r3, #12]
 800505a:	687b      	ldr	r3, [r7, #4]
 800505c:	681b      	ldr	r3, [r3, #0]
 800505e:	f042 0201 	orr.w	r2, r2, #1
 8005062:	60da      	str	r2, [r3, #12]
 8005064:	687b      	ldr	r3, [r7, #4]
 8005066:	681b      	ldr	r3, [r3, #0]
 8005068:	4a23      	ldr	r2, [pc, #140]	@ (80050f8 <HAL_TIM_Base_Start_IT+0xc4>)
 800506a:	4293      	cmp	r3, r2
 800506c:	d022      	beq.n	80050b4 <HAL_TIM_Base_Start_IT+0x80>
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	681b      	ldr	r3, [r3, #0]
 8005072:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005076:	d01d      	beq.n	80050b4 <HAL_TIM_Base_Start_IT+0x80>
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	681b      	ldr	r3, [r3, #0]
 800507c:	4a1f      	ldr	r2, [pc, #124]	@ (80050fc <HAL_TIM_Base_Start_IT+0xc8>)
 800507e:	4293      	cmp	r3, r2
 8005080:	d018      	beq.n	80050b4 <HAL_TIM_Base_Start_IT+0x80>
 8005082:	687b      	ldr	r3, [r7, #4]
 8005084:	681b      	ldr	r3, [r3, #0]
 8005086:	4a1e      	ldr	r2, [pc, #120]	@ (8005100 <HAL_TIM_Base_Start_IT+0xcc>)
 8005088:	4293      	cmp	r3, r2
 800508a:	d013      	beq.n	80050b4 <HAL_TIM_Base_Start_IT+0x80>
 800508c:	687b      	ldr	r3, [r7, #4]
 800508e:	681b      	ldr	r3, [r3, #0]
 8005090:	4a1c      	ldr	r2, [pc, #112]	@ (8005104 <HAL_TIM_Base_Start_IT+0xd0>)
 8005092:	4293      	cmp	r3, r2
 8005094:	d00e      	beq.n	80050b4 <HAL_TIM_Base_Start_IT+0x80>
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	681b      	ldr	r3, [r3, #0]
 800509a:	4a1b      	ldr	r2, [pc, #108]	@ (8005108 <HAL_TIM_Base_Start_IT+0xd4>)
 800509c:	4293      	cmp	r3, r2
 800509e:	d009      	beq.n	80050b4 <HAL_TIM_Base_Start_IT+0x80>
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	681b      	ldr	r3, [r3, #0]
 80050a4:	4a19      	ldr	r2, [pc, #100]	@ (800510c <HAL_TIM_Base_Start_IT+0xd8>)
 80050a6:	4293      	cmp	r3, r2
 80050a8:	d004      	beq.n	80050b4 <HAL_TIM_Base_Start_IT+0x80>
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	4a18      	ldr	r2, [pc, #96]	@ (8005110 <HAL_TIM_Base_Start_IT+0xdc>)
 80050b0:	4293      	cmp	r3, r2
 80050b2:	d111      	bne.n	80050d8 <HAL_TIM_Base_Start_IT+0xa4>
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	681b      	ldr	r3, [r3, #0]
 80050b8:	689b      	ldr	r3, [r3, #8]
 80050ba:	f003 0307 	and.w	r3, r3, #7
 80050be:	60fb      	str	r3, [r7, #12]
 80050c0:	68fb      	ldr	r3, [r7, #12]
 80050c2:	2b06      	cmp	r3, #6
 80050c4:	d010      	beq.n	80050e8 <HAL_TIM_Base_Start_IT+0xb4>
 80050c6:	687b      	ldr	r3, [r7, #4]
 80050c8:	681b      	ldr	r3, [r3, #0]
 80050ca:	681a      	ldr	r2, [r3, #0]
 80050cc:	687b      	ldr	r3, [r7, #4]
 80050ce:	681b      	ldr	r3, [r3, #0]
 80050d0:	f042 0201 	orr.w	r2, r2, #1
 80050d4:	601a      	str	r2, [r3, #0]
 80050d6:	e007      	b.n	80050e8 <HAL_TIM_Base_Start_IT+0xb4>
 80050d8:	687b      	ldr	r3, [r7, #4]
 80050da:	681b      	ldr	r3, [r3, #0]
 80050dc:	681a      	ldr	r2, [r3, #0]
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	681b      	ldr	r3, [r3, #0]
 80050e2:	f042 0201 	orr.w	r2, r2, #1
 80050e6:	601a      	str	r2, [r3, #0]
 80050e8:	2300      	movs	r3, #0
 80050ea:	4618      	mov	r0, r3
 80050ec:	3714      	adds	r7, #20
 80050ee:	46bd      	mov	sp, r7
 80050f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050f4:	4770      	bx	lr
 80050f6:	bf00      	nop
 80050f8:	40010000 	.word	0x40010000
 80050fc:	40000400 	.word	0x40000400
 8005100:	40000800 	.word	0x40000800
 8005104:	40000c00 	.word	0x40000c00
 8005108:	40010400 	.word	0x40010400
 800510c:	40014000 	.word	0x40014000
 8005110:	40001800 	.word	0x40001800

08005114 <HAL_TIM_PWM_Init>:
 8005114:	b580      	push	{r7, lr}
 8005116:	b082      	sub	sp, #8
 8005118:	af00      	add	r7, sp, #0
 800511a:	6078      	str	r0, [r7, #4]
 800511c:	687b      	ldr	r3, [r7, #4]
 800511e:	2b00      	cmp	r3, #0
 8005120:	d101      	bne.n	8005126 <HAL_TIM_PWM_Init+0x12>
 8005122:	2301      	movs	r3, #1
 8005124:	e041      	b.n	80051aa <HAL_TIM_PWM_Init+0x96>
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800512c:	b2db      	uxtb	r3, r3
 800512e:	2b00      	cmp	r3, #0
 8005130:	d106      	bne.n	8005140 <HAL_TIM_PWM_Init+0x2c>
 8005132:	687b      	ldr	r3, [r7, #4]
 8005134:	2200      	movs	r2, #0
 8005136:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800513a:	6878      	ldr	r0, [r7, #4]
 800513c:	f7fd fc2e 	bl	800299c <HAL_TIM_PWM_MspInit>
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	2202      	movs	r2, #2
 8005144:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	681a      	ldr	r2, [r3, #0]
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	3304      	adds	r3, #4
 8005150:	4619      	mov	r1, r3
 8005152:	4610      	mov	r0, r2
 8005154:	f000 fccc 	bl	8005af0 <TIM_Base_SetConfig>
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	2201      	movs	r2, #1
 800515c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	2201      	movs	r2, #1
 8005164:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005168:	687b      	ldr	r3, [r7, #4]
 800516a:	2201      	movs	r2, #1
 800516c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005170:	687b      	ldr	r3, [r7, #4]
 8005172:	2201      	movs	r2, #1
 8005174:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005178:	687b      	ldr	r3, [r7, #4]
 800517a:	2201      	movs	r2, #1
 800517c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	2201      	movs	r2, #1
 8005184:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005188:	687b      	ldr	r3, [r7, #4]
 800518a:	2201      	movs	r2, #1
 800518c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005190:	687b      	ldr	r3, [r7, #4]
 8005192:	2201      	movs	r2, #1
 8005194:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	2201      	movs	r2, #1
 800519c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	2201      	movs	r2, #1
 80051a4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80051a8:	2300      	movs	r3, #0
 80051aa:	4618      	mov	r0, r3
 80051ac:	3708      	adds	r7, #8
 80051ae:	46bd      	mov	sp, r7
 80051b0:	bd80      	pop	{r7, pc}
	...

080051b4 <HAL_TIM_PWM_Start>:
 80051b4:	b580      	push	{r7, lr}
 80051b6:	b084      	sub	sp, #16
 80051b8:	af00      	add	r7, sp, #0
 80051ba:	6078      	str	r0, [r7, #4]
 80051bc:	6039      	str	r1, [r7, #0]
 80051be:	683b      	ldr	r3, [r7, #0]
 80051c0:	2b00      	cmp	r3, #0
 80051c2:	d109      	bne.n	80051d8 <HAL_TIM_PWM_Start+0x24>
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80051ca:	b2db      	uxtb	r3, r3
 80051cc:	2b01      	cmp	r3, #1
 80051ce:	bf14      	ite	ne
 80051d0:	2301      	movne	r3, #1
 80051d2:	2300      	moveq	r3, #0
 80051d4:	b2db      	uxtb	r3, r3
 80051d6:	e022      	b.n	800521e <HAL_TIM_PWM_Start+0x6a>
 80051d8:	683b      	ldr	r3, [r7, #0]
 80051da:	2b04      	cmp	r3, #4
 80051dc:	d109      	bne.n	80051f2 <HAL_TIM_PWM_Start+0x3e>
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80051e4:	b2db      	uxtb	r3, r3
 80051e6:	2b01      	cmp	r3, #1
 80051e8:	bf14      	ite	ne
 80051ea:	2301      	movne	r3, #1
 80051ec:	2300      	moveq	r3, #0
 80051ee:	b2db      	uxtb	r3, r3
 80051f0:	e015      	b.n	800521e <HAL_TIM_PWM_Start+0x6a>
 80051f2:	683b      	ldr	r3, [r7, #0]
 80051f4:	2b08      	cmp	r3, #8
 80051f6:	d109      	bne.n	800520c <HAL_TIM_PWM_Start+0x58>
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80051fe:	b2db      	uxtb	r3, r3
 8005200:	2b01      	cmp	r3, #1
 8005202:	bf14      	ite	ne
 8005204:	2301      	movne	r3, #1
 8005206:	2300      	moveq	r3, #0
 8005208:	b2db      	uxtb	r3, r3
 800520a:	e008      	b.n	800521e <HAL_TIM_PWM_Start+0x6a>
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005212:	b2db      	uxtb	r3, r3
 8005214:	2b01      	cmp	r3, #1
 8005216:	bf14      	ite	ne
 8005218:	2301      	movne	r3, #1
 800521a:	2300      	moveq	r3, #0
 800521c:	b2db      	uxtb	r3, r3
 800521e:	2b00      	cmp	r3, #0
 8005220:	d001      	beq.n	8005226 <HAL_TIM_PWM_Start+0x72>
 8005222:	2301      	movs	r3, #1
 8005224:	e07c      	b.n	8005320 <HAL_TIM_PWM_Start+0x16c>
 8005226:	683b      	ldr	r3, [r7, #0]
 8005228:	2b00      	cmp	r3, #0
 800522a:	d104      	bne.n	8005236 <HAL_TIM_PWM_Start+0x82>
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	2202      	movs	r2, #2
 8005230:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005234:	e013      	b.n	800525e <HAL_TIM_PWM_Start+0xaa>
 8005236:	683b      	ldr	r3, [r7, #0]
 8005238:	2b04      	cmp	r3, #4
 800523a:	d104      	bne.n	8005246 <HAL_TIM_PWM_Start+0x92>
 800523c:	687b      	ldr	r3, [r7, #4]
 800523e:	2202      	movs	r2, #2
 8005240:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005244:	e00b      	b.n	800525e <HAL_TIM_PWM_Start+0xaa>
 8005246:	683b      	ldr	r3, [r7, #0]
 8005248:	2b08      	cmp	r3, #8
 800524a:	d104      	bne.n	8005256 <HAL_TIM_PWM_Start+0xa2>
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	2202      	movs	r2, #2
 8005250:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005254:	e003      	b.n	800525e <HAL_TIM_PWM_Start+0xaa>
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	2202      	movs	r2, #2
 800525a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800525e:	687b      	ldr	r3, [r7, #4]
 8005260:	681b      	ldr	r3, [r3, #0]
 8005262:	2201      	movs	r2, #1
 8005264:	6839      	ldr	r1, [r7, #0]
 8005266:	4618      	mov	r0, r3
 8005268:	f000 ff38 	bl	80060dc <TIM_CCxChannelCmd>
 800526c:	687b      	ldr	r3, [r7, #4]
 800526e:	681b      	ldr	r3, [r3, #0]
 8005270:	4a2d      	ldr	r2, [pc, #180]	@ (8005328 <HAL_TIM_PWM_Start+0x174>)
 8005272:	4293      	cmp	r3, r2
 8005274:	d004      	beq.n	8005280 <HAL_TIM_PWM_Start+0xcc>
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	4a2c      	ldr	r2, [pc, #176]	@ (800532c <HAL_TIM_PWM_Start+0x178>)
 800527c:	4293      	cmp	r3, r2
 800527e:	d101      	bne.n	8005284 <HAL_TIM_PWM_Start+0xd0>
 8005280:	2301      	movs	r3, #1
 8005282:	e000      	b.n	8005286 <HAL_TIM_PWM_Start+0xd2>
 8005284:	2300      	movs	r3, #0
 8005286:	2b00      	cmp	r3, #0
 8005288:	d007      	beq.n	800529a <HAL_TIM_PWM_Start+0xe6>
 800528a:	687b      	ldr	r3, [r7, #4]
 800528c:	681b      	ldr	r3, [r3, #0]
 800528e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8005290:	687b      	ldr	r3, [r7, #4]
 8005292:	681b      	ldr	r3, [r3, #0]
 8005294:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005298:	645a      	str	r2, [r3, #68]	@ 0x44
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	4a22      	ldr	r2, [pc, #136]	@ (8005328 <HAL_TIM_PWM_Start+0x174>)
 80052a0:	4293      	cmp	r3, r2
 80052a2:	d022      	beq.n	80052ea <HAL_TIM_PWM_Start+0x136>
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	681b      	ldr	r3, [r3, #0]
 80052a8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80052ac:	d01d      	beq.n	80052ea <HAL_TIM_PWM_Start+0x136>
 80052ae:	687b      	ldr	r3, [r7, #4]
 80052b0:	681b      	ldr	r3, [r3, #0]
 80052b2:	4a1f      	ldr	r2, [pc, #124]	@ (8005330 <HAL_TIM_PWM_Start+0x17c>)
 80052b4:	4293      	cmp	r3, r2
 80052b6:	d018      	beq.n	80052ea <HAL_TIM_PWM_Start+0x136>
 80052b8:	687b      	ldr	r3, [r7, #4]
 80052ba:	681b      	ldr	r3, [r3, #0]
 80052bc:	4a1d      	ldr	r2, [pc, #116]	@ (8005334 <HAL_TIM_PWM_Start+0x180>)
 80052be:	4293      	cmp	r3, r2
 80052c0:	d013      	beq.n	80052ea <HAL_TIM_PWM_Start+0x136>
 80052c2:	687b      	ldr	r3, [r7, #4]
 80052c4:	681b      	ldr	r3, [r3, #0]
 80052c6:	4a1c      	ldr	r2, [pc, #112]	@ (8005338 <HAL_TIM_PWM_Start+0x184>)
 80052c8:	4293      	cmp	r3, r2
 80052ca:	d00e      	beq.n	80052ea <HAL_TIM_PWM_Start+0x136>
 80052cc:	687b      	ldr	r3, [r7, #4]
 80052ce:	681b      	ldr	r3, [r3, #0]
 80052d0:	4a16      	ldr	r2, [pc, #88]	@ (800532c <HAL_TIM_PWM_Start+0x178>)
 80052d2:	4293      	cmp	r3, r2
 80052d4:	d009      	beq.n	80052ea <HAL_TIM_PWM_Start+0x136>
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	681b      	ldr	r3, [r3, #0]
 80052da:	4a18      	ldr	r2, [pc, #96]	@ (800533c <HAL_TIM_PWM_Start+0x188>)
 80052dc:	4293      	cmp	r3, r2
 80052de:	d004      	beq.n	80052ea <HAL_TIM_PWM_Start+0x136>
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	4a16      	ldr	r2, [pc, #88]	@ (8005340 <HAL_TIM_PWM_Start+0x18c>)
 80052e6:	4293      	cmp	r3, r2
 80052e8:	d111      	bne.n	800530e <HAL_TIM_PWM_Start+0x15a>
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	681b      	ldr	r3, [r3, #0]
 80052ee:	689b      	ldr	r3, [r3, #8]
 80052f0:	f003 0307 	and.w	r3, r3, #7
 80052f4:	60fb      	str	r3, [r7, #12]
 80052f6:	68fb      	ldr	r3, [r7, #12]
 80052f8:	2b06      	cmp	r3, #6
 80052fa:	d010      	beq.n	800531e <HAL_TIM_PWM_Start+0x16a>
 80052fc:	687b      	ldr	r3, [r7, #4]
 80052fe:	681b      	ldr	r3, [r3, #0]
 8005300:	681a      	ldr	r2, [r3, #0]
 8005302:	687b      	ldr	r3, [r7, #4]
 8005304:	681b      	ldr	r3, [r3, #0]
 8005306:	f042 0201 	orr.w	r2, r2, #1
 800530a:	601a      	str	r2, [r3, #0]
 800530c:	e007      	b.n	800531e <HAL_TIM_PWM_Start+0x16a>
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	681b      	ldr	r3, [r3, #0]
 8005312:	681a      	ldr	r2, [r3, #0]
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	681b      	ldr	r3, [r3, #0]
 8005318:	f042 0201 	orr.w	r2, r2, #1
 800531c:	601a      	str	r2, [r3, #0]
 800531e:	2300      	movs	r3, #0
 8005320:	4618      	mov	r0, r3
 8005322:	3710      	adds	r7, #16
 8005324:	46bd      	mov	sp, r7
 8005326:	bd80      	pop	{r7, pc}
 8005328:	40010000 	.word	0x40010000
 800532c:	40010400 	.word	0x40010400
 8005330:	40000400 	.word	0x40000400
 8005334:	40000800 	.word	0x40000800
 8005338:	40000c00 	.word	0x40000c00
 800533c:	40014000 	.word	0x40014000
 8005340:	40001800 	.word	0x40001800

08005344 <HAL_TIM_Encoder_Init>:
 8005344:	b580      	push	{r7, lr}
 8005346:	b086      	sub	sp, #24
 8005348:	af00      	add	r7, sp, #0
 800534a:	6078      	str	r0, [r7, #4]
 800534c:	6039      	str	r1, [r7, #0]
 800534e:	687b      	ldr	r3, [r7, #4]
 8005350:	2b00      	cmp	r3, #0
 8005352:	d101      	bne.n	8005358 <HAL_TIM_Encoder_Init+0x14>
 8005354:	2301      	movs	r3, #1
 8005356:	e097      	b.n	8005488 <HAL_TIM_Encoder_Init+0x144>
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800535e:	b2db      	uxtb	r3, r3
 8005360:	2b00      	cmp	r3, #0
 8005362:	d106      	bne.n	8005372 <HAL_TIM_Encoder_Init+0x2e>
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	2200      	movs	r2, #0
 8005368:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800536c:	6878      	ldr	r0, [r7, #4]
 800536e:	f7fd faa7 	bl	80028c0 <HAL_TIM_Encoder_MspInit>
 8005372:	687b      	ldr	r3, [r7, #4]
 8005374:	2202      	movs	r2, #2
 8005376:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800537a:	687b      	ldr	r3, [r7, #4]
 800537c:	681b      	ldr	r3, [r3, #0]
 800537e:	689b      	ldr	r3, [r3, #8]
 8005380:	687a      	ldr	r2, [r7, #4]
 8005382:	6812      	ldr	r2, [r2, #0]
 8005384:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8005388:	f023 0307 	bic.w	r3, r3, #7
 800538c:	6093      	str	r3, [r2, #8]
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	681a      	ldr	r2, [r3, #0]
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	3304      	adds	r3, #4
 8005396:	4619      	mov	r1, r3
 8005398:	4610      	mov	r0, r2
 800539a:	f000 fba9 	bl	8005af0 <TIM_Base_SetConfig>
 800539e:	687b      	ldr	r3, [r7, #4]
 80053a0:	681b      	ldr	r3, [r3, #0]
 80053a2:	689b      	ldr	r3, [r3, #8]
 80053a4:	617b      	str	r3, [r7, #20]
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	699b      	ldr	r3, [r3, #24]
 80053ac:	613b      	str	r3, [r7, #16]
 80053ae:	687b      	ldr	r3, [r7, #4]
 80053b0:	681b      	ldr	r3, [r3, #0]
 80053b2:	6a1b      	ldr	r3, [r3, #32]
 80053b4:	60fb      	str	r3, [r7, #12]
 80053b6:	683b      	ldr	r3, [r7, #0]
 80053b8:	681b      	ldr	r3, [r3, #0]
 80053ba:	697a      	ldr	r2, [r7, #20]
 80053bc:	4313      	orrs	r3, r2
 80053be:	617b      	str	r3, [r7, #20]
 80053c0:	693b      	ldr	r3, [r7, #16]
 80053c2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80053c6:	f023 0303 	bic.w	r3, r3, #3
 80053ca:	613b      	str	r3, [r7, #16]
 80053cc:	683b      	ldr	r3, [r7, #0]
 80053ce:	689a      	ldr	r2, [r3, #8]
 80053d0:	683b      	ldr	r3, [r7, #0]
 80053d2:	699b      	ldr	r3, [r3, #24]
 80053d4:	021b      	lsls	r3, r3, #8
 80053d6:	4313      	orrs	r3, r2
 80053d8:	693a      	ldr	r2, [r7, #16]
 80053da:	4313      	orrs	r3, r2
 80053dc:	613b      	str	r3, [r7, #16]
 80053de:	693b      	ldr	r3, [r7, #16]
 80053e0:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 80053e4:	f023 030c 	bic.w	r3, r3, #12
 80053e8:	613b      	str	r3, [r7, #16]
 80053ea:	693b      	ldr	r3, [r7, #16]
 80053ec:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80053f0:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80053f4:	613b      	str	r3, [r7, #16]
 80053f6:	683b      	ldr	r3, [r7, #0]
 80053f8:	68da      	ldr	r2, [r3, #12]
 80053fa:	683b      	ldr	r3, [r7, #0]
 80053fc:	69db      	ldr	r3, [r3, #28]
 80053fe:	021b      	lsls	r3, r3, #8
 8005400:	4313      	orrs	r3, r2
 8005402:	693a      	ldr	r2, [r7, #16]
 8005404:	4313      	orrs	r3, r2
 8005406:	613b      	str	r3, [r7, #16]
 8005408:	683b      	ldr	r3, [r7, #0]
 800540a:	691b      	ldr	r3, [r3, #16]
 800540c:	011a      	lsls	r2, r3, #4
 800540e:	683b      	ldr	r3, [r7, #0]
 8005410:	6a1b      	ldr	r3, [r3, #32]
 8005412:	031b      	lsls	r3, r3, #12
 8005414:	4313      	orrs	r3, r2
 8005416:	693a      	ldr	r2, [r7, #16]
 8005418:	4313      	orrs	r3, r2
 800541a:	613b      	str	r3, [r7, #16]
 800541c:	68fb      	ldr	r3, [r7, #12]
 800541e:	f023 0322 	bic.w	r3, r3, #34	@ 0x22
 8005422:	60fb      	str	r3, [r7, #12]
 8005424:	68fb      	ldr	r3, [r7, #12]
 8005426:	f023 0388 	bic.w	r3, r3, #136	@ 0x88
 800542a:	60fb      	str	r3, [r7, #12]
 800542c:	683b      	ldr	r3, [r7, #0]
 800542e:	685a      	ldr	r2, [r3, #4]
 8005430:	683b      	ldr	r3, [r7, #0]
 8005432:	695b      	ldr	r3, [r3, #20]
 8005434:	011b      	lsls	r3, r3, #4
 8005436:	4313      	orrs	r3, r2
 8005438:	68fa      	ldr	r2, [r7, #12]
 800543a:	4313      	orrs	r3, r2
 800543c:	60fb      	str	r3, [r7, #12]
 800543e:	687b      	ldr	r3, [r7, #4]
 8005440:	681b      	ldr	r3, [r3, #0]
 8005442:	697a      	ldr	r2, [r7, #20]
 8005444:	609a      	str	r2, [r3, #8]
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	693a      	ldr	r2, [r7, #16]
 800544c:	619a      	str	r2, [r3, #24]
 800544e:	687b      	ldr	r3, [r7, #4]
 8005450:	681b      	ldr	r3, [r3, #0]
 8005452:	68fa      	ldr	r2, [r7, #12]
 8005454:	621a      	str	r2, [r3, #32]
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	2201      	movs	r2, #1
 800545a:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800545e:	687b      	ldr	r3, [r7, #4]
 8005460:	2201      	movs	r2, #1
 8005462:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005466:	687b      	ldr	r3, [r7, #4]
 8005468:	2201      	movs	r2, #1
 800546a:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	2201      	movs	r2, #1
 8005472:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	2201      	movs	r2, #1
 800547a:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800547e:	687b      	ldr	r3, [r7, #4]
 8005480:	2201      	movs	r2, #1
 8005482:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005486:	2300      	movs	r3, #0
 8005488:	4618      	mov	r0, r3
 800548a:	3718      	adds	r7, #24
 800548c:	46bd      	mov	sp, r7
 800548e:	bd80      	pop	{r7, pc}

08005490 <HAL_TIM_Encoder_Start>:
 8005490:	b580      	push	{r7, lr}
 8005492:	b084      	sub	sp, #16
 8005494:	af00      	add	r7, sp, #0
 8005496:	6078      	str	r0, [r7, #4]
 8005498:	6039      	str	r1, [r7, #0]
 800549a:	687b      	ldr	r3, [r7, #4]
 800549c:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80054a0:	73fb      	strb	r3, [r7, #15]
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80054a8:	73bb      	strb	r3, [r7, #14]
 80054aa:	687b      	ldr	r3, [r7, #4]
 80054ac:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80054b0:	737b      	strb	r3, [r7, #13]
 80054b2:	687b      	ldr	r3, [r7, #4]
 80054b4:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 80054b8:	733b      	strb	r3, [r7, #12]
 80054ba:	683b      	ldr	r3, [r7, #0]
 80054bc:	2b00      	cmp	r3, #0
 80054be:	d110      	bne.n	80054e2 <HAL_TIM_Encoder_Start+0x52>
 80054c0:	7bfb      	ldrb	r3, [r7, #15]
 80054c2:	2b01      	cmp	r3, #1
 80054c4:	d102      	bne.n	80054cc <HAL_TIM_Encoder_Start+0x3c>
 80054c6:	7b7b      	ldrb	r3, [r7, #13]
 80054c8:	2b01      	cmp	r3, #1
 80054ca:	d001      	beq.n	80054d0 <HAL_TIM_Encoder_Start+0x40>
 80054cc:	2301      	movs	r3, #1
 80054ce:	e069      	b.n	80055a4 <HAL_TIM_Encoder_Start+0x114>
 80054d0:	687b      	ldr	r3, [r7, #4]
 80054d2:	2202      	movs	r2, #2
 80054d4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80054d8:	687b      	ldr	r3, [r7, #4]
 80054da:	2202      	movs	r2, #2
 80054dc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80054e0:	e031      	b.n	8005546 <HAL_TIM_Encoder_Start+0xb6>
 80054e2:	683b      	ldr	r3, [r7, #0]
 80054e4:	2b04      	cmp	r3, #4
 80054e6:	d110      	bne.n	800550a <HAL_TIM_Encoder_Start+0x7a>
 80054e8:	7bbb      	ldrb	r3, [r7, #14]
 80054ea:	2b01      	cmp	r3, #1
 80054ec:	d102      	bne.n	80054f4 <HAL_TIM_Encoder_Start+0x64>
 80054ee:	7b3b      	ldrb	r3, [r7, #12]
 80054f0:	2b01      	cmp	r3, #1
 80054f2:	d001      	beq.n	80054f8 <HAL_TIM_Encoder_Start+0x68>
 80054f4:	2301      	movs	r3, #1
 80054f6:	e055      	b.n	80055a4 <HAL_TIM_Encoder_Start+0x114>
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	2202      	movs	r2, #2
 80054fc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	2202      	movs	r2, #2
 8005504:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005508:	e01d      	b.n	8005546 <HAL_TIM_Encoder_Start+0xb6>
 800550a:	7bfb      	ldrb	r3, [r7, #15]
 800550c:	2b01      	cmp	r3, #1
 800550e:	d108      	bne.n	8005522 <HAL_TIM_Encoder_Start+0x92>
 8005510:	7bbb      	ldrb	r3, [r7, #14]
 8005512:	2b01      	cmp	r3, #1
 8005514:	d105      	bne.n	8005522 <HAL_TIM_Encoder_Start+0x92>
 8005516:	7b7b      	ldrb	r3, [r7, #13]
 8005518:	2b01      	cmp	r3, #1
 800551a:	d102      	bne.n	8005522 <HAL_TIM_Encoder_Start+0x92>
 800551c:	7b3b      	ldrb	r3, [r7, #12]
 800551e:	2b01      	cmp	r3, #1
 8005520:	d001      	beq.n	8005526 <HAL_TIM_Encoder_Start+0x96>
 8005522:	2301      	movs	r3, #1
 8005524:	e03e      	b.n	80055a4 <HAL_TIM_Encoder_Start+0x114>
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	2202      	movs	r2, #2
 800552a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	2202      	movs	r2, #2
 8005532:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005536:	687b      	ldr	r3, [r7, #4]
 8005538:	2202      	movs	r2, #2
 800553a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	2202      	movs	r2, #2
 8005542:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005546:	683b      	ldr	r3, [r7, #0]
 8005548:	2b00      	cmp	r3, #0
 800554a:	d003      	beq.n	8005554 <HAL_TIM_Encoder_Start+0xc4>
 800554c:	683b      	ldr	r3, [r7, #0]
 800554e:	2b04      	cmp	r3, #4
 8005550:	d008      	beq.n	8005564 <HAL_TIM_Encoder_Start+0xd4>
 8005552:	e00f      	b.n	8005574 <HAL_TIM_Encoder_Start+0xe4>
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	681b      	ldr	r3, [r3, #0]
 8005558:	2201      	movs	r2, #1
 800555a:	2100      	movs	r1, #0
 800555c:	4618      	mov	r0, r3
 800555e:	f000 fdbd 	bl	80060dc <TIM_CCxChannelCmd>
 8005562:	e016      	b.n	8005592 <HAL_TIM_Encoder_Start+0x102>
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	681b      	ldr	r3, [r3, #0]
 8005568:	2201      	movs	r2, #1
 800556a:	2104      	movs	r1, #4
 800556c:	4618      	mov	r0, r3
 800556e:	f000 fdb5 	bl	80060dc <TIM_CCxChannelCmd>
 8005572:	e00e      	b.n	8005592 <HAL_TIM_Encoder_Start+0x102>
 8005574:	687b      	ldr	r3, [r7, #4]
 8005576:	681b      	ldr	r3, [r3, #0]
 8005578:	2201      	movs	r2, #1
 800557a:	2100      	movs	r1, #0
 800557c:	4618      	mov	r0, r3
 800557e:	f000 fdad 	bl	80060dc <TIM_CCxChannelCmd>
 8005582:	687b      	ldr	r3, [r7, #4]
 8005584:	681b      	ldr	r3, [r3, #0]
 8005586:	2201      	movs	r2, #1
 8005588:	2104      	movs	r1, #4
 800558a:	4618      	mov	r0, r3
 800558c:	f000 fda6 	bl	80060dc <TIM_CCxChannelCmd>
 8005590:	bf00      	nop
 8005592:	687b      	ldr	r3, [r7, #4]
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	681a      	ldr	r2, [r3, #0]
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	f042 0201 	orr.w	r2, r2, #1
 80055a0:	601a      	str	r2, [r3, #0]
 80055a2:	2300      	movs	r3, #0
 80055a4:	4618      	mov	r0, r3
 80055a6:	3710      	adds	r7, #16
 80055a8:	46bd      	mov	sp, r7
 80055aa:	bd80      	pop	{r7, pc}

080055ac <HAL_TIM_IRQHandler>:
 80055ac:	b580      	push	{r7, lr}
 80055ae:	b084      	sub	sp, #16
 80055b0:	af00      	add	r7, sp, #0
 80055b2:	6078      	str	r0, [r7, #4]
 80055b4:	687b      	ldr	r3, [r7, #4]
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	68db      	ldr	r3, [r3, #12]
 80055ba:	60fb      	str	r3, [r7, #12]
 80055bc:	687b      	ldr	r3, [r7, #4]
 80055be:	681b      	ldr	r3, [r3, #0]
 80055c0:	691b      	ldr	r3, [r3, #16]
 80055c2:	60bb      	str	r3, [r7, #8]
 80055c4:	68bb      	ldr	r3, [r7, #8]
 80055c6:	f003 0302 	and.w	r3, r3, #2
 80055ca:	2b00      	cmp	r3, #0
 80055cc:	d020      	beq.n	8005610 <HAL_TIM_IRQHandler+0x64>
 80055ce:	68fb      	ldr	r3, [r7, #12]
 80055d0:	f003 0302 	and.w	r3, r3, #2
 80055d4:	2b00      	cmp	r3, #0
 80055d6:	d01b      	beq.n	8005610 <HAL_TIM_IRQHandler+0x64>
 80055d8:	687b      	ldr	r3, [r7, #4]
 80055da:	681b      	ldr	r3, [r3, #0]
 80055dc:	f06f 0202 	mvn.w	r2, #2
 80055e0:	611a      	str	r2, [r3, #16]
 80055e2:	687b      	ldr	r3, [r7, #4]
 80055e4:	2201      	movs	r2, #1
 80055e6:	771a      	strb	r2, [r3, #28]
 80055e8:	687b      	ldr	r3, [r7, #4]
 80055ea:	681b      	ldr	r3, [r3, #0]
 80055ec:	699b      	ldr	r3, [r3, #24]
 80055ee:	f003 0303 	and.w	r3, r3, #3
 80055f2:	2b00      	cmp	r3, #0
 80055f4:	d003      	beq.n	80055fe <HAL_TIM_IRQHandler+0x52>
 80055f6:	6878      	ldr	r0, [r7, #4]
 80055f8:	f000 fa5b 	bl	8005ab2 <HAL_TIM_IC_CaptureCallback>
 80055fc:	e005      	b.n	800560a <HAL_TIM_IRQHandler+0x5e>
 80055fe:	6878      	ldr	r0, [r7, #4]
 8005600:	f000 fa4d 	bl	8005a9e <HAL_TIM_OC_DelayElapsedCallback>
 8005604:	6878      	ldr	r0, [r7, #4]
 8005606:	f000 fa5e 	bl	8005ac6 <HAL_TIM_PWM_PulseFinishedCallback>
 800560a:	687b      	ldr	r3, [r7, #4]
 800560c:	2200      	movs	r2, #0
 800560e:	771a      	strb	r2, [r3, #28]
 8005610:	68bb      	ldr	r3, [r7, #8]
 8005612:	f003 0304 	and.w	r3, r3, #4
 8005616:	2b00      	cmp	r3, #0
 8005618:	d020      	beq.n	800565c <HAL_TIM_IRQHandler+0xb0>
 800561a:	68fb      	ldr	r3, [r7, #12]
 800561c:	f003 0304 	and.w	r3, r3, #4
 8005620:	2b00      	cmp	r3, #0
 8005622:	d01b      	beq.n	800565c <HAL_TIM_IRQHandler+0xb0>
 8005624:	687b      	ldr	r3, [r7, #4]
 8005626:	681b      	ldr	r3, [r3, #0]
 8005628:	f06f 0204 	mvn.w	r2, #4
 800562c:	611a      	str	r2, [r3, #16]
 800562e:	687b      	ldr	r3, [r7, #4]
 8005630:	2202      	movs	r2, #2
 8005632:	771a      	strb	r2, [r3, #28]
 8005634:	687b      	ldr	r3, [r7, #4]
 8005636:	681b      	ldr	r3, [r3, #0]
 8005638:	699b      	ldr	r3, [r3, #24]
 800563a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800563e:	2b00      	cmp	r3, #0
 8005640:	d003      	beq.n	800564a <HAL_TIM_IRQHandler+0x9e>
 8005642:	6878      	ldr	r0, [r7, #4]
 8005644:	f000 fa35 	bl	8005ab2 <HAL_TIM_IC_CaptureCallback>
 8005648:	e005      	b.n	8005656 <HAL_TIM_IRQHandler+0xaa>
 800564a:	6878      	ldr	r0, [r7, #4]
 800564c:	f000 fa27 	bl	8005a9e <HAL_TIM_OC_DelayElapsedCallback>
 8005650:	6878      	ldr	r0, [r7, #4]
 8005652:	f000 fa38 	bl	8005ac6 <HAL_TIM_PWM_PulseFinishedCallback>
 8005656:	687b      	ldr	r3, [r7, #4]
 8005658:	2200      	movs	r2, #0
 800565a:	771a      	strb	r2, [r3, #28]
 800565c:	68bb      	ldr	r3, [r7, #8]
 800565e:	f003 0308 	and.w	r3, r3, #8
 8005662:	2b00      	cmp	r3, #0
 8005664:	d020      	beq.n	80056a8 <HAL_TIM_IRQHandler+0xfc>
 8005666:	68fb      	ldr	r3, [r7, #12]
 8005668:	f003 0308 	and.w	r3, r3, #8
 800566c:	2b00      	cmp	r3, #0
 800566e:	d01b      	beq.n	80056a8 <HAL_TIM_IRQHandler+0xfc>
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	f06f 0208 	mvn.w	r2, #8
 8005678:	611a      	str	r2, [r3, #16]
 800567a:	687b      	ldr	r3, [r7, #4]
 800567c:	2204      	movs	r2, #4
 800567e:	771a      	strb	r2, [r3, #28]
 8005680:	687b      	ldr	r3, [r7, #4]
 8005682:	681b      	ldr	r3, [r3, #0]
 8005684:	69db      	ldr	r3, [r3, #28]
 8005686:	f003 0303 	and.w	r3, r3, #3
 800568a:	2b00      	cmp	r3, #0
 800568c:	d003      	beq.n	8005696 <HAL_TIM_IRQHandler+0xea>
 800568e:	6878      	ldr	r0, [r7, #4]
 8005690:	f000 fa0f 	bl	8005ab2 <HAL_TIM_IC_CaptureCallback>
 8005694:	e005      	b.n	80056a2 <HAL_TIM_IRQHandler+0xf6>
 8005696:	6878      	ldr	r0, [r7, #4]
 8005698:	f000 fa01 	bl	8005a9e <HAL_TIM_OC_DelayElapsedCallback>
 800569c:	6878      	ldr	r0, [r7, #4]
 800569e:	f000 fa12 	bl	8005ac6 <HAL_TIM_PWM_PulseFinishedCallback>
 80056a2:	687b      	ldr	r3, [r7, #4]
 80056a4:	2200      	movs	r2, #0
 80056a6:	771a      	strb	r2, [r3, #28]
 80056a8:	68bb      	ldr	r3, [r7, #8]
 80056aa:	f003 0310 	and.w	r3, r3, #16
 80056ae:	2b00      	cmp	r3, #0
 80056b0:	d020      	beq.n	80056f4 <HAL_TIM_IRQHandler+0x148>
 80056b2:	68fb      	ldr	r3, [r7, #12]
 80056b4:	f003 0310 	and.w	r3, r3, #16
 80056b8:	2b00      	cmp	r3, #0
 80056ba:	d01b      	beq.n	80056f4 <HAL_TIM_IRQHandler+0x148>
 80056bc:	687b      	ldr	r3, [r7, #4]
 80056be:	681b      	ldr	r3, [r3, #0]
 80056c0:	f06f 0210 	mvn.w	r2, #16
 80056c4:	611a      	str	r2, [r3, #16]
 80056c6:	687b      	ldr	r3, [r7, #4]
 80056c8:	2208      	movs	r2, #8
 80056ca:	771a      	strb	r2, [r3, #28]
 80056cc:	687b      	ldr	r3, [r7, #4]
 80056ce:	681b      	ldr	r3, [r3, #0]
 80056d0:	69db      	ldr	r3, [r3, #28]
 80056d2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80056d6:	2b00      	cmp	r3, #0
 80056d8:	d003      	beq.n	80056e2 <HAL_TIM_IRQHandler+0x136>
 80056da:	6878      	ldr	r0, [r7, #4]
 80056dc:	f000 f9e9 	bl	8005ab2 <HAL_TIM_IC_CaptureCallback>
 80056e0:	e005      	b.n	80056ee <HAL_TIM_IRQHandler+0x142>
 80056e2:	6878      	ldr	r0, [r7, #4]
 80056e4:	f000 f9db 	bl	8005a9e <HAL_TIM_OC_DelayElapsedCallback>
 80056e8:	6878      	ldr	r0, [r7, #4]
 80056ea:	f000 f9ec 	bl	8005ac6 <HAL_TIM_PWM_PulseFinishedCallback>
 80056ee:	687b      	ldr	r3, [r7, #4]
 80056f0:	2200      	movs	r2, #0
 80056f2:	771a      	strb	r2, [r3, #28]
 80056f4:	68bb      	ldr	r3, [r7, #8]
 80056f6:	f003 0301 	and.w	r3, r3, #1
 80056fa:	2b00      	cmp	r3, #0
 80056fc:	d00c      	beq.n	8005718 <HAL_TIM_IRQHandler+0x16c>
 80056fe:	68fb      	ldr	r3, [r7, #12]
 8005700:	f003 0301 	and.w	r3, r3, #1
 8005704:	2b00      	cmp	r3, #0
 8005706:	d007      	beq.n	8005718 <HAL_TIM_IRQHandler+0x16c>
 8005708:	687b      	ldr	r3, [r7, #4]
 800570a:	681b      	ldr	r3, [r3, #0]
 800570c:	f06f 0201 	mvn.w	r2, #1
 8005710:	611a      	str	r2, [r3, #16]
 8005712:	6878      	ldr	r0, [r7, #4]
 8005714:	f7fc f8e8 	bl	80018e8 <HAL_TIM_PeriodElapsedCallback>
 8005718:	68bb      	ldr	r3, [r7, #8]
 800571a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800571e:	2b00      	cmp	r3, #0
 8005720:	d00c      	beq.n	800573c <HAL_TIM_IRQHandler+0x190>
 8005722:	68fb      	ldr	r3, [r7, #12]
 8005724:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005728:	2b00      	cmp	r3, #0
 800572a:	d007      	beq.n	800573c <HAL_TIM_IRQHandler+0x190>
 800572c:	687b      	ldr	r3, [r7, #4]
 800572e:	681b      	ldr	r3, [r3, #0]
 8005730:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8005734:	611a      	str	r2, [r3, #16]
 8005736:	6878      	ldr	r0, [r7, #4]
 8005738:	f000 fd7c 	bl	8006234 <HAL_TIMEx_BreakCallback>
 800573c:	68bb      	ldr	r3, [r7, #8]
 800573e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005742:	2b00      	cmp	r3, #0
 8005744:	d00c      	beq.n	8005760 <HAL_TIM_IRQHandler+0x1b4>
 8005746:	68fb      	ldr	r3, [r7, #12]
 8005748:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800574c:	2b00      	cmp	r3, #0
 800574e:	d007      	beq.n	8005760 <HAL_TIM_IRQHandler+0x1b4>
 8005750:	687b      	ldr	r3, [r7, #4]
 8005752:	681b      	ldr	r3, [r3, #0]
 8005754:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8005758:	611a      	str	r2, [r3, #16]
 800575a:	6878      	ldr	r0, [r7, #4]
 800575c:	f000 f9bd 	bl	8005ada <HAL_TIM_TriggerCallback>
 8005760:	68bb      	ldr	r3, [r7, #8]
 8005762:	f003 0320 	and.w	r3, r3, #32
 8005766:	2b00      	cmp	r3, #0
 8005768:	d00c      	beq.n	8005784 <HAL_TIM_IRQHandler+0x1d8>
 800576a:	68fb      	ldr	r3, [r7, #12]
 800576c:	f003 0320 	and.w	r3, r3, #32
 8005770:	2b00      	cmp	r3, #0
 8005772:	d007      	beq.n	8005784 <HAL_TIM_IRQHandler+0x1d8>
 8005774:	687b      	ldr	r3, [r7, #4]
 8005776:	681b      	ldr	r3, [r3, #0]
 8005778:	f06f 0220 	mvn.w	r2, #32
 800577c:	611a      	str	r2, [r3, #16]
 800577e:	6878      	ldr	r0, [r7, #4]
 8005780:	f000 fd4e 	bl	8006220 <HAL_TIMEx_CommutCallback>
 8005784:	bf00      	nop
 8005786:	3710      	adds	r7, #16
 8005788:	46bd      	mov	sp, r7
 800578a:	bd80      	pop	{r7, pc}

0800578c <HAL_TIM_PWM_ConfigChannel>:
 800578c:	b580      	push	{r7, lr}
 800578e:	b086      	sub	sp, #24
 8005790:	af00      	add	r7, sp, #0
 8005792:	60f8      	str	r0, [r7, #12]
 8005794:	60b9      	str	r1, [r7, #8]
 8005796:	607a      	str	r2, [r7, #4]
 8005798:	2300      	movs	r3, #0
 800579a:	75fb      	strb	r3, [r7, #23]
 800579c:	68fb      	ldr	r3, [r7, #12]
 800579e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80057a2:	2b01      	cmp	r3, #1
 80057a4:	d101      	bne.n	80057aa <HAL_TIM_PWM_ConfigChannel+0x1e>
 80057a6:	2302      	movs	r3, #2
 80057a8:	e0ae      	b.n	8005908 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80057aa:	68fb      	ldr	r3, [r7, #12]
 80057ac:	2201      	movs	r2, #1
 80057ae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80057b2:	687b      	ldr	r3, [r7, #4]
 80057b4:	2b0c      	cmp	r3, #12
 80057b6:	f200 809f 	bhi.w	80058f8 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80057ba:	a201      	add	r2, pc, #4	@ (adr r2, 80057c0 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80057bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80057c0:	080057f5 	.word	0x080057f5
 80057c4:	080058f9 	.word	0x080058f9
 80057c8:	080058f9 	.word	0x080058f9
 80057cc:	080058f9 	.word	0x080058f9
 80057d0:	08005835 	.word	0x08005835
 80057d4:	080058f9 	.word	0x080058f9
 80057d8:	080058f9 	.word	0x080058f9
 80057dc:	080058f9 	.word	0x080058f9
 80057e0:	08005877 	.word	0x08005877
 80057e4:	080058f9 	.word	0x080058f9
 80057e8:	080058f9 	.word	0x080058f9
 80057ec:	080058f9 	.word	0x080058f9
 80057f0:	080058b7 	.word	0x080058b7
 80057f4:	68fb      	ldr	r3, [r7, #12]
 80057f6:	681b      	ldr	r3, [r3, #0]
 80057f8:	68b9      	ldr	r1, [r7, #8]
 80057fa:	4618      	mov	r0, r3
 80057fc:	f000 fa24 	bl	8005c48 <TIM_OC1_SetConfig>
 8005800:	68fb      	ldr	r3, [r7, #12]
 8005802:	681b      	ldr	r3, [r3, #0]
 8005804:	699a      	ldr	r2, [r3, #24]
 8005806:	68fb      	ldr	r3, [r7, #12]
 8005808:	681b      	ldr	r3, [r3, #0]
 800580a:	f042 0208 	orr.w	r2, r2, #8
 800580e:	619a      	str	r2, [r3, #24]
 8005810:	68fb      	ldr	r3, [r7, #12]
 8005812:	681b      	ldr	r3, [r3, #0]
 8005814:	699a      	ldr	r2, [r3, #24]
 8005816:	68fb      	ldr	r3, [r7, #12]
 8005818:	681b      	ldr	r3, [r3, #0]
 800581a:	f022 0204 	bic.w	r2, r2, #4
 800581e:	619a      	str	r2, [r3, #24]
 8005820:	68fb      	ldr	r3, [r7, #12]
 8005822:	681b      	ldr	r3, [r3, #0]
 8005824:	6999      	ldr	r1, [r3, #24]
 8005826:	68bb      	ldr	r3, [r7, #8]
 8005828:	691a      	ldr	r2, [r3, #16]
 800582a:	68fb      	ldr	r3, [r7, #12]
 800582c:	681b      	ldr	r3, [r3, #0]
 800582e:	430a      	orrs	r2, r1
 8005830:	619a      	str	r2, [r3, #24]
 8005832:	e064      	b.n	80058fe <HAL_TIM_PWM_ConfigChannel+0x172>
 8005834:	68fb      	ldr	r3, [r7, #12]
 8005836:	681b      	ldr	r3, [r3, #0]
 8005838:	68b9      	ldr	r1, [r7, #8]
 800583a:	4618      	mov	r0, r3
 800583c:	f000 fa74 	bl	8005d28 <TIM_OC2_SetConfig>
 8005840:	68fb      	ldr	r3, [r7, #12]
 8005842:	681b      	ldr	r3, [r3, #0]
 8005844:	699a      	ldr	r2, [r3, #24]
 8005846:	68fb      	ldr	r3, [r7, #12]
 8005848:	681b      	ldr	r3, [r3, #0]
 800584a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800584e:	619a      	str	r2, [r3, #24]
 8005850:	68fb      	ldr	r3, [r7, #12]
 8005852:	681b      	ldr	r3, [r3, #0]
 8005854:	699a      	ldr	r2, [r3, #24]
 8005856:	68fb      	ldr	r3, [r7, #12]
 8005858:	681b      	ldr	r3, [r3, #0]
 800585a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800585e:	619a      	str	r2, [r3, #24]
 8005860:	68fb      	ldr	r3, [r7, #12]
 8005862:	681b      	ldr	r3, [r3, #0]
 8005864:	6999      	ldr	r1, [r3, #24]
 8005866:	68bb      	ldr	r3, [r7, #8]
 8005868:	691b      	ldr	r3, [r3, #16]
 800586a:	021a      	lsls	r2, r3, #8
 800586c:	68fb      	ldr	r3, [r7, #12]
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	430a      	orrs	r2, r1
 8005872:	619a      	str	r2, [r3, #24]
 8005874:	e043      	b.n	80058fe <HAL_TIM_PWM_ConfigChannel+0x172>
 8005876:	68fb      	ldr	r3, [r7, #12]
 8005878:	681b      	ldr	r3, [r3, #0]
 800587a:	68b9      	ldr	r1, [r7, #8]
 800587c:	4618      	mov	r0, r3
 800587e:	f000 fac9 	bl	8005e14 <TIM_OC3_SetConfig>
 8005882:	68fb      	ldr	r3, [r7, #12]
 8005884:	681b      	ldr	r3, [r3, #0]
 8005886:	69da      	ldr	r2, [r3, #28]
 8005888:	68fb      	ldr	r3, [r7, #12]
 800588a:	681b      	ldr	r3, [r3, #0]
 800588c:	f042 0208 	orr.w	r2, r2, #8
 8005890:	61da      	str	r2, [r3, #28]
 8005892:	68fb      	ldr	r3, [r7, #12]
 8005894:	681b      	ldr	r3, [r3, #0]
 8005896:	69da      	ldr	r2, [r3, #28]
 8005898:	68fb      	ldr	r3, [r7, #12]
 800589a:	681b      	ldr	r3, [r3, #0]
 800589c:	f022 0204 	bic.w	r2, r2, #4
 80058a0:	61da      	str	r2, [r3, #28]
 80058a2:	68fb      	ldr	r3, [r7, #12]
 80058a4:	681b      	ldr	r3, [r3, #0]
 80058a6:	69d9      	ldr	r1, [r3, #28]
 80058a8:	68bb      	ldr	r3, [r7, #8]
 80058aa:	691a      	ldr	r2, [r3, #16]
 80058ac:	68fb      	ldr	r3, [r7, #12]
 80058ae:	681b      	ldr	r3, [r3, #0]
 80058b0:	430a      	orrs	r2, r1
 80058b2:	61da      	str	r2, [r3, #28]
 80058b4:	e023      	b.n	80058fe <HAL_TIM_PWM_ConfigChannel+0x172>
 80058b6:	68fb      	ldr	r3, [r7, #12]
 80058b8:	681b      	ldr	r3, [r3, #0]
 80058ba:	68b9      	ldr	r1, [r7, #8]
 80058bc:	4618      	mov	r0, r3
 80058be:	f000 fb1d 	bl	8005efc <TIM_OC4_SetConfig>
 80058c2:	68fb      	ldr	r3, [r7, #12]
 80058c4:	681b      	ldr	r3, [r3, #0]
 80058c6:	69da      	ldr	r2, [r3, #28]
 80058c8:	68fb      	ldr	r3, [r7, #12]
 80058ca:	681b      	ldr	r3, [r3, #0]
 80058cc:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80058d0:	61da      	str	r2, [r3, #28]
 80058d2:	68fb      	ldr	r3, [r7, #12]
 80058d4:	681b      	ldr	r3, [r3, #0]
 80058d6:	69da      	ldr	r2, [r3, #28]
 80058d8:	68fb      	ldr	r3, [r7, #12]
 80058da:	681b      	ldr	r3, [r3, #0]
 80058dc:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80058e0:	61da      	str	r2, [r3, #28]
 80058e2:	68fb      	ldr	r3, [r7, #12]
 80058e4:	681b      	ldr	r3, [r3, #0]
 80058e6:	69d9      	ldr	r1, [r3, #28]
 80058e8:	68bb      	ldr	r3, [r7, #8]
 80058ea:	691b      	ldr	r3, [r3, #16]
 80058ec:	021a      	lsls	r2, r3, #8
 80058ee:	68fb      	ldr	r3, [r7, #12]
 80058f0:	681b      	ldr	r3, [r3, #0]
 80058f2:	430a      	orrs	r2, r1
 80058f4:	61da      	str	r2, [r3, #28]
 80058f6:	e002      	b.n	80058fe <HAL_TIM_PWM_ConfigChannel+0x172>
 80058f8:	2301      	movs	r3, #1
 80058fa:	75fb      	strb	r3, [r7, #23]
 80058fc:	bf00      	nop
 80058fe:	68fb      	ldr	r3, [r7, #12]
 8005900:	2200      	movs	r2, #0
 8005902:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005906:	7dfb      	ldrb	r3, [r7, #23]
 8005908:	4618      	mov	r0, r3
 800590a:	3718      	adds	r7, #24
 800590c:	46bd      	mov	sp, r7
 800590e:	bd80      	pop	{r7, pc}

08005910 <HAL_TIM_ConfigClockSource>:
 8005910:	b580      	push	{r7, lr}
 8005912:	b084      	sub	sp, #16
 8005914:	af00      	add	r7, sp, #0
 8005916:	6078      	str	r0, [r7, #4]
 8005918:	6039      	str	r1, [r7, #0]
 800591a:	2300      	movs	r3, #0
 800591c:	73fb      	strb	r3, [r7, #15]
 800591e:	687b      	ldr	r3, [r7, #4]
 8005920:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005924:	2b01      	cmp	r3, #1
 8005926:	d101      	bne.n	800592c <HAL_TIM_ConfigClockSource+0x1c>
 8005928:	2302      	movs	r3, #2
 800592a:	e0b4      	b.n	8005a96 <HAL_TIM_ConfigClockSource+0x186>
 800592c:	687b      	ldr	r3, [r7, #4]
 800592e:	2201      	movs	r2, #1
 8005930:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005934:	687b      	ldr	r3, [r7, #4]
 8005936:	2202      	movs	r2, #2
 8005938:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800593c:	687b      	ldr	r3, [r7, #4]
 800593e:	681b      	ldr	r3, [r3, #0]
 8005940:	689b      	ldr	r3, [r3, #8]
 8005942:	60bb      	str	r3, [r7, #8]
 8005944:	68bb      	ldr	r3, [r7, #8]
 8005946:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800594a:	60bb      	str	r3, [r7, #8]
 800594c:	68bb      	ldr	r3, [r7, #8]
 800594e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005952:	60bb      	str	r3, [r7, #8]
 8005954:	687b      	ldr	r3, [r7, #4]
 8005956:	681b      	ldr	r3, [r3, #0]
 8005958:	68ba      	ldr	r2, [r7, #8]
 800595a:	609a      	str	r2, [r3, #8]
 800595c:	683b      	ldr	r3, [r7, #0]
 800595e:	681b      	ldr	r3, [r3, #0]
 8005960:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005964:	d03e      	beq.n	80059e4 <HAL_TIM_ConfigClockSource+0xd4>
 8005966:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800596a:	f200 8087 	bhi.w	8005a7c <HAL_TIM_ConfigClockSource+0x16c>
 800596e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005972:	f000 8086 	beq.w	8005a82 <HAL_TIM_ConfigClockSource+0x172>
 8005976:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800597a:	d87f      	bhi.n	8005a7c <HAL_TIM_ConfigClockSource+0x16c>
 800597c:	2b70      	cmp	r3, #112	@ 0x70
 800597e:	d01a      	beq.n	80059b6 <HAL_TIM_ConfigClockSource+0xa6>
 8005980:	2b70      	cmp	r3, #112	@ 0x70
 8005982:	d87b      	bhi.n	8005a7c <HAL_TIM_ConfigClockSource+0x16c>
 8005984:	2b60      	cmp	r3, #96	@ 0x60
 8005986:	d050      	beq.n	8005a2a <HAL_TIM_ConfigClockSource+0x11a>
 8005988:	2b60      	cmp	r3, #96	@ 0x60
 800598a:	d877      	bhi.n	8005a7c <HAL_TIM_ConfigClockSource+0x16c>
 800598c:	2b50      	cmp	r3, #80	@ 0x50
 800598e:	d03c      	beq.n	8005a0a <HAL_TIM_ConfigClockSource+0xfa>
 8005990:	2b50      	cmp	r3, #80	@ 0x50
 8005992:	d873      	bhi.n	8005a7c <HAL_TIM_ConfigClockSource+0x16c>
 8005994:	2b40      	cmp	r3, #64	@ 0x40
 8005996:	d058      	beq.n	8005a4a <HAL_TIM_ConfigClockSource+0x13a>
 8005998:	2b40      	cmp	r3, #64	@ 0x40
 800599a:	d86f      	bhi.n	8005a7c <HAL_TIM_ConfigClockSource+0x16c>
 800599c:	2b30      	cmp	r3, #48	@ 0x30
 800599e:	d064      	beq.n	8005a6a <HAL_TIM_ConfigClockSource+0x15a>
 80059a0:	2b30      	cmp	r3, #48	@ 0x30
 80059a2:	d86b      	bhi.n	8005a7c <HAL_TIM_ConfigClockSource+0x16c>
 80059a4:	2b20      	cmp	r3, #32
 80059a6:	d060      	beq.n	8005a6a <HAL_TIM_ConfigClockSource+0x15a>
 80059a8:	2b20      	cmp	r3, #32
 80059aa:	d867      	bhi.n	8005a7c <HAL_TIM_ConfigClockSource+0x16c>
 80059ac:	2b00      	cmp	r3, #0
 80059ae:	d05c      	beq.n	8005a6a <HAL_TIM_ConfigClockSource+0x15a>
 80059b0:	2b10      	cmp	r3, #16
 80059b2:	d05a      	beq.n	8005a6a <HAL_TIM_ConfigClockSource+0x15a>
 80059b4:	e062      	b.n	8005a7c <HAL_TIM_ConfigClockSource+0x16c>
 80059b6:	687b      	ldr	r3, [r7, #4]
 80059b8:	6818      	ldr	r0, [r3, #0]
 80059ba:	683b      	ldr	r3, [r7, #0]
 80059bc:	6899      	ldr	r1, [r3, #8]
 80059be:	683b      	ldr	r3, [r7, #0]
 80059c0:	685a      	ldr	r2, [r3, #4]
 80059c2:	683b      	ldr	r3, [r7, #0]
 80059c4:	68db      	ldr	r3, [r3, #12]
 80059c6:	f000 fb69 	bl	800609c <TIM_ETR_SetConfig>
 80059ca:	687b      	ldr	r3, [r7, #4]
 80059cc:	681b      	ldr	r3, [r3, #0]
 80059ce:	689b      	ldr	r3, [r3, #8]
 80059d0:	60bb      	str	r3, [r7, #8]
 80059d2:	68bb      	ldr	r3, [r7, #8]
 80059d4:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80059d8:	60bb      	str	r3, [r7, #8]
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	681b      	ldr	r3, [r3, #0]
 80059de:	68ba      	ldr	r2, [r7, #8]
 80059e0:	609a      	str	r2, [r3, #8]
 80059e2:	e04f      	b.n	8005a84 <HAL_TIM_ConfigClockSource+0x174>
 80059e4:	687b      	ldr	r3, [r7, #4]
 80059e6:	6818      	ldr	r0, [r3, #0]
 80059e8:	683b      	ldr	r3, [r7, #0]
 80059ea:	6899      	ldr	r1, [r3, #8]
 80059ec:	683b      	ldr	r3, [r7, #0]
 80059ee:	685a      	ldr	r2, [r3, #4]
 80059f0:	683b      	ldr	r3, [r7, #0]
 80059f2:	68db      	ldr	r3, [r3, #12]
 80059f4:	f000 fb52 	bl	800609c <TIM_ETR_SetConfig>
 80059f8:	687b      	ldr	r3, [r7, #4]
 80059fa:	681b      	ldr	r3, [r3, #0]
 80059fc:	689a      	ldr	r2, [r3, #8]
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	681b      	ldr	r3, [r3, #0]
 8005a02:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005a06:	609a      	str	r2, [r3, #8]
 8005a08:	e03c      	b.n	8005a84 <HAL_TIM_ConfigClockSource+0x174>
 8005a0a:	687b      	ldr	r3, [r7, #4]
 8005a0c:	6818      	ldr	r0, [r3, #0]
 8005a0e:	683b      	ldr	r3, [r7, #0]
 8005a10:	6859      	ldr	r1, [r3, #4]
 8005a12:	683b      	ldr	r3, [r7, #0]
 8005a14:	68db      	ldr	r3, [r3, #12]
 8005a16:	461a      	mov	r2, r3
 8005a18:	f000 fac6 	bl	8005fa8 <TIM_TI1_ConfigInputStage>
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	681b      	ldr	r3, [r3, #0]
 8005a20:	2150      	movs	r1, #80	@ 0x50
 8005a22:	4618      	mov	r0, r3
 8005a24:	f000 fb1f 	bl	8006066 <TIM_ITRx_SetConfig>
 8005a28:	e02c      	b.n	8005a84 <HAL_TIM_ConfigClockSource+0x174>
 8005a2a:	687b      	ldr	r3, [r7, #4]
 8005a2c:	6818      	ldr	r0, [r3, #0]
 8005a2e:	683b      	ldr	r3, [r7, #0]
 8005a30:	6859      	ldr	r1, [r3, #4]
 8005a32:	683b      	ldr	r3, [r7, #0]
 8005a34:	68db      	ldr	r3, [r3, #12]
 8005a36:	461a      	mov	r2, r3
 8005a38:	f000 fae5 	bl	8006006 <TIM_TI2_ConfigInputStage>
 8005a3c:	687b      	ldr	r3, [r7, #4]
 8005a3e:	681b      	ldr	r3, [r3, #0]
 8005a40:	2160      	movs	r1, #96	@ 0x60
 8005a42:	4618      	mov	r0, r3
 8005a44:	f000 fb0f 	bl	8006066 <TIM_ITRx_SetConfig>
 8005a48:	e01c      	b.n	8005a84 <HAL_TIM_ConfigClockSource+0x174>
 8005a4a:	687b      	ldr	r3, [r7, #4]
 8005a4c:	6818      	ldr	r0, [r3, #0]
 8005a4e:	683b      	ldr	r3, [r7, #0]
 8005a50:	6859      	ldr	r1, [r3, #4]
 8005a52:	683b      	ldr	r3, [r7, #0]
 8005a54:	68db      	ldr	r3, [r3, #12]
 8005a56:	461a      	mov	r2, r3
 8005a58:	f000 faa6 	bl	8005fa8 <TIM_TI1_ConfigInputStage>
 8005a5c:	687b      	ldr	r3, [r7, #4]
 8005a5e:	681b      	ldr	r3, [r3, #0]
 8005a60:	2140      	movs	r1, #64	@ 0x40
 8005a62:	4618      	mov	r0, r3
 8005a64:	f000 faff 	bl	8006066 <TIM_ITRx_SetConfig>
 8005a68:	e00c      	b.n	8005a84 <HAL_TIM_ConfigClockSource+0x174>
 8005a6a:	687b      	ldr	r3, [r7, #4]
 8005a6c:	681a      	ldr	r2, [r3, #0]
 8005a6e:	683b      	ldr	r3, [r7, #0]
 8005a70:	681b      	ldr	r3, [r3, #0]
 8005a72:	4619      	mov	r1, r3
 8005a74:	4610      	mov	r0, r2
 8005a76:	f000 faf6 	bl	8006066 <TIM_ITRx_SetConfig>
 8005a7a:	e003      	b.n	8005a84 <HAL_TIM_ConfigClockSource+0x174>
 8005a7c:	2301      	movs	r3, #1
 8005a7e:	73fb      	strb	r3, [r7, #15]
 8005a80:	e000      	b.n	8005a84 <HAL_TIM_ConfigClockSource+0x174>
 8005a82:	bf00      	nop
 8005a84:	687b      	ldr	r3, [r7, #4]
 8005a86:	2201      	movs	r2, #1
 8005a88:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005a8c:	687b      	ldr	r3, [r7, #4]
 8005a8e:	2200      	movs	r2, #0
 8005a90:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005a94:	7bfb      	ldrb	r3, [r7, #15]
 8005a96:	4618      	mov	r0, r3
 8005a98:	3710      	adds	r7, #16
 8005a9a:	46bd      	mov	sp, r7
 8005a9c:	bd80      	pop	{r7, pc}

08005a9e <HAL_TIM_OC_DelayElapsedCallback>:
 8005a9e:	b480      	push	{r7}
 8005aa0:	b083      	sub	sp, #12
 8005aa2:	af00      	add	r7, sp, #0
 8005aa4:	6078      	str	r0, [r7, #4]
 8005aa6:	bf00      	nop
 8005aa8:	370c      	adds	r7, #12
 8005aaa:	46bd      	mov	sp, r7
 8005aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ab0:	4770      	bx	lr

08005ab2 <HAL_TIM_IC_CaptureCallback>:
 8005ab2:	b480      	push	{r7}
 8005ab4:	b083      	sub	sp, #12
 8005ab6:	af00      	add	r7, sp, #0
 8005ab8:	6078      	str	r0, [r7, #4]
 8005aba:	bf00      	nop
 8005abc:	370c      	adds	r7, #12
 8005abe:	46bd      	mov	sp, r7
 8005ac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ac4:	4770      	bx	lr

08005ac6 <HAL_TIM_PWM_PulseFinishedCallback>:
 8005ac6:	b480      	push	{r7}
 8005ac8:	b083      	sub	sp, #12
 8005aca:	af00      	add	r7, sp, #0
 8005acc:	6078      	str	r0, [r7, #4]
 8005ace:	bf00      	nop
 8005ad0:	370c      	adds	r7, #12
 8005ad2:	46bd      	mov	sp, r7
 8005ad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ad8:	4770      	bx	lr

08005ada <HAL_TIM_TriggerCallback>:
 8005ada:	b480      	push	{r7}
 8005adc:	b083      	sub	sp, #12
 8005ade:	af00      	add	r7, sp, #0
 8005ae0:	6078      	str	r0, [r7, #4]
 8005ae2:	bf00      	nop
 8005ae4:	370c      	adds	r7, #12
 8005ae6:	46bd      	mov	sp, r7
 8005ae8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005aec:	4770      	bx	lr
	...

08005af0 <TIM_Base_SetConfig>:
 8005af0:	b480      	push	{r7}
 8005af2:	b085      	sub	sp, #20
 8005af4:	af00      	add	r7, sp, #0
 8005af6:	6078      	str	r0, [r7, #4]
 8005af8:	6039      	str	r1, [r7, #0]
 8005afa:	687b      	ldr	r3, [r7, #4]
 8005afc:	681b      	ldr	r3, [r3, #0]
 8005afe:	60fb      	str	r3, [r7, #12]
 8005b00:	687b      	ldr	r3, [r7, #4]
 8005b02:	4a46      	ldr	r2, [pc, #280]	@ (8005c1c <TIM_Base_SetConfig+0x12c>)
 8005b04:	4293      	cmp	r3, r2
 8005b06:	d013      	beq.n	8005b30 <TIM_Base_SetConfig+0x40>
 8005b08:	687b      	ldr	r3, [r7, #4]
 8005b0a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005b0e:	d00f      	beq.n	8005b30 <TIM_Base_SetConfig+0x40>
 8005b10:	687b      	ldr	r3, [r7, #4]
 8005b12:	4a43      	ldr	r2, [pc, #268]	@ (8005c20 <TIM_Base_SetConfig+0x130>)
 8005b14:	4293      	cmp	r3, r2
 8005b16:	d00b      	beq.n	8005b30 <TIM_Base_SetConfig+0x40>
 8005b18:	687b      	ldr	r3, [r7, #4]
 8005b1a:	4a42      	ldr	r2, [pc, #264]	@ (8005c24 <TIM_Base_SetConfig+0x134>)
 8005b1c:	4293      	cmp	r3, r2
 8005b1e:	d007      	beq.n	8005b30 <TIM_Base_SetConfig+0x40>
 8005b20:	687b      	ldr	r3, [r7, #4]
 8005b22:	4a41      	ldr	r2, [pc, #260]	@ (8005c28 <TIM_Base_SetConfig+0x138>)
 8005b24:	4293      	cmp	r3, r2
 8005b26:	d003      	beq.n	8005b30 <TIM_Base_SetConfig+0x40>
 8005b28:	687b      	ldr	r3, [r7, #4]
 8005b2a:	4a40      	ldr	r2, [pc, #256]	@ (8005c2c <TIM_Base_SetConfig+0x13c>)
 8005b2c:	4293      	cmp	r3, r2
 8005b2e:	d108      	bne.n	8005b42 <TIM_Base_SetConfig+0x52>
 8005b30:	68fb      	ldr	r3, [r7, #12]
 8005b32:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005b36:	60fb      	str	r3, [r7, #12]
 8005b38:	683b      	ldr	r3, [r7, #0]
 8005b3a:	685b      	ldr	r3, [r3, #4]
 8005b3c:	68fa      	ldr	r2, [r7, #12]
 8005b3e:	4313      	orrs	r3, r2
 8005b40:	60fb      	str	r3, [r7, #12]
 8005b42:	687b      	ldr	r3, [r7, #4]
 8005b44:	4a35      	ldr	r2, [pc, #212]	@ (8005c1c <TIM_Base_SetConfig+0x12c>)
 8005b46:	4293      	cmp	r3, r2
 8005b48:	d02b      	beq.n	8005ba2 <TIM_Base_SetConfig+0xb2>
 8005b4a:	687b      	ldr	r3, [r7, #4]
 8005b4c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005b50:	d027      	beq.n	8005ba2 <TIM_Base_SetConfig+0xb2>
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	4a32      	ldr	r2, [pc, #200]	@ (8005c20 <TIM_Base_SetConfig+0x130>)
 8005b56:	4293      	cmp	r3, r2
 8005b58:	d023      	beq.n	8005ba2 <TIM_Base_SetConfig+0xb2>
 8005b5a:	687b      	ldr	r3, [r7, #4]
 8005b5c:	4a31      	ldr	r2, [pc, #196]	@ (8005c24 <TIM_Base_SetConfig+0x134>)
 8005b5e:	4293      	cmp	r3, r2
 8005b60:	d01f      	beq.n	8005ba2 <TIM_Base_SetConfig+0xb2>
 8005b62:	687b      	ldr	r3, [r7, #4]
 8005b64:	4a30      	ldr	r2, [pc, #192]	@ (8005c28 <TIM_Base_SetConfig+0x138>)
 8005b66:	4293      	cmp	r3, r2
 8005b68:	d01b      	beq.n	8005ba2 <TIM_Base_SetConfig+0xb2>
 8005b6a:	687b      	ldr	r3, [r7, #4]
 8005b6c:	4a2f      	ldr	r2, [pc, #188]	@ (8005c2c <TIM_Base_SetConfig+0x13c>)
 8005b6e:	4293      	cmp	r3, r2
 8005b70:	d017      	beq.n	8005ba2 <TIM_Base_SetConfig+0xb2>
 8005b72:	687b      	ldr	r3, [r7, #4]
 8005b74:	4a2e      	ldr	r2, [pc, #184]	@ (8005c30 <TIM_Base_SetConfig+0x140>)
 8005b76:	4293      	cmp	r3, r2
 8005b78:	d013      	beq.n	8005ba2 <TIM_Base_SetConfig+0xb2>
 8005b7a:	687b      	ldr	r3, [r7, #4]
 8005b7c:	4a2d      	ldr	r2, [pc, #180]	@ (8005c34 <TIM_Base_SetConfig+0x144>)
 8005b7e:	4293      	cmp	r3, r2
 8005b80:	d00f      	beq.n	8005ba2 <TIM_Base_SetConfig+0xb2>
 8005b82:	687b      	ldr	r3, [r7, #4]
 8005b84:	4a2c      	ldr	r2, [pc, #176]	@ (8005c38 <TIM_Base_SetConfig+0x148>)
 8005b86:	4293      	cmp	r3, r2
 8005b88:	d00b      	beq.n	8005ba2 <TIM_Base_SetConfig+0xb2>
 8005b8a:	687b      	ldr	r3, [r7, #4]
 8005b8c:	4a2b      	ldr	r2, [pc, #172]	@ (8005c3c <TIM_Base_SetConfig+0x14c>)
 8005b8e:	4293      	cmp	r3, r2
 8005b90:	d007      	beq.n	8005ba2 <TIM_Base_SetConfig+0xb2>
 8005b92:	687b      	ldr	r3, [r7, #4]
 8005b94:	4a2a      	ldr	r2, [pc, #168]	@ (8005c40 <TIM_Base_SetConfig+0x150>)
 8005b96:	4293      	cmp	r3, r2
 8005b98:	d003      	beq.n	8005ba2 <TIM_Base_SetConfig+0xb2>
 8005b9a:	687b      	ldr	r3, [r7, #4]
 8005b9c:	4a29      	ldr	r2, [pc, #164]	@ (8005c44 <TIM_Base_SetConfig+0x154>)
 8005b9e:	4293      	cmp	r3, r2
 8005ba0:	d108      	bne.n	8005bb4 <TIM_Base_SetConfig+0xc4>
 8005ba2:	68fb      	ldr	r3, [r7, #12]
 8005ba4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005ba8:	60fb      	str	r3, [r7, #12]
 8005baa:	683b      	ldr	r3, [r7, #0]
 8005bac:	68db      	ldr	r3, [r3, #12]
 8005bae:	68fa      	ldr	r2, [r7, #12]
 8005bb0:	4313      	orrs	r3, r2
 8005bb2:	60fb      	str	r3, [r7, #12]
 8005bb4:	68fb      	ldr	r3, [r7, #12]
 8005bb6:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8005bba:	683b      	ldr	r3, [r7, #0]
 8005bbc:	695b      	ldr	r3, [r3, #20]
 8005bbe:	4313      	orrs	r3, r2
 8005bc0:	60fb      	str	r3, [r7, #12]
 8005bc2:	687b      	ldr	r3, [r7, #4]
 8005bc4:	68fa      	ldr	r2, [r7, #12]
 8005bc6:	601a      	str	r2, [r3, #0]
 8005bc8:	683b      	ldr	r3, [r7, #0]
 8005bca:	689a      	ldr	r2, [r3, #8]
 8005bcc:	687b      	ldr	r3, [r7, #4]
 8005bce:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005bd0:	683b      	ldr	r3, [r7, #0]
 8005bd2:	681a      	ldr	r2, [r3, #0]
 8005bd4:	687b      	ldr	r3, [r7, #4]
 8005bd6:	629a      	str	r2, [r3, #40]	@ 0x28
 8005bd8:	687b      	ldr	r3, [r7, #4]
 8005bda:	4a10      	ldr	r2, [pc, #64]	@ (8005c1c <TIM_Base_SetConfig+0x12c>)
 8005bdc:	4293      	cmp	r3, r2
 8005bde:	d003      	beq.n	8005be8 <TIM_Base_SetConfig+0xf8>
 8005be0:	687b      	ldr	r3, [r7, #4]
 8005be2:	4a12      	ldr	r2, [pc, #72]	@ (8005c2c <TIM_Base_SetConfig+0x13c>)
 8005be4:	4293      	cmp	r3, r2
 8005be6:	d103      	bne.n	8005bf0 <TIM_Base_SetConfig+0x100>
 8005be8:	683b      	ldr	r3, [r7, #0]
 8005bea:	691a      	ldr	r2, [r3, #16]
 8005bec:	687b      	ldr	r3, [r7, #4]
 8005bee:	631a      	str	r2, [r3, #48]	@ 0x30
 8005bf0:	687b      	ldr	r3, [r7, #4]
 8005bf2:	2201      	movs	r2, #1
 8005bf4:	615a      	str	r2, [r3, #20]
 8005bf6:	687b      	ldr	r3, [r7, #4]
 8005bf8:	691b      	ldr	r3, [r3, #16]
 8005bfa:	f003 0301 	and.w	r3, r3, #1
 8005bfe:	2b01      	cmp	r3, #1
 8005c00:	d105      	bne.n	8005c0e <TIM_Base_SetConfig+0x11e>
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	691b      	ldr	r3, [r3, #16]
 8005c06:	f023 0201 	bic.w	r2, r3, #1
 8005c0a:	687b      	ldr	r3, [r7, #4]
 8005c0c:	611a      	str	r2, [r3, #16]
 8005c0e:	bf00      	nop
 8005c10:	3714      	adds	r7, #20
 8005c12:	46bd      	mov	sp, r7
 8005c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c18:	4770      	bx	lr
 8005c1a:	bf00      	nop
 8005c1c:	40010000 	.word	0x40010000
 8005c20:	40000400 	.word	0x40000400
 8005c24:	40000800 	.word	0x40000800
 8005c28:	40000c00 	.word	0x40000c00
 8005c2c:	40010400 	.word	0x40010400
 8005c30:	40014000 	.word	0x40014000
 8005c34:	40014400 	.word	0x40014400
 8005c38:	40014800 	.word	0x40014800
 8005c3c:	40001800 	.word	0x40001800
 8005c40:	40001c00 	.word	0x40001c00
 8005c44:	40002000 	.word	0x40002000

08005c48 <TIM_OC1_SetConfig>:
 8005c48:	b480      	push	{r7}
 8005c4a:	b087      	sub	sp, #28
 8005c4c:	af00      	add	r7, sp, #0
 8005c4e:	6078      	str	r0, [r7, #4]
 8005c50:	6039      	str	r1, [r7, #0]
 8005c52:	687b      	ldr	r3, [r7, #4]
 8005c54:	6a1b      	ldr	r3, [r3, #32]
 8005c56:	617b      	str	r3, [r7, #20]
 8005c58:	687b      	ldr	r3, [r7, #4]
 8005c5a:	6a1b      	ldr	r3, [r3, #32]
 8005c5c:	f023 0201 	bic.w	r2, r3, #1
 8005c60:	687b      	ldr	r3, [r7, #4]
 8005c62:	621a      	str	r2, [r3, #32]
 8005c64:	687b      	ldr	r3, [r7, #4]
 8005c66:	685b      	ldr	r3, [r3, #4]
 8005c68:	613b      	str	r3, [r7, #16]
 8005c6a:	687b      	ldr	r3, [r7, #4]
 8005c6c:	699b      	ldr	r3, [r3, #24]
 8005c6e:	60fb      	str	r3, [r7, #12]
 8005c70:	68fb      	ldr	r3, [r7, #12]
 8005c72:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005c76:	60fb      	str	r3, [r7, #12]
 8005c78:	68fb      	ldr	r3, [r7, #12]
 8005c7a:	f023 0303 	bic.w	r3, r3, #3
 8005c7e:	60fb      	str	r3, [r7, #12]
 8005c80:	683b      	ldr	r3, [r7, #0]
 8005c82:	681b      	ldr	r3, [r3, #0]
 8005c84:	68fa      	ldr	r2, [r7, #12]
 8005c86:	4313      	orrs	r3, r2
 8005c88:	60fb      	str	r3, [r7, #12]
 8005c8a:	697b      	ldr	r3, [r7, #20]
 8005c8c:	f023 0302 	bic.w	r3, r3, #2
 8005c90:	617b      	str	r3, [r7, #20]
 8005c92:	683b      	ldr	r3, [r7, #0]
 8005c94:	689b      	ldr	r3, [r3, #8]
 8005c96:	697a      	ldr	r2, [r7, #20]
 8005c98:	4313      	orrs	r3, r2
 8005c9a:	617b      	str	r3, [r7, #20]
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	4a20      	ldr	r2, [pc, #128]	@ (8005d20 <TIM_OC1_SetConfig+0xd8>)
 8005ca0:	4293      	cmp	r3, r2
 8005ca2:	d003      	beq.n	8005cac <TIM_OC1_SetConfig+0x64>
 8005ca4:	687b      	ldr	r3, [r7, #4]
 8005ca6:	4a1f      	ldr	r2, [pc, #124]	@ (8005d24 <TIM_OC1_SetConfig+0xdc>)
 8005ca8:	4293      	cmp	r3, r2
 8005caa:	d10c      	bne.n	8005cc6 <TIM_OC1_SetConfig+0x7e>
 8005cac:	697b      	ldr	r3, [r7, #20]
 8005cae:	f023 0308 	bic.w	r3, r3, #8
 8005cb2:	617b      	str	r3, [r7, #20]
 8005cb4:	683b      	ldr	r3, [r7, #0]
 8005cb6:	68db      	ldr	r3, [r3, #12]
 8005cb8:	697a      	ldr	r2, [r7, #20]
 8005cba:	4313      	orrs	r3, r2
 8005cbc:	617b      	str	r3, [r7, #20]
 8005cbe:	697b      	ldr	r3, [r7, #20]
 8005cc0:	f023 0304 	bic.w	r3, r3, #4
 8005cc4:	617b      	str	r3, [r7, #20]
 8005cc6:	687b      	ldr	r3, [r7, #4]
 8005cc8:	4a15      	ldr	r2, [pc, #84]	@ (8005d20 <TIM_OC1_SetConfig+0xd8>)
 8005cca:	4293      	cmp	r3, r2
 8005ccc:	d003      	beq.n	8005cd6 <TIM_OC1_SetConfig+0x8e>
 8005cce:	687b      	ldr	r3, [r7, #4]
 8005cd0:	4a14      	ldr	r2, [pc, #80]	@ (8005d24 <TIM_OC1_SetConfig+0xdc>)
 8005cd2:	4293      	cmp	r3, r2
 8005cd4:	d111      	bne.n	8005cfa <TIM_OC1_SetConfig+0xb2>
 8005cd6:	693b      	ldr	r3, [r7, #16]
 8005cd8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005cdc:	613b      	str	r3, [r7, #16]
 8005cde:	693b      	ldr	r3, [r7, #16]
 8005ce0:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005ce4:	613b      	str	r3, [r7, #16]
 8005ce6:	683b      	ldr	r3, [r7, #0]
 8005ce8:	695b      	ldr	r3, [r3, #20]
 8005cea:	693a      	ldr	r2, [r7, #16]
 8005cec:	4313      	orrs	r3, r2
 8005cee:	613b      	str	r3, [r7, #16]
 8005cf0:	683b      	ldr	r3, [r7, #0]
 8005cf2:	699b      	ldr	r3, [r3, #24]
 8005cf4:	693a      	ldr	r2, [r7, #16]
 8005cf6:	4313      	orrs	r3, r2
 8005cf8:	613b      	str	r3, [r7, #16]
 8005cfa:	687b      	ldr	r3, [r7, #4]
 8005cfc:	693a      	ldr	r2, [r7, #16]
 8005cfe:	605a      	str	r2, [r3, #4]
 8005d00:	687b      	ldr	r3, [r7, #4]
 8005d02:	68fa      	ldr	r2, [r7, #12]
 8005d04:	619a      	str	r2, [r3, #24]
 8005d06:	683b      	ldr	r3, [r7, #0]
 8005d08:	685a      	ldr	r2, [r3, #4]
 8005d0a:	687b      	ldr	r3, [r7, #4]
 8005d0c:	635a      	str	r2, [r3, #52]	@ 0x34
 8005d0e:	687b      	ldr	r3, [r7, #4]
 8005d10:	697a      	ldr	r2, [r7, #20]
 8005d12:	621a      	str	r2, [r3, #32]
 8005d14:	bf00      	nop
 8005d16:	371c      	adds	r7, #28
 8005d18:	46bd      	mov	sp, r7
 8005d1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d1e:	4770      	bx	lr
 8005d20:	40010000 	.word	0x40010000
 8005d24:	40010400 	.word	0x40010400

08005d28 <TIM_OC2_SetConfig>:
 8005d28:	b480      	push	{r7}
 8005d2a:	b087      	sub	sp, #28
 8005d2c:	af00      	add	r7, sp, #0
 8005d2e:	6078      	str	r0, [r7, #4]
 8005d30:	6039      	str	r1, [r7, #0]
 8005d32:	687b      	ldr	r3, [r7, #4]
 8005d34:	6a1b      	ldr	r3, [r3, #32]
 8005d36:	617b      	str	r3, [r7, #20]
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	6a1b      	ldr	r3, [r3, #32]
 8005d3c:	f023 0210 	bic.w	r2, r3, #16
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	621a      	str	r2, [r3, #32]
 8005d44:	687b      	ldr	r3, [r7, #4]
 8005d46:	685b      	ldr	r3, [r3, #4]
 8005d48:	613b      	str	r3, [r7, #16]
 8005d4a:	687b      	ldr	r3, [r7, #4]
 8005d4c:	699b      	ldr	r3, [r3, #24]
 8005d4e:	60fb      	str	r3, [r7, #12]
 8005d50:	68fb      	ldr	r3, [r7, #12]
 8005d52:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005d56:	60fb      	str	r3, [r7, #12]
 8005d58:	68fb      	ldr	r3, [r7, #12]
 8005d5a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005d5e:	60fb      	str	r3, [r7, #12]
 8005d60:	683b      	ldr	r3, [r7, #0]
 8005d62:	681b      	ldr	r3, [r3, #0]
 8005d64:	021b      	lsls	r3, r3, #8
 8005d66:	68fa      	ldr	r2, [r7, #12]
 8005d68:	4313      	orrs	r3, r2
 8005d6a:	60fb      	str	r3, [r7, #12]
 8005d6c:	697b      	ldr	r3, [r7, #20]
 8005d6e:	f023 0320 	bic.w	r3, r3, #32
 8005d72:	617b      	str	r3, [r7, #20]
 8005d74:	683b      	ldr	r3, [r7, #0]
 8005d76:	689b      	ldr	r3, [r3, #8]
 8005d78:	011b      	lsls	r3, r3, #4
 8005d7a:	697a      	ldr	r2, [r7, #20]
 8005d7c:	4313      	orrs	r3, r2
 8005d7e:	617b      	str	r3, [r7, #20]
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	4a22      	ldr	r2, [pc, #136]	@ (8005e0c <TIM_OC2_SetConfig+0xe4>)
 8005d84:	4293      	cmp	r3, r2
 8005d86:	d003      	beq.n	8005d90 <TIM_OC2_SetConfig+0x68>
 8005d88:	687b      	ldr	r3, [r7, #4]
 8005d8a:	4a21      	ldr	r2, [pc, #132]	@ (8005e10 <TIM_OC2_SetConfig+0xe8>)
 8005d8c:	4293      	cmp	r3, r2
 8005d8e:	d10d      	bne.n	8005dac <TIM_OC2_SetConfig+0x84>
 8005d90:	697b      	ldr	r3, [r7, #20]
 8005d92:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005d96:	617b      	str	r3, [r7, #20]
 8005d98:	683b      	ldr	r3, [r7, #0]
 8005d9a:	68db      	ldr	r3, [r3, #12]
 8005d9c:	011b      	lsls	r3, r3, #4
 8005d9e:	697a      	ldr	r2, [r7, #20]
 8005da0:	4313      	orrs	r3, r2
 8005da2:	617b      	str	r3, [r7, #20]
 8005da4:	697b      	ldr	r3, [r7, #20]
 8005da6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005daa:	617b      	str	r3, [r7, #20]
 8005dac:	687b      	ldr	r3, [r7, #4]
 8005dae:	4a17      	ldr	r2, [pc, #92]	@ (8005e0c <TIM_OC2_SetConfig+0xe4>)
 8005db0:	4293      	cmp	r3, r2
 8005db2:	d003      	beq.n	8005dbc <TIM_OC2_SetConfig+0x94>
 8005db4:	687b      	ldr	r3, [r7, #4]
 8005db6:	4a16      	ldr	r2, [pc, #88]	@ (8005e10 <TIM_OC2_SetConfig+0xe8>)
 8005db8:	4293      	cmp	r3, r2
 8005dba:	d113      	bne.n	8005de4 <TIM_OC2_SetConfig+0xbc>
 8005dbc:	693b      	ldr	r3, [r7, #16]
 8005dbe:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005dc2:	613b      	str	r3, [r7, #16]
 8005dc4:	693b      	ldr	r3, [r7, #16]
 8005dc6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005dca:	613b      	str	r3, [r7, #16]
 8005dcc:	683b      	ldr	r3, [r7, #0]
 8005dce:	695b      	ldr	r3, [r3, #20]
 8005dd0:	009b      	lsls	r3, r3, #2
 8005dd2:	693a      	ldr	r2, [r7, #16]
 8005dd4:	4313      	orrs	r3, r2
 8005dd6:	613b      	str	r3, [r7, #16]
 8005dd8:	683b      	ldr	r3, [r7, #0]
 8005dda:	699b      	ldr	r3, [r3, #24]
 8005ddc:	009b      	lsls	r3, r3, #2
 8005dde:	693a      	ldr	r2, [r7, #16]
 8005de0:	4313      	orrs	r3, r2
 8005de2:	613b      	str	r3, [r7, #16]
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	693a      	ldr	r2, [r7, #16]
 8005de8:	605a      	str	r2, [r3, #4]
 8005dea:	687b      	ldr	r3, [r7, #4]
 8005dec:	68fa      	ldr	r2, [r7, #12]
 8005dee:	619a      	str	r2, [r3, #24]
 8005df0:	683b      	ldr	r3, [r7, #0]
 8005df2:	685a      	ldr	r2, [r3, #4]
 8005df4:	687b      	ldr	r3, [r7, #4]
 8005df6:	639a      	str	r2, [r3, #56]	@ 0x38
 8005df8:	687b      	ldr	r3, [r7, #4]
 8005dfa:	697a      	ldr	r2, [r7, #20]
 8005dfc:	621a      	str	r2, [r3, #32]
 8005dfe:	bf00      	nop
 8005e00:	371c      	adds	r7, #28
 8005e02:	46bd      	mov	sp, r7
 8005e04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e08:	4770      	bx	lr
 8005e0a:	bf00      	nop
 8005e0c:	40010000 	.word	0x40010000
 8005e10:	40010400 	.word	0x40010400

08005e14 <TIM_OC3_SetConfig>:
 8005e14:	b480      	push	{r7}
 8005e16:	b087      	sub	sp, #28
 8005e18:	af00      	add	r7, sp, #0
 8005e1a:	6078      	str	r0, [r7, #4]
 8005e1c:	6039      	str	r1, [r7, #0]
 8005e1e:	687b      	ldr	r3, [r7, #4]
 8005e20:	6a1b      	ldr	r3, [r3, #32]
 8005e22:	617b      	str	r3, [r7, #20]
 8005e24:	687b      	ldr	r3, [r7, #4]
 8005e26:	6a1b      	ldr	r3, [r3, #32]
 8005e28:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8005e2c:	687b      	ldr	r3, [r7, #4]
 8005e2e:	621a      	str	r2, [r3, #32]
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	685b      	ldr	r3, [r3, #4]
 8005e34:	613b      	str	r3, [r7, #16]
 8005e36:	687b      	ldr	r3, [r7, #4]
 8005e38:	69db      	ldr	r3, [r3, #28]
 8005e3a:	60fb      	str	r3, [r7, #12]
 8005e3c:	68fb      	ldr	r3, [r7, #12]
 8005e3e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005e42:	60fb      	str	r3, [r7, #12]
 8005e44:	68fb      	ldr	r3, [r7, #12]
 8005e46:	f023 0303 	bic.w	r3, r3, #3
 8005e4a:	60fb      	str	r3, [r7, #12]
 8005e4c:	683b      	ldr	r3, [r7, #0]
 8005e4e:	681b      	ldr	r3, [r3, #0]
 8005e50:	68fa      	ldr	r2, [r7, #12]
 8005e52:	4313      	orrs	r3, r2
 8005e54:	60fb      	str	r3, [r7, #12]
 8005e56:	697b      	ldr	r3, [r7, #20]
 8005e58:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005e5c:	617b      	str	r3, [r7, #20]
 8005e5e:	683b      	ldr	r3, [r7, #0]
 8005e60:	689b      	ldr	r3, [r3, #8]
 8005e62:	021b      	lsls	r3, r3, #8
 8005e64:	697a      	ldr	r2, [r7, #20]
 8005e66:	4313      	orrs	r3, r2
 8005e68:	617b      	str	r3, [r7, #20]
 8005e6a:	687b      	ldr	r3, [r7, #4]
 8005e6c:	4a21      	ldr	r2, [pc, #132]	@ (8005ef4 <TIM_OC3_SetConfig+0xe0>)
 8005e6e:	4293      	cmp	r3, r2
 8005e70:	d003      	beq.n	8005e7a <TIM_OC3_SetConfig+0x66>
 8005e72:	687b      	ldr	r3, [r7, #4]
 8005e74:	4a20      	ldr	r2, [pc, #128]	@ (8005ef8 <TIM_OC3_SetConfig+0xe4>)
 8005e76:	4293      	cmp	r3, r2
 8005e78:	d10d      	bne.n	8005e96 <TIM_OC3_SetConfig+0x82>
 8005e7a:	697b      	ldr	r3, [r7, #20]
 8005e7c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005e80:	617b      	str	r3, [r7, #20]
 8005e82:	683b      	ldr	r3, [r7, #0]
 8005e84:	68db      	ldr	r3, [r3, #12]
 8005e86:	021b      	lsls	r3, r3, #8
 8005e88:	697a      	ldr	r2, [r7, #20]
 8005e8a:	4313      	orrs	r3, r2
 8005e8c:	617b      	str	r3, [r7, #20]
 8005e8e:	697b      	ldr	r3, [r7, #20]
 8005e90:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005e94:	617b      	str	r3, [r7, #20]
 8005e96:	687b      	ldr	r3, [r7, #4]
 8005e98:	4a16      	ldr	r2, [pc, #88]	@ (8005ef4 <TIM_OC3_SetConfig+0xe0>)
 8005e9a:	4293      	cmp	r3, r2
 8005e9c:	d003      	beq.n	8005ea6 <TIM_OC3_SetConfig+0x92>
 8005e9e:	687b      	ldr	r3, [r7, #4]
 8005ea0:	4a15      	ldr	r2, [pc, #84]	@ (8005ef8 <TIM_OC3_SetConfig+0xe4>)
 8005ea2:	4293      	cmp	r3, r2
 8005ea4:	d113      	bne.n	8005ece <TIM_OC3_SetConfig+0xba>
 8005ea6:	693b      	ldr	r3, [r7, #16]
 8005ea8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005eac:	613b      	str	r3, [r7, #16]
 8005eae:	693b      	ldr	r3, [r7, #16]
 8005eb0:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005eb4:	613b      	str	r3, [r7, #16]
 8005eb6:	683b      	ldr	r3, [r7, #0]
 8005eb8:	695b      	ldr	r3, [r3, #20]
 8005eba:	011b      	lsls	r3, r3, #4
 8005ebc:	693a      	ldr	r2, [r7, #16]
 8005ebe:	4313      	orrs	r3, r2
 8005ec0:	613b      	str	r3, [r7, #16]
 8005ec2:	683b      	ldr	r3, [r7, #0]
 8005ec4:	699b      	ldr	r3, [r3, #24]
 8005ec6:	011b      	lsls	r3, r3, #4
 8005ec8:	693a      	ldr	r2, [r7, #16]
 8005eca:	4313      	orrs	r3, r2
 8005ecc:	613b      	str	r3, [r7, #16]
 8005ece:	687b      	ldr	r3, [r7, #4]
 8005ed0:	693a      	ldr	r2, [r7, #16]
 8005ed2:	605a      	str	r2, [r3, #4]
 8005ed4:	687b      	ldr	r3, [r7, #4]
 8005ed6:	68fa      	ldr	r2, [r7, #12]
 8005ed8:	61da      	str	r2, [r3, #28]
 8005eda:	683b      	ldr	r3, [r7, #0]
 8005edc:	685a      	ldr	r2, [r3, #4]
 8005ede:	687b      	ldr	r3, [r7, #4]
 8005ee0:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005ee2:	687b      	ldr	r3, [r7, #4]
 8005ee4:	697a      	ldr	r2, [r7, #20]
 8005ee6:	621a      	str	r2, [r3, #32]
 8005ee8:	bf00      	nop
 8005eea:	371c      	adds	r7, #28
 8005eec:	46bd      	mov	sp, r7
 8005eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ef2:	4770      	bx	lr
 8005ef4:	40010000 	.word	0x40010000
 8005ef8:	40010400 	.word	0x40010400

08005efc <TIM_OC4_SetConfig>:
 8005efc:	b480      	push	{r7}
 8005efe:	b087      	sub	sp, #28
 8005f00:	af00      	add	r7, sp, #0
 8005f02:	6078      	str	r0, [r7, #4]
 8005f04:	6039      	str	r1, [r7, #0]
 8005f06:	687b      	ldr	r3, [r7, #4]
 8005f08:	6a1b      	ldr	r3, [r3, #32]
 8005f0a:	613b      	str	r3, [r7, #16]
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	6a1b      	ldr	r3, [r3, #32]
 8005f10:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005f14:	687b      	ldr	r3, [r7, #4]
 8005f16:	621a      	str	r2, [r3, #32]
 8005f18:	687b      	ldr	r3, [r7, #4]
 8005f1a:	685b      	ldr	r3, [r3, #4]
 8005f1c:	617b      	str	r3, [r7, #20]
 8005f1e:	687b      	ldr	r3, [r7, #4]
 8005f20:	69db      	ldr	r3, [r3, #28]
 8005f22:	60fb      	str	r3, [r7, #12]
 8005f24:	68fb      	ldr	r3, [r7, #12]
 8005f26:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005f2a:	60fb      	str	r3, [r7, #12]
 8005f2c:	68fb      	ldr	r3, [r7, #12]
 8005f2e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005f32:	60fb      	str	r3, [r7, #12]
 8005f34:	683b      	ldr	r3, [r7, #0]
 8005f36:	681b      	ldr	r3, [r3, #0]
 8005f38:	021b      	lsls	r3, r3, #8
 8005f3a:	68fa      	ldr	r2, [r7, #12]
 8005f3c:	4313      	orrs	r3, r2
 8005f3e:	60fb      	str	r3, [r7, #12]
 8005f40:	693b      	ldr	r3, [r7, #16]
 8005f42:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005f46:	613b      	str	r3, [r7, #16]
 8005f48:	683b      	ldr	r3, [r7, #0]
 8005f4a:	689b      	ldr	r3, [r3, #8]
 8005f4c:	031b      	lsls	r3, r3, #12
 8005f4e:	693a      	ldr	r2, [r7, #16]
 8005f50:	4313      	orrs	r3, r2
 8005f52:	613b      	str	r3, [r7, #16]
 8005f54:	687b      	ldr	r3, [r7, #4]
 8005f56:	4a12      	ldr	r2, [pc, #72]	@ (8005fa0 <TIM_OC4_SetConfig+0xa4>)
 8005f58:	4293      	cmp	r3, r2
 8005f5a:	d003      	beq.n	8005f64 <TIM_OC4_SetConfig+0x68>
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	4a11      	ldr	r2, [pc, #68]	@ (8005fa4 <TIM_OC4_SetConfig+0xa8>)
 8005f60:	4293      	cmp	r3, r2
 8005f62:	d109      	bne.n	8005f78 <TIM_OC4_SetConfig+0x7c>
 8005f64:	697b      	ldr	r3, [r7, #20]
 8005f66:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8005f6a:	617b      	str	r3, [r7, #20]
 8005f6c:	683b      	ldr	r3, [r7, #0]
 8005f6e:	695b      	ldr	r3, [r3, #20]
 8005f70:	019b      	lsls	r3, r3, #6
 8005f72:	697a      	ldr	r2, [r7, #20]
 8005f74:	4313      	orrs	r3, r2
 8005f76:	617b      	str	r3, [r7, #20]
 8005f78:	687b      	ldr	r3, [r7, #4]
 8005f7a:	697a      	ldr	r2, [r7, #20]
 8005f7c:	605a      	str	r2, [r3, #4]
 8005f7e:	687b      	ldr	r3, [r7, #4]
 8005f80:	68fa      	ldr	r2, [r7, #12]
 8005f82:	61da      	str	r2, [r3, #28]
 8005f84:	683b      	ldr	r3, [r7, #0]
 8005f86:	685a      	ldr	r2, [r3, #4]
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	641a      	str	r2, [r3, #64]	@ 0x40
 8005f8c:	687b      	ldr	r3, [r7, #4]
 8005f8e:	693a      	ldr	r2, [r7, #16]
 8005f90:	621a      	str	r2, [r3, #32]
 8005f92:	bf00      	nop
 8005f94:	371c      	adds	r7, #28
 8005f96:	46bd      	mov	sp, r7
 8005f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f9c:	4770      	bx	lr
 8005f9e:	bf00      	nop
 8005fa0:	40010000 	.word	0x40010000
 8005fa4:	40010400 	.word	0x40010400

08005fa8 <TIM_TI1_ConfigInputStage>:
 8005fa8:	b480      	push	{r7}
 8005faa:	b087      	sub	sp, #28
 8005fac:	af00      	add	r7, sp, #0
 8005fae:	60f8      	str	r0, [r7, #12]
 8005fb0:	60b9      	str	r1, [r7, #8]
 8005fb2:	607a      	str	r2, [r7, #4]
 8005fb4:	68fb      	ldr	r3, [r7, #12]
 8005fb6:	6a1b      	ldr	r3, [r3, #32]
 8005fb8:	617b      	str	r3, [r7, #20]
 8005fba:	68fb      	ldr	r3, [r7, #12]
 8005fbc:	6a1b      	ldr	r3, [r3, #32]
 8005fbe:	f023 0201 	bic.w	r2, r3, #1
 8005fc2:	68fb      	ldr	r3, [r7, #12]
 8005fc4:	621a      	str	r2, [r3, #32]
 8005fc6:	68fb      	ldr	r3, [r7, #12]
 8005fc8:	699b      	ldr	r3, [r3, #24]
 8005fca:	613b      	str	r3, [r7, #16]
 8005fcc:	693b      	ldr	r3, [r7, #16]
 8005fce:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005fd2:	613b      	str	r3, [r7, #16]
 8005fd4:	687b      	ldr	r3, [r7, #4]
 8005fd6:	011b      	lsls	r3, r3, #4
 8005fd8:	693a      	ldr	r2, [r7, #16]
 8005fda:	4313      	orrs	r3, r2
 8005fdc:	613b      	str	r3, [r7, #16]
 8005fde:	697b      	ldr	r3, [r7, #20]
 8005fe0:	f023 030a 	bic.w	r3, r3, #10
 8005fe4:	617b      	str	r3, [r7, #20]
 8005fe6:	697a      	ldr	r2, [r7, #20]
 8005fe8:	68bb      	ldr	r3, [r7, #8]
 8005fea:	4313      	orrs	r3, r2
 8005fec:	617b      	str	r3, [r7, #20]
 8005fee:	68fb      	ldr	r3, [r7, #12]
 8005ff0:	693a      	ldr	r2, [r7, #16]
 8005ff2:	619a      	str	r2, [r3, #24]
 8005ff4:	68fb      	ldr	r3, [r7, #12]
 8005ff6:	697a      	ldr	r2, [r7, #20]
 8005ff8:	621a      	str	r2, [r3, #32]
 8005ffa:	bf00      	nop
 8005ffc:	371c      	adds	r7, #28
 8005ffe:	46bd      	mov	sp, r7
 8006000:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006004:	4770      	bx	lr

08006006 <TIM_TI2_ConfigInputStage>:
 8006006:	b480      	push	{r7}
 8006008:	b087      	sub	sp, #28
 800600a:	af00      	add	r7, sp, #0
 800600c:	60f8      	str	r0, [r7, #12]
 800600e:	60b9      	str	r1, [r7, #8]
 8006010:	607a      	str	r2, [r7, #4]
 8006012:	68fb      	ldr	r3, [r7, #12]
 8006014:	6a1b      	ldr	r3, [r3, #32]
 8006016:	617b      	str	r3, [r7, #20]
 8006018:	68fb      	ldr	r3, [r7, #12]
 800601a:	6a1b      	ldr	r3, [r3, #32]
 800601c:	f023 0210 	bic.w	r2, r3, #16
 8006020:	68fb      	ldr	r3, [r7, #12]
 8006022:	621a      	str	r2, [r3, #32]
 8006024:	68fb      	ldr	r3, [r7, #12]
 8006026:	699b      	ldr	r3, [r3, #24]
 8006028:	613b      	str	r3, [r7, #16]
 800602a:	693b      	ldr	r3, [r7, #16]
 800602c:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006030:	613b      	str	r3, [r7, #16]
 8006032:	687b      	ldr	r3, [r7, #4]
 8006034:	031b      	lsls	r3, r3, #12
 8006036:	693a      	ldr	r2, [r7, #16]
 8006038:	4313      	orrs	r3, r2
 800603a:	613b      	str	r3, [r7, #16]
 800603c:	697b      	ldr	r3, [r7, #20]
 800603e:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8006042:	617b      	str	r3, [r7, #20]
 8006044:	68bb      	ldr	r3, [r7, #8]
 8006046:	011b      	lsls	r3, r3, #4
 8006048:	697a      	ldr	r2, [r7, #20]
 800604a:	4313      	orrs	r3, r2
 800604c:	617b      	str	r3, [r7, #20]
 800604e:	68fb      	ldr	r3, [r7, #12]
 8006050:	693a      	ldr	r2, [r7, #16]
 8006052:	619a      	str	r2, [r3, #24]
 8006054:	68fb      	ldr	r3, [r7, #12]
 8006056:	697a      	ldr	r2, [r7, #20]
 8006058:	621a      	str	r2, [r3, #32]
 800605a:	bf00      	nop
 800605c:	371c      	adds	r7, #28
 800605e:	46bd      	mov	sp, r7
 8006060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006064:	4770      	bx	lr

08006066 <TIM_ITRx_SetConfig>:
 8006066:	b480      	push	{r7}
 8006068:	b085      	sub	sp, #20
 800606a:	af00      	add	r7, sp, #0
 800606c:	6078      	str	r0, [r7, #4]
 800606e:	6039      	str	r1, [r7, #0]
 8006070:	687b      	ldr	r3, [r7, #4]
 8006072:	689b      	ldr	r3, [r3, #8]
 8006074:	60fb      	str	r3, [r7, #12]
 8006076:	68fb      	ldr	r3, [r7, #12]
 8006078:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800607c:	60fb      	str	r3, [r7, #12]
 800607e:	683a      	ldr	r2, [r7, #0]
 8006080:	68fb      	ldr	r3, [r7, #12]
 8006082:	4313      	orrs	r3, r2
 8006084:	f043 0307 	orr.w	r3, r3, #7
 8006088:	60fb      	str	r3, [r7, #12]
 800608a:	687b      	ldr	r3, [r7, #4]
 800608c:	68fa      	ldr	r2, [r7, #12]
 800608e:	609a      	str	r2, [r3, #8]
 8006090:	bf00      	nop
 8006092:	3714      	adds	r7, #20
 8006094:	46bd      	mov	sp, r7
 8006096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800609a:	4770      	bx	lr

0800609c <TIM_ETR_SetConfig>:
 800609c:	b480      	push	{r7}
 800609e:	b087      	sub	sp, #28
 80060a0:	af00      	add	r7, sp, #0
 80060a2:	60f8      	str	r0, [r7, #12]
 80060a4:	60b9      	str	r1, [r7, #8]
 80060a6:	607a      	str	r2, [r7, #4]
 80060a8:	603b      	str	r3, [r7, #0]
 80060aa:	68fb      	ldr	r3, [r7, #12]
 80060ac:	689b      	ldr	r3, [r3, #8]
 80060ae:	617b      	str	r3, [r7, #20]
 80060b0:	697b      	ldr	r3, [r7, #20]
 80060b2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80060b6:	617b      	str	r3, [r7, #20]
 80060b8:	683b      	ldr	r3, [r7, #0]
 80060ba:	021a      	lsls	r2, r3, #8
 80060bc:	687b      	ldr	r3, [r7, #4]
 80060be:	431a      	orrs	r2, r3
 80060c0:	68bb      	ldr	r3, [r7, #8]
 80060c2:	4313      	orrs	r3, r2
 80060c4:	697a      	ldr	r2, [r7, #20]
 80060c6:	4313      	orrs	r3, r2
 80060c8:	617b      	str	r3, [r7, #20]
 80060ca:	68fb      	ldr	r3, [r7, #12]
 80060cc:	697a      	ldr	r2, [r7, #20]
 80060ce:	609a      	str	r2, [r3, #8]
 80060d0:	bf00      	nop
 80060d2:	371c      	adds	r7, #28
 80060d4:	46bd      	mov	sp, r7
 80060d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060da:	4770      	bx	lr

080060dc <TIM_CCxChannelCmd>:
 80060dc:	b480      	push	{r7}
 80060de:	b087      	sub	sp, #28
 80060e0:	af00      	add	r7, sp, #0
 80060e2:	60f8      	str	r0, [r7, #12]
 80060e4:	60b9      	str	r1, [r7, #8]
 80060e6:	607a      	str	r2, [r7, #4]
 80060e8:	68bb      	ldr	r3, [r7, #8]
 80060ea:	f003 031f 	and.w	r3, r3, #31
 80060ee:	2201      	movs	r2, #1
 80060f0:	fa02 f303 	lsl.w	r3, r2, r3
 80060f4:	617b      	str	r3, [r7, #20]
 80060f6:	68fb      	ldr	r3, [r7, #12]
 80060f8:	6a1a      	ldr	r2, [r3, #32]
 80060fa:	697b      	ldr	r3, [r7, #20]
 80060fc:	43db      	mvns	r3, r3
 80060fe:	401a      	ands	r2, r3
 8006100:	68fb      	ldr	r3, [r7, #12]
 8006102:	621a      	str	r2, [r3, #32]
 8006104:	68fb      	ldr	r3, [r7, #12]
 8006106:	6a1a      	ldr	r2, [r3, #32]
 8006108:	68bb      	ldr	r3, [r7, #8]
 800610a:	f003 031f 	and.w	r3, r3, #31
 800610e:	6879      	ldr	r1, [r7, #4]
 8006110:	fa01 f303 	lsl.w	r3, r1, r3
 8006114:	431a      	orrs	r2, r3
 8006116:	68fb      	ldr	r3, [r7, #12]
 8006118:	621a      	str	r2, [r3, #32]
 800611a:	bf00      	nop
 800611c:	371c      	adds	r7, #28
 800611e:	46bd      	mov	sp, r7
 8006120:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006124:	4770      	bx	lr
	...

08006128 <HAL_TIMEx_MasterConfigSynchronization>:
 8006128:	b480      	push	{r7}
 800612a:	b085      	sub	sp, #20
 800612c:	af00      	add	r7, sp, #0
 800612e:	6078      	str	r0, [r7, #4]
 8006130:	6039      	str	r1, [r7, #0]
 8006132:	687b      	ldr	r3, [r7, #4]
 8006134:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006138:	2b01      	cmp	r3, #1
 800613a:	d101      	bne.n	8006140 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800613c:	2302      	movs	r3, #2
 800613e:	e05a      	b.n	80061f6 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8006140:	687b      	ldr	r3, [r7, #4]
 8006142:	2201      	movs	r2, #1
 8006144:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006148:	687b      	ldr	r3, [r7, #4]
 800614a:	2202      	movs	r2, #2
 800614c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006150:	687b      	ldr	r3, [r7, #4]
 8006152:	681b      	ldr	r3, [r3, #0]
 8006154:	685b      	ldr	r3, [r3, #4]
 8006156:	60fb      	str	r3, [r7, #12]
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	681b      	ldr	r3, [r3, #0]
 800615c:	689b      	ldr	r3, [r3, #8]
 800615e:	60bb      	str	r3, [r7, #8]
 8006160:	68fb      	ldr	r3, [r7, #12]
 8006162:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006166:	60fb      	str	r3, [r7, #12]
 8006168:	683b      	ldr	r3, [r7, #0]
 800616a:	681b      	ldr	r3, [r3, #0]
 800616c:	68fa      	ldr	r2, [r7, #12]
 800616e:	4313      	orrs	r3, r2
 8006170:	60fb      	str	r3, [r7, #12]
 8006172:	687b      	ldr	r3, [r7, #4]
 8006174:	681b      	ldr	r3, [r3, #0]
 8006176:	68fa      	ldr	r2, [r7, #12]
 8006178:	605a      	str	r2, [r3, #4]
 800617a:	687b      	ldr	r3, [r7, #4]
 800617c:	681b      	ldr	r3, [r3, #0]
 800617e:	4a21      	ldr	r2, [pc, #132]	@ (8006204 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8006180:	4293      	cmp	r3, r2
 8006182:	d022      	beq.n	80061ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006184:	687b      	ldr	r3, [r7, #4]
 8006186:	681b      	ldr	r3, [r3, #0]
 8006188:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800618c:	d01d      	beq.n	80061ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	681b      	ldr	r3, [r3, #0]
 8006192:	4a1d      	ldr	r2, [pc, #116]	@ (8006208 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8006194:	4293      	cmp	r3, r2
 8006196:	d018      	beq.n	80061ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006198:	687b      	ldr	r3, [r7, #4]
 800619a:	681b      	ldr	r3, [r3, #0]
 800619c:	4a1b      	ldr	r2, [pc, #108]	@ (800620c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800619e:	4293      	cmp	r3, r2
 80061a0:	d013      	beq.n	80061ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80061a2:	687b      	ldr	r3, [r7, #4]
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	4a1a      	ldr	r2, [pc, #104]	@ (8006210 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80061a8:	4293      	cmp	r3, r2
 80061aa:	d00e      	beq.n	80061ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80061ac:	687b      	ldr	r3, [r7, #4]
 80061ae:	681b      	ldr	r3, [r3, #0]
 80061b0:	4a18      	ldr	r2, [pc, #96]	@ (8006214 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80061b2:	4293      	cmp	r3, r2
 80061b4:	d009      	beq.n	80061ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80061b6:	687b      	ldr	r3, [r7, #4]
 80061b8:	681b      	ldr	r3, [r3, #0]
 80061ba:	4a17      	ldr	r2, [pc, #92]	@ (8006218 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80061bc:	4293      	cmp	r3, r2
 80061be:	d004      	beq.n	80061ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80061c0:	687b      	ldr	r3, [r7, #4]
 80061c2:	681b      	ldr	r3, [r3, #0]
 80061c4:	4a15      	ldr	r2, [pc, #84]	@ (800621c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80061c6:	4293      	cmp	r3, r2
 80061c8:	d10c      	bne.n	80061e4 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80061ca:	68bb      	ldr	r3, [r7, #8]
 80061cc:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80061d0:	60bb      	str	r3, [r7, #8]
 80061d2:	683b      	ldr	r3, [r7, #0]
 80061d4:	685b      	ldr	r3, [r3, #4]
 80061d6:	68ba      	ldr	r2, [r7, #8]
 80061d8:	4313      	orrs	r3, r2
 80061da:	60bb      	str	r3, [r7, #8]
 80061dc:	687b      	ldr	r3, [r7, #4]
 80061de:	681b      	ldr	r3, [r3, #0]
 80061e0:	68ba      	ldr	r2, [r7, #8]
 80061e2:	609a      	str	r2, [r3, #8]
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	2201      	movs	r2, #1
 80061e8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80061ec:	687b      	ldr	r3, [r7, #4]
 80061ee:	2200      	movs	r2, #0
 80061f0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80061f4:	2300      	movs	r3, #0
 80061f6:	4618      	mov	r0, r3
 80061f8:	3714      	adds	r7, #20
 80061fa:	46bd      	mov	sp, r7
 80061fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006200:	4770      	bx	lr
 8006202:	bf00      	nop
 8006204:	40010000 	.word	0x40010000
 8006208:	40000400 	.word	0x40000400
 800620c:	40000800 	.word	0x40000800
 8006210:	40000c00 	.word	0x40000c00
 8006214:	40010400 	.word	0x40010400
 8006218:	40014000 	.word	0x40014000
 800621c:	40001800 	.word	0x40001800

08006220 <HAL_TIMEx_CommutCallback>:
 8006220:	b480      	push	{r7}
 8006222:	b083      	sub	sp, #12
 8006224:	af00      	add	r7, sp, #0
 8006226:	6078      	str	r0, [r7, #4]
 8006228:	bf00      	nop
 800622a:	370c      	adds	r7, #12
 800622c:	46bd      	mov	sp, r7
 800622e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006232:	4770      	bx	lr

08006234 <HAL_TIMEx_BreakCallback>:
 8006234:	b480      	push	{r7}
 8006236:	b083      	sub	sp, #12
 8006238:	af00      	add	r7, sp, #0
 800623a:	6078      	str	r0, [r7, #4]
 800623c:	bf00      	nop
 800623e:	370c      	adds	r7, #12
 8006240:	46bd      	mov	sp, r7
 8006242:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006246:	4770      	bx	lr

08006248 <memset>:
 8006248:	4402      	add	r2, r0
 800624a:	4603      	mov	r3, r0
 800624c:	4293      	cmp	r3, r2
 800624e:	d100      	bne.n	8006252 <memset+0xa>
 8006250:	4770      	bx	lr
 8006252:	f803 1b01 	strb.w	r1, [r3], #1
 8006256:	e7f9      	b.n	800624c <memset+0x4>

08006258 <__errno>:
 8006258:	4b01      	ldr	r3, [pc, #4]	@ (8006260 <__errno+0x8>)
 800625a:	6818      	ldr	r0, [r3, #0]
 800625c:	4770      	bx	lr
 800625e:	bf00      	nop
 8006260:	2000001c 	.word	0x2000001c

08006264 <__libc_init_array>:
 8006264:	b570      	push	{r4, r5, r6, lr}
 8006266:	4d0d      	ldr	r5, [pc, #52]	@ (800629c <__libc_init_array+0x38>)
 8006268:	4c0d      	ldr	r4, [pc, #52]	@ (80062a0 <__libc_init_array+0x3c>)
 800626a:	1b64      	subs	r4, r4, r5
 800626c:	10a4      	asrs	r4, r4, #2
 800626e:	2600      	movs	r6, #0
 8006270:	42a6      	cmp	r6, r4
 8006272:	d109      	bne.n	8006288 <__libc_init_array+0x24>
 8006274:	4d0b      	ldr	r5, [pc, #44]	@ (80062a4 <__libc_init_array+0x40>)
 8006276:	4c0c      	ldr	r4, [pc, #48]	@ (80062a8 <__libc_init_array+0x44>)
 8006278:	f000 fac0 	bl	80067fc <_init>
 800627c:	1b64      	subs	r4, r4, r5
 800627e:	10a4      	asrs	r4, r4, #2
 8006280:	2600      	movs	r6, #0
 8006282:	42a6      	cmp	r6, r4
 8006284:	d105      	bne.n	8006292 <__libc_init_array+0x2e>
 8006286:	bd70      	pop	{r4, r5, r6, pc}
 8006288:	f855 3b04 	ldr.w	r3, [r5], #4
 800628c:	4798      	blx	r3
 800628e:	3601      	adds	r6, #1
 8006290:	e7ee      	b.n	8006270 <__libc_init_array+0xc>
 8006292:	f855 3b04 	ldr.w	r3, [r5], #4
 8006296:	4798      	blx	r3
 8006298:	3601      	adds	r6, #1
 800629a:	e7f2      	b.n	8006282 <__libc_init_array+0x1e>
 800629c:	08006878 	.word	0x08006878
 80062a0:	08006878 	.word	0x08006878
 80062a4:	08006878 	.word	0x08006878
 80062a8:	0800687c 	.word	0x0800687c

080062ac <sqrt>:
 80062ac:	b538      	push	{r3, r4, r5, lr}
 80062ae:	ed2d 8b02 	vpush	{d8}
 80062b2:	ec55 4b10 	vmov	r4, r5, d0
 80062b6:	f000 f9c7 	bl	8006648 <__ieee754_sqrt>
 80062ba:	4622      	mov	r2, r4
 80062bc:	462b      	mov	r3, r5
 80062be:	4620      	mov	r0, r4
 80062c0:	4629      	mov	r1, r5
 80062c2:	eeb0 8a40 	vmov.f32	s16, s0
 80062c6:	eef0 8a60 	vmov.f32	s17, s1
 80062ca:	f7fa fbf3 	bl	8000ab4 <__aeabi_dcmpun>
 80062ce:	b990      	cbnz	r0, 80062f6 <sqrt+0x4a>
 80062d0:	2200      	movs	r2, #0
 80062d2:	2300      	movs	r3, #0
 80062d4:	4620      	mov	r0, r4
 80062d6:	4629      	mov	r1, r5
 80062d8:	f7fa fbc4 	bl	8000a64 <__aeabi_dcmplt>
 80062dc:	b158      	cbz	r0, 80062f6 <sqrt+0x4a>
 80062de:	f7ff ffbb 	bl	8006258 <__errno>
 80062e2:	2321      	movs	r3, #33	@ 0x21
 80062e4:	6003      	str	r3, [r0, #0]
 80062e6:	2200      	movs	r2, #0
 80062e8:	2300      	movs	r3, #0
 80062ea:	4610      	mov	r0, r2
 80062ec:	4619      	mov	r1, r3
 80062ee:	f7fa fa71 	bl	80007d4 <__aeabi_ddiv>
 80062f2:	ec41 0b18 	vmov	d8, r0, r1
 80062f6:	eeb0 0a48 	vmov.f32	s0, s16
 80062fa:	eef0 0a68 	vmov.f32	s1, s17
 80062fe:	ecbd 8b02 	vpop	{d8}
 8006302:	bd38      	pop	{r3, r4, r5, pc}
 8006304:	0000      	movs	r0, r0
	...

08006308 <atan>:
 8006308:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800630c:	ec55 4b10 	vmov	r4, r5, d0
 8006310:	4bbf      	ldr	r3, [pc, #764]	@ (8006610 <atan+0x308>)
 8006312:	f025 4600 	bic.w	r6, r5, #2147483648	@ 0x80000000
 8006316:	429e      	cmp	r6, r3
 8006318:	46ab      	mov	fp, r5
 800631a:	d918      	bls.n	800634e <atan+0x46>
 800631c:	4bbd      	ldr	r3, [pc, #756]	@ (8006614 <atan+0x30c>)
 800631e:	429e      	cmp	r6, r3
 8006320:	d801      	bhi.n	8006326 <atan+0x1e>
 8006322:	d109      	bne.n	8006338 <atan+0x30>
 8006324:	b144      	cbz	r4, 8006338 <atan+0x30>
 8006326:	4622      	mov	r2, r4
 8006328:	462b      	mov	r3, r5
 800632a:	4620      	mov	r0, r4
 800632c:	4629      	mov	r1, r5
 800632e:	f7f9 ff71 	bl	8000214 <__adddf3>
 8006332:	4604      	mov	r4, r0
 8006334:	460d      	mov	r5, r1
 8006336:	e006      	b.n	8006346 <atan+0x3e>
 8006338:	f1bb 0f00 	cmp.w	fp, #0
 800633c:	f340 812b 	ble.w	8006596 <atan+0x28e>
 8006340:	a597      	add	r5, pc, #604	@ (adr r5, 80065a0 <atan+0x298>)
 8006342:	e9d5 4500 	ldrd	r4, r5, [r5]
 8006346:	ec45 4b10 	vmov	d0, r4, r5
 800634a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800634e:	4bb2      	ldr	r3, [pc, #712]	@ (8006618 <atan+0x310>)
 8006350:	429e      	cmp	r6, r3
 8006352:	d813      	bhi.n	800637c <atan+0x74>
 8006354:	f1a3 73de 	sub.w	r3, r3, #29097984	@ 0x1bc0000
 8006358:	429e      	cmp	r6, r3
 800635a:	d80c      	bhi.n	8006376 <atan+0x6e>
 800635c:	a392      	add	r3, pc, #584	@ (adr r3, 80065a8 <atan+0x2a0>)
 800635e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006362:	4620      	mov	r0, r4
 8006364:	4629      	mov	r1, r5
 8006366:	f7f9 ff55 	bl	8000214 <__adddf3>
 800636a:	4bac      	ldr	r3, [pc, #688]	@ (800661c <atan+0x314>)
 800636c:	2200      	movs	r2, #0
 800636e:	f7fa fb97 	bl	8000aa0 <__aeabi_dcmpgt>
 8006372:	2800      	cmp	r0, #0
 8006374:	d1e7      	bne.n	8006346 <atan+0x3e>
 8006376:	f04f 3aff 	mov.w	sl, #4294967295
 800637a:	e029      	b.n	80063d0 <atan+0xc8>
 800637c:	f000 f95c 	bl	8006638 <fabs>
 8006380:	4ba7      	ldr	r3, [pc, #668]	@ (8006620 <atan+0x318>)
 8006382:	429e      	cmp	r6, r3
 8006384:	ec55 4b10 	vmov	r4, r5, d0
 8006388:	f200 80bc 	bhi.w	8006504 <atan+0x1fc>
 800638c:	f5a3 2350 	sub.w	r3, r3, #851968	@ 0xd0000
 8006390:	429e      	cmp	r6, r3
 8006392:	f200 809e 	bhi.w	80064d2 <atan+0x1ca>
 8006396:	4622      	mov	r2, r4
 8006398:	462b      	mov	r3, r5
 800639a:	4620      	mov	r0, r4
 800639c:	4629      	mov	r1, r5
 800639e:	f7f9 ff39 	bl	8000214 <__adddf3>
 80063a2:	4b9e      	ldr	r3, [pc, #632]	@ (800661c <atan+0x314>)
 80063a4:	2200      	movs	r2, #0
 80063a6:	f7f9 ff33 	bl	8000210 <__aeabi_dsub>
 80063aa:	2200      	movs	r2, #0
 80063ac:	4606      	mov	r6, r0
 80063ae:	460f      	mov	r7, r1
 80063b0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80063b4:	4620      	mov	r0, r4
 80063b6:	4629      	mov	r1, r5
 80063b8:	f7f9 ff2c 	bl	8000214 <__adddf3>
 80063bc:	4602      	mov	r2, r0
 80063be:	460b      	mov	r3, r1
 80063c0:	4630      	mov	r0, r6
 80063c2:	4639      	mov	r1, r7
 80063c4:	f7fa fa06 	bl	80007d4 <__aeabi_ddiv>
 80063c8:	f04f 0a00 	mov.w	sl, #0
 80063cc:	4604      	mov	r4, r0
 80063ce:	460d      	mov	r5, r1
 80063d0:	4622      	mov	r2, r4
 80063d2:	462b      	mov	r3, r5
 80063d4:	4620      	mov	r0, r4
 80063d6:	4629      	mov	r1, r5
 80063d8:	f7fa f8d2 	bl	8000580 <__aeabi_dmul>
 80063dc:	4602      	mov	r2, r0
 80063de:	460b      	mov	r3, r1
 80063e0:	4680      	mov	r8, r0
 80063e2:	4689      	mov	r9, r1
 80063e4:	f7fa f8cc 	bl	8000580 <__aeabi_dmul>
 80063e8:	a371      	add	r3, pc, #452	@ (adr r3, 80065b0 <atan+0x2a8>)
 80063ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063ee:	4606      	mov	r6, r0
 80063f0:	460f      	mov	r7, r1
 80063f2:	f7fa f8c5 	bl	8000580 <__aeabi_dmul>
 80063f6:	a370      	add	r3, pc, #448	@ (adr r3, 80065b8 <atan+0x2b0>)
 80063f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063fc:	f7f9 ff0a 	bl	8000214 <__adddf3>
 8006400:	4632      	mov	r2, r6
 8006402:	463b      	mov	r3, r7
 8006404:	f7fa f8bc 	bl	8000580 <__aeabi_dmul>
 8006408:	a36d      	add	r3, pc, #436	@ (adr r3, 80065c0 <atan+0x2b8>)
 800640a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800640e:	f7f9 ff01 	bl	8000214 <__adddf3>
 8006412:	4632      	mov	r2, r6
 8006414:	463b      	mov	r3, r7
 8006416:	f7fa f8b3 	bl	8000580 <__aeabi_dmul>
 800641a:	a36b      	add	r3, pc, #428	@ (adr r3, 80065c8 <atan+0x2c0>)
 800641c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006420:	f7f9 fef8 	bl	8000214 <__adddf3>
 8006424:	4632      	mov	r2, r6
 8006426:	463b      	mov	r3, r7
 8006428:	f7fa f8aa 	bl	8000580 <__aeabi_dmul>
 800642c:	a368      	add	r3, pc, #416	@ (adr r3, 80065d0 <atan+0x2c8>)
 800642e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006432:	f7f9 feef 	bl	8000214 <__adddf3>
 8006436:	4632      	mov	r2, r6
 8006438:	463b      	mov	r3, r7
 800643a:	f7fa f8a1 	bl	8000580 <__aeabi_dmul>
 800643e:	a366      	add	r3, pc, #408	@ (adr r3, 80065d8 <atan+0x2d0>)
 8006440:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006444:	f7f9 fee6 	bl	8000214 <__adddf3>
 8006448:	4642      	mov	r2, r8
 800644a:	464b      	mov	r3, r9
 800644c:	f7fa f898 	bl	8000580 <__aeabi_dmul>
 8006450:	a363      	add	r3, pc, #396	@ (adr r3, 80065e0 <atan+0x2d8>)
 8006452:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006456:	4680      	mov	r8, r0
 8006458:	4689      	mov	r9, r1
 800645a:	4630      	mov	r0, r6
 800645c:	4639      	mov	r1, r7
 800645e:	f7fa f88f 	bl	8000580 <__aeabi_dmul>
 8006462:	a361      	add	r3, pc, #388	@ (adr r3, 80065e8 <atan+0x2e0>)
 8006464:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006468:	f7f9 fed2 	bl	8000210 <__aeabi_dsub>
 800646c:	4632      	mov	r2, r6
 800646e:	463b      	mov	r3, r7
 8006470:	f7fa f886 	bl	8000580 <__aeabi_dmul>
 8006474:	a35e      	add	r3, pc, #376	@ (adr r3, 80065f0 <atan+0x2e8>)
 8006476:	e9d3 2300 	ldrd	r2, r3, [r3]
 800647a:	f7f9 fec9 	bl	8000210 <__aeabi_dsub>
 800647e:	4632      	mov	r2, r6
 8006480:	463b      	mov	r3, r7
 8006482:	f7fa f87d 	bl	8000580 <__aeabi_dmul>
 8006486:	a35c      	add	r3, pc, #368	@ (adr r3, 80065f8 <atan+0x2f0>)
 8006488:	e9d3 2300 	ldrd	r2, r3, [r3]
 800648c:	f7f9 fec0 	bl	8000210 <__aeabi_dsub>
 8006490:	4632      	mov	r2, r6
 8006492:	463b      	mov	r3, r7
 8006494:	f7fa f874 	bl	8000580 <__aeabi_dmul>
 8006498:	a359      	add	r3, pc, #356	@ (adr r3, 8006600 <atan+0x2f8>)
 800649a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800649e:	f7f9 feb7 	bl	8000210 <__aeabi_dsub>
 80064a2:	4632      	mov	r2, r6
 80064a4:	463b      	mov	r3, r7
 80064a6:	f7fa f86b 	bl	8000580 <__aeabi_dmul>
 80064aa:	4602      	mov	r2, r0
 80064ac:	460b      	mov	r3, r1
 80064ae:	4640      	mov	r0, r8
 80064b0:	4649      	mov	r1, r9
 80064b2:	f7f9 feaf 	bl	8000214 <__adddf3>
 80064b6:	4622      	mov	r2, r4
 80064b8:	462b      	mov	r3, r5
 80064ba:	f7fa f861 	bl	8000580 <__aeabi_dmul>
 80064be:	f1ba 3fff 	cmp.w	sl, #4294967295
 80064c2:	4602      	mov	r2, r0
 80064c4:	460b      	mov	r3, r1
 80064c6:	d148      	bne.n	800655a <atan+0x252>
 80064c8:	4620      	mov	r0, r4
 80064ca:	4629      	mov	r1, r5
 80064cc:	f7f9 fea0 	bl	8000210 <__aeabi_dsub>
 80064d0:	e72f      	b.n	8006332 <atan+0x2a>
 80064d2:	4b52      	ldr	r3, [pc, #328]	@ (800661c <atan+0x314>)
 80064d4:	2200      	movs	r2, #0
 80064d6:	4620      	mov	r0, r4
 80064d8:	4629      	mov	r1, r5
 80064da:	f7f9 fe99 	bl	8000210 <__aeabi_dsub>
 80064de:	4b4f      	ldr	r3, [pc, #316]	@ (800661c <atan+0x314>)
 80064e0:	4606      	mov	r6, r0
 80064e2:	460f      	mov	r7, r1
 80064e4:	2200      	movs	r2, #0
 80064e6:	4620      	mov	r0, r4
 80064e8:	4629      	mov	r1, r5
 80064ea:	f7f9 fe93 	bl	8000214 <__adddf3>
 80064ee:	4602      	mov	r2, r0
 80064f0:	460b      	mov	r3, r1
 80064f2:	4630      	mov	r0, r6
 80064f4:	4639      	mov	r1, r7
 80064f6:	f7fa f96d 	bl	80007d4 <__aeabi_ddiv>
 80064fa:	f04f 0a01 	mov.w	sl, #1
 80064fe:	4604      	mov	r4, r0
 8006500:	460d      	mov	r5, r1
 8006502:	e765      	b.n	80063d0 <atan+0xc8>
 8006504:	4b47      	ldr	r3, [pc, #284]	@ (8006624 <atan+0x31c>)
 8006506:	429e      	cmp	r6, r3
 8006508:	d21c      	bcs.n	8006544 <atan+0x23c>
 800650a:	4b47      	ldr	r3, [pc, #284]	@ (8006628 <atan+0x320>)
 800650c:	2200      	movs	r2, #0
 800650e:	4620      	mov	r0, r4
 8006510:	4629      	mov	r1, r5
 8006512:	f7f9 fe7d 	bl	8000210 <__aeabi_dsub>
 8006516:	4b44      	ldr	r3, [pc, #272]	@ (8006628 <atan+0x320>)
 8006518:	4606      	mov	r6, r0
 800651a:	460f      	mov	r7, r1
 800651c:	2200      	movs	r2, #0
 800651e:	4620      	mov	r0, r4
 8006520:	4629      	mov	r1, r5
 8006522:	f7fa f82d 	bl	8000580 <__aeabi_dmul>
 8006526:	4b3d      	ldr	r3, [pc, #244]	@ (800661c <atan+0x314>)
 8006528:	2200      	movs	r2, #0
 800652a:	f7f9 fe73 	bl	8000214 <__adddf3>
 800652e:	4602      	mov	r2, r0
 8006530:	460b      	mov	r3, r1
 8006532:	4630      	mov	r0, r6
 8006534:	4639      	mov	r1, r7
 8006536:	f7fa f94d 	bl	80007d4 <__aeabi_ddiv>
 800653a:	f04f 0a02 	mov.w	sl, #2
 800653e:	4604      	mov	r4, r0
 8006540:	460d      	mov	r5, r1
 8006542:	e745      	b.n	80063d0 <atan+0xc8>
 8006544:	4622      	mov	r2, r4
 8006546:	462b      	mov	r3, r5
 8006548:	4938      	ldr	r1, [pc, #224]	@ (800662c <atan+0x324>)
 800654a:	2000      	movs	r0, #0
 800654c:	f7fa f942 	bl	80007d4 <__aeabi_ddiv>
 8006550:	f04f 0a03 	mov.w	sl, #3
 8006554:	4604      	mov	r4, r0
 8006556:	460d      	mov	r5, r1
 8006558:	e73a      	b.n	80063d0 <atan+0xc8>
 800655a:	4b35      	ldr	r3, [pc, #212]	@ (8006630 <atan+0x328>)
 800655c:	4e35      	ldr	r6, [pc, #212]	@ (8006634 <atan+0x32c>)
 800655e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8006562:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006566:	f7f9 fe53 	bl	8000210 <__aeabi_dsub>
 800656a:	4622      	mov	r2, r4
 800656c:	462b      	mov	r3, r5
 800656e:	f7f9 fe4f 	bl	8000210 <__aeabi_dsub>
 8006572:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 8006576:	4602      	mov	r2, r0
 8006578:	460b      	mov	r3, r1
 800657a:	e9d6 0100 	ldrd	r0, r1, [r6]
 800657e:	f7f9 fe47 	bl	8000210 <__aeabi_dsub>
 8006582:	f1bb 0f00 	cmp.w	fp, #0
 8006586:	4604      	mov	r4, r0
 8006588:	460d      	mov	r5, r1
 800658a:	f6bf aedc 	bge.w	8006346 <atan+0x3e>
 800658e:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8006592:	461d      	mov	r5, r3
 8006594:	e6d7      	b.n	8006346 <atan+0x3e>
 8006596:	a51c      	add	r5, pc, #112	@ (adr r5, 8006608 <atan+0x300>)
 8006598:	e9d5 4500 	ldrd	r4, r5, [r5]
 800659c:	e6d3      	b.n	8006346 <atan+0x3e>
 800659e:	bf00      	nop
 80065a0:	54442d18 	.word	0x54442d18
 80065a4:	3ff921fb 	.word	0x3ff921fb
 80065a8:	8800759c 	.word	0x8800759c
 80065ac:	7e37e43c 	.word	0x7e37e43c
 80065b0:	e322da11 	.word	0xe322da11
 80065b4:	3f90ad3a 	.word	0x3f90ad3a
 80065b8:	24760deb 	.word	0x24760deb
 80065bc:	3fa97b4b 	.word	0x3fa97b4b
 80065c0:	a0d03d51 	.word	0xa0d03d51
 80065c4:	3fb10d66 	.word	0x3fb10d66
 80065c8:	c54c206e 	.word	0xc54c206e
 80065cc:	3fb745cd 	.word	0x3fb745cd
 80065d0:	920083ff 	.word	0x920083ff
 80065d4:	3fc24924 	.word	0x3fc24924
 80065d8:	5555550d 	.word	0x5555550d
 80065dc:	3fd55555 	.word	0x3fd55555
 80065e0:	2c6a6c2f 	.word	0x2c6a6c2f
 80065e4:	bfa2b444 	.word	0xbfa2b444
 80065e8:	52defd9a 	.word	0x52defd9a
 80065ec:	3fadde2d 	.word	0x3fadde2d
 80065f0:	af749a6d 	.word	0xaf749a6d
 80065f4:	3fb3b0f2 	.word	0x3fb3b0f2
 80065f8:	fe231671 	.word	0xfe231671
 80065fc:	3fbc71c6 	.word	0x3fbc71c6
 8006600:	9998ebc4 	.word	0x9998ebc4
 8006604:	3fc99999 	.word	0x3fc99999
 8006608:	54442d18 	.word	0x54442d18
 800660c:	bff921fb 	.word	0xbff921fb
 8006610:	440fffff 	.word	0x440fffff
 8006614:	7ff00000 	.word	0x7ff00000
 8006618:	3fdbffff 	.word	0x3fdbffff
 800661c:	3ff00000 	.word	0x3ff00000
 8006620:	3ff2ffff 	.word	0x3ff2ffff
 8006624:	40038000 	.word	0x40038000
 8006628:	3ff80000 	.word	0x3ff80000
 800662c:	bff00000 	.word	0xbff00000
 8006630:	08006830 	.word	0x08006830
 8006634:	08006850 	.word	0x08006850

08006638 <fabs>:
 8006638:	ec51 0b10 	vmov	r0, r1, d0
 800663c:	4602      	mov	r2, r0
 800663e:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8006642:	ec43 2b10 	vmov	d0, r2, r3
 8006646:	4770      	bx	lr

08006648 <__ieee754_sqrt>:
 8006648:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800664c:	4a68      	ldr	r2, [pc, #416]	@ (80067f0 <__ieee754_sqrt+0x1a8>)
 800664e:	ec55 4b10 	vmov	r4, r5, d0
 8006652:	43aa      	bics	r2, r5
 8006654:	462b      	mov	r3, r5
 8006656:	4621      	mov	r1, r4
 8006658:	d110      	bne.n	800667c <__ieee754_sqrt+0x34>
 800665a:	4622      	mov	r2, r4
 800665c:	4620      	mov	r0, r4
 800665e:	4629      	mov	r1, r5
 8006660:	f7f9 ff8e 	bl	8000580 <__aeabi_dmul>
 8006664:	4602      	mov	r2, r0
 8006666:	460b      	mov	r3, r1
 8006668:	4620      	mov	r0, r4
 800666a:	4629      	mov	r1, r5
 800666c:	f7f9 fdd2 	bl	8000214 <__adddf3>
 8006670:	4604      	mov	r4, r0
 8006672:	460d      	mov	r5, r1
 8006674:	ec45 4b10 	vmov	d0, r4, r5
 8006678:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800667c:	2d00      	cmp	r5, #0
 800667e:	dc0e      	bgt.n	800669e <__ieee754_sqrt+0x56>
 8006680:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 8006684:	4322      	orrs	r2, r4
 8006686:	d0f5      	beq.n	8006674 <__ieee754_sqrt+0x2c>
 8006688:	b19d      	cbz	r5, 80066b2 <__ieee754_sqrt+0x6a>
 800668a:	4622      	mov	r2, r4
 800668c:	4620      	mov	r0, r4
 800668e:	4629      	mov	r1, r5
 8006690:	f7f9 fdbe 	bl	8000210 <__aeabi_dsub>
 8006694:	4602      	mov	r2, r0
 8006696:	460b      	mov	r3, r1
 8006698:	f7fa f89c 	bl	80007d4 <__aeabi_ddiv>
 800669c:	e7e8      	b.n	8006670 <__ieee754_sqrt+0x28>
 800669e:	152a      	asrs	r2, r5, #20
 80066a0:	d115      	bne.n	80066ce <__ieee754_sqrt+0x86>
 80066a2:	2000      	movs	r0, #0
 80066a4:	e009      	b.n	80066ba <__ieee754_sqrt+0x72>
 80066a6:	0acb      	lsrs	r3, r1, #11
 80066a8:	3a15      	subs	r2, #21
 80066aa:	0549      	lsls	r1, r1, #21
 80066ac:	2b00      	cmp	r3, #0
 80066ae:	d0fa      	beq.n	80066a6 <__ieee754_sqrt+0x5e>
 80066b0:	e7f7      	b.n	80066a2 <__ieee754_sqrt+0x5a>
 80066b2:	462a      	mov	r2, r5
 80066b4:	e7fa      	b.n	80066ac <__ieee754_sqrt+0x64>
 80066b6:	005b      	lsls	r3, r3, #1
 80066b8:	3001      	adds	r0, #1
 80066ba:	02dc      	lsls	r4, r3, #11
 80066bc:	d5fb      	bpl.n	80066b6 <__ieee754_sqrt+0x6e>
 80066be:	1e44      	subs	r4, r0, #1
 80066c0:	1b12      	subs	r2, r2, r4
 80066c2:	f1c0 0420 	rsb	r4, r0, #32
 80066c6:	fa21 f404 	lsr.w	r4, r1, r4
 80066ca:	4323      	orrs	r3, r4
 80066cc:	4081      	lsls	r1, r0
 80066ce:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80066d2:	f2a2 35ff 	subw	r5, r2, #1023	@ 0x3ff
 80066d6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80066da:	07d2      	lsls	r2, r2, #31
 80066dc:	bf5c      	itt	pl
 80066de:	005b      	lslpl	r3, r3, #1
 80066e0:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 80066e4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80066e8:	bf58      	it	pl
 80066ea:	0049      	lslpl	r1, r1, #1
 80066ec:	2600      	movs	r6, #0
 80066ee:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 80066f2:	106d      	asrs	r5, r5, #1
 80066f4:	0049      	lsls	r1, r1, #1
 80066f6:	2016      	movs	r0, #22
 80066f8:	4632      	mov	r2, r6
 80066fa:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 80066fe:	1917      	adds	r7, r2, r4
 8006700:	429f      	cmp	r7, r3
 8006702:	bfde      	ittt	le
 8006704:	193a      	addle	r2, r7, r4
 8006706:	1bdb      	suble	r3, r3, r7
 8006708:	1936      	addle	r6, r6, r4
 800670a:	0fcf      	lsrs	r7, r1, #31
 800670c:	3801      	subs	r0, #1
 800670e:	eb07 0343 	add.w	r3, r7, r3, lsl #1
 8006712:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8006716:	ea4f 0454 	mov.w	r4, r4, lsr #1
 800671a:	d1f0      	bne.n	80066fe <__ieee754_sqrt+0xb6>
 800671c:	4604      	mov	r4, r0
 800671e:	2720      	movs	r7, #32
 8006720:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8006724:	429a      	cmp	r2, r3
 8006726:	eb00 0e0c 	add.w	lr, r0, ip
 800672a:	db02      	blt.n	8006732 <__ieee754_sqrt+0xea>
 800672c:	d113      	bne.n	8006756 <__ieee754_sqrt+0x10e>
 800672e:	458e      	cmp	lr, r1
 8006730:	d811      	bhi.n	8006756 <__ieee754_sqrt+0x10e>
 8006732:	f1be 0f00 	cmp.w	lr, #0
 8006736:	eb0e 000c 	add.w	r0, lr, ip
 800673a:	da42      	bge.n	80067c2 <__ieee754_sqrt+0x17a>
 800673c:	2800      	cmp	r0, #0
 800673e:	db40      	blt.n	80067c2 <__ieee754_sqrt+0x17a>
 8006740:	f102 0801 	add.w	r8, r2, #1
 8006744:	1a9b      	subs	r3, r3, r2
 8006746:	458e      	cmp	lr, r1
 8006748:	bf88      	it	hi
 800674a:	f103 33ff 	addhi.w	r3, r3, #4294967295
 800674e:	eba1 010e 	sub.w	r1, r1, lr
 8006752:	4464      	add	r4, ip
 8006754:	4642      	mov	r2, r8
 8006756:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 800675a:	3f01      	subs	r7, #1
 800675c:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8006760:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8006764:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8006768:	d1dc      	bne.n	8006724 <__ieee754_sqrt+0xdc>
 800676a:	4319      	orrs	r1, r3
 800676c:	d01b      	beq.n	80067a6 <__ieee754_sqrt+0x15e>
 800676e:	f8df a084 	ldr.w	sl, [pc, #132]	@ 80067f4 <__ieee754_sqrt+0x1ac>
 8006772:	f8df b084 	ldr.w	fp, [pc, #132]	@ 80067f8 <__ieee754_sqrt+0x1b0>
 8006776:	e9da 0100 	ldrd	r0, r1, [sl]
 800677a:	e9db 2300 	ldrd	r2, r3, [fp]
 800677e:	f7f9 fd47 	bl	8000210 <__aeabi_dsub>
 8006782:	e9da 8900 	ldrd	r8, r9, [sl]
 8006786:	4602      	mov	r2, r0
 8006788:	460b      	mov	r3, r1
 800678a:	4640      	mov	r0, r8
 800678c:	4649      	mov	r1, r9
 800678e:	f7fa f973 	bl	8000a78 <__aeabi_dcmple>
 8006792:	b140      	cbz	r0, 80067a6 <__ieee754_sqrt+0x15e>
 8006794:	f1b4 3fff 	cmp.w	r4, #4294967295
 8006798:	e9da 0100 	ldrd	r0, r1, [sl]
 800679c:	e9db 2300 	ldrd	r2, r3, [fp]
 80067a0:	d111      	bne.n	80067c6 <__ieee754_sqrt+0x17e>
 80067a2:	3601      	adds	r6, #1
 80067a4:	463c      	mov	r4, r7
 80067a6:	1072      	asrs	r2, r6, #1
 80067a8:	0863      	lsrs	r3, r4, #1
 80067aa:	07f1      	lsls	r1, r6, #31
 80067ac:	f102 527f 	add.w	r2, r2, #1069547520	@ 0x3fc00000
 80067b0:	f502 1200 	add.w	r2, r2, #2097152	@ 0x200000
 80067b4:	bf48      	it	mi
 80067b6:	f043 4300 	orrmi.w	r3, r3, #2147483648	@ 0x80000000
 80067ba:	eb02 5105 	add.w	r1, r2, r5, lsl #20
 80067be:	4618      	mov	r0, r3
 80067c0:	e756      	b.n	8006670 <__ieee754_sqrt+0x28>
 80067c2:	4690      	mov	r8, r2
 80067c4:	e7be      	b.n	8006744 <__ieee754_sqrt+0xfc>
 80067c6:	f7f9 fd25 	bl	8000214 <__adddf3>
 80067ca:	e9da 8900 	ldrd	r8, r9, [sl]
 80067ce:	4602      	mov	r2, r0
 80067d0:	460b      	mov	r3, r1
 80067d2:	4640      	mov	r0, r8
 80067d4:	4649      	mov	r1, r9
 80067d6:	f7fa f945 	bl	8000a64 <__aeabi_dcmplt>
 80067da:	b120      	cbz	r0, 80067e6 <__ieee754_sqrt+0x19e>
 80067dc:	1ca0      	adds	r0, r4, #2
 80067de:	bf08      	it	eq
 80067e0:	3601      	addeq	r6, #1
 80067e2:	3402      	adds	r4, #2
 80067e4:	e7df      	b.n	80067a6 <__ieee754_sqrt+0x15e>
 80067e6:	1c63      	adds	r3, r4, #1
 80067e8:	f023 0401 	bic.w	r4, r3, #1
 80067ec:	e7db      	b.n	80067a6 <__ieee754_sqrt+0x15e>
 80067ee:	bf00      	nop
 80067f0:	7ff00000 	.word	0x7ff00000
 80067f4:	20000078 	.word	0x20000078
 80067f8:	20000070 	.word	0x20000070

080067fc <_init>:
 80067fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80067fe:	bf00      	nop
 8006800:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006802:	bc08      	pop	{r3}
 8006804:	469e      	mov	lr, r3
 8006806:	4770      	bx	lr

08006808 <_fini>:
 8006808:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800680a:	bf00      	nop
 800680c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800680e:	bc08      	pop	{r3}
 8006810:	469e      	mov	lr, r3
 8006812:	4770      	bx	lr
