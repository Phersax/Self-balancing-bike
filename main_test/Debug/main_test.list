
main_test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000062bc  080001c8  080001c8  000011c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000058  08006488  08006488  00007488  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080064e0  080064e0  00008098  2**0
                  CONTENTS
  4 .ARM          00000008  080064e0  080064e0  000074e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080064e8  080064e8  00008098  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080064e8  080064e8  000074e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080064ec  080064ec  000074ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000098  20000000  080064f0  00008000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000003ac  20000098  08006588  00008098  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000444  08006588  00008444  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00008098  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000f57d  00000000  00000000  000080c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002875  00000000  00000000  00017645  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000ec8  00000000  00000000  00019ec0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000b7b  00000000  00000000  0001ad88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00023129  00000000  00000000  0001b903  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00013e68  00000000  00000000  0003ea2c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000d18e3  00000000  00000000  00052894  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00124177  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004164  00000000  00000000  001241bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006c  00000000  00000000  00128320  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	@ (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	@ (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000098 	.word	0x20000098
 80001e4:	00000000 	.word	0x00000000
 80001e8:	0800646c 	.word	0x0800646c

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	@ (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	@ (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	@ (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	2000009c 	.word	0x2000009c
 8000204:	0800646c 	.word	0x0800646c

08000208 <__aeabi_drsub>:
 8000208:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 800020c:	e002      	b.n	8000214 <__adddf3>
 800020e:	bf00      	nop

08000210 <__aeabi_dsub>:
 8000210:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000214 <__adddf3>:
 8000214:	b530      	push	{r4, r5, lr}
 8000216:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800021a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800021e:	ea94 0f05 	teq	r4, r5
 8000222:	bf08      	it	eq
 8000224:	ea90 0f02 	teqeq	r0, r2
 8000228:	bf1f      	itttt	ne
 800022a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800022e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000232:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000236:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800023a:	f000 80e2 	beq.w	8000402 <__adddf3+0x1ee>
 800023e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000242:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000246:	bfb8      	it	lt
 8000248:	426d      	neglt	r5, r5
 800024a:	dd0c      	ble.n	8000266 <__adddf3+0x52>
 800024c:	442c      	add	r4, r5
 800024e:	ea80 0202 	eor.w	r2, r0, r2
 8000252:	ea81 0303 	eor.w	r3, r1, r3
 8000256:	ea82 0000 	eor.w	r0, r2, r0
 800025a:	ea83 0101 	eor.w	r1, r3, r1
 800025e:	ea80 0202 	eor.w	r2, r0, r2
 8000262:	ea81 0303 	eor.w	r3, r1, r3
 8000266:	2d36      	cmp	r5, #54	@ 0x36
 8000268:	bf88      	it	hi
 800026a:	bd30      	pophi	{r4, r5, pc}
 800026c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000270:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000274:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000278:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800027c:	d002      	beq.n	8000284 <__adddf3+0x70>
 800027e:	4240      	negs	r0, r0
 8000280:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000284:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000288:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800028c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000290:	d002      	beq.n	8000298 <__adddf3+0x84>
 8000292:	4252      	negs	r2, r2
 8000294:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000298:	ea94 0f05 	teq	r4, r5
 800029c:	f000 80a7 	beq.w	80003ee <__adddf3+0x1da>
 80002a0:	f1a4 0401 	sub.w	r4, r4, #1
 80002a4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002a8:	db0d      	blt.n	80002c6 <__adddf3+0xb2>
 80002aa:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002ae:	fa22 f205 	lsr.w	r2, r2, r5
 80002b2:	1880      	adds	r0, r0, r2
 80002b4:	f141 0100 	adc.w	r1, r1, #0
 80002b8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002bc:	1880      	adds	r0, r0, r2
 80002be:	fa43 f305 	asr.w	r3, r3, r5
 80002c2:	4159      	adcs	r1, r3
 80002c4:	e00e      	b.n	80002e4 <__adddf3+0xd0>
 80002c6:	f1a5 0520 	sub.w	r5, r5, #32
 80002ca:	f10e 0e20 	add.w	lr, lr, #32
 80002ce:	2a01      	cmp	r2, #1
 80002d0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002d4:	bf28      	it	cs
 80002d6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002da:	fa43 f305 	asr.w	r3, r3, r5
 80002de:	18c0      	adds	r0, r0, r3
 80002e0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002e4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80002e8:	d507      	bpl.n	80002fa <__adddf3+0xe6>
 80002ea:	f04f 0e00 	mov.w	lr, #0
 80002ee:	f1dc 0c00 	rsbs	ip, ip, #0
 80002f2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002f6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002fa:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80002fe:	d31b      	bcc.n	8000338 <__adddf3+0x124>
 8000300:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8000304:	d30c      	bcc.n	8000320 <__adddf3+0x10c>
 8000306:	0849      	lsrs	r1, r1, #1
 8000308:	ea5f 0030 	movs.w	r0, r0, rrx
 800030c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000310:	f104 0401 	add.w	r4, r4, #1
 8000314:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000318:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 800031c:	f080 809a 	bcs.w	8000454 <__adddf3+0x240>
 8000320:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000324:	bf08      	it	eq
 8000326:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800032a:	f150 0000 	adcs.w	r0, r0, #0
 800032e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000332:	ea41 0105 	orr.w	r1, r1, r5
 8000336:	bd30      	pop	{r4, r5, pc}
 8000338:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800033c:	4140      	adcs	r0, r0
 800033e:	eb41 0101 	adc.w	r1, r1, r1
 8000342:	3c01      	subs	r4, #1
 8000344:	bf28      	it	cs
 8000346:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800034a:	d2e9      	bcs.n	8000320 <__adddf3+0x10c>
 800034c:	f091 0f00 	teq	r1, #0
 8000350:	bf04      	itt	eq
 8000352:	4601      	moveq	r1, r0
 8000354:	2000      	moveq	r0, #0
 8000356:	fab1 f381 	clz	r3, r1
 800035a:	bf08      	it	eq
 800035c:	3320      	addeq	r3, #32
 800035e:	f1a3 030b 	sub.w	r3, r3, #11
 8000362:	f1b3 0220 	subs.w	r2, r3, #32
 8000366:	da0c      	bge.n	8000382 <__adddf3+0x16e>
 8000368:	320c      	adds	r2, #12
 800036a:	dd08      	ble.n	800037e <__adddf3+0x16a>
 800036c:	f102 0c14 	add.w	ip, r2, #20
 8000370:	f1c2 020c 	rsb	r2, r2, #12
 8000374:	fa01 f00c 	lsl.w	r0, r1, ip
 8000378:	fa21 f102 	lsr.w	r1, r1, r2
 800037c:	e00c      	b.n	8000398 <__adddf3+0x184>
 800037e:	f102 0214 	add.w	r2, r2, #20
 8000382:	bfd8      	it	le
 8000384:	f1c2 0c20 	rsble	ip, r2, #32
 8000388:	fa01 f102 	lsl.w	r1, r1, r2
 800038c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000390:	bfdc      	itt	le
 8000392:	ea41 010c 	orrle.w	r1, r1, ip
 8000396:	4090      	lslle	r0, r2
 8000398:	1ae4      	subs	r4, r4, r3
 800039a:	bfa2      	ittt	ge
 800039c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003a0:	4329      	orrge	r1, r5
 80003a2:	bd30      	popge	{r4, r5, pc}
 80003a4:	ea6f 0404 	mvn.w	r4, r4
 80003a8:	3c1f      	subs	r4, #31
 80003aa:	da1c      	bge.n	80003e6 <__adddf3+0x1d2>
 80003ac:	340c      	adds	r4, #12
 80003ae:	dc0e      	bgt.n	80003ce <__adddf3+0x1ba>
 80003b0:	f104 0414 	add.w	r4, r4, #20
 80003b4:	f1c4 0220 	rsb	r2, r4, #32
 80003b8:	fa20 f004 	lsr.w	r0, r0, r4
 80003bc:	fa01 f302 	lsl.w	r3, r1, r2
 80003c0:	ea40 0003 	orr.w	r0, r0, r3
 80003c4:	fa21 f304 	lsr.w	r3, r1, r4
 80003c8:	ea45 0103 	orr.w	r1, r5, r3
 80003cc:	bd30      	pop	{r4, r5, pc}
 80003ce:	f1c4 040c 	rsb	r4, r4, #12
 80003d2:	f1c4 0220 	rsb	r2, r4, #32
 80003d6:	fa20 f002 	lsr.w	r0, r0, r2
 80003da:	fa01 f304 	lsl.w	r3, r1, r4
 80003de:	ea40 0003 	orr.w	r0, r0, r3
 80003e2:	4629      	mov	r1, r5
 80003e4:	bd30      	pop	{r4, r5, pc}
 80003e6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ea:	4629      	mov	r1, r5
 80003ec:	bd30      	pop	{r4, r5, pc}
 80003ee:	f094 0f00 	teq	r4, #0
 80003f2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80003f6:	bf06      	itte	eq
 80003f8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80003fc:	3401      	addeq	r4, #1
 80003fe:	3d01      	subne	r5, #1
 8000400:	e74e      	b.n	80002a0 <__adddf3+0x8c>
 8000402:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000406:	bf18      	it	ne
 8000408:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800040c:	d029      	beq.n	8000462 <__adddf3+0x24e>
 800040e:	ea94 0f05 	teq	r4, r5
 8000412:	bf08      	it	eq
 8000414:	ea90 0f02 	teqeq	r0, r2
 8000418:	d005      	beq.n	8000426 <__adddf3+0x212>
 800041a:	ea54 0c00 	orrs.w	ip, r4, r0
 800041e:	bf04      	itt	eq
 8000420:	4619      	moveq	r1, r3
 8000422:	4610      	moveq	r0, r2
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	ea91 0f03 	teq	r1, r3
 800042a:	bf1e      	ittt	ne
 800042c:	2100      	movne	r1, #0
 800042e:	2000      	movne	r0, #0
 8000430:	bd30      	popne	{r4, r5, pc}
 8000432:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000436:	d105      	bne.n	8000444 <__adddf3+0x230>
 8000438:	0040      	lsls	r0, r0, #1
 800043a:	4149      	adcs	r1, r1
 800043c:	bf28      	it	cs
 800043e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000442:	bd30      	pop	{r4, r5, pc}
 8000444:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000448:	bf3c      	itt	cc
 800044a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800044e:	bd30      	popcc	{r4, r5, pc}
 8000450:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000454:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000458:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800045c:	f04f 0000 	mov.w	r0, #0
 8000460:	bd30      	pop	{r4, r5, pc}
 8000462:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000466:	bf1a      	itte	ne
 8000468:	4619      	movne	r1, r3
 800046a:	4610      	movne	r0, r2
 800046c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000470:	bf1c      	itt	ne
 8000472:	460b      	movne	r3, r1
 8000474:	4602      	movne	r2, r0
 8000476:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800047a:	bf06      	itte	eq
 800047c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000480:	ea91 0f03 	teqeq	r1, r3
 8000484:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000488:	bd30      	pop	{r4, r5, pc}
 800048a:	bf00      	nop

0800048c <__aeabi_ui2d>:
 800048c:	f090 0f00 	teq	r0, #0
 8000490:	bf04      	itt	eq
 8000492:	2100      	moveq	r1, #0
 8000494:	4770      	bxeq	lr
 8000496:	b530      	push	{r4, r5, lr}
 8000498:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800049c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004a0:	f04f 0500 	mov.w	r5, #0
 80004a4:	f04f 0100 	mov.w	r1, #0
 80004a8:	e750      	b.n	800034c <__adddf3+0x138>
 80004aa:	bf00      	nop

080004ac <__aeabi_i2d>:
 80004ac:	f090 0f00 	teq	r0, #0
 80004b0:	bf04      	itt	eq
 80004b2:	2100      	moveq	r1, #0
 80004b4:	4770      	bxeq	lr
 80004b6:	b530      	push	{r4, r5, lr}
 80004b8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004bc:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004c0:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80004c4:	bf48      	it	mi
 80004c6:	4240      	negmi	r0, r0
 80004c8:	f04f 0100 	mov.w	r1, #0
 80004cc:	e73e      	b.n	800034c <__adddf3+0x138>
 80004ce:	bf00      	nop

080004d0 <__aeabi_f2d>:
 80004d0:	0042      	lsls	r2, r0, #1
 80004d2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004d6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004da:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004de:	bf1f      	itttt	ne
 80004e0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80004e4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80004e8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80004ec:	4770      	bxne	lr
 80004ee:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80004f2:	bf08      	it	eq
 80004f4:	4770      	bxeq	lr
 80004f6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80004fa:	bf04      	itt	eq
 80004fc:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000500:	4770      	bxeq	lr
 8000502:	b530      	push	{r4, r5, lr}
 8000504:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000510:	e71c      	b.n	800034c <__adddf3+0x138>
 8000512:	bf00      	nop

08000514 <__aeabi_ul2d>:
 8000514:	ea50 0201 	orrs.w	r2, r0, r1
 8000518:	bf08      	it	eq
 800051a:	4770      	bxeq	lr
 800051c:	b530      	push	{r4, r5, lr}
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	e00a      	b.n	800053a <__aeabi_l2d+0x16>

08000524 <__aeabi_l2d>:
 8000524:	ea50 0201 	orrs.w	r2, r0, r1
 8000528:	bf08      	it	eq
 800052a:	4770      	bxeq	lr
 800052c:	b530      	push	{r4, r5, lr}
 800052e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000532:	d502      	bpl.n	800053a <__aeabi_l2d+0x16>
 8000534:	4240      	negs	r0, r0
 8000536:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800053a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800053e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000542:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000546:	f43f aed8 	beq.w	80002fa <__adddf3+0xe6>
 800054a:	f04f 0203 	mov.w	r2, #3
 800054e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000552:	bf18      	it	ne
 8000554:	3203      	addne	r2, #3
 8000556:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800055a:	bf18      	it	ne
 800055c:	3203      	addne	r2, #3
 800055e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000562:	f1c2 0320 	rsb	r3, r2, #32
 8000566:	fa00 fc03 	lsl.w	ip, r0, r3
 800056a:	fa20 f002 	lsr.w	r0, r0, r2
 800056e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000572:	ea40 000e 	orr.w	r0, r0, lr
 8000576:	fa21 f102 	lsr.w	r1, r1, r2
 800057a:	4414      	add	r4, r2
 800057c:	e6bd      	b.n	80002fa <__adddf3+0xe6>
 800057e:	bf00      	nop

08000580 <__aeabi_dmul>:
 8000580:	b570      	push	{r4, r5, r6, lr}
 8000582:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000586:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800058a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800058e:	bf1d      	ittte	ne
 8000590:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000594:	ea94 0f0c 	teqne	r4, ip
 8000598:	ea95 0f0c 	teqne	r5, ip
 800059c:	f000 f8de 	bleq	800075c <__aeabi_dmul+0x1dc>
 80005a0:	442c      	add	r4, r5
 80005a2:	ea81 0603 	eor.w	r6, r1, r3
 80005a6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005aa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005ae:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005b2:	bf18      	it	ne
 80005b4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005bc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80005c0:	d038      	beq.n	8000634 <__aeabi_dmul+0xb4>
 80005c2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005ce:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80005d2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005d6:	f04f 0600 	mov.w	r6, #0
 80005da:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005de:	f09c 0f00 	teq	ip, #0
 80005e2:	bf18      	it	ne
 80005e4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005e8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80005ec:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80005f0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80005f4:	d204      	bcs.n	8000600 <__aeabi_dmul+0x80>
 80005f6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005fa:	416d      	adcs	r5, r5
 80005fc:	eb46 0606 	adc.w	r6, r6, r6
 8000600:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000604:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000608:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800060c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000610:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000614:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000618:	bf88      	it	hi
 800061a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800061e:	d81e      	bhi.n	800065e <__aeabi_dmul+0xde>
 8000620:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000624:	bf08      	it	eq
 8000626:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800062a:	f150 0000 	adcs.w	r0, r0, #0
 800062e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000632:	bd70      	pop	{r4, r5, r6, pc}
 8000634:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000638:	ea46 0101 	orr.w	r1, r6, r1
 800063c:	ea40 0002 	orr.w	r0, r0, r2
 8000640:	ea81 0103 	eor.w	r1, r1, r3
 8000644:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000648:	bfc2      	ittt	gt
 800064a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800064e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000652:	bd70      	popgt	{r4, r5, r6, pc}
 8000654:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000658:	f04f 0e00 	mov.w	lr, #0
 800065c:	3c01      	subs	r4, #1
 800065e:	f300 80ab 	bgt.w	80007b8 <__aeabi_dmul+0x238>
 8000662:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000666:	bfde      	ittt	le
 8000668:	2000      	movle	r0, #0
 800066a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800066e:	bd70      	pople	{r4, r5, r6, pc}
 8000670:	f1c4 0400 	rsb	r4, r4, #0
 8000674:	3c20      	subs	r4, #32
 8000676:	da35      	bge.n	80006e4 <__aeabi_dmul+0x164>
 8000678:	340c      	adds	r4, #12
 800067a:	dc1b      	bgt.n	80006b4 <__aeabi_dmul+0x134>
 800067c:	f104 0414 	add.w	r4, r4, #20
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f305 	lsl.w	r3, r0, r5
 8000688:	fa20 f004 	lsr.w	r0, r0, r4
 800068c:	fa01 f205 	lsl.w	r2, r1, r5
 8000690:	ea40 0002 	orr.w	r0, r0, r2
 8000694:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000698:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800069c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a0:	fa21 f604 	lsr.w	r6, r1, r4
 80006a4:	eb42 0106 	adc.w	r1, r2, r6
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 040c 	rsb	r4, r4, #12
 80006b8:	f1c4 0520 	rsb	r5, r4, #32
 80006bc:	fa00 f304 	lsl.w	r3, r0, r4
 80006c0:	fa20 f005 	lsr.w	r0, r0, r5
 80006c4:	fa01 f204 	lsl.w	r2, r1, r4
 80006c8:	ea40 0002 	orr.w	r0, r0, r2
 80006cc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006d4:	f141 0100 	adc.w	r1, r1, #0
 80006d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006dc:	bf08      	it	eq
 80006de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f1c4 0520 	rsb	r5, r4, #32
 80006e8:	fa00 f205 	lsl.w	r2, r0, r5
 80006ec:	ea4e 0e02 	orr.w	lr, lr, r2
 80006f0:	fa20 f304 	lsr.w	r3, r0, r4
 80006f4:	fa01 f205 	lsl.w	r2, r1, r5
 80006f8:	ea43 0302 	orr.w	r3, r3, r2
 80006fc:	fa21 f004 	lsr.w	r0, r1, r4
 8000700:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000704:	fa21 f204 	lsr.w	r2, r1, r4
 8000708:	ea20 0002 	bic.w	r0, r0, r2
 800070c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000710:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000714:	bf08      	it	eq
 8000716:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800071a:	bd70      	pop	{r4, r5, r6, pc}
 800071c:	f094 0f00 	teq	r4, #0
 8000720:	d10f      	bne.n	8000742 <__aeabi_dmul+0x1c2>
 8000722:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000726:	0040      	lsls	r0, r0, #1
 8000728:	eb41 0101 	adc.w	r1, r1, r1
 800072c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000730:	bf08      	it	eq
 8000732:	3c01      	subeq	r4, #1
 8000734:	d0f7      	beq.n	8000726 <__aeabi_dmul+0x1a6>
 8000736:	ea41 0106 	orr.w	r1, r1, r6
 800073a:	f095 0f00 	teq	r5, #0
 800073e:	bf18      	it	ne
 8000740:	4770      	bxne	lr
 8000742:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000746:	0052      	lsls	r2, r2, #1
 8000748:	eb43 0303 	adc.w	r3, r3, r3
 800074c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000750:	bf08      	it	eq
 8000752:	3d01      	subeq	r5, #1
 8000754:	d0f7      	beq.n	8000746 <__aeabi_dmul+0x1c6>
 8000756:	ea43 0306 	orr.w	r3, r3, r6
 800075a:	4770      	bx	lr
 800075c:	ea94 0f0c 	teq	r4, ip
 8000760:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000764:	bf18      	it	ne
 8000766:	ea95 0f0c 	teqne	r5, ip
 800076a:	d00c      	beq.n	8000786 <__aeabi_dmul+0x206>
 800076c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000770:	bf18      	it	ne
 8000772:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000776:	d1d1      	bne.n	800071c <__aeabi_dmul+0x19c>
 8000778:	ea81 0103 	eor.w	r1, r1, r3
 800077c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000780:	f04f 0000 	mov.w	r0, #0
 8000784:	bd70      	pop	{r4, r5, r6, pc}
 8000786:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800078a:	bf06      	itte	eq
 800078c:	4610      	moveq	r0, r2
 800078e:	4619      	moveq	r1, r3
 8000790:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000794:	d019      	beq.n	80007ca <__aeabi_dmul+0x24a>
 8000796:	ea94 0f0c 	teq	r4, ip
 800079a:	d102      	bne.n	80007a2 <__aeabi_dmul+0x222>
 800079c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007a0:	d113      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007a2:	ea95 0f0c 	teq	r5, ip
 80007a6:	d105      	bne.n	80007b4 <__aeabi_dmul+0x234>
 80007a8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007ac:	bf1c      	itt	ne
 80007ae:	4610      	movne	r0, r2
 80007b0:	4619      	movne	r1, r3
 80007b2:	d10a      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007b4:	ea81 0103 	eor.w	r1, r1, r3
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007c0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80007c4:	f04f 0000 	mov.w	r0, #0
 80007c8:	bd70      	pop	{r4, r5, r6, pc}
 80007ca:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007ce:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80007d2:	bd70      	pop	{r4, r5, r6, pc}

080007d4 <__aeabi_ddiv>:
 80007d4:	b570      	push	{r4, r5, r6, lr}
 80007d6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80007da:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80007de:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007e2:	bf1d      	ittte	ne
 80007e4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007e8:	ea94 0f0c 	teqne	r4, ip
 80007ec:	ea95 0f0c 	teqne	r5, ip
 80007f0:	f000 f8a7 	bleq	8000942 <__aeabi_ddiv+0x16e>
 80007f4:	eba4 0405 	sub.w	r4, r4, r5
 80007f8:	ea81 0e03 	eor.w	lr, r1, r3
 80007fc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000800:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000804:	f000 8088 	beq.w	8000918 <__aeabi_ddiv+0x144>
 8000808:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800080c:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000810:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000814:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000818:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800081c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000820:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000824:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000828:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 800082c:	429d      	cmp	r5, r3
 800082e:	bf08      	it	eq
 8000830:	4296      	cmpeq	r6, r2
 8000832:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 8000836:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 800083a:	d202      	bcs.n	8000842 <__aeabi_ddiv+0x6e>
 800083c:	085b      	lsrs	r3, r3, #1
 800083e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000842:	1ab6      	subs	r6, r6, r2
 8000844:	eb65 0503 	sbc.w	r5, r5, r3
 8000848:	085b      	lsrs	r3, r3, #1
 800084a:	ea4f 0232 	mov.w	r2, r2, rrx
 800084e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000852:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 000c 	orrcs.w	r0, r0, ip
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000880:	085b      	lsrs	r3, r3, #1
 8000882:	ea4f 0232 	mov.w	r2, r2, rrx
 8000886:	ebb6 0e02 	subs.w	lr, r6, r2
 800088a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088e:	bf22      	ittt	cs
 8000890:	1ab6      	subcs	r6, r6, r2
 8000892:	4675      	movcs	r5, lr
 8000894:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000898:	085b      	lsrs	r3, r3, #1
 800089a:	ea4f 0232 	mov.w	r2, r2, rrx
 800089e:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a6:	bf22      	ittt	cs
 80008a8:	1ab6      	subcs	r6, r6, r2
 80008aa:	4675      	movcs	r5, lr
 80008ac:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008b0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008b4:	d018      	beq.n	80008e8 <__aeabi_ddiv+0x114>
 80008b6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008ba:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008be:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008c2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008c6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008ca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008ce:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008d2:	d1c0      	bne.n	8000856 <__aeabi_ddiv+0x82>
 80008d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008d8:	d10b      	bne.n	80008f2 <__aeabi_ddiv+0x11e>
 80008da:	ea41 0100 	orr.w	r1, r1, r0
 80008de:	f04f 0000 	mov.w	r0, #0
 80008e2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80008e6:	e7b6      	b.n	8000856 <__aeabi_ddiv+0x82>
 80008e8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008ec:	bf04      	itt	eq
 80008ee:	4301      	orreq	r1, r0
 80008f0:	2000      	moveq	r0, #0
 80008f2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80008f6:	bf88      	it	hi
 80008f8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80008fc:	f63f aeaf 	bhi.w	800065e <__aeabi_dmul+0xde>
 8000900:	ebb5 0c03 	subs.w	ip, r5, r3
 8000904:	bf04      	itt	eq
 8000906:	ebb6 0c02 	subseq.w	ip, r6, r2
 800090a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800090e:	f150 0000 	adcs.w	r0, r0, #0
 8000912:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000916:	bd70      	pop	{r4, r5, r6, pc}
 8000918:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 800091c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000920:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000924:	bfc2      	ittt	gt
 8000926:	ebd4 050c 	rsbsgt	r5, r4, ip
 800092a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800092e:	bd70      	popgt	{r4, r5, r6, pc}
 8000930:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000934:	f04f 0e00 	mov.w	lr, #0
 8000938:	3c01      	subs	r4, #1
 800093a:	e690      	b.n	800065e <__aeabi_dmul+0xde>
 800093c:	ea45 0e06 	orr.w	lr, r5, r6
 8000940:	e68d      	b.n	800065e <__aeabi_dmul+0xde>
 8000942:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000946:	ea94 0f0c 	teq	r4, ip
 800094a:	bf08      	it	eq
 800094c:	ea95 0f0c 	teqeq	r5, ip
 8000950:	f43f af3b 	beq.w	80007ca <__aeabi_dmul+0x24a>
 8000954:	ea94 0f0c 	teq	r4, ip
 8000958:	d10a      	bne.n	8000970 <__aeabi_ddiv+0x19c>
 800095a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800095e:	f47f af34 	bne.w	80007ca <__aeabi_dmul+0x24a>
 8000962:	ea95 0f0c 	teq	r5, ip
 8000966:	f47f af25 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800096a:	4610      	mov	r0, r2
 800096c:	4619      	mov	r1, r3
 800096e:	e72c      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000970:	ea95 0f0c 	teq	r5, ip
 8000974:	d106      	bne.n	8000984 <__aeabi_ddiv+0x1b0>
 8000976:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800097a:	f43f aefd 	beq.w	8000778 <__aeabi_dmul+0x1f8>
 800097e:	4610      	mov	r0, r2
 8000980:	4619      	mov	r1, r3
 8000982:	e722      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000984:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000988:	bf18      	it	ne
 800098a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800098e:	f47f aec5 	bne.w	800071c <__aeabi_dmul+0x19c>
 8000992:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000996:	f47f af0d 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800099a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800099e:	f47f aeeb 	bne.w	8000778 <__aeabi_dmul+0x1f8>
 80009a2:	e712      	b.n	80007ca <__aeabi_dmul+0x24a>

080009a4 <__gedf2>:
 80009a4:	f04f 3cff 	mov.w	ip, #4294967295
 80009a8:	e006      	b.n	80009b8 <__cmpdf2+0x4>
 80009aa:	bf00      	nop

080009ac <__ledf2>:
 80009ac:	f04f 0c01 	mov.w	ip, #1
 80009b0:	e002      	b.n	80009b8 <__cmpdf2+0x4>
 80009b2:	bf00      	nop

080009b4 <__cmpdf2>:
 80009b4:	f04f 0c01 	mov.w	ip, #1
 80009b8:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009bc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009c0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009c4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009c8:	bf18      	it	ne
 80009ca:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009ce:	d01b      	beq.n	8000a08 <__cmpdf2+0x54>
 80009d0:	b001      	add	sp, #4
 80009d2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009d6:	bf0c      	ite	eq
 80009d8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009dc:	ea91 0f03 	teqne	r1, r3
 80009e0:	bf02      	ittt	eq
 80009e2:	ea90 0f02 	teqeq	r0, r2
 80009e6:	2000      	moveq	r0, #0
 80009e8:	4770      	bxeq	lr
 80009ea:	f110 0f00 	cmn.w	r0, #0
 80009ee:	ea91 0f03 	teq	r1, r3
 80009f2:	bf58      	it	pl
 80009f4:	4299      	cmppl	r1, r3
 80009f6:	bf08      	it	eq
 80009f8:	4290      	cmpeq	r0, r2
 80009fa:	bf2c      	ite	cs
 80009fc:	17d8      	asrcs	r0, r3, #31
 80009fe:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a02:	f040 0001 	orr.w	r0, r0, #1
 8000a06:	4770      	bx	lr
 8000a08:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a0c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a10:	d102      	bne.n	8000a18 <__cmpdf2+0x64>
 8000a12:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a16:	d107      	bne.n	8000a28 <__cmpdf2+0x74>
 8000a18:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a20:	d1d6      	bne.n	80009d0 <__cmpdf2+0x1c>
 8000a22:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a26:	d0d3      	beq.n	80009d0 <__cmpdf2+0x1c>
 8000a28:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a2c:	4770      	bx	lr
 8000a2e:	bf00      	nop

08000a30 <__aeabi_cdrcmple>:
 8000a30:	4684      	mov	ip, r0
 8000a32:	4610      	mov	r0, r2
 8000a34:	4662      	mov	r2, ip
 8000a36:	468c      	mov	ip, r1
 8000a38:	4619      	mov	r1, r3
 8000a3a:	4663      	mov	r3, ip
 8000a3c:	e000      	b.n	8000a40 <__aeabi_cdcmpeq>
 8000a3e:	bf00      	nop

08000a40 <__aeabi_cdcmpeq>:
 8000a40:	b501      	push	{r0, lr}
 8000a42:	f7ff ffb7 	bl	80009b4 <__cmpdf2>
 8000a46:	2800      	cmp	r0, #0
 8000a48:	bf48      	it	mi
 8000a4a:	f110 0f00 	cmnmi.w	r0, #0
 8000a4e:	bd01      	pop	{r0, pc}

08000a50 <__aeabi_dcmpeq>:
 8000a50:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a54:	f7ff fff4 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a58:	bf0c      	ite	eq
 8000a5a:	2001      	moveq	r0, #1
 8000a5c:	2000      	movne	r0, #0
 8000a5e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a62:	bf00      	nop

08000a64 <__aeabi_dcmplt>:
 8000a64:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a68:	f7ff ffea 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a6c:	bf34      	ite	cc
 8000a6e:	2001      	movcc	r0, #1
 8000a70:	2000      	movcs	r0, #0
 8000a72:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a76:	bf00      	nop

08000a78 <__aeabi_dcmple>:
 8000a78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a7c:	f7ff ffe0 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a80:	bf94      	ite	ls
 8000a82:	2001      	movls	r0, #1
 8000a84:	2000      	movhi	r0, #0
 8000a86:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a8a:	bf00      	nop

08000a8c <__aeabi_dcmpge>:
 8000a8c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a90:	f7ff ffce 	bl	8000a30 <__aeabi_cdrcmple>
 8000a94:	bf94      	ite	ls
 8000a96:	2001      	movls	r0, #1
 8000a98:	2000      	movhi	r0, #0
 8000a9a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a9e:	bf00      	nop

08000aa0 <__aeabi_dcmpgt>:
 8000aa0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa4:	f7ff ffc4 	bl	8000a30 <__aeabi_cdrcmple>
 8000aa8:	bf34      	ite	cc
 8000aaa:	2001      	movcc	r0, #1
 8000aac:	2000      	movcs	r0, #0
 8000aae:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ab2:	bf00      	nop

08000ab4 <__aeabi_dcmpun>:
 8000ab4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000abc:	d102      	bne.n	8000ac4 <__aeabi_dcmpun+0x10>
 8000abe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ac2:	d10a      	bne.n	8000ada <__aeabi_dcmpun+0x26>
 8000ac4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000acc:	d102      	bne.n	8000ad4 <__aeabi_dcmpun+0x20>
 8000ace:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ad2:	d102      	bne.n	8000ada <__aeabi_dcmpun+0x26>
 8000ad4:	f04f 0000 	mov.w	r0, #0
 8000ad8:	4770      	bx	lr
 8000ada:	f04f 0001 	mov.w	r0, #1
 8000ade:	4770      	bx	lr

08000ae0 <__aeabi_d2iz>:
 8000ae0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ae4:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ae8:	d215      	bcs.n	8000b16 <__aeabi_d2iz+0x36>
 8000aea:	d511      	bpl.n	8000b10 <__aeabi_d2iz+0x30>
 8000aec:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000af0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000af4:	d912      	bls.n	8000b1c <__aeabi_d2iz+0x3c>
 8000af6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000afa:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000afe:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b02:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b06:	fa23 f002 	lsr.w	r0, r3, r2
 8000b0a:	bf18      	it	ne
 8000b0c:	4240      	negne	r0, r0
 8000b0e:	4770      	bx	lr
 8000b10:	f04f 0000 	mov.w	r0, #0
 8000b14:	4770      	bx	lr
 8000b16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b1a:	d105      	bne.n	8000b28 <__aeabi_d2iz+0x48>
 8000b1c:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b20:	bf08      	it	eq
 8000b22:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b26:	4770      	bx	lr
 8000b28:	f04f 0000 	mov.w	r0, #0
 8000b2c:	4770      	bx	lr
 8000b2e:	bf00      	nop

08000b30 <__aeabi_d2uiz>:
 8000b30:	004a      	lsls	r2, r1, #1
 8000b32:	d211      	bcs.n	8000b58 <__aeabi_d2uiz+0x28>
 8000b34:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b38:	d211      	bcs.n	8000b5e <__aeabi_d2uiz+0x2e>
 8000b3a:	d50d      	bpl.n	8000b58 <__aeabi_d2uiz+0x28>
 8000b3c:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b40:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b44:	d40e      	bmi.n	8000b64 <__aeabi_d2uiz+0x34>
 8000b46:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b4a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b4e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b52:	fa23 f002 	lsr.w	r0, r3, r2
 8000b56:	4770      	bx	lr
 8000b58:	f04f 0000 	mov.w	r0, #0
 8000b5c:	4770      	bx	lr
 8000b5e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b62:	d102      	bne.n	8000b6a <__aeabi_d2uiz+0x3a>
 8000b64:	f04f 30ff 	mov.w	r0, #4294967295
 8000b68:	4770      	bx	lr
 8000b6a:	f04f 0000 	mov.w	r0, #0
 8000b6e:	4770      	bx	lr

08000b70 <__aeabi_d2f>:
 8000b70:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b74:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b78:	bf24      	itt	cs
 8000b7a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b7e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b82:	d90d      	bls.n	8000ba0 <__aeabi_d2f+0x30>
 8000b84:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b88:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b8c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b90:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b94:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b98:	bf08      	it	eq
 8000b9a:	f020 0001 	biceq.w	r0, r0, #1
 8000b9e:	4770      	bx	lr
 8000ba0:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000ba4:	d121      	bne.n	8000bea <__aeabi_d2f+0x7a>
 8000ba6:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000baa:	bfbc      	itt	lt
 8000bac:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000bb0:	4770      	bxlt	lr
 8000bb2:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bb6:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bba:	f1c2 0218 	rsb	r2, r2, #24
 8000bbe:	f1c2 0c20 	rsb	ip, r2, #32
 8000bc2:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bc6:	fa20 f002 	lsr.w	r0, r0, r2
 8000bca:	bf18      	it	ne
 8000bcc:	f040 0001 	orrne.w	r0, r0, #1
 8000bd0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bd8:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bdc:	ea40 000c 	orr.w	r0, r0, ip
 8000be0:	fa23 f302 	lsr.w	r3, r3, r2
 8000be4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000be8:	e7cc      	b.n	8000b84 <__aeabi_d2f+0x14>
 8000bea:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bee:	d107      	bne.n	8000c00 <__aeabi_d2f+0x90>
 8000bf0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000bf4:	bf1e      	ittt	ne
 8000bf6:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000bfa:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000bfe:	4770      	bxne	lr
 8000c00:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c04:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c08:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c0c:	4770      	bx	lr
 8000c0e:	bf00      	nop

08000c10 <__aeabi_uldivmod>:
 8000c10:	b953      	cbnz	r3, 8000c28 <__aeabi_uldivmod+0x18>
 8000c12:	b94a      	cbnz	r2, 8000c28 <__aeabi_uldivmod+0x18>
 8000c14:	2900      	cmp	r1, #0
 8000c16:	bf08      	it	eq
 8000c18:	2800      	cmpeq	r0, #0
 8000c1a:	bf1c      	itt	ne
 8000c1c:	f04f 31ff 	movne.w	r1, #4294967295
 8000c20:	f04f 30ff 	movne.w	r0, #4294967295
 8000c24:	f000 b96a 	b.w	8000efc <__aeabi_idiv0>
 8000c28:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c2c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c30:	f000 f806 	bl	8000c40 <__udivmoddi4>
 8000c34:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c38:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c3c:	b004      	add	sp, #16
 8000c3e:	4770      	bx	lr

08000c40 <__udivmoddi4>:
 8000c40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c44:	9d08      	ldr	r5, [sp, #32]
 8000c46:	460c      	mov	r4, r1
 8000c48:	2b00      	cmp	r3, #0
 8000c4a:	d14e      	bne.n	8000cea <__udivmoddi4+0xaa>
 8000c4c:	4694      	mov	ip, r2
 8000c4e:	458c      	cmp	ip, r1
 8000c50:	4686      	mov	lr, r0
 8000c52:	fab2 f282 	clz	r2, r2
 8000c56:	d962      	bls.n	8000d1e <__udivmoddi4+0xde>
 8000c58:	b14a      	cbz	r2, 8000c6e <__udivmoddi4+0x2e>
 8000c5a:	f1c2 0320 	rsb	r3, r2, #32
 8000c5e:	4091      	lsls	r1, r2
 8000c60:	fa20 f303 	lsr.w	r3, r0, r3
 8000c64:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c68:	4319      	orrs	r1, r3
 8000c6a:	fa00 fe02 	lsl.w	lr, r0, r2
 8000c6e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c72:	fa1f f68c 	uxth.w	r6, ip
 8000c76:	fbb1 f4f7 	udiv	r4, r1, r7
 8000c7a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000c7e:	fb07 1114 	mls	r1, r7, r4, r1
 8000c82:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c86:	fb04 f106 	mul.w	r1, r4, r6
 8000c8a:	4299      	cmp	r1, r3
 8000c8c:	d90a      	bls.n	8000ca4 <__udivmoddi4+0x64>
 8000c8e:	eb1c 0303 	adds.w	r3, ip, r3
 8000c92:	f104 30ff 	add.w	r0, r4, #4294967295
 8000c96:	f080 8112 	bcs.w	8000ebe <__udivmoddi4+0x27e>
 8000c9a:	4299      	cmp	r1, r3
 8000c9c:	f240 810f 	bls.w	8000ebe <__udivmoddi4+0x27e>
 8000ca0:	3c02      	subs	r4, #2
 8000ca2:	4463      	add	r3, ip
 8000ca4:	1a59      	subs	r1, r3, r1
 8000ca6:	fa1f f38e 	uxth.w	r3, lr
 8000caa:	fbb1 f0f7 	udiv	r0, r1, r7
 8000cae:	fb07 1110 	mls	r1, r7, r0, r1
 8000cb2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cb6:	fb00 f606 	mul.w	r6, r0, r6
 8000cba:	429e      	cmp	r6, r3
 8000cbc:	d90a      	bls.n	8000cd4 <__udivmoddi4+0x94>
 8000cbe:	eb1c 0303 	adds.w	r3, ip, r3
 8000cc2:	f100 31ff 	add.w	r1, r0, #4294967295
 8000cc6:	f080 80fc 	bcs.w	8000ec2 <__udivmoddi4+0x282>
 8000cca:	429e      	cmp	r6, r3
 8000ccc:	f240 80f9 	bls.w	8000ec2 <__udivmoddi4+0x282>
 8000cd0:	4463      	add	r3, ip
 8000cd2:	3802      	subs	r0, #2
 8000cd4:	1b9b      	subs	r3, r3, r6
 8000cd6:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000cda:	2100      	movs	r1, #0
 8000cdc:	b11d      	cbz	r5, 8000ce6 <__udivmoddi4+0xa6>
 8000cde:	40d3      	lsrs	r3, r2
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	e9c5 3200 	strd	r3, r2, [r5]
 8000ce6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cea:	428b      	cmp	r3, r1
 8000cec:	d905      	bls.n	8000cfa <__udivmoddi4+0xba>
 8000cee:	b10d      	cbz	r5, 8000cf4 <__udivmoddi4+0xb4>
 8000cf0:	e9c5 0100 	strd	r0, r1, [r5]
 8000cf4:	2100      	movs	r1, #0
 8000cf6:	4608      	mov	r0, r1
 8000cf8:	e7f5      	b.n	8000ce6 <__udivmoddi4+0xa6>
 8000cfa:	fab3 f183 	clz	r1, r3
 8000cfe:	2900      	cmp	r1, #0
 8000d00:	d146      	bne.n	8000d90 <__udivmoddi4+0x150>
 8000d02:	42a3      	cmp	r3, r4
 8000d04:	d302      	bcc.n	8000d0c <__udivmoddi4+0xcc>
 8000d06:	4290      	cmp	r0, r2
 8000d08:	f0c0 80f0 	bcc.w	8000eec <__udivmoddi4+0x2ac>
 8000d0c:	1a86      	subs	r6, r0, r2
 8000d0e:	eb64 0303 	sbc.w	r3, r4, r3
 8000d12:	2001      	movs	r0, #1
 8000d14:	2d00      	cmp	r5, #0
 8000d16:	d0e6      	beq.n	8000ce6 <__udivmoddi4+0xa6>
 8000d18:	e9c5 6300 	strd	r6, r3, [r5]
 8000d1c:	e7e3      	b.n	8000ce6 <__udivmoddi4+0xa6>
 8000d1e:	2a00      	cmp	r2, #0
 8000d20:	f040 8090 	bne.w	8000e44 <__udivmoddi4+0x204>
 8000d24:	eba1 040c 	sub.w	r4, r1, ip
 8000d28:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d2c:	fa1f f78c 	uxth.w	r7, ip
 8000d30:	2101      	movs	r1, #1
 8000d32:	fbb4 f6f8 	udiv	r6, r4, r8
 8000d36:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d3a:	fb08 4416 	mls	r4, r8, r6, r4
 8000d3e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d42:	fb07 f006 	mul.w	r0, r7, r6
 8000d46:	4298      	cmp	r0, r3
 8000d48:	d908      	bls.n	8000d5c <__udivmoddi4+0x11c>
 8000d4a:	eb1c 0303 	adds.w	r3, ip, r3
 8000d4e:	f106 34ff 	add.w	r4, r6, #4294967295
 8000d52:	d202      	bcs.n	8000d5a <__udivmoddi4+0x11a>
 8000d54:	4298      	cmp	r0, r3
 8000d56:	f200 80cd 	bhi.w	8000ef4 <__udivmoddi4+0x2b4>
 8000d5a:	4626      	mov	r6, r4
 8000d5c:	1a1c      	subs	r4, r3, r0
 8000d5e:	fa1f f38e 	uxth.w	r3, lr
 8000d62:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d66:	fb08 4410 	mls	r4, r8, r0, r4
 8000d6a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d6e:	fb00 f707 	mul.w	r7, r0, r7
 8000d72:	429f      	cmp	r7, r3
 8000d74:	d908      	bls.n	8000d88 <__udivmoddi4+0x148>
 8000d76:	eb1c 0303 	adds.w	r3, ip, r3
 8000d7a:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d7e:	d202      	bcs.n	8000d86 <__udivmoddi4+0x146>
 8000d80:	429f      	cmp	r7, r3
 8000d82:	f200 80b0 	bhi.w	8000ee6 <__udivmoddi4+0x2a6>
 8000d86:	4620      	mov	r0, r4
 8000d88:	1bdb      	subs	r3, r3, r7
 8000d8a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d8e:	e7a5      	b.n	8000cdc <__udivmoddi4+0x9c>
 8000d90:	f1c1 0620 	rsb	r6, r1, #32
 8000d94:	408b      	lsls	r3, r1
 8000d96:	fa22 f706 	lsr.w	r7, r2, r6
 8000d9a:	431f      	orrs	r7, r3
 8000d9c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000da0:	fa04 f301 	lsl.w	r3, r4, r1
 8000da4:	ea43 030c 	orr.w	r3, r3, ip
 8000da8:	40f4      	lsrs	r4, r6
 8000daa:	fa00 f801 	lsl.w	r8, r0, r1
 8000dae:	0c38      	lsrs	r0, r7, #16
 8000db0:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000db4:	fbb4 fef0 	udiv	lr, r4, r0
 8000db8:	fa1f fc87 	uxth.w	ip, r7
 8000dbc:	fb00 441e 	mls	r4, r0, lr, r4
 8000dc0:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000dc4:	fb0e f90c 	mul.w	r9, lr, ip
 8000dc8:	45a1      	cmp	r9, r4
 8000dca:	fa02 f201 	lsl.w	r2, r2, r1
 8000dce:	d90a      	bls.n	8000de6 <__udivmoddi4+0x1a6>
 8000dd0:	193c      	adds	r4, r7, r4
 8000dd2:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000dd6:	f080 8084 	bcs.w	8000ee2 <__udivmoddi4+0x2a2>
 8000dda:	45a1      	cmp	r9, r4
 8000ddc:	f240 8081 	bls.w	8000ee2 <__udivmoddi4+0x2a2>
 8000de0:	f1ae 0e02 	sub.w	lr, lr, #2
 8000de4:	443c      	add	r4, r7
 8000de6:	eba4 0409 	sub.w	r4, r4, r9
 8000dea:	fa1f f983 	uxth.w	r9, r3
 8000dee:	fbb4 f3f0 	udiv	r3, r4, r0
 8000df2:	fb00 4413 	mls	r4, r0, r3, r4
 8000df6:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000dfa:	fb03 fc0c 	mul.w	ip, r3, ip
 8000dfe:	45a4      	cmp	ip, r4
 8000e00:	d907      	bls.n	8000e12 <__udivmoddi4+0x1d2>
 8000e02:	193c      	adds	r4, r7, r4
 8000e04:	f103 30ff 	add.w	r0, r3, #4294967295
 8000e08:	d267      	bcs.n	8000eda <__udivmoddi4+0x29a>
 8000e0a:	45a4      	cmp	ip, r4
 8000e0c:	d965      	bls.n	8000eda <__udivmoddi4+0x29a>
 8000e0e:	3b02      	subs	r3, #2
 8000e10:	443c      	add	r4, r7
 8000e12:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e16:	fba0 9302 	umull	r9, r3, r0, r2
 8000e1a:	eba4 040c 	sub.w	r4, r4, ip
 8000e1e:	429c      	cmp	r4, r3
 8000e20:	46ce      	mov	lr, r9
 8000e22:	469c      	mov	ip, r3
 8000e24:	d351      	bcc.n	8000eca <__udivmoddi4+0x28a>
 8000e26:	d04e      	beq.n	8000ec6 <__udivmoddi4+0x286>
 8000e28:	b155      	cbz	r5, 8000e40 <__udivmoddi4+0x200>
 8000e2a:	ebb8 030e 	subs.w	r3, r8, lr
 8000e2e:	eb64 040c 	sbc.w	r4, r4, ip
 8000e32:	fa04 f606 	lsl.w	r6, r4, r6
 8000e36:	40cb      	lsrs	r3, r1
 8000e38:	431e      	orrs	r6, r3
 8000e3a:	40cc      	lsrs	r4, r1
 8000e3c:	e9c5 6400 	strd	r6, r4, [r5]
 8000e40:	2100      	movs	r1, #0
 8000e42:	e750      	b.n	8000ce6 <__udivmoddi4+0xa6>
 8000e44:	f1c2 0320 	rsb	r3, r2, #32
 8000e48:	fa20 f103 	lsr.w	r1, r0, r3
 8000e4c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e50:	fa24 f303 	lsr.w	r3, r4, r3
 8000e54:	4094      	lsls	r4, r2
 8000e56:	430c      	orrs	r4, r1
 8000e58:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e5c:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e60:	fa1f f78c 	uxth.w	r7, ip
 8000e64:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e68:	fb08 3110 	mls	r1, r8, r0, r3
 8000e6c:	0c23      	lsrs	r3, r4, #16
 8000e6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e72:	fb00 f107 	mul.w	r1, r0, r7
 8000e76:	4299      	cmp	r1, r3
 8000e78:	d908      	bls.n	8000e8c <__udivmoddi4+0x24c>
 8000e7a:	eb1c 0303 	adds.w	r3, ip, r3
 8000e7e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000e82:	d22c      	bcs.n	8000ede <__udivmoddi4+0x29e>
 8000e84:	4299      	cmp	r1, r3
 8000e86:	d92a      	bls.n	8000ede <__udivmoddi4+0x29e>
 8000e88:	3802      	subs	r0, #2
 8000e8a:	4463      	add	r3, ip
 8000e8c:	1a5b      	subs	r3, r3, r1
 8000e8e:	b2a4      	uxth	r4, r4
 8000e90:	fbb3 f1f8 	udiv	r1, r3, r8
 8000e94:	fb08 3311 	mls	r3, r8, r1, r3
 8000e98:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e9c:	fb01 f307 	mul.w	r3, r1, r7
 8000ea0:	42a3      	cmp	r3, r4
 8000ea2:	d908      	bls.n	8000eb6 <__udivmoddi4+0x276>
 8000ea4:	eb1c 0404 	adds.w	r4, ip, r4
 8000ea8:	f101 36ff 	add.w	r6, r1, #4294967295
 8000eac:	d213      	bcs.n	8000ed6 <__udivmoddi4+0x296>
 8000eae:	42a3      	cmp	r3, r4
 8000eb0:	d911      	bls.n	8000ed6 <__udivmoddi4+0x296>
 8000eb2:	3902      	subs	r1, #2
 8000eb4:	4464      	add	r4, ip
 8000eb6:	1ae4      	subs	r4, r4, r3
 8000eb8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000ebc:	e739      	b.n	8000d32 <__udivmoddi4+0xf2>
 8000ebe:	4604      	mov	r4, r0
 8000ec0:	e6f0      	b.n	8000ca4 <__udivmoddi4+0x64>
 8000ec2:	4608      	mov	r0, r1
 8000ec4:	e706      	b.n	8000cd4 <__udivmoddi4+0x94>
 8000ec6:	45c8      	cmp	r8, r9
 8000ec8:	d2ae      	bcs.n	8000e28 <__udivmoddi4+0x1e8>
 8000eca:	ebb9 0e02 	subs.w	lr, r9, r2
 8000ece:	eb63 0c07 	sbc.w	ip, r3, r7
 8000ed2:	3801      	subs	r0, #1
 8000ed4:	e7a8      	b.n	8000e28 <__udivmoddi4+0x1e8>
 8000ed6:	4631      	mov	r1, r6
 8000ed8:	e7ed      	b.n	8000eb6 <__udivmoddi4+0x276>
 8000eda:	4603      	mov	r3, r0
 8000edc:	e799      	b.n	8000e12 <__udivmoddi4+0x1d2>
 8000ede:	4630      	mov	r0, r6
 8000ee0:	e7d4      	b.n	8000e8c <__udivmoddi4+0x24c>
 8000ee2:	46d6      	mov	lr, sl
 8000ee4:	e77f      	b.n	8000de6 <__udivmoddi4+0x1a6>
 8000ee6:	4463      	add	r3, ip
 8000ee8:	3802      	subs	r0, #2
 8000eea:	e74d      	b.n	8000d88 <__udivmoddi4+0x148>
 8000eec:	4606      	mov	r6, r0
 8000eee:	4623      	mov	r3, r4
 8000ef0:	4608      	mov	r0, r1
 8000ef2:	e70f      	b.n	8000d14 <__udivmoddi4+0xd4>
 8000ef4:	3e02      	subs	r6, #2
 8000ef6:	4463      	add	r3, ip
 8000ef8:	e730      	b.n	8000d5c <__udivmoddi4+0x11c>
 8000efa:	bf00      	nop

08000efc <__aeabi_idiv0>:
 8000efc:	4770      	bx	lr
 8000efe:	bf00      	nop

08000f00 <updateOrientation>:
Orientation or;
angleGyro A_gyro;
angleAcc A_acc;

void updateOrientation(float accX, float accY, float accZ, float gyroX, float gyroY, float gyroZ) 
{
 8000f00:	b5b0      	push	{r4, r5, r7, lr}
 8000f02:	b086      	sub	sp, #24
 8000f04:	af00      	add	r7, sp, #0
 8000f06:	ed87 0a05 	vstr	s0, [r7, #20]
 8000f0a:	edc7 0a04 	vstr	s1, [r7, #16]
 8000f0e:	ed87 1a03 	vstr	s2, [r7, #12]
 8000f12:	edc7 1a02 	vstr	s3, [r7, #8]
 8000f16:	ed87 2a01 	vstr	s4, [r7, #4]
 8000f1a:	edc7 2a00 	vstr	s5, [r7]
  // compute pitch and roll from accelerometer
  updateAngleAcc(accX, accY,accZ);
 8000f1e:	ed97 1a03 	vldr	s2, [r7, #12]
 8000f22:	edd7 0a04 	vldr	s1, [r7, #16]
 8000f26:	ed97 0a05 	vldr	s0, [r7, #20]
 8000f2a:	f000 f879 	bl	8001020 <updateAngleAcc>

  // compute pitch and roll from gyroscope
  updateAngleGyro(gyroX, gyroY);
 8000f2e:	edd7 0a01 	vldr	s1, [r7, #4]
 8000f32:	ed97 0a02 	vldr	s0, [r7, #8]
 8000f36:	f000 f913 	bl	8001160 <updateAngleGyro>

  // include complementary filter
  or.pitch = ALPHA * (or.pitch + A_gyro.pitchGyro) + (1 - ALPHA) * A_acc.pitchAcc;
 8000f3a:	4b35      	ldr	r3, [pc, #212]	@ (8001010 <updateOrientation+0x110>)
 8000f3c:	ed93 7a00 	vldr	s14, [r3]
 8000f40:	4b34      	ldr	r3, [pc, #208]	@ (8001014 <updateOrientation+0x114>)
 8000f42:	edd3 7a00 	vldr	s15, [r3]
 8000f46:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f4a:	ee17 0a90 	vmov	r0, s15
 8000f4e:	f7ff fabf 	bl	80004d0 <__aeabi_f2d>
 8000f52:	a32b      	add	r3, pc, #172	@ (adr r3, 8001000 <updateOrientation+0x100>)
 8000f54:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f58:	f7ff fb12 	bl	8000580 <__aeabi_dmul>
 8000f5c:	4602      	mov	r2, r0
 8000f5e:	460b      	mov	r3, r1
 8000f60:	4614      	mov	r4, r2
 8000f62:	461d      	mov	r5, r3
 8000f64:	4b2c      	ldr	r3, [pc, #176]	@ (8001018 <updateOrientation+0x118>)
 8000f66:	681b      	ldr	r3, [r3, #0]
 8000f68:	4618      	mov	r0, r3
 8000f6a:	f7ff fab1 	bl	80004d0 <__aeabi_f2d>
 8000f6e:	a326      	add	r3, pc, #152	@ (adr r3, 8001008 <updateOrientation+0x108>)
 8000f70:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f74:	f7ff fb04 	bl	8000580 <__aeabi_dmul>
 8000f78:	4602      	mov	r2, r0
 8000f7a:	460b      	mov	r3, r1
 8000f7c:	4620      	mov	r0, r4
 8000f7e:	4629      	mov	r1, r5
 8000f80:	f7ff f948 	bl	8000214 <__adddf3>
 8000f84:	4602      	mov	r2, r0
 8000f86:	460b      	mov	r3, r1
 8000f88:	4610      	mov	r0, r2
 8000f8a:	4619      	mov	r1, r3
 8000f8c:	f7ff fdf0 	bl	8000b70 <__aeabi_d2f>
 8000f90:	4603      	mov	r3, r0
 8000f92:	4a1f      	ldr	r2, [pc, #124]	@ (8001010 <updateOrientation+0x110>)
 8000f94:	6013      	str	r3, [r2, #0]
  or.roll = ALPHA * (or.roll + A_acc.rollAcc) + (1 - ALPHA) * A_acc.rollAcc;
 8000f96:	4b1e      	ldr	r3, [pc, #120]	@ (8001010 <updateOrientation+0x110>)
 8000f98:	ed93 7a01 	vldr	s14, [r3, #4]
 8000f9c:	4b1e      	ldr	r3, [pc, #120]	@ (8001018 <updateOrientation+0x118>)
 8000f9e:	edd3 7a01 	vldr	s15, [r3, #4]
 8000fa2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000fa6:	ee17 0a90 	vmov	r0, s15
 8000faa:	f7ff fa91 	bl	80004d0 <__aeabi_f2d>
 8000fae:	a314      	add	r3, pc, #80	@ (adr r3, 8001000 <updateOrientation+0x100>)
 8000fb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000fb4:	f7ff fae4 	bl	8000580 <__aeabi_dmul>
 8000fb8:	4602      	mov	r2, r0
 8000fba:	460b      	mov	r3, r1
 8000fbc:	4614      	mov	r4, r2
 8000fbe:	461d      	mov	r5, r3
 8000fc0:	4b15      	ldr	r3, [pc, #84]	@ (8001018 <updateOrientation+0x118>)
 8000fc2:	685b      	ldr	r3, [r3, #4]
 8000fc4:	4618      	mov	r0, r3
 8000fc6:	f7ff fa83 	bl	80004d0 <__aeabi_f2d>
 8000fca:	a30f      	add	r3, pc, #60	@ (adr r3, 8001008 <updateOrientation+0x108>)
 8000fcc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000fd0:	f7ff fad6 	bl	8000580 <__aeabi_dmul>
 8000fd4:	4602      	mov	r2, r0
 8000fd6:	460b      	mov	r3, r1
 8000fd8:	4620      	mov	r0, r4
 8000fda:	4629      	mov	r1, r5
 8000fdc:	f7ff f91a 	bl	8000214 <__adddf3>
 8000fe0:	4602      	mov	r2, r0
 8000fe2:	460b      	mov	r3, r1
 8000fe4:	4610      	mov	r0, r2
 8000fe6:	4619      	mov	r1, r3
 8000fe8:	f7ff fdc2 	bl	8000b70 <__aeabi_d2f>
 8000fec:	4603      	mov	r3, r0
 8000fee:	4a08      	ldr	r2, [pc, #32]	@ (8001010 <updateOrientation+0x110>)
 8000ff0:	6053      	str	r3, [r2, #4]
}
 8000ff2:	bf00      	nop
 8000ff4:	3718      	adds	r7, #24
 8000ff6:	46bd      	mov	sp, r7
 8000ff8:	bdb0      	pop	{r4, r5, r7, pc}
 8000ffa:	bf00      	nop
 8000ffc:	f3af 8000 	nop.w
 8001000:	f5c28f5c 	.word	0xf5c28f5c
 8001004:	3fef5c28 	.word	0x3fef5c28
 8001008:	47ae1480 	.word	0x47ae1480
 800100c:	3f947ae1 	.word	0x3f947ae1
 8001010:	200000b4 	.word	0x200000b4
 8001014:	200000bc 	.word	0x200000bc
 8001018:	200000c4 	.word	0x200000c4
 800101c:	00000000 	.word	0x00000000

08001020 <updateAngleAcc>:

void updateAngleAcc(float accX, float accY, float accZ){
 8001020:	b5b0      	push	{r4, r5, r7, lr}
 8001022:	b084      	sub	sp, #16
 8001024:	af00      	add	r7, sp, #0
 8001026:	ed87 0a03 	vstr	s0, [r7, #12]
 800102a:	edc7 0a02 	vstr	s1, [r7, #8]
 800102e:	ed87 1a01 	vstr	s2, [r7, #4]
	// compute pitch and roll using trigonometric formulas
	A_acc.pitchAcc = atan(accX / sqrt(accY*accY + accZ*accZ)) * 180 / M_PI;
 8001032:	68f8      	ldr	r0, [r7, #12]
 8001034:	f7ff fa4c 	bl	80004d0 <__aeabi_f2d>
 8001038:	4604      	mov	r4, r0
 800103a:	460d      	mov	r5, r1
 800103c:	edd7 7a02 	vldr	s15, [r7, #8]
 8001040:	ee27 7aa7 	vmul.f32	s14, s15, s15
 8001044:	edd7 7a01 	vldr	s15, [r7, #4]
 8001048:	ee67 7aa7 	vmul.f32	s15, s15, s15
 800104c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001050:	ee17 0a90 	vmov	r0, s15
 8001054:	f7ff fa3c 	bl	80004d0 <__aeabi_f2d>
 8001058:	4602      	mov	r2, r0
 800105a:	460b      	mov	r3, r1
 800105c:	ec43 2b10 	vmov	d0, r2, r3
 8001060:	f004 ff5c 	bl	8005f1c <sqrt>
 8001064:	ec53 2b10 	vmov	r2, r3, d0
 8001068:	4620      	mov	r0, r4
 800106a:	4629      	mov	r1, r5
 800106c:	f7ff fbb2 	bl	80007d4 <__aeabi_ddiv>
 8001070:	4602      	mov	r2, r0
 8001072:	460b      	mov	r3, r1
 8001074:	ec43 2b17 	vmov	d7, r2, r3
 8001078:	eeb0 0a47 	vmov.f32	s0, s14
 800107c:	eef0 0a67 	vmov.f32	s1, s15
 8001080:	f004 ff7a 	bl	8005f78 <atan>
 8001084:	ec51 0b10 	vmov	r0, r1, d0
 8001088:	f04f 0200 	mov.w	r2, #0
 800108c:	4b32      	ldr	r3, [pc, #200]	@ (8001158 <updateAngleAcc+0x138>)
 800108e:	f7ff fa77 	bl	8000580 <__aeabi_dmul>
 8001092:	4602      	mov	r2, r0
 8001094:	460b      	mov	r3, r1
 8001096:	4610      	mov	r0, r2
 8001098:	4619      	mov	r1, r3
 800109a:	a32d      	add	r3, pc, #180	@ (adr r3, 8001150 <updateAngleAcc+0x130>)
 800109c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010a0:	f7ff fb98 	bl	80007d4 <__aeabi_ddiv>
 80010a4:	4602      	mov	r2, r0
 80010a6:	460b      	mov	r3, r1
 80010a8:	4610      	mov	r0, r2
 80010aa:	4619      	mov	r1, r3
 80010ac:	f7ff fd60 	bl	8000b70 <__aeabi_d2f>
 80010b0:	4603      	mov	r3, r0
 80010b2:	4a2a      	ldr	r2, [pc, #168]	@ (800115c <updateAngleAcc+0x13c>)
 80010b4:	6013      	str	r3, [r2, #0]
	A_acc.rollAcc = atan(-accY / sqrt(accX*accX + accZ*accZ)) * 180 / M_PI;
 80010b6:	edd7 7a02 	vldr	s15, [r7, #8]
 80010ba:	eef1 7a67 	vneg.f32	s15, s15
 80010be:	ee17 3a90 	vmov	r3, s15
 80010c2:	4618      	mov	r0, r3
 80010c4:	f7ff fa04 	bl	80004d0 <__aeabi_f2d>
 80010c8:	4604      	mov	r4, r0
 80010ca:	460d      	mov	r5, r1
 80010cc:	edd7 7a03 	vldr	s15, [r7, #12]
 80010d0:	ee27 7aa7 	vmul.f32	s14, s15, s15
 80010d4:	edd7 7a01 	vldr	s15, [r7, #4]
 80010d8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80010dc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010e0:	ee17 0a90 	vmov	r0, s15
 80010e4:	f7ff f9f4 	bl	80004d0 <__aeabi_f2d>
 80010e8:	4602      	mov	r2, r0
 80010ea:	460b      	mov	r3, r1
 80010ec:	ec43 2b10 	vmov	d0, r2, r3
 80010f0:	f004 ff14 	bl	8005f1c <sqrt>
 80010f4:	ec53 2b10 	vmov	r2, r3, d0
 80010f8:	4620      	mov	r0, r4
 80010fa:	4629      	mov	r1, r5
 80010fc:	f7ff fb6a 	bl	80007d4 <__aeabi_ddiv>
 8001100:	4602      	mov	r2, r0
 8001102:	460b      	mov	r3, r1
 8001104:	ec43 2b17 	vmov	d7, r2, r3
 8001108:	eeb0 0a47 	vmov.f32	s0, s14
 800110c:	eef0 0a67 	vmov.f32	s1, s15
 8001110:	f004 ff32 	bl	8005f78 <atan>
 8001114:	ec51 0b10 	vmov	r0, r1, d0
 8001118:	f04f 0200 	mov.w	r2, #0
 800111c:	4b0e      	ldr	r3, [pc, #56]	@ (8001158 <updateAngleAcc+0x138>)
 800111e:	f7ff fa2f 	bl	8000580 <__aeabi_dmul>
 8001122:	4602      	mov	r2, r0
 8001124:	460b      	mov	r3, r1
 8001126:	4610      	mov	r0, r2
 8001128:	4619      	mov	r1, r3
 800112a:	a309      	add	r3, pc, #36	@ (adr r3, 8001150 <updateAngleAcc+0x130>)
 800112c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001130:	f7ff fb50 	bl	80007d4 <__aeabi_ddiv>
 8001134:	4602      	mov	r2, r0
 8001136:	460b      	mov	r3, r1
 8001138:	4610      	mov	r0, r2
 800113a:	4619      	mov	r1, r3
 800113c:	f7ff fd18 	bl	8000b70 <__aeabi_d2f>
 8001140:	4603      	mov	r3, r0
 8001142:	4a06      	ldr	r2, [pc, #24]	@ (800115c <updateAngleAcc+0x13c>)
 8001144:	6053      	str	r3, [r2, #4]
}
 8001146:	bf00      	nop
 8001148:	3710      	adds	r7, #16
 800114a:	46bd      	mov	sp, r7
 800114c:	bdb0      	pop	{r4, r5, r7, pc}
 800114e:	bf00      	nop
 8001150:	54442d18 	.word	0x54442d18
 8001154:	400921fb 	.word	0x400921fb
 8001158:	40668000 	.word	0x40668000
 800115c:	200000c4 	.word	0x200000c4

08001160 <updateAngleGyro>:

void updateAngleGyro(float gyroX, float gyroY){
 8001160:	b580      	push	{r7, lr}
 8001162:	b082      	sub	sp, #8
 8001164:	af00      	add	r7, sp, #0
 8001166:	ed87 0a01 	vstr	s0, [r7, #4]
 800116a:	edc7 0a00 	vstr	s1, [r7]
	// compute pitch and roll by multiplying the sampling time by the angular velocity
	A_gyro.pitchGyro = gyroX * DT;
 800116e:	6878      	ldr	r0, [r7, #4]
 8001170:	f7ff f9ae 	bl	80004d0 <__aeabi_f2d>
 8001174:	a312      	add	r3, pc, #72	@ (adr r3, 80011c0 <updateAngleGyro+0x60>)
 8001176:	e9d3 2300 	ldrd	r2, r3, [r3]
 800117a:	f7ff fa01 	bl	8000580 <__aeabi_dmul>
 800117e:	4602      	mov	r2, r0
 8001180:	460b      	mov	r3, r1
 8001182:	4610      	mov	r0, r2
 8001184:	4619      	mov	r1, r3
 8001186:	f7ff fcf3 	bl	8000b70 <__aeabi_d2f>
 800118a:	4603      	mov	r3, r0
 800118c:	4a0e      	ldr	r2, [pc, #56]	@ (80011c8 <updateAngleGyro+0x68>)
 800118e:	6013      	str	r3, [r2, #0]
	A_gyro.pitchGyro = gyroY * DT;
 8001190:	6838      	ldr	r0, [r7, #0]
 8001192:	f7ff f99d 	bl	80004d0 <__aeabi_f2d>
 8001196:	a30a      	add	r3, pc, #40	@ (adr r3, 80011c0 <updateAngleGyro+0x60>)
 8001198:	e9d3 2300 	ldrd	r2, r3, [r3]
 800119c:	f7ff f9f0 	bl	8000580 <__aeabi_dmul>
 80011a0:	4602      	mov	r2, r0
 80011a2:	460b      	mov	r3, r1
 80011a4:	4610      	mov	r0, r2
 80011a6:	4619      	mov	r1, r3
 80011a8:	f7ff fce2 	bl	8000b70 <__aeabi_d2f>
 80011ac:	4603      	mov	r3, r0
 80011ae:	4a06      	ldr	r2, [pc, #24]	@ (80011c8 <updateAngleGyro+0x68>)
 80011b0:	6013      	str	r3, [r2, #0]
}
 80011b2:	bf00      	nop
 80011b4:	3708      	adds	r7, #8
 80011b6:	46bd      	mov	sp, r7
 80011b8:	bd80      	pop	{r7, pc}
 80011ba:	bf00      	nop
 80011bc:	f3af 8000 	nop.w
 80011c0:	47ae147b 	.word	0x47ae147b
 80011c4:	3f747ae1 	.word	0x3f747ae1
 80011c8:	200000bc 	.word	0x200000bc

080011cc <encoder_init>:
#include "encoder.h"
#include "main.h"
#include <math.h>

HAL_StatusTypeDef encoder_init(encoder_t *e, channel ch,
		TIM_HandleTypeDef *htim, uint32_t ppr) {
 80011cc:	b580      	push	{r7, lr}
 80011ce:	b086      	sub	sp, #24
 80011d0:	af00      	add	r7, sp, #0
 80011d2:	60f8      	str	r0, [r7, #12]
 80011d4:	607a      	str	r2, [r7, #4]
 80011d6:	603b      	str	r3, [r7, #0]
 80011d8:	460b      	mov	r3, r1
 80011da:	72fb      	strb	r3, [r7, #11]
	HAL_StatusTypeDef ret;
	ret = HAL_OK;
 80011dc:	2300      	movs	r3, #0
 80011de:	75fb      	strb	r3, [r7, #23]
	if (htim == NULL)
 80011e0:	687b      	ldr	r3, [r7, #4]
 80011e2:	2b00      	cmp	r3, #0
 80011e4:	d101      	bne.n	80011ea <encoder_init+0x1e>
		return HAL_ERROR;
 80011e6:	2301      	movs	r3, #1
 80011e8:	e02c      	b.n	8001244 <encoder_init+0x78>

	e->tim = htim;
 80011ea:	68fb      	ldr	r3, [r7, #12]
 80011ec:	687a      	ldr	r2, [r7, #4]
 80011ee:	601a      	str	r2, [r3, #0]
	htim->Instance->CNT = 0;
 80011f0:	687b      	ldr	r3, [r7, #4]
 80011f2:	681b      	ldr	r3, [r3, #0]
 80011f4:	2200      	movs	r2, #0
 80011f6:	625a      	str	r2, [r3, #36]	@ 0x24
	ret = HAL_TIM_Encoder_Start(htim, ch);
 80011f8:	7afb      	ldrb	r3, [r7, #11]
 80011fa:	4619      	mov	r1, r3
 80011fc:	6878      	ldr	r0, [r7, #4]
 80011fe:	f003 ff7f 	bl	8005100 <HAL_TIM_Encoder_Start>
 8001202:	4603      	mov	r3, r0
 8001204:	75fb      	strb	r3, [r7, #23]
	if (ret != HAL_OK)
 8001206:	7dfb      	ldrb	r3, [r7, #23]
 8001208:	2b00      	cmp	r3, #0
 800120a:	d001      	beq.n	8001210 <encoder_init+0x44>
		return ret;
 800120c:	7dfb      	ldrb	r3, [r7, #23]
 800120e:	e019      	b.n	8001244 <encoder_init+0x78>

	if (ch == A || ch == B)
 8001210:	7afb      	ldrb	r3, [r7, #11]
 8001212:	2b00      	cmp	r3, #0
 8001214:	d002      	beq.n	800121c <encoder_init+0x50>
 8001216:	7afb      	ldrb	r3, [r7, #11]
 8001218:	2b04      	cmp	r3, #4
 800121a:	d103      	bne.n	8001224 <encoder_init+0x58>
		e->resolution = 2;
 800121c:	68fb      	ldr	r3, [r7, #12]
 800121e:	2202      	movs	r2, #2
 8001220:	60da      	str	r2, [r3, #12]
 8001222:	e002      	b.n	800122a <encoder_init+0x5e>
	else
		e->resolution = 4;
 8001224:	68fb      	ldr	r3, [r7, #12]
 8001226:	2204      	movs	r2, #4
 8001228:	60da      	str	r2, [r3, #12]

	e->velocity_pps = 0.0;
 800122a:	68fb      	ldr	r3, [r7, #12]
 800122c:	2200      	movs	r2, #0
 800122e:	611a      	str	r2, [r3, #16]
	e->last_count = htim->Instance->CNT;
 8001230:	687b      	ldr	r3, [r7, #4]
 8001232:	681b      	ldr	r3, [r3, #0]
 8001234:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001236:	68fb      	ldr	r3, [r7, #12]
 8001238:	605a      	str	r2, [r3, #4]
	e->ppr = ppr;
 800123a:	683b      	ldr	r3, [r7, #0]
 800123c:	b29a      	uxth	r2, r3
 800123e:	68fb      	ldr	r3, [r7, #12]
 8001240:	811a      	strh	r2, [r3, #8]

	return ret;
 8001242:	7dfb      	ldrb	r3, [r7, #23]
}
 8001244:	4618      	mov	r0, r3
 8001246:	3718      	adds	r7, #24
 8001248:	46bd      	mov	sp, r7
 800124a:	bd80      	pop	{r7, pc}
 800124c:	0000      	movs	r0, r0
	...

08001250 <__encoder_update>:

inline static void __encoder_update(encoder_t *e) {
 8001250:	b5b0      	push	{r4, r5, r7, lr}
 8001252:	b086      	sub	sp, #24
 8001254:	af00      	add	r7, sp, #0
 8001256:	6078      	str	r0, [r7, #4]
	uint32_t cur_cnt;
	int32_t diff, cur_velocity;

	cur_cnt = e->tim->Instance->CNT;
 8001258:	687b      	ldr	r3, [r7, #4]
 800125a:	681b      	ldr	r3, [r3, #0]
 800125c:	681b      	ldr	r3, [r3, #0]
 800125e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001260:	613b      	str	r3, [r7, #16]

	// Handle overflow and underflow
	if (__HAL_TIM_IS_TIM_COUNTING_DOWN(e->tim)) {
 8001262:	687b      	ldr	r3, [r7, #4]
 8001264:	681b      	ldr	r3, [r3, #0]
 8001266:	681b      	ldr	r3, [r3, #0]
 8001268:	681b      	ldr	r3, [r3, #0]
 800126a:	f003 0310 	and.w	r3, r3, #16
 800126e:	2b10      	cmp	r3, #16
 8001270:	d115      	bne.n	800129e <__encoder_update+0x4e>
		if (cur_cnt < e->last_count) // underflow
 8001272:	687b      	ldr	r3, [r7, #4]
 8001274:	685b      	ldr	r3, [r3, #4]
 8001276:	693a      	ldr	r2, [r7, #16]
 8001278:	429a      	cmp	r2, r3
 800127a:	d205      	bcs.n	8001288 <__encoder_update+0x38>
			diff = e->last_count - cur_cnt;
 800127c:	687b      	ldr	r3, [r7, #4]
 800127e:	685a      	ldr	r2, [r3, #4]
 8001280:	693b      	ldr	r3, [r7, #16]
 8001282:	1ad3      	subs	r3, r2, r3
 8001284:	617b      	str	r3, [r7, #20]
 8001286:	e01f      	b.n	80012c8 <__encoder_update+0x78>
		else
			diff = (e->tim->Instance->ARR - cur_cnt) + e->last_count;
 8001288:	687b      	ldr	r3, [r7, #4]
 800128a:	681b      	ldr	r3, [r3, #0]
 800128c:	681b      	ldr	r3, [r3, #0]
 800128e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001290:	693b      	ldr	r3, [r7, #16]
 8001292:	1ad2      	subs	r2, r2, r3
 8001294:	687b      	ldr	r3, [r7, #4]
 8001296:	685b      	ldr	r3, [r3, #4]
 8001298:	4413      	add	r3, r2
 800129a:	617b      	str	r3, [r7, #20]
 800129c:	e014      	b.n	80012c8 <__encoder_update+0x78>
	} else {
		if (cur_cnt > e->last_count) // overflow
 800129e:	687b      	ldr	r3, [r7, #4]
 80012a0:	685b      	ldr	r3, [r3, #4]
 80012a2:	693a      	ldr	r2, [r7, #16]
 80012a4:	429a      	cmp	r2, r3
 80012a6:	d905      	bls.n	80012b4 <__encoder_update+0x64>
			diff = e->last_count - cur_cnt;
 80012a8:	687b      	ldr	r3, [r7, #4]
 80012aa:	685a      	ldr	r2, [r3, #4]
 80012ac:	693b      	ldr	r3, [r7, #16]
 80012ae:	1ad3      	subs	r3, r2, r3
 80012b0:	617b      	str	r3, [r7, #20]
 80012b2:	e009      	b.n	80012c8 <__encoder_update+0x78>
		else
			diff = (e->tim->Instance->ARR - e->last_count) + cur_cnt;
 80012b4:	687b      	ldr	r3, [r7, #4]
 80012b6:	681b      	ldr	r3, [r3, #0]
 80012b8:	681b      	ldr	r3, [r3, #0]
 80012ba:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80012bc:	687b      	ldr	r3, [r7, #4]
 80012be:	685b      	ldr	r3, [r3, #4]
 80012c0:	1ad2      	subs	r2, r2, r3
 80012c2:	693b      	ldr	r3, [r7, #16]
 80012c4:	4413      	add	r3, r2
 80012c6:	617b      	str	r3, [r7, #20]
	}

	// velocity in pulses per second
	if (e->last_count == cur_cnt)
 80012c8:	687b      	ldr	r3, [r7, #4]
 80012ca:	685b      	ldr	r3, [r3, #4]
 80012cc:	693a      	ldr	r2, [r7, #16]
 80012ce:	429a      	cmp	r2, r3
 80012d0:	d101      	bne.n	80012d6 <__encoder_update+0x86>
		diff = 0;
 80012d2:	2300      	movs	r3, #0
 80012d4:	617b      	str	r3, [r7, #20]

	cur_velocity = (float) diff / DT / (float) e->resolution;
 80012d6:	697b      	ldr	r3, [r7, #20]
 80012d8:	ee07 3a90 	vmov	s15, r3
 80012dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012e0:	ee17 0a90 	vmov	r0, s15
 80012e4:	f7ff f8f4 	bl	80004d0 <__aeabi_f2d>
 80012e8:	a327      	add	r3, pc, #156	@ (adr r3, 8001388 <__encoder_update+0x138>)
 80012ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012ee:	f7ff fa71 	bl	80007d4 <__aeabi_ddiv>
 80012f2:	4602      	mov	r2, r0
 80012f4:	460b      	mov	r3, r1
 80012f6:	4614      	mov	r4, r2
 80012f8:	461d      	mov	r5, r3
 80012fa:	687b      	ldr	r3, [r7, #4]
 80012fc:	68db      	ldr	r3, [r3, #12]
 80012fe:	ee07 3a90 	vmov	s15, r3
 8001302:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001306:	ee17 0a90 	vmov	r0, s15
 800130a:	f7ff f8e1 	bl	80004d0 <__aeabi_f2d>
 800130e:	4602      	mov	r2, r0
 8001310:	460b      	mov	r3, r1
 8001312:	4620      	mov	r0, r4
 8001314:	4629      	mov	r1, r5
 8001316:	f7ff fa5d 	bl	80007d4 <__aeabi_ddiv>
 800131a:	4602      	mov	r2, r0
 800131c:	460b      	mov	r3, r1
 800131e:	4610      	mov	r0, r2
 8001320:	4619      	mov	r1, r3
 8001322:	f7ff fbdd 	bl	8000ae0 <__aeabi_d2iz>
 8001326:	4603      	mov	r3, r0
 8001328:	60fb      	str	r3, [r7, #12]

	// Filtering velocity
	e->velocity_pps = BETA * e->velocity_pps + (1.0 - BETA) * cur_velocity;
 800132a:	687b      	ldr	r3, [r7, #4]
 800132c:	691b      	ldr	r3, [r3, #16]
 800132e:	4618      	mov	r0, r3
 8001330:	f7ff f8bc 	bl	80004ac <__aeabi_i2d>
 8001334:	a316      	add	r3, pc, #88	@ (adr r3, 8001390 <__encoder_update+0x140>)
 8001336:	e9d3 2300 	ldrd	r2, r3, [r3]
 800133a:	f7ff f921 	bl	8000580 <__aeabi_dmul>
 800133e:	4602      	mov	r2, r0
 8001340:	460b      	mov	r3, r1
 8001342:	4614      	mov	r4, r2
 8001344:	461d      	mov	r5, r3
 8001346:	68f8      	ldr	r0, [r7, #12]
 8001348:	f7ff f8b0 	bl	80004ac <__aeabi_i2d>
 800134c:	a312      	add	r3, pc, #72	@ (adr r3, 8001398 <__encoder_update+0x148>)
 800134e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001352:	f7ff f915 	bl	8000580 <__aeabi_dmul>
 8001356:	4602      	mov	r2, r0
 8001358:	460b      	mov	r3, r1
 800135a:	4620      	mov	r0, r4
 800135c:	4629      	mov	r1, r5
 800135e:	f7fe ff59 	bl	8000214 <__adddf3>
 8001362:	4602      	mov	r2, r0
 8001364:	460b      	mov	r3, r1
 8001366:	4610      	mov	r0, r2
 8001368:	4619      	mov	r1, r3
 800136a:	f7ff fbb9 	bl	8000ae0 <__aeabi_d2iz>
 800136e:	4602      	mov	r2, r0
 8001370:	687b      	ldr	r3, [r7, #4]
 8001372:	611a      	str	r2, [r3, #16]
	e->last_count = cur_cnt;
 8001374:	687b      	ldr	r3, [r7, #4]
 8001376:	693a      	ldr	r2, [r7, #16]
 8001378:	605a      	str	r2, [r3, #4]
}
 800137a:	bf00      	nop
 800137c:	3718      	adds	r7, #24
 800137e:	46bd      	mov	sp, r7
 8001380:	bdb0      	pop	{r4, r5, r7, pc}
 8001382:	bf00      	nop
 8001384:	f3af 8000 	nop.w
 8001388:	47ae147b 	.word	0x47ae147b
 800138c:	3f747ae1 	.word	0x3f747ae1
 8001390:	66666666 	.word	0x66666666
 8001394:	3fee6666 	.word	0x3fee6666
 8001398:	999999a0 	.word	0x999999a0
 800139c:	3fa99999 	.word	0x3fa99999

080013a0 <encoder_get_velocity_rps>:

float encoder_get_velocity_rps(encoder_t *e) {
 80013a0:	b580      	push	{r7, lr}
 80013a2:	b082      	sub	sp, #8
 80013a4:	af00      	add	r7, sp, #0
 80013a6:	6078      	str	r0, [r7, #4]
	__encoder_update(e);
 80013a8:	6878      	ldr	r0, [r7, #4]
 80013aa:	f7ff ff51 	bl	8001250 <__encoder_update>
	return e->velocity_pps / (float) e->ppr;
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	691b      	ldr	r3, [r3, #16]
 80013b2:	ee07 3a90 	vmov	s15, r3
 80013b6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80013ba:	687b      	ldr	r3, [r7, #4]
 80013bc:	891b      	ldrh	r3, [r3, #8]
 80013be:	ee07 3a90 	vmov	s15, r3
 80013c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80013c6:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80013ca:	eef0 7a66 	vmov.f32	s15, s13
}
 80013ce:	eeb0 0a67 	vmov.f32	s0, s15
 80013d2:	3708      	adds	r7, #8
 80013d4:	46bd      	mov	sp, r7
 80013d6:	bd80      	pop	{r7, pc}

080013d8 <encoder_get_velocity_rpm>:

float encoder_get_velocity_rpm(encoder_t *e) {
 80013d8:	b580      	push	{r7, lr}
 80013da:	b082      	sub	sp, #8
 80013dc:	af00      	add	r7, sp, #0
 80013de:	6078      	str	r0, [r7, #4]
	return encoder_get_velocity_rps(e) * 60.0;
 80013e0:	6878      	ldr	r0, [r7, #4]
 80013e2:	f7ff ffdd 	bl	80013a0 <encoder_get_velocity_rps>
 80013e6:	ee10 3a10 	vmov	r3, s0
 80013ea:	4618      	mov	r0, r3
 80013ec:	f7ff f870 	bl	80004d0 <__aeabi_f2d>
 80013f0:	f04f 0200 	mov.w	r2, #0
 80013f4:	4b08      	ldr	r3, [pc, #32]	@ (8001418 <encoder_get_velocity_rpm+0x40>)
 80013f6:	f7ff f8c3 	bl	8000580 <__aeabi_dmul>
 80013fa:	4602      	mov	r2, r0
 80013fc:	460b      	mov	r3, r1
 80013fe:	4610      	mov	r0, r2
 8001400:	4619      	mov	r1, r3
 8001402:	f7ff fbb5 	bl	8000b70 <__aeabi_d2f>
 8001406:	4603      	mov	r3, r0
 8001408:	ee07 3a90 	vmov	s15, r3
}
 800140c:	eeb0 0a67 	vmov.f32	s0, s15
 8001410:	3708      	adds	r7, #8
 8001412:	46bd      	mov	sp, r7
 8001414:	bd80      	pop	{r7, pc}
 8001416:	bf00      	nop
 8001418:	404e0000 	.word	0x404e0000

0800141c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 800141c:	b580      	push	{r7, lr}
 800141e:	b088      	sub	sp, #32
 8001420:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001422:	f107 030c 	add.w	r3, r7, #12
 8001426:	2200      	movs	r2, #0
 8001428:	601a      	str	r2, [r3, #0]
 800142a:	605a      	str	r2, [r3, #4]
 800142c:	609a      	str	r2, [r3, #8]
 800142e:	60da      	str	r2, [r3, #12]
 8001430:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001432:	2300      	movs	r3, #0
 8001434:	60bb      	str	r3, [r7, #8]
 8001436:	4b20      	ldr	r3, [pc, #128]	@ (80014b8 <MX_GPIO_Init+0x9c>)
 8001438:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800143a:	4a1f      	ldr	r2, [pc, #124]	@ (80014b8 <MX_GPIO_Init+0x9c>)
 800143c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001440:	6313      	str	r3, [r2, #48]	@ 0x30
 8001442:	4b1d      	ldr	r3, [pc, #116]	@ (80014b8 <MX_GPIO_Init+0x9c>)
 8001444:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001446:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800144a:	60bb      	str	r3, [r7, #8]
 800144c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800144e:	2300      	movs	r3, #0
 8001450:	607b      	str	r3, [r7, #4]
 8001452:	4b19      	ldr	r3, [pc, #100]	@ (80014b8 <MX_GPIO_Init+0x9c>)
 8001454:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001456:	4a18      	ldr	r2, [pc, #96]	@ (80014b8 <MX_GPIO_Init+0x9c>)
 8001458:	f043 0301 	orr.w	r3, r3, #1
 800145c:	6313      	str	r3, [r2, #48]	@ 0x30
 800145e:	4b16      	ldr	r3, [pc, #88]	@ (80014b8 <MX_GPIO_Init+0x9c>)
 8001460:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001462:	f003 0301 	and.w	r3, r3, #1
 8001466:	607b      	str	r3, [r7, #4]
 8001468:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800146a:	2300      	movs	r3, #0
 800146c:	603b      	str	r3, [r7, #0]
 800146e:	4b12      	ldr	r3, [pc, #72]	@ (80014b8 <MX_GPIO_Init+0x9c>)
 8001470:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001472:	4a11      	ldr	r2, [pc, #68]	@ (80014b8 <MX_GPIO_Init+0x9c>)
 8001474:	f043 0302 	orr.w	r3, r3, #2
 8001478:	6313      	str	r3, [r2, #48]	@ 0x30
 800147a:	4b0f      	ldr	r3, [pc, #60]	@ (80014b8 <MX_GPIO_Init+0x9c>)
 800147c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800147e:	f003 0302 	and.w	r3, r3, #2
 8001482:	603b      	str	r3, [r7, #0]
 8001484:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Direction_GPIO_Port, Direction_Pin, GPIO_PIN_RESET);
 8001486:	2200      	movs	r2, #0
 8001488:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800148c:	480b      	ldr	r0, [pc, #44]	@ (80014bc <MX_GPIO_Init+0xa0>)
 800148e:	f001 fc97 	bl	8002dc0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Direction_Pin;
 8001492:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001496:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001498:	2301      	movs	r3, #1
 800149a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800149c:	2302      	movs	r3, #2
 800149e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014a0:	2300      	movs	r3, #0
 80014a2:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(Direction_GPIO_Port, &GPIO_InitStruct);
 80014a4:	f107 030c 	add.w	r3, r7, #12
 80014a8:	4619      	mov	r1, r3
 80014aa:	4804      	ldr	r0, [pc, #16]	@ (80014bc <MX_GPIO_Init+0xa0>)
 80014ac:	f001 fadc 	bl	8002a68 <HAL_GPIO_Init>

}
 80014b0:	bf00      	nop
 80014b2:	3720      	adds	r7, #32
 80014b4:	46bd      	mov	sp, r7
 80014b6:	bd80      	pop	{r7, pc}
 80014b8:	40023800 	.word	0x40023800
 80014bc:	40020400 	.word	0x40020400

080014c0 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 80014c0:	b580      	push	{r7, lr}
 80014c2:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN I2C1_Init 0 */
 //To reset a previously used I2C channel
  I2C_ClearBusyBus();
 80014c4:	f000 f874 	bl	80015b0 <I2C_ClearBusyBus>
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80014c8:	4b12      	ldr	r3, [pc, #72]	@ (8001514 <MX_I2C1_Init+0x54>)
 80014ca:	4a13      	ldr	r2, [pc, #76]	@ (8001518 <MX_I2C1_Init+0x58>)
 80014cc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 80014ce:	4b11      	ldr	r3, [pc, #68]	@ (8001514 <MX_I2C1_Init+0x54>)
 80014d0:	4a12      	ldr	r2, [pc, #72]	@ (800151c <MX_I2C1_Init+0x5c>)
 80014d2:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80014d4:	4b0f      	ldr	r3, [pc, #60]	@ (8001514 <MX_I2C1_Init+0x54>)
 80014d6:	2200      	movs	r2, #0
 80014d8:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80014da:	4b0e      	ldr	r3, [pc, #56]	@ (8001514 <MX_I2C1_Init+0x54>)
 80014dc:	2200      	movs	r2, #0
 80014de:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80014e0:	4b0c      	ldr	r3, [pc, #48]	@ (8001514 <MX_I2C1_Init+0x54>)
 80014e2:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80014e6:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80014e8:	4b0a      	ldr	r3, [pc, #40]	@ (8001514 <MX_I2C1_Init+0x54>)
 80014ea:	2200      	movs	r2, #0
 80014ec:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80014ee:	4b09      	ldr	r3, [pc, #36]	@ (8001514 <MX_I2C1_Init+0x54>)
 80014f0:	2200      	movs	r2, #0
 80014f2:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80014f4:	4b07      	ldr	r3, [pc, #28]	@ (8001514 <MX_I2C1_Init+0x54>)
 80014f6:	2200      	movs	r2, #0
 80014f8:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80014fa:	4b06      	ldr	r3, [pc, #24]	@ (8001514 <MX_I2C1_Init+0x54>)
 80014fc:	2200      	movs	r2, #0
 80014fe:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001500:	4804      	ldr	r0, [pc, #16]	@ (8001514 <MX_I2C1_Init+0x54>)
 8001502:	f001 fc77 	bl	8002df4 <HAL_I2C_Init>
 8001506:	4603      	mov	r3, r0
 8001508:	2b00      	cmp	r3, #0
 800150a:	d001      	beq.n	8001510 <MX_I2C1_Init+0x50>
  {
    Error_Handler();
 800150c:	f000 fa8c 	bl	8001a28 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001510:	bf00      	nop
 8001512:	bd80      	pop	{r7, pc}
 8001514:	200000cc 	.word	0x200000cc
 8001518:	40005400 	.word	0x40005400
 800151c:	00061a80 	.word	0x00061a80

08001520 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8001520:	b580      	push	{r7, lr}
 8001522:	b08a      	sub	sp, #40	@ 0x28
 8001524:	af00      	add	r7, sp, #0
 8001526:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001528:	f107 0314 	add.w	r3, r7, #20
 800152c:	2200      	movs	r2, #0
 800152e:	601a      	str	r2, [r3, #0]
 8001530:	605a      	str	r2, [r3, #4]
 8001532:	609a      	str	r2, [r3, #8]
 8001534:	60da      	str	r2, [r3, #12]
 8001536:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8001538:	687b      	ldr	r3, [r7, #4]
 800153a:	681b      	ldr	r3, [r3, #0]
 800153c:	4a19      	ldr	r2, [pc, #100]	@ (80015a4 <HAL_I2C_MspInit+0x84>)
 800153e:	4293      	cmp	r3, r2
 8001540:	d12c      	bne.n	800159c <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001542:	2300      	movs	r3, #0
 8001544:	613b      	str	r3, [r7, #16]
 8001546:	4b18      	ldr	r3, [pc, #96]	@ (80015a8 <HAL_I2C_MspInit+0x88>)
 8001548:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800154a:	4a17      	ldr	r2, [pc, #92]	@ (80015a8 <HAL_I2C_MspInit+0x88>)
 800154c:	f043 0302 	orr.w	r3, r3, #2
 8001550:	6313      	str	r3, [r2, #48]	@ 0x30
 8001552:	4b15      	ldr	r3, [pc, #84]	@ (80015a8 <HAL_I2C_MspInit+0x88>)
 8001554:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001556:	f003 0302 	and.w	r3, r3, #2
 800155a:	613b      	str	r3, [r7, #16]
 800155c:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 800155e:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8001562:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001564:	2312      	movs	r3, #18
 8001566:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001568:	2301      	movs	r3, #1
 800156a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800156c:	2303      	movs	r3, #3
 800156e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001570:	2304      	movs	r3, #4
 8001572:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001574:	f107 0314 	add.w	r3, r7, #20
 8001578:	4619      	mov	r1, r3
 800157a:	480c      	ldr	r0, [pc, #48]	@ (80015ac <HAL_I2C_MspInit+0x8c>)
 800157c:	f001 fa74 	bl	8002a68 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001580:	2300      	movs	r3, #0
 8001582:	60fb      	str	r3, [r7, #12]
 8001584:	4b08      	ldr	r3, [pc, #32]	@ (80015a8 <HAL_I2C_MspInit+0x88>)
 8001586:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001588:	4a07      	ldr	r2, [pc, #28]	@ (80015a8 <HAL_I2C_MspInit+0x88>)
 800158a:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800158e:	6413      	str	r3, [r2, #64]	@ 0x40
 8001590:	4b05      	ldr	r3, [pc, #20]	@ (80015a8 <HAL_I2C_MspInit+0x88>)
 8001592:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001594:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001598:	60fb      	str	r3, [r7, #12]
 800159a:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 800159c:	bf00      	nop
 800159e:	3728      	adds	r7, #40	@ 0x28
 80015a0:	46bd      	mov	sp, r7
 80015a2:	bd80      	pop	{r7, pc}
 80015a4:	40005400 	.word	0x40005400
 80015a8:	40023800 	.word	0x40023800
 80015ac:	40020400 	.word	0x40020400

080015b0 <I2C_ClearBusyBus>:
}

/* USER CODE BEGIN 1 */
/* To reset a previously used I2C channel  */
void I2C_ClearBusyBus(void)
{
 80015b0:	b580      	push	{r7, lr}
 80015b2:	b086      	sub	sp, #24
 80015b4:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015b6:	463b      	mov	r3, r7
 80015b8:	2200      	movs	r2, #0
 80015ba:	601a      	str	r2, [r3, #0]
 80015bc:	605a      	str	r2, [r3, #4]
 80015be:	609a      	str	r2, [r3, #8]
 80015c0:	60da      	str	r2, [r3, #12]
 80015c2:	611a      	str	r2, [r3, #16]

    // Configure SCL and SDA as output for manual control
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 80015c4:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80015c8:	603b      	str	r3, [r7, #0]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80015ca:	2304      	movs	r3, #4
 80015cc:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;  // Open-drain mode
 80015ce:	2311      	movs	r3, #17
 80015d0:	607b      	str	r3, [r7, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d2:	2300      	movs	r3, #0
 80015d4:	60bb      	str	r3, [r7, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015d6:	2302      	movs	r3, #2
 80015d8:	60fb      	str	r3, [r7, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015da:	463b      	mov	r3, r7
 80015dc:	4619      	mov	r1, r3
 80015de:	4825      	ldr	r0, [pc, #148]	@ (8001674 <I2C_ClearBusyBus+0xc4>)
 80015e0:	f001 fa42 	bl	8002a68 <HAL_GPIO_Init>

    // Set both SCL and SDA to high initially
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 80015e4:	2201      	movs	r2, #1
 80015e6:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80015ea:	4822      	ldr	r0, [pc, #136]	@ (8001674 <I2C_ClearBusyBus+0xc4>)
 80015ec:	f001 fbe8 	bl	8002dc0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
 80015f0:	2201      	movs	r2, #1
 80015f2:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80015f6:	481f      	ldr	r0, [pc, #124]	@ (8001674 <I2C_ClearBusyBus+0xc4>)
 80015f8:	f001 fbe2 	bl	8002dc0 <HAL_GPIO_WritePin>

    // Ensure SDA is high (released)
    if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_9) == GPIO_PIN_RESET)
 80015fc:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001600:	481c      	ldr	r0, [pc, #112]	@ (8001674 <I2C_ClearBusyBus+0xc4>)
 8001602:	f001 fbc5 	bl	8002d90 <HAL_GPIO_ReadPin>
 8001606:	4603      	mov	r3, r0
 8001608:	2b00      	cmp	r3, #0
 800160a:	d11a      	bne.n	8001642 <I2C_ClearBusyBus+0x92>
    {
        // SDA is stuck low, so generate 9 clock pulses
        for (int i = 0; i < 9; i++)
 800160c:	2300      	movs	r3, #0
 800160e:	617b      	str	r3, [r7, #20]
 8001610:	e014      	b.n	800163c <I2C_ClearBusyBus+0x8c>
        {
            // Toggle the SCL pin to generate a clock pulse
            HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_RESET);
 8001612:	2200      	movs	r2, #0
 8001614:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001618:	4816      	ldr	r0, [pc, #88]	@ (8001674 <I2C_ClearBusyBus+0xc4>)
 800161a:	f001 fbd1 	bl	8002dc0 <HAL_GPIO_WritePin>
            HAL_Delay(1); // Small delay to simulate clock cycle
 800161e:	2001      	movs	r0, #1
 8001620:	f001 f8ec 	bl	80027fc <HAL_Delay>
            HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 8001624:	2201      	movs	r2, #1
 8001626:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800162a:	4812      	ldr	r0, [pc, #72]	@ (8001674 <I2C_ClearBusyBus+0xc4>)
 800162c:	f001 fbc8 	bl	8002dc0 <HAL_GPIO_WritePin>
            HAL_Delay(1);
 8001630:	2001      	movs	r0, #1
 8001632:	f001 f8e3 	bl	80027fc <HAL_Delay>
        for (int i = 0; i < 9; i++)
 8001636:	697b      	ldr	r3, [r7, #20]
 8001638:	3301      	adds	r3, #1
 800163a:	617b      	str	r3, [r7, #20]
 800163c:	697b      	ldr	r3, [r7, #20]
 800163e:	2b08      	cmp	r3, #8
 8001640:	dde7      	ble.n	8001612 <I2C_ClearBusyBus+0x62>
        }
    }

    // After the clock cycles, set SDA and SCL back to high
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 8001642:	2201      	movs	r2, #1
 8001644:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001648:	480a      	ldr	r0, [pc, #40]	@ (8001674 <I2C_ClearBusyBus+0xc4>)
 800164a:	f001 fbb9 	bl	8002dc0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
 800164e:	2201      	movs	r2, #1
 8001650:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001654:	4807      	ldr	r0, [pc, #28]	@ (8001674 <I2C_ClearBusyBus+0xc4>)
 8001656:	f001 fbb3 	bl	8002dc0 <HAL_GPIO_WritePin>

    // Reconfigure the pins back to I2C mode
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;  // Alternate function open-drain for I2C
 800165a:	2312      	movs	r3, #18
 800165c:	607b      	str	r3, [r7, #4]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1; // Adjust according to your I2C peripheral
 800165e:	2304      	movs	r3, #4
 8001660:	613b      	str	r3, [r7, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001662:	463b      	mov	r3, r7
 8001664:	4619      	mov	r1, r3
 8001666:	4803      	ldr	r0, [pc, #12]	@ (8001674 <I2C_ClearBusyBus+0xc4>)
 8001668:	f001 f9fe 	bl	8002a68 <HAL_GPIO_Init>
}
 800166c:	bf00      	nop
 800166e:	3718      	adds	r7, #24
 8001670:	46bd      	mov	sp, r7
 8001672:	bd80      	pop	{r7, pc}
 8001674:	40020400 	.word	0x40020400

08001678 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001678:	b580      	push	{r7, lr}
 800167a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800167c:	f001 f84c 	bl	8002718 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001680:	f000 f8c4 	bl	800180c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001684:	f7ff feca 	bl	800141c <MX_GPIO_Init>
  MX_TIM5_Init();
 8001688:	f000 feda 	bl	8002440 <MX_TIM5_Init>
  MX_I2C1_Init();
 800168c:	f7ff ff18 	bl	80014c0 <MX_I2C1_Init>
  MX_TIM3_Init();
 8001690:	f000 fe88 	bl	80023a4 <MX_TIM3_Init>
  MX_TIM1_Init();
 8001694:	f000 fde0 	bl	8002258 <MX_TIM1_Init>
  MX_TIM2_Init();
 8001698:	f000 fe36 	bl	8002308 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
	pid_init(&pid_in, Kp_in, Ki_in, Kd_in, -max_pwm, max_pwm);
 800169c:	4b4a      	ldr	r3, [pc, #296]	@ (80017c8 <main+0x150>)
 800169e:	ed93 7a00 	vldr	s14, [r3]
 80016a2:	4b4a      	ldr	r3, [pc, #296]	@ (80017cc <main+0x154>)
 80016a4:	edd3 6a00 	vldr	s13, [r3]
 80016a8:	4b49      	ldr	r3, [pc, #292]	@ (80017d0 <main+0x158>)
 80016aa:	ed93 6a00 	vldr	s12, [r3]
 80016ae:	4b49      	ldr	r3, [pc, #292]	@ (80017d4 <main+0x15c>)
 80016b0:	edd3 7a00 	vldr	s15, [r3]
 80016b4:	eef1 7a67 	vneg.f32	s15, s15
 80016b8:	4b46      	ldr	r3, [pc, #280]	@ (80017d4 <main+0x15c>)
 80016ba:	edd3 5a00 	vldr	s11, [r3]
 80016be:	eeb0 2a65 	vmov.f32	s4, s11
 80016c2:	eef0 1a67 	vmov.f32	s3, s15
 80016c6:	eeb0 1a46 	vmov.f32	s2, s12
 80016ca:	eef0 0a66 	vmov.f32	s1, s13
 80016ce:	eeb0 0a47 	vmov.f32	s0, s14
 80016d2:	4841      	ldr	r0, [pc, #260]	@ (80017d8 <main+0x160>)
 80016d4:	f000 fbca 	bl	8001e6c <pid_init>
	pid_init(&pid_ex, Kp_ex, Ki_ex, Kd_ex, -max_rpm, max_rpm);
 80016d8:	4b40      	ldr	r3, [pc, #256]	@ (80017dc <main+0x164>)
 80016da:	ed93 7a00 	vldr	s14, [r3]
 80016de:	4b40      	ldr	r3, [pc, #256]	@ (80017e0 <main+0x168>)
 80016e0:	edd3 6a00 	vldr	s13, [r3]
 80016e4:	4b3f      	ldr	r3, [pc, #252]	@ (80017e4 <main+0x16c>)
 80016e6:	ed93 6a00 	vldr	s12, [r3]
 80016ea:	4b3f      	ldr	r3, [pc, #252]	@ (80017e8 <main+0x170>)
 80016ec:	edd3 7a00 	vldr	s15, [r3]
 80016f0:	eef1 7a67 	vneg.f32	s15, s15
 80016f4:	4b3c      	ldr	r3, [pc, #240]	@ (80017e8 <main+0x170>)
 80016f6:	edd3 5a00 	vldr	s11, [r3]
 80016fa:	eeb0 2a65 	vmov.f32	s4, s11
 80016fe:	eef0 1a67 	vmov.f32	s3, s15
 8001702:	eeb0 1a46 	vmov.f32	s2, s12
 8001706:	eef0 0a66 	vmov.f32	s1, s13
 800170a:	eeb0 0a47 	vmov.f32	s0, s14
 800170e:	4837      	ldr	r0, [pc, #220]	@ (80017ec <main+0x174>)
 8001710:	f000 fbac 	bl	8001e6c <pid_init>

	pid_ex.neg_deadzone = set_point_angle - 0.4;
 8001714:	4b36      	ldr	r3, [pc, #216]	@ (80017f0 <main+0x178>)
 8001716:	681b      	ldr	r3, [r3, #0]
 8001718:	4618      	mov	r0, r3
 800171a:	f7fe fed9 	bl	80004d0 <__aeabi_f2d>
 800171e:	a328      	add	r3, pc, #160	@ (adr r3, 80017c0 <main+0x148>)
 8001720:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001724:	f7fe fd74 	bl	8000210 <__aeabi_dsub>
 8001728:	4602      	mov	r2, r0
 800172a:	460b      	mov	r3, r1
 800172c:	4610      	mov	r0, r2
 800172e:	4619      	mov	r1, r3
 8001730:	f7ff fa1e 	bl	8000b70 <__aeabi_d2f>
 8001734:	4603      	mov	r3, r0
 8001736:	4a2d      	ldr	r2, [pc, #180]	@ (80017ec <main+0x174>)
 8001738:	6253      	str	r3, [r2, #36]	@ 0x24
	pid_ex.pos_deadzone = set_point_angle + 0.4;
 800173a:	4b2d      	ldr	r3, [pc, #180]	@ (80017f0 <main+0x178>)
 800173c:	681b      	ldr	r3, [r3, #0]
 800173e:	4618      	mov	r0, r3
 8001740:	f7fe fec6 	bl	80004d0 <__aeabi_f2d>
 8001744:	a31e      	add	r3, pc, #120	@ (adr r3, 80017c0 <main+0x148>)
 8001746:	e9d3 2300 	ldrd	r2, r3, [r3]
 800174a:	f7fe fd63 	bl	8000214 <__adddf3>
 800174e:	4602      	mov	r2, r0
 8001750:	460b      	mov	r3, r1
 8001752:	4610      	mov	r0, r2
 8001754:	4619      	mov	r1, r3
 8001756:	f7ff fa0b 	bl	8000b70 <__aeabi_d2f>
 800175a:	4603      	mov	r3, r0
 800175c:	4a23      	ldr	r2, [pc, #140]	@ (80017ec <main+0x174>)
 800175e:	6293      	str	r3, [r2, #40]	@ 0x28
	pid_ex.neg_deadzone = -15;
 8001760:	4b22      	ldr	r3, [pc, #136]	@ (80017ec <main+0x174>)
 8001762:	4a24      	ldr	r2, [pc, #144]	@ (80017f4 <main+0x17c>)
 8001764:	625a      	str	r2, [r3, #36]	@ 0x24
	pid_ex.pos_deadzone = set_point_angle + 15;
 8001766:	4b22      	ldr	r3, [pc, #136]	@ (80017f0 <main+0x178>)
 8001768:	edd3 7a00 	vldr	s15, [r3]
 800176c:	eeb2 7a0e 	vmov.f32	s14, #46	@ 0x41700000  15.0
 8001770:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001774:	4b1d      	ldr	r3, [pc, #116]	@ (80017ec <main+0x174>)
 8001776:	edc3 7a0a 	vstr	s15, [r3, #40]	@ 0x28

	pid_set_setpoint(&pid_ex, set_point_angle);
 800177a:	4b1d      	ldr	r3, [pc, #116]	@ (80017f0 <main+0x178>)
 800177c:	edd3 7a00 	vldr	s15, [r3]
 8001780:	eeb0 0a67 	vmov.f32	s0, s15
 8001784:	4819      	ldr	r0, [pc, #100]	@ (80017ec <main+0x174>)
 8001786:	f000 fb9f 	bl	8001ec8 <pid_set_setpoint>
	status = mpu6050_init();
 800178a:	f000 f953 	bl	8001a34 <mpu6050_init>
 800178e:	4603      	mov	r3, r0
 8001790:	461a      	mov	r2, r3
 8001792:	4b19      	ldr	r3, [pc, #100]	@ (80017f8 <main+0x180>)
 8001794:	701a      	strb	r2, [r3, #0]
	nidec_h24_init();
 8001796:	f000 fabb 	bl	8001d10 <nidec_h24_init>
	encoder_init(&enc, AB, &htim1, 100);
 800179a:	2364      	movs	r3, #100	@ 0x64
 800179c:	4a17      	ldr	r2, [pc, #92]	@ (80017fc <main+0x184>)
 800179e:	213c      	movs	r1, #60	@ 0x3c
 80017a0:	4817      	ldr	r0, [pc, #92]	@ (8001800 <main+0x188>)
 80017a2:	f7ff fd13 	bl	80011cc <encoder_init>
	HAL_TIM_Base_Start_IT(&htim2);
 80017a6:	4817      	ldr	r0, [pc, #92]	@ (8001804 <main+0x18c>)
 80017a8:	f003 fa7c 	bl	8004ca4 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start_IT(&htim3);
 80017ac:	4816      	ldr	r0, [pc, #88]	@ (8001808 <main+0x190>)
 80017ae:	f003 fa79 	bl	8004ca4 <HAL_TIM_Base_Start_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1) {
		HAL_Delay(1);
 80017b2:	2001      	movs	r0, #1
 80017b4:	f001 f822 	bl	80027fc <HAL_Delay>
 80017b8:	e7fb      	b.n	80017b2 <main+0x13a>
 80017ba:	bf00      	nop
 80017bc:	f3af 8000 	nop.w
 80017c0:	9999999a 	.word	0x9999999a
 80017c4:	3fd99999 	.word	0x3fd99999
 80017c8:	20000000 	.word	0x20000000
 80017cc:	20000004 	.word	0x20000004
 80017d0:	20000008 	.word	0x20000008
 80017d4:	20000024 	.word	0x20000024
 80017d8:	20000150 	.word	0x20000150
 80017dc:	2000000c 	.word	0x2000000c
 80017e0:	20000010 	.word	0x20000010
 80017e4:	20000014 	.word	0x20000014
 80017e8:	20000020 	.word	0x20000020
 80017ec:	20000188 	.word	0x20000188
 80017f0:	20000018 	.word	0x20000018
 80017f4:	c1700000 	.word	0xc1700000
 80017f8:	20000138 	.word	0x20000138
 80017fc:	200001e8 	.word	0x200001e8
 8001800:	2000013c 	.word	0x2000013c
 8001804:	20000230 	.word	0x20000230
 8001808:	20000278 	.word	0x20000278

0800180c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800180c:	b580      	push	{r7, lr}
 800180e:	b094      	sub	sp, #80	@ 0x50
 8001810:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001812:	f107 031c 	add.w	r3, r7, #28
 8001816:	2234      	movs	r2, #52	@ 0x34
 8001818:	2100      	movs	r1, #0
 800181a:	4618      	mov	r0, r3
 800181c:	f004 fb4c 	bl	8005eb8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001820:	f107 0308 	add.w	r3, r7, #8
 8001824:	2200      	movs	r2, #0
 8001826:	601a      	str	r2, [r3, #0]
 8001828:	605a      	str	r2, [r3, #4]
 800182a:	609a      	str	r2, [r3, #8]
 800182c:	60da      	str	r2, [r3, #12]
 800182e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001830:	2300      	movs	r3, #0
 8001832:	607b      	str	r3, [r7, #4]
 8001834:	4b29      	ldr	r3, [pc, #164]	@ (80018dc <SystemClock_Config+0xd0>)
 8001836:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001838:	4a28      	ldr	r2, [pc, #160]	@ (80018dc <SystemClock_Config+0xd0>)
 800183a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800183e:	6413      	str	r3, [r2, #64]	@ 0x40
 8001840:	4b26      	ldr	r3, [pc, #152]	@ (80018dc <SystemClock_Config+0xd0>)
 8001842:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001844:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001848:	607b      	str	r3, [r7, #4]
 800184a:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 800184c:	2300      	movs	r3, #0
 800184e:	603b      	str	r3, [r7, #0]
 8001850:	4b23      	ldr	r3, [pc, #140]	@ (80018e0 <SystemClock_Config+0xd4>)
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8001858:	4a21      	ldr	r2, [pc, #132]	@ (80018e0 <SystemClock_Config+0xd4>)
 800185a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800185e:	6013      	str	r3, [r2, #0]
 8001860:	4b1f      	ldr	r3, [pc, #124]	@ (80018e0 <SystemClock_Config+0xd4>)
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001868:	603b      	str	r3, [r7, #0]
 800186a:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800186c:	2302      	movs	r3, #2
 800186e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001870:	2301      	movs	r3, #1
 8001872:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001874:	2310      	movs	r3, #16
 8001876:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001878:	2302      	movs	r3, #2
 800187a:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800187c:	2300      	movs	r3, #0
 800187e:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001880:	2308      	movs	r3, #8
 8001882:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 84;
 8001884:	2354      	movs	r3, #84	@ 0x54
 8001886:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001888:	2302      	movs	r3, #2
 800188a:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800188c:	2302      	movs	r3, #2
 800188e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8001890:	2302      	movs	r3, #2
 8001892:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001894:	f107 031c 	add.w	r3, r7, #28
 8001898:	4618      	mov	r0, r3
 800189a:	f002 fead 	bl	80045f8 <HAL_RCC_OscConfig>
 800189e:	4603      	mov	r3, r0
 80018a0:	2b00      	cmp	r3, #0
 80018a2:	d001      	beq.n	80018a8 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 80018a4:	f000 f8c0 	bl	8001a28 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80018a8:	230f      	movs	r3, #15
 80018aa:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80018ac:	2302      	movs	r3, #2
 80018ae:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80018b0:	2300      	movs	r3, #0
 80018b2:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80018b4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80018b8:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80018ba:	2300      	movs	r3, #0
 80018bc:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80018be:	f107 0308 	add.w	r3, r7, #8
 80018c2:	2102      	movs	r1, #2
 80018c4:	4618      	mov	r0, r3
 80018c6:	f002 fbe7 	bl	8004098 <HAL_RCC_ClockConfig>
 80018ca:	4603      	mov	r3, r0
 80018cc:	2b00      	cmp	r3, #0
 80018ce:	d001      	beq.n	80018d4 <SystemClock_Config+0xc8>
  {
    Error_Handler();
 80018d0:	f000 f8aa 	bl	8001a28 <Error_Handler>
  }
}
 80018d4:	bf00      	nop
 80018d6:	3750      	adds	r7, #80	@ 0x50
 80018d8:	46bd      	mov	sp, r7
 80018da:	bd80      	pop	{r7, pc}
 80018dc:	40023800 	.word	0x40023800
 80018e0:	40007000 	.word	0x40007000

080018e4 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 80018e4:	b5b0      	push	{r4, r5, r7, lr}
 80018e6:	b088      	sub	sp, #32
 80018e8:	af00      	add	r7, sp, #0
 80018ea:	61f8      	str	r0, [r7, #28]
	if (htim->Instance == TIM3) {
 80018ec:	69fb      	ldr	r3, [r7, #28]
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	4a41      	ldr	r2, [pc, #260]	@ (80019f8 <HAL_TIM_PeriodElapsedCallback+0x114>)
 80018f2:	4293      	cmp	r3, r2
 80018f4:	d151      	bne.n	800199a <HAL_TIM_PeriodElapsedCallback+0xb6>
		data = mpu6050_data();
 80018f6:	4c41      	ldr	r4, [pc, #260]	@ (80019fc <HAL_TIM_PeriodElapsedCallback+0x118>)
 80018f8:	463b      	mov	r3, r7
 80018fa:	4618      	mov	r0, r3
 80018fc:	f000 f944 	bl	8001b88 <mpu6050_data>
 8001900:	4625      	mov	r5, r4
 8001902:	463c      	mov	r4, r7
 8001904:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001906:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001908:	e894 0003 	ldmia.w	r4, {r0, r1}
 800190c:	e885 0003 	stmia.w	r5, {r0, r1}
		updateOrientation(data.ax, data.ay, data.az, data.gx, data.gy, data.gz);
 8001910:	4b3a      	ldr	r3, [pc, #232]	@ (80019fc <HAL_TIM_PeriodElapsedCallback+0x118>)
 8001912:	edd3 7a00 	vldr	s15, [r3]
 8001916:	4b39      	ldr	r3, [pc, #228]	@ (80019fc <HAL_TIM_PeriodElapsedCallback+0x118>)
 8001918:	ed93 7a01 	vldr	s14, [r3, #4]
 800191c:	4b37      	ldr	r3, [pc, #220]	@ (80019fc <HAL_TIM_PeriodElapsedCallback+0x118>)
 800191e:	edd3 6a02 	vldr	s13, [r3, #8]
 8001922:	4b36      	ldr	r3, [pc, #216]	@ (80019fc <HAL_TIM_PeriodElapsedCallback+0x118>)
 8001924:	ed93 6a03 	vldr	s12, [r3, #12]
 8001928:	4b34      	ldr	r3, [pc, #208]	@ (80019fc <HAL_TIM_PeriodElapsedCallback+0x118>)
 800192a:	edd3 5a04 	vldr	s11, [r3, #16]
 800192e:	4b33      	ldr	r3, [pc, #204]	@ (80019fc <HAL_TIM_PeriodElapsedCallback+0x118>)
 8001930:	ed93 5a05 	vldr	s10, [r3, #20]
 8001934:	eef0 2a45 	vmov.f32	s5, s10
 8001938:	eeb0 2a65 	vmov.f32	s4, s11
 800193c:	eef0 1a46 	vmov.f32	s3, s12
 8001940:	eeb0 1a66 	vmov.f32	s2, s13
 8001944:	eef0 0a47 	vmov.f32	s1, s14
 8001948:	eeb0 0a67 	vmov.f32	s0, s15
 800194c:	f7ff fad8 	bl	8000f00 <updateOrientation>
		//rpm_r = pid_compute_control_action(&pid_ex, or.pitch);


		if (fabs(or.pitch - set_point_angle) < max_angle) {
 8001950:	4b2b      	ldr	r3, [pc, #172]	@ (8001a00 <HAL_TIM_PeriodElapsedCallback+0x11c>)
 8001952:	ed93 7a00 	vldr	s14, [r3]
 8001956:	4b2b      	ldr	r3, [pc, #172]	@ (8001a04 <HAL_TIM_PeriodElapsedCallback+0x120>)
 8001958:	edd3 7a00 	vldr	s15, [r3]
 800195c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001960:	eeb0 7ae7 	vabs.f32	s14, s15
 8001964:	4b28      	ldr	r3, [pc, #160]	@ (8001a08 <HAL_TIM_PeriodElapsedCallback+0x124>)
 8001966:	edd3 7a00 	vldr	s15, [r3]
 800196a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800196e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001972:	d50d      	bpl.n	8001990 <HAL_TIM_PeriodElapsedCallback+0xac>
			rpm_r = pid_compute_control_action(&pid_ex, or.pitch);
 8001974:	4b22      	ldr	r3, [pc, #136]	@ (8001a00 <HAL_TIM_PeriodElapsedCallback+0x11c>)
 8001976:	edd3 7a00 	vldr	s15, [r3]
 800197a:	eeb0 0a67 	vmov.f32	s0, s15
 800197e:	4823      	ldr	r0, [pc, #140]	@ (8001a0c <HAL_TIM_PeriodElapsedCallback+0x128>)
 8001980:	f000 fab2 	bl	8001ee8 <pid_compute_control_action>
 8001984:	eef0 7a40 	vmov.f32	s15, s0
 8001988:	4b21      	ldr	r3, [pc, #132]	@ (8001a10 <HAL_TIM_PeriodElapsedCallback+0x12c>)
 800198a:	edc3 7a00 	vstr	s15, [r3]
 800198e:	e004      	b.n	800199a <HAL_TIM_PeriodElapsedCallback+0xb6>
		} else {
			nidec_h24_Move(0, 0);
 8001990:	2000      	movs	r0, #0
 8001992:	ed9f 0a20 	vldr	s0, [pc, #128]	@ 8001a14 <HAL_TIM_PeriodElapsedCallback+0x130>
 8001996:	f000 fa0f 	bl	8001db8 <nidec_h24_Move>
		}


	}
	if (htim->Instance == TIM2) {
 800199a:	69fb      	ldr	r3, [r7, #28]
 800199c:	681b      	ldr	r3, [r3, #0]
 800199e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80019a2:	d124      	bne.n	80019ee <HAL_TIM_PeriodElapsedCallback+0x10a>
		rpm_y = encoder_get_velocity_rpm(&enc);
 80019a4:	481c      	ldr	r0, [pc, #112]	@ (8001a18 <HAL_TIM_PeriodElapsedCallback+0x134>)
 80019a6:	f7ff fd17 	bl	80013d8 <encoder_get_velocity_rpm>
 80019aa:	eef0 7a40 	vmov.f32	s15, s0
 80019ae:	4b1b      	ldr	r3, [pc, #108]	@ (8001a1c <HAL_TIM_PeriodElapsedCallback+0x138>)
 80019b0:	edc3 7a00 	vstr	s15, [r3]
		pid_set_setpoint(&pid_in, rpm_r);
 80019b4:	4b16      	ldr	r3, [pc, #88]	@ (8001a10 <HAL_TIM_PeriodElapsedCallback+0x12c>)
 80019b6:	edd3 7a00 	vldr	s15, [r3]
 80019ba:	eeb0 0a67 	vmov.f32	s0, s15
 80019be:	4818      	ldr	r0, [pc, #96]	@ (8001a20 <HAL_TIM_PeriodElapsedCallback+0x13c>)
 80019c0:	f000 fa82 	bl	8001ec8 <pid_set_setpoint>
		pwm = pid_compute_control_action(&pid_in, rpm_y);
 80019c4:	4b15      	ldr	r3, [pc, #84]	@ (8001a1c <HAL_TIM_PeriodElapsedCallback+0x138>)
 80019c6:	edd3 7a00 	vldr	s15, [r3]
 80019ca:	eeb0 0a67 	vmov.f32	s0, s15
 80019ce:	4814      	ldr	r0, [pc, #80]	@ (8001a20 <HAL_TIM_PeriodElapsedCallback+0x13c>)
 80019d0:	f000 fa8a 	bl	8001ee8 <pid_compute_control_action>
 80019d4:	eef0 7a40 	vmov.f32	s15, s0
 80019d8:	4b12      	ldr	r3, [pc, #72]	@ (8001a24 <HAL_TIM_PeriodElapsedCallback+0x140>)
 80019da:	edc3 7a00 	vstr	s15, [r3]
		nidec_h24_Move(pwm, 1);
 80019de:	4b11      	ldr	r3, [pc, #68]	@ (8001a24 <HAL_TIM_PeriodElapsedCallback+0x140>)
 80019e0:	edd3 7a00 	vldr	s15, [r3]
 80019e4:	2001      	movs	r0, #1
 80019e6:	eeb0 0a67 	vmov.f32	s0, s15
 80019ea:	f000 f9e5 	bl	8001db8 <nidec_h24_Move>
			nidec_h24_Move(pwm, 1);
		else
			nidec_h24_Move(0, 0);
		*/
	}
}
 80019ee:	bf00      	nop
 80019f0:	3720      	adds	r7, #32
 80019f2:	46bd      	mov	sp, r7
 80019f4:	bdb0      	pop	{r4, r5, r7, pc}
 80019f6:	bf00      	nop
 80019f8:	40000400 	.word	0x40000400
 80019fc:	20000120 	.word	0x20000120
 8001a00:	200000b4 	.word	0x200000b4
 8001a04:	20000018 	.word	0x20000018
 8001a08:	2000001c 	.word	0x2000001c
 8001a0c:	20000188 	.word	0x20000188
 8001a10:	200001c8 	.word	0x200001c8
 8001a14:	00000000 	.word	0x00000000
 8001a18:	2000013c 	.word	0x2000013c
 8001a1c:	200001c4 	.word	0x200001c4
 8001a20:	20000150 	.word	0x20000150
 8001a24:	200001c0 	.word	0x200001c0

08001a28 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001a28:	b480      	push	{r7}
 8001a2a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001a2c:	b672      	cpsid	i
}
 8001a2e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8001a30:	bf00      	nop
 8001a32:	e7fd      	b.n	8001a30 <Error_Handler+0x8>

08001a34 <mpu6050_init>:
short gx_bias = 0;
short gy_bias = 0;
short gz_bias = 0;

/*mpu6050 initialization*/
HAL_StatusTypeDef mpu6050_init(){
 8001a34:	b580      	push	{r7, lr}
 8001a36:	b086      	sub	sp, #24
 8001a38:	af04      	add	r7, sp, #16
	HAL_StatusTypeDef status = HAL_I2C_IsDeviceReady(&hi2c1, IMU_ADDR, 1, 100);
 8001a3a:	2364      	movs	r3, #100	@ 0x64
 8001a3c:	2201      	movs	r2, #1
 8001a3e:	21d0      	movs	r1, #208	@ 0xd0
 8001a40:	4823      	ldr	r0, [pc, #140]	@ (8001ad0 <mpu6050_init+0x9c>)
 8001a42:	f001 fe47 	bl	80036d4 <HAL_I2C_IsDeviceReady>
 8001a46:	4603      	mov	r3, r0
 8001a48:	71fb      	strb	r3, [r7, #7]
		if (status == HAL_OK) {
 8001a4a:	79fb      	ldrb	r3, [r7, #7]
 8001a4c:	2b00      	cmp	r3, #0
 8001a4e:	d139      	bne.n	8001ac4 <mpu6050_init+0x90>
			uint8_t data;

			/* power management register 0X6B must be all 0s to wake the sensor up */
			data = 0;
 8001a50:	2300      	movs	r3, #0
 8001a52:	71bb      	strb	r3, [r7, #6]
			HAL_I2C_Mem_Write(&hi2c1, IMU_ADDR, PWR_MGMT_1_REG, 1, &data, 1, 100);
 8001a54:	2364      	movs	r3, #100	@ 0x64
 8001a56:	9302      	str	r3, [sp, #8]
 8001a58:	2301      	movs	r3, #1
 8001a5a:	9301      	str	r3, [sp, #4]
 8001a5c:	1dbb      	adds	r3, r7, #6
 8001a5e:	9300      	str	r3, [sp, #0]
 8001a60:	2301      	movs	r3, #1
 8001a62:	226b      	movs	r2, #107	@ 0x6b
 8001a64:	21d0      	movs	r1, #208	@ 0xd0
 8001a66:	481a      	ldr	r0, [pc, #104]	@ (8001ad0 <mpu6050_init+0x9c>)
 8001a68:	f001 fb08 	bl	800307c <HAL_I2C_Mem_Write>

			/* Set DATA RATE of 1KHz by writing SMPLRT_DIV register */
			data = 0x07;
 8001a6c:	2307      	movs	r3, #7
 8001a6e:	71bb      	strb	r3, [r7, #6]
			HAL_I2C_Mem_Write(&hi2c1, IMU_ADDR, SMPLRT_DIV_REG, 1, &data, 1, 100);
 8001a70:	2364      	movs	r3, #100	@ 0x64
 8001a72:	9302      	str	r3, [sp, #8]
 8001a74:	2301      	movs	r3, #1
 8001a76:	9301      	str	r3, [sp, #4]
 8001a78:	1dbb      	adds	r3, r7, #6
 8001a7a:	9300      	str	r3, [sp, #0]
 8001a7c:	2301      	movs	r3, #1
 8001a7e:	2219      	movs	r2, #25
 8001a80:	21d0      	movs	r1, #208	@ 0xd0
 8001a82:	4813      	ldr	r0, [pc, #76]	@ (8001ad0 <mpu6050_init+0x9c>)
 8001a84:	f001 fafa 	bl	800307c <HAL_I2C_Mem_Write>

			/*  Set accelerometer configuration in ACCEL_CONFIG Register */
			/* XA_ST=0,YA_ST=0,ZA_ST=0, FS_SEL=0 ->  2g */
			data = FS_ACC_2G;
 8001a88:	2300      	movs	r3, #0
 8001a8a:	71bb      	strb	r3, [r7, #6]
			HAL_I2C_Mem_Write(&hi2c1, IMU_ADDR, ACCEL_CONFIG_REG, 1, &data, 1, 100);
 8001a8c:	2364      	movs	r3, #100	@ 0x64
 8001a8e:	9302      	str	r3, [sp, #8]
 8001a90:	2301      	movs	r3, #1
 8001a92:	9301      	str	r3, [sp, #4]
 8001a94:	1dbb      	adds	r3, r7, #6
 8001a96:	9300      	str	r3, [sp, #0]
 8001a98:	2301      	movs	r3, #1
 8001a9a:	221c      	movs	r2, #28
 8001a9c:	21d0      	movs	r1, #208	@ 0xd0
 8001a9e:	480c      	ldr	r0, [pc, #48]	@ (8001ad0 <mpu6050_init+0x9c>)
 8001aa0:	f001 faec 	bl	800307c <HAL_I2C_Mem_Write>

			/* Set Gyroscope configuration in GYRO_CONFIG Register */
			/* XG_ST=0,YG_ST=0,ZG_ST=0, FS_SEL=0 ->  250 deg/s */
			data = FS_GYRO_1000;
 8001aa4:	2309      	movs	r3, #9
 8001aa6:	71bb      	strb	r3, [r7, #6]
			HAL_I2C_Mem_Write(&hi2c1, IMU_ADDR, GYRO_CONFIG_REG, 1, &data, 1, 100);
 8001aa8:	2364      	movs	r3, #100	@ 0x64
 8001aaa:	9302      	str	r3, [sp, #8]
 8001aac:	2301      	movs	r3, #1
 8001aae:	9301      	str	r3, [sp, #4]
 8001ab0:	1dbb      	adds	r3, r7, #6
 8001ab2:	9300      	str	r3, [sp, #0]
 8001ab4:	2301      	movs	r3, #1
 8001ab6:	221b      	movs	r2, #27
 8001ab8:	21d0      	movs	r1, #208	@ 0xd0
 8001aba:	4805      	ldr	r0, [pc, #20]	@ (8001ad0 <mpu6050_init+0x9c>)
 8001abc:	f001 fade 	bl	800307c <HAL_I2C_Mem_Write>

			calculate_gyroscope_bias();
 8001ac0:	f000 f808 	bl	8001ad4 <calculate_gyroscope_bias>
		}
		return status;
 8001ac4:	79fb      	ldrb	r3, [r7, #7]
}
 8001ac6:	4618      	mov	r0, r3
 8001ac8:	3708      	adds	r7, #8
 8001aca:	46bd      	mov	sp, r7
 8001acc:	bd80      	pop	{r7, pc}
 8001ace:	bf00      	nop
 8001ad0:	200000cc 	.word	0x200000cc

08001ad4 <calculate_gyroscope_bias>:

/*Gyroscope bias calculate*/
void calculate_gyroscope_bias() {
 8001ad4:	b580      	push	{r7, lr}
 8001ad6:	b08e      	sub	sp, #56	@ 0x38
 8001ad8:	af04      	add	r7, sp, #16
	// Number of samples to average
    int num_samples = 1000;
 8001ada:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001ade:	617b      	str	r3, [r7, #20]
    long gx_sum = 0;
 8001ae0:	2300      	movs	r3, #0
 8001ae2:	627b      	str	r3, [r7, #36]	@ 0x24
    long gy_sum = 0;
 8001ae4:	2300      	movs	r3, #0
 8001ae6:	623b      	str	r3, [r7, #32]
    long gz_sum = 0;
 8001ae8:	2300      	movs	r3, #0
 8001aea:	61fb      	str	r3, [r7, #28]

    for (int i = 0; i < num_samples; i++) {
 8001aec:	2300      	movs	r3, #0
 8001aee:	61bb      	str	r3, [r7, #24]
 8001af0:	e023      	b.n	8001b3a <calculate_gyroscope_bias+0x66>
    	uint8_t buffer[14];
    	HAL_I2C_Mem_Read(&hi2c1, IMU_ADDR, ACCEL_XOUT_H_REG, I2C_MEMADD_SIZE_8BIT, buffer, 14, 100);
 8001af2:	2364      	movs	r3, #100	@ 0x64
 8001af4:	9302      	str	r3, [sp, #8]
 8001af6:	230e      	movs	r3, #14
 8001af8:	9301      	str	r3, [sp, #4]
 8001afa:	1d3b      	adds	r3, r7, #4
 8001afc:	9300      	str	r3, [sp, #0]
 8001afe:	2301      	movs	r3, #1
 8001b00:	223b      	movs	r2, #59	@ 0x3b
 8001b02:	21d0      	movs	r1, #208	@ 0xd0
 8001b04:	481b      	ldr	r0, [pc, #108]	@ (8001b74 <calculate_gyroscope_bias+0xa0>)
 8001b06:	f001 fbb3 	bl	8003270 <HAL_I2C_Mem_Read>
    	gx_sum += buffer[8] << 8  | buffer[9];
 8001b0a:	7b3b      	ldrb	r3, [r7, #12]
 8001b0c:	021b      	lsls	r3, r3, #8
 8001b0e:	7b7a      	ldrb	r2, [r7, #13]
 8001b10:	4313      	orrs	r3, r2
 8001b12:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001b14:	4413      	add	r3, r2
 8001b16:	627b      	str	r3, [r7, #36]	@ 0x24
    	gy_sum += buffer[10] << 8  | buffer[11];
 8001b18:	7bbb      	ldrb	r3, [r7, #14]
 8001b1a:	021b      	lsls	r3, r3, #8
 8001b1c:	7bfa      	ldrb	r2, [r7, #15]
 8001b1e:	4313      	orrs	r3, r2
 8001b20:	6a3a      	ldr	r2, [r7, #32]
 8001b22:	4413      	add	r3, r2
 8001b24:	623b      	str	r3, [r7, #32]
    	gz_sum += buffer[12] << 8  | buffer[13];
 8001b26:	7c3b      	ldrb	r3, [r7, #16]
 8001b28:	021b      	lsls	r3, r3, #8
 8001b2a:	7c7a      	ldrb	r2, [r7, #17]
 8001b2c:	4313      	orrs	r3, r2
 8001b2e:	69fa      	ldr	r2, [r7, #28]
 8001b30:	4413      	add	r3, r2
 8001b32:	61fb      	str	r3, [r7, #28]
    for (int i = 0; i < num_samples; i++) {
 8001b34:	69bb      	ldr	r3, [r7, #24]
 8001b36:	3301      	adds	r3, #1
 8001b38:	61bb      	str	r3, [r7, #24]
 8001b3a:	69ba      	ldr	r2, [r7, #24]
 8001b3c:	697b      	ldr	r3, [r7, #20]
 8001b3e:	429a      	cmp	r2, r3
 8001b40:	dbd7      	blt.n	8001af2 <calculate_gyroscope_bias+0x1e>
    }

    gx_bias = gx_sum / num_samples;
 8001b42:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001b44:	697b      	ldr	r3, [r7, #20]
 8001b46:	fb92 f3f3 	sdiv	r3, r2, r3
 8001b4a:	b21a      	sxth	r2, r3
 8001b4c:	4b0a      	ldr	r3, [pc, #40]	@ (8001b78 <calculate_gyroscope_bias+0xa4>)
 8001b4e:	801a      	strh	r2, [r3, #0]
    gy_bias = gy_sum / num_samples;
 8001b50:	6a3a      	ldr	r2, [r7, #32]
 8001b52:	697b      	ldr	r3, [r7, #20]
 8001b54:	fb92 f3f3 	sdiv	r3, r2, r3
 8001b58:	b21a      	sxth	r2, r3
 8001b5a:	4b08      	ldr	r3, [pc, #32]	@ (8001b7c <calculate_gyroscope_bias+0xa8>)
 8001b5c:	801a      	strh	r2, [r3, #0]
    gz_bias = gz_sum / num_samples;
 8001b5e:	69fa      	ldr	r2, [r7, #28]
 8001b60:	697b      	ldr	r3, [r7, #20]
 8001b62:	fb92 f3f3 	sdiv	r3, r2, r3
 8001b66:	b21a      	sxth	r2, r3
 8001b68:	4b05      	ldr	r3, [pc, #20]	@ (8001b80 <calculate_gyroscope_bias+0xac>)
 8001b6a:	801a      	strh	r2, [r3, #0]
}
 8001b6c:	bf00      	nop
 8001b6e:	3728      	adds	r7, #40	@ 0x28
 8001b70:	46bd      	mov	sp, r7
 8001b72:	bd80      	pop	{r7, pc}
 8001b74:	200000cc 	.word	0x200000cc
 8001b78:	200001cc 	.word	0x200001cc
 8001b7c:	200001ce 	.word	0x200001ce
 8001b80:	200001d0 	.word	0x200001d0
 8001b84:	00000000 	.word	0x00000000

08001b88 <mpu6050_data>:
	res.data = (imu_data - gz_bias) / GYRO_SCALE;
	return res;
}

/* All data reading MPU6050 */
mpu_data mpu6050_data() {
 8001b88:	b5b0      	push	{r4, r5, r7, lr}
 8001b8a:	b090      	sub	sp, #64	@ 0x40
 8001b8c:	af04      	add	r7, sp, #16
 8001b8e:	6078      	str	r0, [r7, #4]
	uint8_t buffer[14];
	 HAL_I2C_Mem_Read(&hi2c1, IMU_ADDR, ACCEL_XOUT_H_REG, I2C_MEMADD_SIZE_8BIT, buffer, 14, 100);
 8001b90:	2364      	movs	r3, #100	@ 0x64
 8001b92:	9302      	str	r3, [sp, #8]
 8001b94:	230e      	movs	r3, #14
 8001b96:	9301      	str	r3, [sp, #4]
 8001b98:	f107 0320 	add.w	r3, r7, #32
 8001b9c:	9300      	str	r3, [sp, #0]
 8001b9e:	2301      	movs	r3, #1
 8001ba0:	223b      	movs	r2, #59	@ 0x3b
 8001ba2:	21d0      	movs	r1, #208	@ 0xd0
 8001ba4:	4858      	ldr	r0, [pc, #352]	@ (8001d08 <mpu6050_data+0x180>)
 8001ba6:	f001 fb63 	bl	8003270 <HAL_I2C_Mem_Read>
	 mpu_data data;
	 data.ax = (int16_t)(buffer[0] << 8 | buffer[1]) / ACC_SCALE;
 8001baa:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001bae:	021b      	lsls	r3, r3, #8
 8001bb0:	b21a      	sxth	r2, r3
 8001bb2:	f897 3021 	ldrb.w	r3, [r7, #33]	@ 0x21
 8001bb6:	b21b      	sxth	r3, r3
 8001bb8:	4313      	orrs	r3, r2
 8001bba:	b21b      	sxth	r3, r3
 8001bbc:	4618      	mov	r0, r3
 8001bbe:	f7fe fc75 	bl	80004ac <__aeabi_i2d>
 8001bc2:	f04f 0200 	mov.w	r2, #0
 8001bc6:	4b51      	ldr	r3, [pc, #324]	@ (8001d0c <mpu6050_data+0x184>)
 8001bc8:	f7fe fe04 	bl	80007d4 <__aeabi_ddiv>
 8001bcc:	4602      	mov	r2, r0
 8001bce:	460b      	mov	r3, r1
 8001bd0:	4610      	mov	r0, r2
 8001bd2:	4619      	mov	r1, r3
 8001bd4:	f7fe ffcc 	bl	8000b70 <__aeabi_d2f>
 8001bd8:	4603      	mov	r3, r0
 8001bda:	60bb      	str	r3, [r7, #8]
	 data.ay = (int16_t)(buffer[2] << 8 | buffer[3]) / ACC_SCALE;
 8001bdc:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 8001be0:	021b      	lsls	r3, r3, #8
 8001be2:	b21a      	sxth	r2, r3
 8001be4:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8001be8:	b21b      	sxth	r3, r3
 8001bea:	4313      	orrs	r3, r2
 8001bec:	b21b      	sxth	r3, r3
 8001bee:	4618      	mov	r0, r3
 8001bf0:	f7fe fc5c 	bl	80004ac <__aeabi_i2d>
 8001bf4:	f04f 0200 	mov.w	r2, #0
 8001bf8:	4b44      	ldr	r3, [pc, #272]	@ (8001d0c <mpu6050_data+0x184>)
 8001bfa:	f7fe fdeb 	bl	80007d4 <__aeabi_ddiv>
 8001bfe:	4602      	mov	r2, r0
 8001c00:	460b      	mov	r3, r1
 8001c02:	4610      	mov	r0, r2
 8001c04:	4619      	mov	r1, r3
 8001c06:	f7fe ffb3 	bl	8000b70 <__aeabi_d2f>
 8001c0a:	4603      	mov	r3, r0
 8001c0c:	60fb      	str	r3, [r7, #12]
	 data.az = (int16_t)(buffer[4] << 8 | buffer[5]) / ACC_SCALE_Z;
 8001c0e:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8001c12:	021b      	lsls	r3, r3, #8
 8001c14:	b21a      	sxth	r2, r3
 8001c16:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 8001c1a:	b21b      	sxth	r3, r3
 8001c1c:	4313      	orrs	r3, r2
 8001c1e:	b21b      	sxth	r3, r3
 8001c20:	4618      	mov	r0, r3
 8001c22:	f7fe fc43 	bl	80004ac <__aeabi_i2d>
 8001c26:	a334      	add	r3, pc, #208	@ (adr r3, 8001cf8 <mpu6050_data+0x170>)
 8001c28:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c2c:	f7fe fdd2 	bl	80007d4 <__aeabi_ddiv>
 8001c30:	4602      	mov	r2, r0
 8001c32:	460b      	mov	r3, r1
 8001c34:	4610      	mov	r0, r2
 8001c36:	4619      	mov	r1, r3
 8001c38:	f7fe ff9a 	bl	8000b70 <__aeabi_d2f>
 8001c3c:	4603      	mov	r3, r0
 8001c3e:	613b      	str	r3, [r7, #16]
	 data.gx = (int16_t)(buffer[8] << 8 | buffer[9]) / GYRO_SCALE;
 8001c40:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8001c44:	021b      	lsls	r3, r3, #8
 8001c46:	b21a      	sxth	r2, r3
 8001c48:	f897 3029 	ldrb.w	r3, [r7, #41]	@ 0x29
 8001c4c:	b21b      	sxth	r3, r3
 8001c4e:	4313      	orrs	r3, r2
 8001c50:	b21b      	sxth	r3, r3
 8001c52:	4618      	mov	r0, r3
 8001c54:	f7fe fc2a 	bl	80004ac <__aeabi_i2d>
 8001c58:	a329      	add	r3, pc, #164	@ (adr r3, 8001d00 <mpu6050_data+0x178>)
 8001c5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c5e:	f7fe fdb9 	bl	80007d4 <__aeabi_ddiv>
 8001c62:	4602      	mov	r2, r0
 8001c64:	460b      	mov	r3, r1
 8001c66:	4610      	mov	r0, r2
 8001c68:	4619      	mov	r1, r3
 8001c6a:	f7fe ff81 	bl	8000b70 <__aeabi_d2f>
 8001c6e:	4603      	mov	r3, r0
 8001c70:	617b      	str	r3, [r7, #20]
	 data.gy = (int16_t)(buffer[10] << 8 | buffer[11]) / GYRO_SCALE;
 8001c72:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8001c76:	021b      	lsls	r3, r3, #8
 8001c78:	b21a      	sxth	r2, r3
 8001c7a:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 8001c7e:	b21b      	sxth	r3, r3
 8001c80:	4313      	orrs	r3, r2
 8001c82:	b21b      	sxth	r3, r3
 8001c84:	4618      	mov	r0, r3
 8001c86:	f7fe fc11 	bl	80004ac <__aeabi_i2d>
 8001c8a:	a31d      	add	r3, pc, #116	@ (adr r3, 8001d00 <mpu6050_data+0x178>)
 8001c8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c90:	f7fe fda0 	bl	80007d4 <__aeabi_ddiv>
 8001c94:	4602      	mov	r2, r0
 8001c96:	460b      	mov	r3, r1
 8001c98:	4610      	mov	r0, r2
 8001c9a:	4619      	mov	r1, r3
 8001c9c:	f7fe ff68 	bl	8000b70 <__aeabi_d2f>
 8001ca0:	4603      	mov	r3, r0
 8001ca2:	61bb      	str	r3, [r7, #24]
	 data.gz = (int16_t)(buffer[12] << 8 | buffer[13]) / GYRO_SCALE;
 8001ca4:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8001ca8:	021b      	lsls	r3, r3, #8
 8001caa:	b21a      	sxth	r2, r3
 8001cac:	f897 302d 	ldrb.w	r3, [r7, #45]	@ 0x2d
 8001cb0:	b21b      	sxth	r3, r3
 8001cb2:	4313      	orrs	r3, r2
 8001cb4:	b21b      	sxth	r3, r3
 8001cb6:	4618      	mov	r0, r3
 8001cb8:	f7fe fbf8 	bl	80004ac <__aeabi_i2d>
 8001cbc:	a310      	add	r3, pc, #64	@ (adr r3, 8001d00 <mpu6050_data+0x178>)
 8001cbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cc2:	f7fe fd87 	bl	80007d4 <__aeabi_ddiv>
 8001cc6:	4602      	mov	r2, r0
 8001cc8:	460b      	mov	r3, r1
 8001cca:	4610      	mov	r0, r2
 8001ccc:	4619      	mov	r1, r3
 8001cce:	f7fe ff4f 	bl	8000b70 <__aeabi_d2f>
 8001cd2:	4603      	mov	r3, r0
 8001cd4:	61fb      	str	r3, [r7, #28]
	 return data;
 8001cd6:	687b      	ldr	r3, [r7, #4]
 8001cd8:	461d      	mov	r5, r3
 8001cda:	f107 0408 	add.w	r4, r7, #8
 8001cde:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001ce0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001ce2:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001ce6:	e885 0003 	stmia.w	r5, {r0, r1}
}
 8001cea:	6878      	ldr	r0, [r7, #4]
 8001cec:	3730      	adds	r7, #48	@ 0x30
 8001cee:	46bd      	mov	sp, r7
 8001cf0:	bdb0      	pop	{r4, r5, r7, pc}
 8001cf2:	bf00      	nop
 8001cf4:	f3af 8000 	nop.w
 8001cf8:	00000000 	.word	0x00000000
 8001cfc:	40cc2900 	.word	0x40cc2900
 8001d00:	66666666 	.word	0x66666666
 8001d04:	40406666 	.word	0x40406666
 8001d08:	200000cc 	.word	0x200000cc
 8001d0c:	40d00000 	.word	0x40d00000

08001d10 <nidec_h24_init>:

/*Default timer settings*/
extern  TIM_HandleTypeDef htim5;

/* To initialize the PWM and direction pins of the motor */
void nidec_h24_init(){
 8001d10:	b580      	push	{r7, lr}
 8001d12:	b086      	sub	sp, #24
 8001d14:	af00      	add	r7, sp, #0

    GPIO_InitTypeDef GPIO_InitStruct = {0};  // Declare the GPIO init struct
 8001d16:	1d3b      	adds	r3, r7, #4
 8001d18:	2200      	movs	r2, #0
 8001d1a:	601a      	str	r2, [r3, #0]
 8001d1c:	605a      	str	r2, [r3, #4]
 8001d1e:	609a      	str	r2, [r3, #8]
 8001d20:	60da      	str	r2, [r3, #12]
 8001d22:	611a      	str	r2, [r3, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d24:	2300      	movs	r3, #0
 8001d26:	603b      	str	r3, [r7, #0]
 8001d28:	4b1f      	ldr	r3, [pc, #124]	@ (8001da8 <nidec_h24_init+0x98>)
 8001d2a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d2c:	4a1e      	ldr	r2, [pc, #120]	@ (8001da8 <nidec_h24_init+0x98>)
 8001d2e:	f043 0302 	orr.w	r3, r3, #2
 8001d32:	6313      	str	r3, [r2, #48]	@ 0x30
 8001d34:	4b1c      	ldr	r3, [pc, #112]	@ (8001da8 <nidec_h24_init+0x98>)
 8001d36:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d38:	f003 0302 	and.w	r3, r3, #2
 8001d3c:	603b      	str	r3, [r7, #0]
 8001d3e:	683b      	ldr	r3, [r7, #0]

	/*Configure GPIO pin : Direction_Pin */
	GPIO_InitStruct.Pin = DIRECTION_PIN;
 8001d40:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001d44:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d46:	2301      	movs	r3, #1
 8001d48:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8001d4a:	2302      	movs	r3, #2
 8001d4c:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d4e:	2300      	movs	r3, #0
 8001d50:	613b      	str	r3, [r7, #16]
	HAL_GPIO_Init(DIRECTION_PORT, &GPIO_InitStruct);
 8001d52:	1d3b      	adds	r3, r7, #4
 8001d54:	4619      	mov	r1, r3
 8001d56:	4815      	ldr	r0, [pc, #84]	@ (8001dac <nidec_h24_init+0x9c>)
 8001d58:	f000 fe86 	bl	8002a68 <HAL_GPIO_Init>

    /*Configure GPIO pin : Brake_Pin */
	GPIO_InitStruct.Pin = BRAKE_PIN;
 8001d5c:	2310      	movs	r3, #16
 8001d5e:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d60:	2301      	movs	r3, #1
 8001d62:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8001d64:	2302      	movs	r3, #2
 8001d66:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d68:	2300      	movs	r3, #0
 8001d6a:	613b      	str	r3, [r7, #16]
	HAL_GPIO_Init(BRAKE_PORT, &GPIO_InitStruct);
 8001d6c:	1d3b      	adds	r3, r7, #4
 8001d6e:	4619      	mov	r1, r3
 8001d70:	480e      	ldr	r0, [pc, #56]	@ (8001dac <nidec_h24_init+0x9c>)
 8001d72:	f000 fe79 	bl	8002a68 <HAL_GPIO_Init>

	// Set the direction pin to low initially
	HAL_GPIO_WritePin(DIRECTION_PORT, DIRECTION_PIN, GPIO_PIN_RESET);
 8001d76:	2200      	movs	r2, #0
 8001d78:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001d7c:	480b      	ldr	r0, [pc, #44]	@ (8001dac <nidec_h24_init+0x9c>)
 8001d7e:	f001 f81f 	bl	8002dc0 <HAL_GPIO_WritePin>
    
	// Set the brake pin to low initially
	HAL_GPIO_WritePin(BRAKE_PORT, BRAKE_PIN, GPIO_PIN_RESET);
 8001d82:	2200      	movs	r2, #0
 8001d84:	2110      	movs	r1, #16
 8001d86:	4809      	ldr	r0, [pc, #36]	@ (8001dac <nidec_h24_init+0x9c>)
 8001d88:	f001 f81a 	bl	8002dc0 <HAL_GPIO_WritePin>

	// Start PWM on the specified timer and channel
	TIM5->CCR1 = 0;
 8001d8c:	4b08      	ldr	r3, [pc, #32]	@ (8001db0 <nidec_h24_init+0xa0>)
 8001d8e:	2200      	movs	r2, #0
 8001d90:	635a      	str	r2, [r3, #52]	@ 0x34
    HAL_TIM_Base_Start(&htim5);
 8001d92:	4808      	ldr	r0, [pc, #32]	@ (8001db4 <nidec_h24_init+0xa4>)
 8001d94:	f002 ff1e 	bl	8004bd4 <HAL_TIM_Base_Start>
	HAL_TIM_PWM_Start(&htim5, CHANNEL);
 8001d98:	2100      	movs	r1, #0
 8001d9a:	4806      	ldr	r0, [pc, #24]	@ (8001db4 <nidec_h24_init+0xa4>)
 8001d9c:	f003 f842 	bl	8004e24 <HAL_TIM_PWM_Start>
}
 8001da0:	bf00      	nop
 8001da2:	3718      	adds	r7, #24
 8001da4:	46bd      	mov	sp, r7
 8001da6:	bd80      	pop	{r7, pc}
 8001da8:	40023800 	.word	0x40023800
 8001dac:	40020400 	.word	0x40020400
 8001db0:	40000c00 	.word	0x40000c00
 8001db4:	200002c0 	.word	0x200002c0

08001db8 <nidec_h24_Move>:

/* To make the motor turn based on the input */
void nidec_h24_Move(float dutyCycle, uint8_t brk){
 8001db8:	b5b0      	push	{r4, r5, r7, lr}
 8001dba:	b082      	sub	sp, #8
 8001dbc:	af00      	add	r7, sp, #0
 8001dbe:	ed87 0a01 	vstr	s0, [r7, #4]
 8001dc2:	4603      	mov	r3, r0
 8001dc4:	70fb      	strb	r3, [r7, #3]

    // Set the PWM duty cycle
	TIM5->CCR1 = htim5.Instance->ARR*(1 - fabs(dutyCycle)/100);
 8001dc6:	4b24      	ldr	r3, [pc, #144]	@ (8001e58 <nidec_h24_Move+0xa0>)
 8001dc8:	681b      	ldr	r3, [r3, #0]
 8001dca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001dcc:	4618      	mov	r0, r3
 8001dce:	f7fe fb5d 	bl	800048c <__aeabi_ui2d>
 8001dd2:	4604      	mov	r4, r0
 8001dd4:	460d      	mov	r5, r1
 8001dd6:	edd7 7a01 	vldr	s15, [r7, #4]
 8001dda:	eef0 7ae7 	vabs.f32	s15, s15
 8001dde:	ee17 0a90 	vmov	r0, s15
 8001de2:	f7fe fb75 	bl	80004d0 <__aeabi_f2d>
 8001de6:	f04f 0200 	mov.w	r2, #0
 8001dea:	4b1c      	ldr	r3, [pc, #112]	@ (8001e5c <nidec_h24_Move+0xa4>)
 8001dec:	f7fe fcf2 	bl	80007d4 <__aeabi_ddiv>
 8001df0:	4602      	mov	r2, r0
 8001df2:	460b      	mov	r3, r1
 8001df4:	f04f 0000 	mov.w	r0, #0
 8001df8:	4919      	ldr	r1, [pc, #100]	@ (8001e60 <nidec_h24_Move+0xa8>)
 8001dfa:	f7fe fa09 	bl	8000210 <__aeabi_dsub>
 8001dfe:	4602      	mov	r2, r0
 8001e00:	460b      	mov	r3, r1
 8001e02:	4620      	mov	r0, r4
 8001e04:	4629      	mov	r1, r5
 8001e06:	f7fe fbbb 	bl	8000580 <__aeabi_dmul>
 8001e0a:	4602      	mov	r2, r0
 8001e0c:	460b      	mov	r3, r1
 8001e0e:	4c15      	ldr	r4, [pc, #84]	@ (8001e64 <nidec_h24_Move+0xac>)
 8001e10:	4610      	mov	r0, r2
 8001e12:	4619      	mov	r1, r3
 8001e14:	f7fe fe8c 	bl	8000b30 <__aeabi_d2uiz>
 8001e18:	4603      	mov	r3, r0
 8001e1a:	6363      	str	r3, [r4, #52]	@ 0x34

    if (dutyCycle > 0) {
 8001e1c:	edd7 7a01 	vldr	s15, [r7, #4]
 8001e20:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001e24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e28:	dd06      	ble.n	8001e38 <nidec_h24_Move+0x80>
        // counter-clockwise
        HAL_GPIO_WritePin(DIRECTION_PORT, DIRECTION_PIN, GPIO_PIN_RESET);
 8001e2a:	2200      	movs	r2, #0
 8001e2c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001e30:	480d      	ldr	r0, [pc, #52]	@ (8001e68 <nidec_h24_Move+0xb0>)
 8001e32:	f000 ffc5 	bl	8002dc0 <HAL_GPIO_WritePin>
 8001e36:	e005      	b.n	8001e44 <nidec_h24_Move+0x8c>
    }else{
        // clockwise
        HAL_GPIO_WritePin(DIRECTION_PORT, DIRECTION_PIN, GPIO_PIN_SET);
 8001e38:	2201      	movs	r2, #1
 8001e3a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001e3e:	480a      	ldr	r0, [pc, #40]	@ (8001e68 <nidec_h24_Move+0xb0>)
 8001e40:	f000 ffbe 	bl	8002dc0 <HAL_GPIO_WritePin>
    }

    // brk -> 0: brakes
    HAL_GPIO_WritePin(BRAKE_PORT, BRAKE_PIN, brk);
 8001e44:	78fb      	ldrb	r3, [r7, #3]
 8001e46:	461a      	mov	r2, r3
 8001e48:	2110      	movs	r1, #16
 8001e4a:	4807      	ldr	r0, [pc, #28]	@ (8001e68 <nidec_h24_Move+0xb0>)
 8001e4c:	f000 ffb8 	bl	8002dc0 <HAL_GPIO_WritePin>

    // Generate an update event to reload the value immediately
}
 8001e50:	bf00      	nop
 8001e52:	3708      	adds	r7, #8
 8001e54:	46bd      	mov	sp, r7
 8001e56:	bdb0      	pop	{r4, r5, r7, pc}
 8001e58:	200002c0 	.word	0x200002c0
 8001e5c:	40590000 	.word	0x40590000
 8001e60:	3ff00000 	.word	0x3ff00000
 8001e64:	40000c00 	.word	0x40000c00
 8001e68:	40020400 	.word	0x40020400

08001e6c <pid_init>:

float p_action, i_action, d_action, error_debug;
static float last_u;

void pid_init(PID_t *p, float k_p, float k_i, float k_d, float min_out,
		float max_out) {
 8001e6c:	b480      	push	{r7}
 8001e6e:	b087      	sub	sp, #28
 8001e70:	af00      	add	r7, sp, #0
 8001e72:	6178      	str	r0, [r7, #20]
 8001e74:	ed87 0a04 	vstr	s0, [r7, #16]
 8001e78:	edc7 0a03 	vstr	s1, [r7, #12]
 8001e7c:	ed87 1a02 	vstr	s2, [r7, #8]
 8001e80:	edc7 1a01 	vstr	s3, [r7, #4]
 8001e84:	ed87 2a00 	vstr	s4, [r7]
	p->k_p = k_p;
 8001e88:	697b      	ldr	r3, [r7, #20]
 8001e8a:	693a      	ldr	r2, [r7, #16]
 8001e8c:	611a      	str	r2, [r3, #16]
	p->k_i = k_i;
 8001e8e:	697b      	ldr	r3, [r7, #20]
 8001e90:	68fa      	ldr	r2, [r7, #12]
 8001e92:	615a      	str	r2, [r3, #20]
	p->k_d = k_d;
 8001e94:	697b      	ldr	r3, [r7, #20]
 8001e96:	68ba      	ldr	r2, [r7, #8]
 8001e98:	619a      	str	r2, [r3, #24]
	p->integral_error = 0;
 8001e9a:	697b      	ldr	r3, [r7, #20]
 8001e9c:	f04f 0200 	mov.w	r2, #0
 8001ea0:	609a      	str	r2, [r3, #8]
	p->last_error = 0;
 8001ea2:	697b      	ldr	r3, [r7, #20]
 8001ea4:	f04f 0200 	mov.w	r2, #0
 8001ea8:	60da      	str	r2, [r3, #12]
	p->last_updated_ts = 0;
 8001eaa:	697b      	ldr	r3, [r7, #20]
 8001eac:	2200      	movs	r2, #0
 8001eae:	601a      	str	r2, [r3, #0]
	p->min_output = min_out;
 8001eb0:	697b      	ldr	r3, [r7, #20]
 8001eb2:	687a      	ldr	r2, [r7, #4]
 8001eb4:	621a      	str	r2, [r3, #32]
	p->max_output = max_out;
 8001eb6:	697b      	ldr	r3, [r7, #20]
 8001eb8:	683a      	ldr	r2, [r7, #0]
 8001eba:	61da      	str	r2, [r3, #28]
}
 8001ebc:	bf00      	nop
 8001ebe:	371c      	adds	r7, #28
 8001ec0:	46bd      	mov	sp, r7
 8001ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ec6:	4770      	bx	lr

08001ec8 <pid_set_setpoint>:

void pid_set_setpoint(PID_t *p, float set_point) {
 8001ec8:	b480      	push	{r7}
 8001eca:	b083      	sub	sp, #12
 8001ecc:	af00      	add	r7, sp, #0
 8001ece:	6078      	str	r0, [r7, #4]
 8001ed0:	ed87 0a00 	vstr	s0, [r7]
	p->set_point = set_point;
 8001ed4:	687b      	ldr	r3, [r7, #4]
 8001ed6:	683a      	ldr	r2, [r7, #0]
 8001ed8:	605a      	str	r2, [r3, #4]
}
 8001eda:	bf00      	nop
 8001edc:	370c      	adds	r7, #12
 8001ede:	46bd      	mov	sp, r7
 8001ee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ee4:	4770      	bx	lr
	...

08001ee8 <pid_compute_control_action>:

float pid_compute_control_action(PID_t *p, float est_output) {
 8001ee8:	b580      	push	{r7, lr}
 8001eea:	b08a      	sub	sp, #40	@ 0x28
 8001eec:	af00      	add	r7, sp, #0
 8001eee:	6078      	str	r0, [r7, #4]
 8001ef0:	ed87 0a00 	vstr	s0, [r7]
	float error, integral_error, u, derivative, delta_T;
	float alpha = 0.9;
 8001ef4:	4b70      	ldr	r3, [pc, #448]	@ (80020b8 <pid_compute_control_action+0x1d0>)
 8001ef6:	61bb      	str	r3, [r7, #24]
	float k_p = p->k_p;
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	691b      	ldr	r3, [r3, #16]
 8001efc:	617b      	str	r3, [r7, #20]

	error = pid_get_setpoint(p) - est_output;
 8001efe:	6878      	ldr	r0, [r7, #4]
 8001f00:	f000 f8e6 	bl	80020d0 <pid_get_setpoint>
 8001f04:	eeb0 7a40 	vmov.f32	s14, s0
 8001f08:	edd7 7a00 	vldr	s15, [r7]
 8001f0c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001f10:	edc7 7a04 	vstr	s15, [r7, #16]

	delta_T = pid_get_current_sampling_time(p);
 8001f14:	6878      	ldr	r0, [r7, #4]
 8001f16:	f000 f8eb 	bl	80020f0 <pid_get_current_sampling_time>
 8001f1a:	ed87 0a03 	vstr	s0, [r7, #12]

	if (delta_T > 0.0 && p->k_d != 0.0) {
 8001f1e:	edd7 7a03 	vldr	s15, [r7, #12]
 8001f22:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001f26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f2a:	dd26      	ble.n	8001f7a <pid_compute_control_action+0x92>
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	edd3 7a06 	vldr	s15, [r3, #24]
 8001f32:	eef5 7a40 	vcmp.f32	s15, #0.0
 8001f36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f3a:	d01e      	beq.n	8001f7a <pid_compute_control_action+0x92>
		// Apply the low-pass filter to the derivative
		derivative = alpha * p->d_term + (1 - alpha) * (error - p->last_error) / delta_T;
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	ed93 7a0d 	vldr	s14, [r3, #52]	@ 0x34
 8001f42:	edd7 7a06 	vldr	s15, [r7, #24]
 8001f46:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001f4a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8001f4e:	edd7 7a06 	vldr	s15, [r7, #24]
 8001f52:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	edd3 7a03 	vldr	s15, [r3, #12]
 8001f5c:	ed97 6a04 	vldr	s12, [r7, #16]
 8001f60:	ee76 7a67 	vsub.f32	s15, s12, s15
 8001f64:	ee26 6aa7 	vmul.f32	s12, s13, s15
 8001f68:	edd7 6a03 	vldr	s13, [r7, #12]
 8001f6c:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8001f70:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001f74:	edc7 7a07 	vstr	s15, [r7, #28]
 8001f78:	e002      	b.n	8001f80 <pid_compute_control_action+0x98>
	} else {
		derivative = 0;
 8001f7a:	f04f 0300 	mov.w	r3, #0
 8001f7e:	61fb      	str	r3, [r7, #28]
	}

	if (error > p->pos_deadzone || error < p->neg_deadzone) {
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8001f86:	ed97 7a04 	vldr	s14, [r7, #16]
 8001f8a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001f8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f92:	dc09      	bgt.n	8001fa8 <pid_compute_control_action+0xc0>
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 8001f9a:	ed97 7a04 	vldr	s14, [r7, #16]
 8001f9e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001fa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001fa6:	d50d      	bpl.n	8001fc4 <pid_compute_control_action+0xdc>
		integral_error = p->integral_error + delta_T * error;
 8001fa8:	687b      	ldr	r3, [r7, #4]
 8001faa:	ed93 7a02 	vldr	s14, [r3, #8]
 8001fae:	edd7 6a03 	vldr	s13, [r7, #12]
 8001fb2:	edd7 7a04 	vldr	s15, [r7, #16]
 8001fb6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001fba:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001fbe:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24
 8001fc2:	e002      	b.n	8001fca <pid_compute_control_action+0xe2>
	} else {
		integral_error = p->integral_error;
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	689b      	ldr	r3, [r3, #8]
 8001fc8:	627b      	str	r3, [r7, #36]	@ 0x24
	}

	u = k_p * error + p->k_i * integral_error + p->k_d * derivative;
 8001fca:	ed97 7a05 	vldr	s14, [r7, #20]
 8001fce:	edd7 7a04 	vldr	s15, [r7, #16]
 8001fd2:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001fd6:	687b      	ldr	r3, [r7, #4]
 8001fd8:	edd3 6a05 	vldr	s13, [r3, #20]
 8001fdc:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 8001fe0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001fe4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	edd3 6a06 	vldr	s13, [r3, #24]
 8001fee:	edd7 7a07 	vldr	s15, [r7, #28]
 8001ff2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001ff6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001ffa:	edc7 7a08 	vstr	s15, [r7, #32]
	p->p_term = k_p * error;
 8001ffe:	ed97 7a05 	vldr	s14, [r7, #20]
 8002002:	edd7 7a04 	vldr	s15, [r7, #16]
 8002006:	ee67 7a27 	vmul.f32	s15, s14, s15
 800200a:	687b      	ldr	r3, [r7, #4]
 800200c:	edc3 7a0b 	vstr	s15, [r3, #44]	@ 0x2c
	p->i_term = p->k_i * integral_error;
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	ed93 7a05 	vldr	s14, [r3, #20]
 8002016:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800201a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800201e:	687b      	ldr	r3, [r7, #4]
 8002020:	edc3 7a0c 	vstr	s15, [r3, #48]	@ 0x30
	p->d_term = p->k_d * derivative;
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	ed93 7a06 	vldr	s14, [r3, #24]
 800202a:	edd7 7a07 	vldr	s15, [r7, #28]
 800202e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	edc3 7a0d 	vstr	s15, [r3, #52]	@ 0x34

	p_action = p->p_term;
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800203c:	4a1f      	ldr	r2, [pc, #124]	@ (80020bc <pid_compute_control_action+0x1d4>)
 800203e:	6013      	str	r3, [r2, #0]
	i_action = p->i_term;
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002044:	4a1e      	ldr	r2, [pc, #120]	@ (80020c0 <pid_compute_control_action+0x1d8>)
 8002046:	6013      	str	r3, [r2, #0]
	d_action = p->d_term;
 8002048:	687b      	ldr	r3, [r7, #4]
 800204a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800204c:	4a1d      	ldr	r2, [pc, #116]	@ (80020c4 <pid_compute_control_action+0x1dc>)
 800204e:	6013      	str	r3, [r2, #0]

	// reset wind-up
	if (u < p->min_output) {
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	edd3 7a08 	vldr	s15, [r3, #32]
 8002056:	ed97 7a08 	vldr	s14, [r7, #32]
 800205a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800205e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002062:	d503      	bpl.n	800206c <pid_compute_control_action+0x184>
		u = p->min_output;
 8002064:	687b      	ldr	r3, [r7, #4]
 8002066:	6a1b      	ldr	r3, [r3, #32]
 8002068:	623b      	str	r3, [r7, #32]
 800206a:	e010      	b.n	800208e <pid_compute_control_action+0x1a6>
	} else if (u > p->max_output) {
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	edd3 7a07 	vldr	s15, [r3, #28]
 8002072:	ed97 7a08 	vldr	s14, [r7, #32]
 8002076:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800207a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800207e:	dd03      	ble.n	8002088 <pid_compute_control_action+0x1a0>
		u = p->max_output;
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	69db      	ldr	r3, [r3, #28]
 8002084:	623b      	str	r3, [r7, #32]
 8002086:	e002      	b.n	800208e <pid_compute_control_action+0x1a6>
	} else {
		p->integral_error = integral_error;
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800208c:	609a      	str	r2, [r3, #8]
	}

	last_u = u;
 800208e:	4a0e      	ldr	r2, [pc, #56]	@ (80020c8 <pid_compute_control_action+0x1e0>)
 8002090:	6a3b      	ldr	r3, [r7, #32]
 8002092:	6013      	str	r3, [r2, #0]

	p->last_error = error;
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	693a      	ldr	r2, [r7, #16]
 8002098:	60da      	str	r2, [r3, #12]
	error_debug = error;
 800209a:	4a0c      	ldr	r2, [pc, #48]	@ (80020cc <pid_compute_control_action+0x1e4>)
 800209c:	693b      	ldr	r3, [r7, #16]
 800209e:	6013      	str	r3, [r2, #0]
	pid_update_ts(p);
 80020a0:	6878      	ldr	r0, [r7, #4]
 80020a2:	f000 f84d 	bl	8002140 <pid_update_ts>
	return u;
 80020a6:	6a3b      	ldr	r3, [r7, #32]
 80020a8:	ee07 3a90 	vmov	s15, r3
}
 80020ac:	eeb0 0a67 	vmov.f32	s0, s15
 80020b0:	3728      	adds	r7, #40	@ 0x28
 80020b2:	46bd      	mov	sp, r7
 80020b4:	bd80      	pop	{r7, pc}
 80020b6:	bf00      	nop
 80020b8:	3f666666 	.word	0x3f666666
 80020bc:	200001d4 	.word	0x200001d4
 80020c0:	200001d8 	.word	0x200001d8
 80020c4:	200001dc 	.word	0x200001dc
 80020c8:	200001e4 	.word	0x200001e4
 80020cc:	200001e0 	.word	0x200001e0

080020d0 <pid_get_setpoint>:

float pid_get_error(PID_t *p) {
	return p->last_error;
}

float pid_get_setpoint(PID_t *p) {
 80020d0:	b480      	push	{r7}
 80020d2:	b083      	sub	sp, #12
 80020d4:	af00      	add	r7, sp, #0
 80020d6:	6078      	str	r0, [r7, #4]
	return p->set_point;
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	685b      	ldr	r3, [r3, #4]
 80020dc:	ee07 3a90 	vmov	s15, r3
}
 80020e0:	eeb0 0a67 	vmov.f32	s0, s15
 80020e4:	370c      	adds	r7, #12
 80020e6:	46bd      	mov	sp, r7
 80020e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020ec:	4770      	bx	lr
	...

080020f0 <pid_get_current_sampling_time>:

static float pid_get_current_sampling_time(PID_t *p) {
 80020f0:	b580      	push	{r7, lr}
 80020f2:	b082      	sub	sp, #8
 80020f4:	af00      	add	r7, sp, #0
 80020f6:	6078      	str	r0, [r7, #4]
	return (float) (HAL_GetTick() - p->last_updated_ts) / 1000.0;
 80020f8:	f000 fb74 	bl	80027e4 <HAL_GetTick>
 80020fc:	4602      	mov	r2, r0
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	681b      	ldr	r3, [r3, #0]
 8002102:	1ad3      	subs	r3, r2, r3
 8002104:	ee07 3a90 	vmov	s15, r3
 8002108:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800210c:	ee17 0a90 	vmov	r0, s15
 8002110:	f7fe f9de 	bl	80004d0 <__aeabi_f2d>
 8002114:	f04f 0200 	mov.w	r2, #0
 8002118:	4b08      	ldr	r3, [pc, #32]	@ (800213c <pid_get_current_sampling_time+0x4c>)
 800211a:	f7fe fb5b 	bl	80007d4 <__aeabi_ddiv>
 800211e:	4602      	mov	r2, r0
 8002120:	460b      	mov	r3, r1
 8002122:	4610      	mov	r0, r2
 8002124:	4619      	mov	r1, r3
 8002126:	f7fe fd23 	bl	8000b70 <__aeabi_d2f>
 800212a:	4603      	mov	r3, r0
 800212c:	ee07 3a90 	vmov	s15, r3
}
 8002130:	eeb0 0a67 	vmov.f32	s0, s15
 8002134:	3708      	adds	r7, #8
 8002136:	46bd      	mov	sp, r7
 8002138:	bd80      	pop	{r7, pc}
 800213a:	bf00      	nop
 800213c:	408f4000 	.word	0x408f4000

08002140 <pid_update_ts>:

void pid_update_ts(PID_t *p) {
 8002140:	b580      	push	{r7, lr}
 8002142:	b082      	sub	sp, #8
 8002144:	af00      	add	r7, sp, #0
 8002146:	6078      	str	r0, [r7, #4]
	p->last_updated_ts = HAL_GetTick();
 8002148:	f000 fb4c 	bl	80027e4 <HAL_GetTick>
 800214c:	4602      	mov	r2, r0
 800214e:	687b      	ldr	r3, [r7, #4]
 8002150:	601a      	str	r2, [r3, #0]
}
 8002152:	bf00      	nop
 8002154:	3708      	adds	r7, #8
 8002156:	46bd      	mov	sp, r7
 8002158:	bd80      	pop	{r7, pc}
	...

0800215c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800215c:	b480      	push	{r7}
 800215e:	b083      	sub	sp, #12
 8002160:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002162:	2300      	movs	r3, #0
 8002164:	607b      	str	r3, [r7, #4]
 8002166:	4b10      	ldr	r3, [pc, #64]	@ (80021a8 <HAL_MspInit+0x4c>)
 8002168:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800216a:	4a0f      	ldr	r2, [pc, #60]	@ (80021a8 <HAL_MspInit+0x4c>)
 800216c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002170:	6453      	str	r3, [r2, #68]	@ 0x44
 8002172:	4b0d      	ldr	r3, [pc, #52]	@ (80021a8 <HAL_MspInit+0x4c>)
 8002174:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002176:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800217a:	607b      	str	r3, [r7, #4]
 800217c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800217e:	2300      	movs	r3, #0
 8002180:	603b      	str	r3, [r7, #0]
 8002182:	4b09      	ldr	r3, [pc, #36]	@ (80021a8 <HAL_MspInit+0x4c>)
 8002184:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002186:	4a08      	ldr	r2, [pc, #32]	@ (80021a8 <HAL_MspInit+0x4c>)
 8002188:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800218c:	6413      	str	r3, [r2, #64]	@ 0x40
 800218e:	4b06      	ldr	r3, [pc, #24]	@ (80021a8 <HAL_MspInit+0x4c>)
 8002190:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002192:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002196:	603b      	str	r3, [r7, #0]
 8002198:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800219a:	bf00      	nop
 800219c:	370c      	adds	r7, #12
 800219e:	46bd      	mov	sp, r7
 80021a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021a4:	4770      	bx	lr
 80021a6:	bf00      	nop
 80021a8:	40023800 	.word	0x40023800

080021ac <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80021ac:	b480      	push	{r7}
 80021ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80021b0:	bf00      	nop
 80021b2:	e7fd      	b.n	80021b0 <NMI_Handler+0x4>

080021b4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80021b4:	b480      	push	{r7}
 80021b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80021b8:	bf00      	nop
 80021ba:	e7fd      	b.n	80021b8 <HardFault_Handler+0x4>

080021bc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80021bc:	b480      	push	{r7}
 80021be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80021c0:	bf00      	nop
 80021c2:	e7fd      	b.n	80021c0 <MemManage_Handler+0x4>

080021c4 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80021c4:	b480      	push	{r7}
 80021c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80021c8:	bf00      	nop
 80021ca:	e7fd      	b.n	80021c8 <BusFault_Handler+0x4>

080021cc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80021cc:	b480      	push	{r7}
 80021ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80021d0:	bf00      	nop
 80021d2:	e7fd      	b.n	80021d0 <UsageFault_Handler+0x4>

080021d4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80021d4:	b480      	push	{r7}
 80021d6:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80021d8:	bf00      	nop
 80021da:	46bd      	mov	sp, r7
 80021dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021e0:	4770      	bx	lr

080021e2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80021e2:	b480      	push	{r7}
 80021e4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80021e6:	bf00      	nop
 80021e8:	46bd      	mov	sp, r7
 80021ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021ee:	4770      	bx	lr

080021f0 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80021f0:	b480      	push	{r7}
 80021f2:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80021f4:	bf00      	nop
 80021f6:	46bd      	mov	sp, r7
 80021f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021fc:	4770      	bx	lr

080021fe <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80021fe:	b580      	push	{r7, lr}
 8002200:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002202:	f000 fadb 	bl	80027bc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002206:	bf00      	nop
 8002208:	bd80      	pop	{r7, pc}
	...

0800220c <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 800220c:	b580      	push	{r7, lr}
 800220e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8002210:	4802      	ldr	r0, [pc, #8]	@ (800221c <TIM2_IRQHandler+0x10>)
 8002212:	f003 f803 	bl	800521c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8002216:	bf00      	nop
 8002218:	bd80      	pop	{r7, pc}
 800221a:	bf00      	nop
 800221c:	20000230 	.word	0x20000230

08002220 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8002220:	b580      	push	{r7, lr}
 8002222:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8002224:	4802      	ldr	r0, [pc, #8]	@ (8002230 <TIM3_IRQHandler+0x10>)
 8002226:	f002 fff9 	bl	800521c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 800222a:	bf00      	nop
 800222c:	bd80      	pop	{r7, pc}
 800222e:	bf00      	nop
 8002230:	20000278 	.word	0x20000278

08002234 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002234:	b480      	push	{r7}
 8002236:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002238:	4b06      	ldr	r3, [pc, #24]	@ (8002254 <SystemInit+0x20>)
 800223a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800223e:	4a05      	ldr	r2, [pc, #20]	@ (8002254 <SystemInit+0x20>)
 8002240:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002244:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002248:	bf00      	nop
 800224a:	46bd      	mov	sp, r7
 800224c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002250:	4770      	bx	lr
 8002252:	bf00      	nop
 8002254:	e000ed00 	.word	0xe000ed00

08002258 <MX_TIM1_Init>:
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim5;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 8002258:	b580      	push	{r7, lr}
 800225a:	b08c      	sub	sp, #48	@ 0x30
 800225c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 800225e:	f107 030c 	add.w	r3, r7, #12
 8002262:	2224      	movs	r2, #36	@ 0x24
 8002264:	2100      	movs	r1, #0
 8002266:	4618      	mov	r0, r3
 8002268:	f003 fe26 	bl	8005eb8 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800226c:	1d3b      	adds	r3, r7, #4
 800226e:	2200      	movs	r2, #0
 8002270:	601a      	str	r2, [r3, #0]
 8002272:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8002274:	4b22      	ldr	r3, [pc, #136]	@ (8002300 <MX_TIM1_Init+0xa8>)
 8002276:	4a23      	ldr	r2, [pc, #140]	@ (8002304 <MX_TIM1_Init+0xac>)
 8002278:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 800227a:	4b21      	ldr	r3, [pc, #132]	@ (8002300 <MX_TIM1_Init+0xa8>)
 800227c:	2200      	movs	r2, #0
 800227e:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002280:	4b1f      	ldr	r3, [pc, #124]	@ (8002300 <MX_TIM1_Init+0xa8>)
 8002282:	2200      	movs	r2, #0
 8002284:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8002286:	4b1e      	ldr	r3, [pc, #120]	@ (8002300 <MX_TIM1_Init+0xa8>)
 8002288:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800228c:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800228e:	4b1c      	ldr	r3, [pc, #112]	@ (8002300 <MX_TIM1_Init+0xa8>)
 8002290:	2200      	movs	r2, #0
 8002292:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8002294:	4b1a      	ldr	r3, [pc, #104]	@ (8002300 <MX_TIM1_Init+0xa8>)
 8002296:	2200      	movs	r2, #0
 8002298:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800229a:	4b19      	ldr	r3, [pc, #100]	@ (8002300 <MX_TIM1_Init+0xa8>)
 800229c:	2200      	movs	r2, #0
 800229e:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 80022a0:	2303      	movs	r3, #3
 80022a2:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80022a4:	2300      	movs	r3, #0
 80022a6:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80022a8:	2301      	movs	r3, #1
 80022aa:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80022ac:	2300      	movs	r3, #0
 80022ae:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 80022b0:	2300      	movs	r3, #0
 80022b2:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80022b4:	2300      	movs	r3, #0
 80022b6:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80022b8:	2301      	movs	r3, #1
 80022ba:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80022bc:	2300      	movs	r3, #0
 80022be:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 80022c0:	2300      	movs	r3, #0
 80022c2:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK)
 80022c4:	f107 030c 	add.w	r3, r7, #12
 80022c8:	4619      	mov	r1, r3
 80022ca:	480d      	ldr	r0, [pc, #52]	@ (8002300 <MX_TIM1_Init+0xa8>)
 80022cc:	f002 fe72 	bl	8004fb4 <HAL_TIM_Encoder_Init>
 80022d0:	4603      	mov	r3, r0
 80022d2:	2b00      	cmp	r3, #0
 80022d4:	d001      	beq.n	80022da <MX_TIM1_Init+0x82>
  {
    Error_Handler();
 80022d6:	f7ff fba7 	bl	8001a28 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80022da:	2300      	movs	r3, #0
 80022dc:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80022de:	2300      	movs	r3, #0
 80022e0:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80022e2:	1d3b      	adds	r3, r7, #4
 80022e4:	4619      	mov	r1, r3
 80022e6:	4806      	ldr	r0, [pc, #24]	@ (8002300 <MX_TIM1_Init+0xa8>)
 80022e8:	f003 fd56 	bl	8005d98 <HAL_TIMEx_MasterConfigSynchronization>
 80022ec:	4603      	mov	r3, r0
 80022ee:	2b00      	cmp	r3, #0
 80022f0:	d001      	beq.n	80022f6 <MX_TIM1_Init+0x9e>
  {
    Error_Handler();
 80022f2:	f7ff fb99 	bl	8001a28 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 80022f6:	bf00      	nop
 80022f8:	3730      	adds	r7, #48	@ 0x30
 80022fa:	46bd      	mov	sp, r7
 80022fc:	bd80      	pop	{r7, pc}
 80022fe:	bf00      	nop
 8002300:	200001e8 	.word	0x200001e8
 8002304:	40010000 	.word	0x40010000

08002308 <MX_TIM2_Init>:
/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8002308:	b580      	push	{r7, lr}
 800230a:	b086      	sub	sp, #24
 800230c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800230e:	f107 0308 	add.w	r3, r7, #8
 8002312:	2200      	movs	r2, #0
 8002314:	601a      	str	r2, [r3, #0]
 8002316:	605a      	str	r2, [r3, #4]
 8002318:	609a      	str	r2, [r3, #8]
 800231a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800231c:	463b      	mov	r3, r7
 800231e:	2200      	movs	r2, #0
 8002320:	601a      	str	r2, [r3, #0]
 8002322:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8002324:	4b1d      	ldr	r3, [pc, #116]	@ (800239c <MX_TIM2_Init+0x94>)
 8002326:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800232a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 800232c:	4b1b      	ldr	r3, [pc, #108]	@ (800239c <MX_TIM2_Init+0x94>)
 800232e:	2200      	movs	r2, #0
 8002330:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002332:	4b1a      	ldr	r3, [pc, #104]	@ (800239c <MX_TIM2_Init+0x94>)
 8002334:	2200      	movs	r2, #0
 8002336:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 420000-1;
 8002338:	4b18      	ldr	r3, [pc, #96]	@ (800239c <MX_TIM2_Init+0x94>)
 800233a:	4a19      	ldr	r2, [pc, #100]	@ (80023a0 <MX_TIM2_Init+0x98>)
 800233c:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800233e:	4b17      	ldr	r3, [pc, #92]	@ (800239c <MX_TIM2_Init+0x94>)
 8002340:	2200      	movs	r2, #0
 8002342:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002344:	4b15      	ldr	r3, [pc, #84]	@ (800239c <MX_TIM2_Init+0x94>)
 8002346:	2200      	movs	r2, #0
 8002348:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800234a:	4814      	ldr	r0, [pc, #80]	@ (800239c <MX_TIM2_Init+0x94>)
 800234c:	f002 fbf2 	bl	8004b34 <HAL_TIM_Base_Init>
 8002350:	4603      	mov	r3, r0
 8002352:	2b00      	cmp	r3, #0
 8002354:	d001      	beq.n	800235a <MX_TIM2_Init+0x52>
  {
    Error_Handler();
 8002356:	f7ff fb67 	bl	8001a28 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800235a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800235e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8002360:	f107 0308 	add.w	r3, r7, #8
 8002364:	4619      	mov	r1, r3
 8002366:	480d      	ldr	r0, [pc, #52]	@ (800239c <MX_TIM2_Init+0x94>)
 8002368:	f003 f90a 	bl	8005580 <HAL_TIM_ConfigClockSource>
 800236c:	4603      	mov	r3, r0
 800236e:	2b00      	cmp	r3, #0
 8002370:	d001      	beq.n	8002376 <MX_TIM2_Init+0x6e>
  {
    Error_Handler();
 8002372:	f7ff fb59 	bl	8001a28 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002376:	2300      	movs	r3, #0
 8002378:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800237a:	2300      	movs	r3, #0
 800237c:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800237e:	463b      	mov	r3, r7
 8002380:	4619      	mov	r1, r3
 8002382:	4806      	ldr	r0, [pc, #24]	@ (800239c <MX_TIM2_Init+0x94>)
 8002384:	f003 fd08 	bl	8005d98 <HAL_TIMEx_MasterConfigSynchronization>
 8002388:	4603      	mov	r3, r0
 800238a:	2b00      	cmp	r3, #0
 800238c:	d001      	beq.n	8002392 <MX_TIM2_Init+0x8a>
  {
    Error_Handler();
 800238e:	f7ff fb4b 	bl	8001a28 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8002392:	bf00      	nop
 8002394:	3718      	adds	r7, #24
 8002396:	46bd      	mov	sp, r7
 8002398:	bd80      	pop	{r7, pc}
 800239a:	bf00      	nop
 800239c:	20000230 	.word	0x20000230
 80023a0:	0006689f 	.word	0x0006689f

080023a4 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 80023a4:	b580      	push	{r7, lr}
 80023a6:	b086      	sub	sp, #24
 80023a8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80023aa:	f107 0308 	add.w	r3, r7, #8
 80023ae:	2200      	movs	r2, #0
 80023b0:	601a      	str	r2, [r3, #0]
 80023b2:	605a      	str	r2, [r3, #4]
 80023b4:	609a      	str	r2, [r3, #8]
 80023b6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80023b8:	463b      	mov	r3, r7
 80023ba:	2200      	movs	r2, #0
 80023bc:	601a      	str	r2, [r3, #0]
 80023be:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80023c0:	4b1d      	ldr	r3, [pc, #116]	@ (8002438 <MX_TIM3_Init+0x94>)
 80023c2:	4a1e      	ldr	r2, [pc, #120]	@ (800243c <MX_TIM3_Init+0x98>)
 80023c4:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 50-1;
 80023c6:	4b1c      	ldr	r3, [pc, #112]	@ (8002438 <MX_TIM3_Init+0x94>)
 80023c8:	2231      	movs	r2, #49	@ 0x31
 80023ca:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80023cc:	4b1a      	ldr	r3, [pc, #104]	@ (8002438 <MX_TIM3_Init+0x94>)
 80023ce:	2200      	movs	r2, #0
 80023d0:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 42000-1;
 80023d2:	4b19      	ldr	r3, [pc, #100]	@ (8002438 <MX_TIM3_Init+0x94>)
 80023d4:	f24a 420f 	movw	r2, #41999	@ 0xa40f
 80023d8:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80023da:	4b17      	ldr	r3, [pc, #92]	@ (8002438 <MX_TIM3_Init+0x94>)
 80023dc:	2200      	movs	r2, #0
 80023de:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80023e0:	4b15      	ldr	r3, [pc, #84]	@ (8002438 <MX_TIM3_Init+0x94>)
 80023e2:	2280      	movs	r2, #128	@ 0x80
 80023e4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80023e6:	4814      	ldr	r0, [pc, #80]	@ (8002438 <MX_TIM3_Init+0x94>)
 80023e8:	f002 fba4 	bl	8004b34 <HAL_TIM_Base_Init>
 80023ec:	4603      	mov	r3, r0
 80023ee:	2b00      	cmp	r3, #0
 80023f0:	d001      	beq.n	80023f6 <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 80023f2:	f7ff fb19 	bl	8001a28 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80023f6:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80023fa:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80023fc:	f107 0308 	add.w	r3, r7, #8
 8002400:	4619      	mov	r1, r3
 8002402:	480d      	ldr	r0, [pc, #52]	@ (8002438 <MX_TIM3_Init+0x94>)
 8002404:	f003 f8bc 	bl	8005580 <HAL_TIM_ConfigClockSource>
 8002408:	4603      	mov	r3, r0
 800240a:	2b00      	cmp	r3, #0
 800240c:	d001      	beq.n	8002412 <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 800240e:	f7ff fb0b 	bl	8001a28 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002412:	2300      	movs	r3, #0
 8002414:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002416:	2300      	movs	r3, #0
 8002418:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800241a:	463b      	mov	r3, r7
 800241c:	4619      	mov	r1, r3
 800241e:	4806      	ldr	r0, [pc, #24]	@ (8002438 <MX_TIM3_Init+0x94>)
 8002420:	f003 fcba 	bl	8005d98 <HAL_TIMEx_MasterConfigSynchronization>
 8002424:	4603      	mov	r3, r0
 8002426:	2b00      	cmp	r3, #0
 8002428:	d001      	beq.n	800242e <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 800242a:	f7ff fafd 	bl	8001a28 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 800242e:	bf00      	nop
 8002430:	3718      	adds	r7, #24
 8002432:	46bd      	mov	sp, r7
 8002434:	bd80      	pop	{r7, pc}
 8002436:	bf00      	nop
 8002438:	20000278 	.word	0x20000278
 800243c:	40000400 	.word	0x40000400

08002440 <MX_TIM5_Init>:
/* TIM5 init function */
void MX_TIM5_Init(void)
{
 8002440:	b580      	push	{r7, lr}
 8002442:	b08a      	sub	sp, #40	@ 0x28
 8002444:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002446:	f107 0320 	add.w	r3, r7, #32
 800244a:	2200      	movs	r2, #0
 800244c:	601a      	str	r2, [r3, #0]
 800244e:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002450:	1d3b      	adds	r3, r7, #4
 8002452:	2200      	movs	r2, #0
 8002454:	601a      	str	r2, [r3, #0]
 8002456:	605a      	str	r2, [r3, #4]
 8002458:	609a      	str	r2, [r3, #8]
 800245a:	60da      	str	r2, [r3, #12]
 800245c:	611a      	str	r2, [r3, #16]
 800245e:	615a      	str	r2, [r3, #20]
 8002460:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8002462:	4b22      	ldr	r3, [pc, #136]	@ (80024ec <MX_TIM5_Init+0xac>)
 8002464:	4a22      	ldr	r2, [pc, #136]	@ (80024f0 <MX_TIM5_Init+0xb0>)
 8002466:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 0;
 8002468:	4b20      	ldr	r3, [pc, #128]	@ (80024ec <MX_TIM5_Init+0xac>)
 800246a:	2200      	movs	r2, #0
 800246c:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 800246e:	4b1f      	ldr	r3, [pc, #124]	@ (80024ec <MX_TIM5_Init+0xac>)
 8002470:	2200      	movs	r2, #0
 8002472:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4199;
 8002474:	4b1d      	ldr	r3, [pc, #116]	@ (80024ec <MX_TIM5_Init+0xac>)
 8002476:	f241 0267 	movw	r2, #4199	@ 0x1067
 800247a:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800247c:	4b1b      	ldr	r3, [pc, #108]	@ (80024ec <MX_TIM5_Init+0xac>)
 800247e:	2200      	movs	r2, #0
 8002480:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002482:	4b1a      	ldr	r3, [pc, #104]	@ (80024ec <MX_TIM5_Init+0xac>)
 8002484:	2280      	movs	r2, #128	@ 0x80
 8002486:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 8002488:	4818      	ldr	r0, [pc, #96]	@ (80024ec <MX_TIM5_Init+0xac>)
 800248a:	f002 fc7b 	bl	8004d84 <HAL_TIM_PWM_Init>
 800248e:	4603      	mov	r3, r0
 8002490:	2b00      	cmp	r3, #0
 8002492:	d001      	beq.n	8002498 <MX_TIM5_Init+0x58>
  {
    Error_Handler();
 8002494:	f7ff fac8 	bl	8001a28 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002498:	2300      	movs	r3, #0
 800249a:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800249c:	2300      	movs	r3, #0
 800249e:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80024a0:	f107 0320 	add.w	r3, r7, #32
 80024a4:	4619      	mov	r1, r3
 80024a6:	4811      	ldr	r0, [pc, #68]	@ (80024ec <MX_TIM5_Init+0xac>)
 80024a8:	f003 fc76 	bl	8005d98 <HAL_TIMEx_MasterConfigSynchronization>
 80024ac:	4603      	mov	r3, r0
 80024ae:	2b00      	cmp	r3, #0
 80024b0:	d001      	beq.n	80024b6 <MX_TIM5_Init+0x76>
  {
    Error_Handler();
 80024b2:	f7ff fab9 	bl	8001a28 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80024b6:	2360      	movs	r3, #96	@ 0x60
 80024b8:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80024ba:	2300      	movs	r3, #0
 80024bc:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80024be:	2300      	movs	r3, #0
 80024c0:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80024c2:	2300      	movs	r3, #0
 80024c4:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80024c6:	1d3b      	adds	r3, r7, #4
 80024c8:	2200      	movs	r2, #0
 80024ca:	4619      	mov	r1, r3
 80024cc:	4807      	ldr	r0, [pc, #28]	@ (80024ec <MX_TIM5_Init+0xac>)
 80024ce:	f002 ff95 	bl	80053fc <HAL_TIM_PWM_ConfigChannel>
 80024d2:	4603      	mov	r3, r0
 80024d4:	2b00      	cmp	r3, #0
 80024d6:	d001      	beq.n	80024dc <MX_TIM5_Init+0x9c>
  {
    Error_Handler();
 80024d8:	f7ff faa6 	bl	8001a28 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */
  HAL_TIM_MspPostInit(&htim5);
 80024dc:	4803      	ldr	r0, [pc, #12]	@ (80024ec <MX_TIM5_Init+0xac>)
 80024de:	f000 f8b7 	bl	8002650 <HAL_TIM_MspPostInit>

}
 80024e2:	bf00      	nop
 80024e4:	3728      	adds	r7, #40	@ 0x28
 80024e6:	46bd      	mov	sp, r7
 80024e8:	bd80      	pop	{r7, pc}
 80024ea:	bf00      	nop
 80024ec:	200002c0 	.word	0x200002c0
 80024f0:	40000c00 	.word	0x40000c00

080024f4 <HAL_TIM_Encoder_MspInit>:

void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
{
 80024f4:	b580      	push	{r7, lr}
 80024f6:	b08a      	sub	sp, #40	@ 0x28
 80024f8:	af00      	add	r7, sp, #0
 80024fa:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024fc:	f107 0314 	add.w	r3, r7, #20
 8002500:	2200      	movs	r2, #0
 8002502:	601a      	str	r2, [r3, #0]
 8002504:	605a      	str	r2, [r3, #4]
 8002506:	609a      	str	r2, [r3, #8]
 8002508:	60da      	str	r2, [r3, #12]
 800250a:	611a      	str	r2, [r3, #16]
  if(tim_encoderHandle->Instance==TIM1)
 800250c:	687b      	ldr	r3, [r7, #4]
 800250e:	681b      	ldr	r3, [r3, #0]
 8002510:	4a19      	ldr	r2, [pc, #100]	@ (8002578 <HAL_TIM_Encoder_MspInit+0x84>)
 8002512:	4293      	cmp	r3, r2
 8002514:	d12c      	bne.n	8002570 <HAL_TIM_Encoder_MspInit+0x7c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002516:	2300      	movs	r3, #0
 8002518:	613b      	str	r3, [r7, #16]
 800251a:	4b18      	ldr	r3, [pc, #96]	@ (800257c <HAL_TIM_Encoder_MspInit+0x88>)
 800251c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800251e:	4a17      	ldr	r2, [pc, #92]	@ (800257c <HAL_TIM_Encoder_MspInit+0x88>)
 8002520:	f043 0301 	orr.w	r3, r3, #1
 8002524:	6453      	str	r3, [r2, #68]	@ 0x44
 8002526:	4b15      	ldr	r3, [pc, #84]	@ (800257c <HAL_TIM_Encoder_MspInit+0x88>)
 8002528:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800252a:	f003 0301 	and.w	r3, r3, #1
 800252e:	613b      	str	r3, [r7, #16]
 8002530:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002532:	2300      	movs	r3, #0
 8002534:	60fb      	str	r3, [r7, #12]
 8002536:	4b11      	ldr	r3, [pc, #68]	@ (800257c <HAL_TIM_Encoder_MspInit+0x88>)
 8002538:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800253a:	4a10      	ldr	r2, [pc, #64]	@ (800257c <HAL_TIM_Encoder_MspInit+0x88>)
 800253c:	f043 0301 	orr.w	r3, r3, #1
 8002540:	6313      	str	r3, [r2, #48]	@ 0x30
 8002542:	4b0e      	ldr	r3, [pc, #56]	@ (800257c <HAL_TIM_Encoder_MspInit+0x88>)
 8002544:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002546:	f003 0301 	and.w	r3, r3, #1
 800254a:	60fb      	str	r3, [r7, #12]
 800254c:	68fb      	ldr	r3, [r7, #12]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA9     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 800254e:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8002552:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002554:	2302      	movs	r3, #2
 8002556:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002558:	2301      	movs	r3, #1
 800255a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800255c:	2300      	movs	r3, #0
 800255e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8002560:	2301      	movs	r3, #1
 8002562:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002564:	f107 0314 	add.w	r3, r7, #20
 8002568:	4619      	mov	r1, r3
 800256a:	4805      	ldr	r0, [pc, #20]	@ (8002580 <HAL_TIM_Encoder_MspInit+0x8c>)
 800256c:	f000 fa7c 	bl	8002a68 <HAL_GPIO_Init>

  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
}
 8002570:	bf00      	nop
 8002572:	3728      	adds	r7, #40	@ 0x28
 8002574:	46bd      	mov	sp, r7
 8002576:	bd80      	pop	{r7, pc}
 8002578:	40010000 	.word	0x40010000
 800257c:	40023800 	.word	0x40023800
 8002580:	40020000 	.word	0x40020000

08002584 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8002584:	b580      	push	{r7, lr}
 8002586:	b084      	sub	sp, #16
 8002588:	af00      	add	r7, sp, #0
 800258a:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002594:	d116      	bne.n	80025c4 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002596:	2300      	movs	r3, #0
 8002598:	60fb      	str	r3, [r7, #12]
 800259a:	4b1a      	ldr	r3, [pc, #104]	@ (8002604 <HAL_TIM_Base_MspInit+0x80>)
 800259c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800259e:	4a19      	ldr	r2, [pc, #100]	@ (8002604 <HAL_TIM_Base_MspInit+0x80>)
 80025a0:	f043 0301 	orr.w	r3, r3, #1
 80025a4:	6413      	str	r3, [r2, #64]	@ 0x40
 80025a6:	4b17      	ldr	r3, [pc, #92]	@ (8002604 <HAL_TIM_Base_MspInit+0x80>)
 80025a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025aa:	f003 0301 	and.w	r3, r3, #1
 80025ae:	60fb      	str	r3, [r7, #12]
 80025b0:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 80025b2:	2200      	movs	r2, #0
 80025b4:	2100      	movs	r1, #0
 80025b6:	201c      	movs	r0, #28
 80025b8:	f000 fa1f 	bl	80029fa <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80025bc:	201c      	movs	r0, #28
 80025be:	f000 fa38 	bl	8002a32 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
}
 80025c2:	e01a      	b.n	80025fa <HAL_TIM_Base_MspInit+0x76>
  else if(tim_baseHandle->Instance==TIM3)
 80025c4:	687b      	ldr	r3, [r7, #4]
 80025c6:	681b      	ldr	r3, [r3, #0]
 80025c8:	4a0f      	ldr	r2, [pc, #60]	@ (8002608 <HAL_TIM_Base_MspInit+0x84>)
 80025ca:	4293      	cmp	r3, r2
 80025cc:	d115      	bne.n	80025fa <HAL_TIM_Base_MspInit+0x76>
    __HAL_RCC_TIM3_CLK_ENABLE();
 80025ce:	2300      	movs	r3, #0
 80025d0:	60bb      	str	r3, [r7, #8]
 80025d2:	4b0c      	ldr	r3, [pc, #48]	@ (8002604 <HAL_TIM_Base_MspInit+0x80>)
 80025d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025d6:	4a0b      	ldr	r2, [pc, #44]	@ (8002604 <HAL_TIM_Base_MspInit+0x80>)
 80025d8:	f043 0302 	orr.w	r3, r3, #2
 80025dc:	6413      	str	r3, [r2, #64]	@ 0x40
 80025de:	4b09      	ldr	r3, [pc, #36]	@ (8002604 <HAL_TIM_Base_MspInit+0x80>)
 80025e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025e2:	f003 0302 	and.w	r3, r3, #2
 80025e6:	60bb      	str	r3, [r7, #8]
 80025e8:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 80025ea:	2200      	movs	r2, #0
 80025ec:	2100      	movs	r1, #0
 80025ee:	201d      	movs	r0, #29
 80025f0:	f000 fa03 	bl	80029fa <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 80025f4:	201d      	movs	r0, #29
 80025f6:	f000 fa1c 	bl	8002a32 <HAL_NVIC_EnableIRQ>
}
 80025fa:	bf00      	nop
 80025fc:	3710      	adds	r7, #16
 80025fe:	46bd      	mov	sp, r7
 8002600:	bd80      	pop	{r7, pc}
 8002602:	bf00      	nop
 8002604:	40023800 	.word	0x40023800
 8002608:	40000400 	.word	0x40000400

0800260c <HAL_TIM_PWM_MspInit>:

void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
{
 800260c:	b480      	push	{r7}
 800260e:	b085      	sub	sp, #20
 8002610:	af00      	add	r7, sp, #0
 8002612:	6078      	str	r0, [r7, #4]

  if(tim_pwmHandle->Instance==TIM5)
 8002614:	687b      	ldr	r3, [r7, #4]
 8002616:	681b      	ldr	r3, [r3, #0]
 8002618:	4a0b      	ldr	r2, [pc, #44]	@ (8002648 <HAL_TIM_PWM_MspInit+0x3c>)
 800261a:	4293      	cmp	r3, r2
 800261c:	d10d      	bne.n	800263a <HAL_TIM_PWM_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM5_MspInit 0 */

  /* USER CODE END TIM5_MspInit 0 */
    /* TIM5 clock enable */
    __HAL_RCC_TIM5_CLK_ENABLE();
 800261e:	2300      	movs	r3, #0
 8002620:	60fb      	str	r3, [r7, #12]
 8002622:	4b0a      	ldr	r3, [pc, #40]	@ (800264c <HAL_TIM_PWM_MspInit+0x40>)
 8002624:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002626:	4a09      	ldr	r2, [pc, #36]	@ (800264c <HAL_TIM_PWM_MspInit+0x40>)
 8002628:	f043 0308 	orr.w	r3, r3, #8
 800262c:	6413      	str	r3, [r2, #64]	@ 0x40
 800262e:	4b07      	ldr	r3, [pc, #28]	@ (800264c <HAL_TIM_PWM_MspInit+0x40>)
 8002630:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002632:	f003 0308 	and.w	r3, r3, #8
 8002636:	60fb      	str	r3, [r7, #12]
 8002638:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }
}
 800263a:	bf00      	nop
 800263c:	3714      	adds	r7, #20
 800263e:	46bd      	mov	sp, r7
 8002640:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002644:	4770      	bx	lr
 8002646:	bf00      	nop
 8002648:	40000c00 	.word	0x40000c00
 800264c:	40023800 	.word	0x40023800

08002650 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8002650:	b580      	push	{r7, lr}
 8002652:	b088      	sub	sp, #32
 8002654:	af00      	add	r7, sp, #0
 8002656:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002658:	f107 030c 	add.w	r3, r7, #12
 800265c:	2200      	movs	r2, #0
 800265e:	601a      	str	r2, [r3, #0]
 8002660:	605a      	str	r2, [r3, #4]
 8002662:	609a      	str	r2, [r3, #8]
 8002664:	60da      	str	r2, [r3, #12]
 8002666:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM5)
 8002668:	687b      	ldr	r3, [r7, #4]
 800266a:	681b      	ldr	r3, [r3, #0]
 800266c:	4a12      	ldr	r2, [pc, #72]	@ (80026b8 <HAL_TIM_MspPostInit+0x68>)
 800266e:	4293      	cmp	r3, r2
 8002670:	d11d      	bne.n	80026ae <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM5_MspPostInit 0 */

  /* USER CODE END TIM5_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002672:	2300      	movs	r3, #0
 8002674:	60bb      	str	r3, [r7, #8]
 8002676:	4b11      	ldr	r3, [pc, #68]	@ (80026bc <HAL_TIM_MspPostInit+0x6c>)
 8002678:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800267a:	4a10      	ldr	r2, [pc, #64]	@ (80026bc <HAL_TIM_MspPostInit+0x6c>)
 800267c:	f043 0301 	orr.w	r3, r3, #1
 8002680:	6313      	str	r3, [r2, #48]	@ 0x30
 8002682:	4b0e      	ldr	r3, [pc, #56]	@ (80026bc <HAL_TIM_MspPostInit+0x6c>)
 8002684:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002686:	f003 0301 	and.w	r3, r3, #1
 800268a:	60bb      	str	r3, [r7, #8]
 800268c:	68bb      	ldr	r3, [r7, #8]
    /**TIM5 GPIO Configuration
    PA0-WKUP     ------> TIM5_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 800268e:	2301      	movs	r3, #1
 8002690:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002692:	2302      	movs	r3, #2
 8002694:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002696:	2300      	movs	r3, #0
 8002698:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800269a:	2300      	movs	r3, #0
 800269c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 800269e:	2302      	movs	r3, #2
 80026a0:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80026a2:	f107 030c 	add.w	r3, r7, #12
 80026a6:	4619      	mov	r1, r3
 80026a8:	4805      	ldr	r0, [pc, #20]	@ (80026c0 <HAL_TIM_MspPostInit+0x70>)
 80026aa:	f000 f9dd 	bl	8002a68 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM5_MspPostInit 1 */

  /* USER CODE END TIM5_MspPostInit 1 */
  }

}
 80026ae:	bf00      	nop
 80026b0:	3720      	adds	r7, #32
 80026b2:	46bd      	mov	sp, r7
 80026b4:	bd80      	pop	{r7, pc}
 80026b6:	bf00      	nop
 80026b8:	40000c00 	.word	0x40000c00
 80026bc:	40023800 	.word	0x40023800
 80026c0:	40020000 	.word	0x40020000

080026c4 <Reset_Handler>:
 80026c4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80026fc <LoopFillZerobss+0xe>
 80026c8:	f7ff fdb4 	bl	8002234 <SystemInit>
 80026cc:	480c      	ldr	r0, [pc, #48]	@ (8002700 <LoopFillZerobss+0x12>)
 80026ce:	490d      	ldr	r1, [pc, #52]	@ (8002704 <LoopFillZerobss+0x16>)
 80026d0:	4a0d      	ldr	r2, [pc, #52]	@ (8002708 <LoopFillZerobss+0x1a>)
 80026d2:	2300      	movs	r3, #0
 80026d4:	e002      	b.n	80026dc <LoopCopyDataInit>

080026d6 <CopyDataInit>:
 80026d6:	58d4      	ldr	r4, [r2, r3]
 80026d8:	50c4      	str	r4, [r0, r3]
 80026da:	3304      	adds	r3, #4

080026dc <LoopCopyDataInit>:
 80026dc:	18c4      	adds	r4, r0, r3
 80026de:	428c      	cmp	r4, r1
 80026e0:	d3f9      	bcc.n	80026d6 <CopyDataInit>
 80026e2:	4a0a      	ldr	r2, [pc, #40]	@ (800270c <LoopFillZerobss+0x1e>)
 80026e4:	4c0a      	ldr	r4, [pc, #40]	@ (8002710 <LoopFillZerobss+0x22>)
 80026e6:	2300      	movs	r3, #0
 80026e8:	e001      	b.n	80026ee <LoopFillZerobss>

080026ea <FillZerobss>:
 80026ea:	6013      	str	r3, [r2, #0]
 80026ec:	3204      	adds	r2, #4

080026ee <LoopFillZerobss>:
 80026ee:	42a2      	cmp	r2, r4
 80026f0:	d3fb      	bcc.n	80026ea <FillZerobss>
 80026f2:	f003 fbef 	bl	8005ed4 <__libc_init_array>
 80026f6:	f7fe ffbf 	bl	8001678 <main>
 80026fa:	4770      	bx	lr
 80026fc:	20020000 	.word	0x20020000
 8002700:	20000000 	.word	0x20000000
 8002704:	20000098 	.word	0x20000098
 8002708:	080064f0 	.word	0x080064f0
 800270c:	20000098 	.word	0x20000098
 8002710:	20000444 	.word	0x20000444

08002714 <ADC_IRQHandler>:
 8002714:	e7fe      	b.n	8002714 <ADC_IRQHandler>
	...

08002718 <HAL_Init>:
 8002718:	b580      	push	{r7, lr}
 800271a:	af00      	add	r7, sp, #0
 800271c:	4b0e      	ldr	r3, [pc, #56]	@ (8002758 <HAL_Init+0x40>)
 800271e:	681b      	ldr	r3, [r3, #0]
 8002720:	4a0d      	ldr	r2, [pc, #52]	@ (8002758 <HAL_Init+0x40>)
 8002722:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002726:	6013      	str	r3, [r2, #0]
 8002728:	4b0b      	ldr	r3, [pc, #44]	@ (8002758 <HAL_Init+0x40>)
 800272a:	681b      	ldr	r3, [r3, #0]
 800272c:	4a0a      	ldr	r2, [pc, #40]	@ (8002758 <HAL_Init+0x40>)
 800272e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002732:	6013      	str	r3, [r2, #0]
 8002734:	4b08      	ldr	r3, [pc, #32]	@ (8002758 <HAL_Init+0x40>)
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	4a07      	ldr	r2, [pc, #28]	@ (8002758 <HAL_Init+0x40>)
 800273a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800273e:	6013      	str	r3, [r2, #0]
 8002740:	2003      	movs	r0, #3
 8002742:	f000 f94f 	bl	80029e4 <HAL_NVIC_SetPriorityGrouping>
 8002746:	200f      	movs	r0, #15
 8002748:	f000 f808 	bl	800275c <HAL_InitTick>
 800274c:	f7ff fd06 	bl	800215c <HAL_MspInit>
 8002750:	2300      	movs	r3, #0
 8002752:	4618      	mov	r0, r3
 8002754:	bd80      	pop	{r7, pc}
 8002756:	bf00      	nop
 8002758:	40023c00 	.word	0x40023c00

0800275c <HAL_InitTick>:
 800275c:	b580      	push	{r7, lr}
 800275e:	b082      	sub	sp, #8
 8002760:	af00      	add	r7, sp, #0
 8002762:	6078      	str	r0, [r7, #4]
 8002764:	4b12      	ldr	r3, [pc, #72]	@ (80027b0 <HAL_InitTick+0x54>)
 8002766:	681a      	ldr	r2, [r3, #0]
 8002768:	4b12      	ldr	r3, [pc, #72]	@ (80027b4 <HAL_InitTick+0x58>)
 800276a:	781b      	ldrb	r3, [r3, #0]
 800276c:	4619      	mov	r1, r3
 800276e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002772:	fbb3 f3f1 	udiv	r3, r3, r1
 8002776:	fbb2 f3f3 	udiv	r3, r2, r3
 800277a:	4618      	mov	r0, r3
 800277c:	f000 f967 	bl	8002a4e <HAL_SYSTICK_Config>
 8002780:	4603      	mov	r3, r0
 8002782:	2b00      	cmp	r3, #0
 8002784:	d001      	beq.n	800278a <HAL_InitTick+0x2e>
 8002786:	2301      	movs	r3, #1
 8002788:	e00e      	b.n	80027a8 <HAL_InitTick+0x4c>
 800278a:	687b      	ldr	r3, [r7, #4]
 800278c:	2b0f      	cmp	r3, #15
 800278e:	d80a      	bhi.n	80027a6 <HAL_InitTick+0x4a>
 8002790:	2200      	movs	r2, #0
 8002792:	6879      	ldr	r1, [r7, #4]
 8002794:	f04f 30ff 	mov.w	r0, #4294967295
 8002798:	f000 f92f 	bl	80029fa <HAL_NVIC_SetPriority>
 800279c:	4a06      	ldr	r2, [pc, #24]	@ (80027b8 <HAL_InitTick+0x5c>)
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	6013      	str	r3, [r2, #0]
 80027a2:	2300      	movs	r3, #0
 80027a4:	e000      	b.n	80027a8 <HAL_InitTick+0x4c>
 80027a6:	2301      	movs	r3, #1
 80027a8:	4618      	mov	r0, r3
 80027aa:	3708      	adds	r7, #8
 80027ac:	46bd      	mov	sp, r7
 80027ae:	bd80      	pop	{r7, pc}
 80027b0:	20000028 	.word	0x20000028
 80027b4:	20000030 	.word	0x20000030
 80027b8:	2000002c 	.word	0x2000002c

080027bc <HAL_IncTick>:
 80027bc:	b480      	push	{r7}
 80027be:	af00      	add	r7, sp, #0
 80027c0:	4b06      	ldr	r3, [pc, #24]	@ (80027dc <HAL_IncTick+0x20>)
 80027c2:	781b      	ldrb	r3, [r3, #0]
 80027c4:	461a      	mov	r2, r3
 80027c6:	4b06      	ldr	r3, [pc, #24]	@ (80027e0 <HAL_IncTick+0x24>)
 80027c8:	681b      	ldr	r3, [r3, #0]
 80027ca:	4413      	add	r3, r2
 80027cc:	4a04      	ldr	r2, [pc, #16]	@ (80027e0 <HAL_IncTick+0x24>)
 80027ce:	6013      	str	r3, [r2, #0]
 80027d0:	bf00      	nop
 80027d2:	46bd      	mov	sp, r7
 80027d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027d8:	4770      	bx	lr
 80027da:	bf00      	nop
 80027dc:	20000030 	.word	0x20000030
 80027e0:	20000308 	.word	0x20000308

080027e4 <HAL_GetTick>:
 80027e4:	b480      	push	{r7}
 80027e6:	af00      	add	r7, sp, #0
 80027e8:	4b03      	ldr	r3, [pc, #12]	@ (80027f8 <HAL_GetTick+0x14>)
 80027ea:	681b      	ldr	r3, [r3, #0]
 80027ec:	4618      	mov	r0, r3
 80027ee:	46bd      	mov	sp, r7
 80027f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027f4:	4770      	bx	lr
 80027f6:	bf00      	nop
 80027f8:	20000308 	.word	0x20000308

080027fc <HAL_Delay>:
 80027fc:	b580      	push	{r7, lr}
 80027fe:	b084      	sub	sp, #16
 8002800:	af00      	add	r7, sp, #0
 8002802:	6078      	str	r0, [r7, #4]
 8002804:	f7ff ffee 	bl	80027e4 <HAL_GetTick>
 8002808:	60b8      	str	r0, [r7, #8]
 800280a:	687b      	ldr	r3, [r7, #4]
 800280c:	60fb      	str	r3, [r7, #12]
 800280e:	68fb      	ldr	r3, [r7, #12]
 8002810:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002814:	d005      	beq.n	8002822 <HAL_Delay+0x26>
 8002816:	4b0a      	ldr	r3, [pc, #40]	@ (8002840 <HAL_Delay+0x44>)
 8002818:	781b      	ldrb	r3, [r3, #0]
 800281a:	461a      	mov	r2, r3
 800281c:	68fb      	ldr	r3, [r7, #12]
 800281e:	4413      	add	r3, r2
 8002820:	60fb      	str	r3, [r7, #12]
 8002822:	bf00      	nop
 8002824:	f7ff ffde 	bl	80027e4 <HAL_GetTick>
 8002828:	4602      	mov	r2, r0
 800282a:	68bb      	ldr	r3, [r7, #8]
 800282c:	1ad3      	subs	r3, r2, r3
 800282e:	68fa      	ldr	r2, [r7, #12]
 8002830:	429a      	cmp	r2, r3
 8002832:	d8f7      	bhi.n	8002824 <HAL_Delay+0x28>
 8002834:	bf00      	nop
 8002836:	bf00      	nop
 8002838:	3710      	adds	r7, #16
 800283a:	46bd      	mov	sp, r7
 800283c:	bd80      	pop	{r7, pc}
 800283e:	bf00      	nop
 8002840:	20000030 	.word	0x20000030

08002844 <__NVIC_SetPriorityGrouping>:
 8002844:	b480      	push	{r7}
 8002846:	b085      	sub	sp, #20
 8002848:	af00      	add	r7, sp, #0
 800284a:	6078      	str	r0, [r7, #4]
 800284c:	687b      	ldr	r3, [r7, #4]
 800284e:	f003 0307 	and.w	r3, r3, #7
 8002852:	60fb      	str	r3, [r7, #12]
 8002854:	4b0c      	ldr	r3, [pc, #48]	@ (8002888 <__NVIC_SetPriorityGrouping+0x44>)
 8002856:	68db      	ldr	r3, [r3, #12]
 8002858:	60bb      	str	r3, [r7, #8]
 800285a:	68ba      	ldr	r2, [r7, #8]
 800285c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002860:	4013      	ands	r3, r2
 8002862:	60bb      	str	r3, [r7, #8]
 8002864:	68fb      	ldr	r3, [r7, #12]
 8002866:	021a      	lsls	r2, r3, #8
 8002868:	68bb      	ldr	r3, [r7, #8]
 800286a:	4313      	orrs	r3, r2
 800286c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002870:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002874:	60bb      	str	r3, [r7, #8]
 8002876:	4a04      	ldr	r2, [pc, #16]	@ (8002888 <__NVIC_SetPriorityGrouping+0x44>)
 8002878:	68bb      	ldr	r3, [r7, #8]
 800287a:	60d3      	str	r3, [r2, #12]
 800287c:	bf00      	nop
 800287e:	3714      	adds	r7, #20
 8002880:	46bd      	mov	sp, r7
 8002882:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002886:	4770      	bx	lr
 8002888:	e000ed00 	.word	0xe000ed00

0800288c <__NVIC_GetPriorityGrouping>:
 800288c:	b480      	push	{r7}
 800288e:	af00      	add	r7, sp, #0
 8002890:	4b04      	ldr	r3, [pc, #16]	@ (80028a4 <__NVIC_GetPriorityGrouping+0x18>)
 8002892:	68db      	ldr	r3, [r3, #12]
 8002894:	0a1b      	lsrs	r3, r3, #8
 8002896:	f003 0307 	and.w	r3, r3, #7
 800289a:	4618      	mov	r0, r3
 800289c:	46bd      	mov	sp, r7
 800289e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028a2:	4770      	bx	lr
 80028a4:	e000ed00 	.word	0xe000ed00

080028a8 <__NVIC_EnableIRQ>:
 80028a8:	b480      	push	{r7}
 80028aa:	b083      	sub	sp, #12
 80028ac:	af00      	add	r7, sp, #0
 80028ae:	4603      	mov	r3, r0
 80028b0:	71fb      	strb	r3, [r7, #7]
 80028b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80028b6:	2b00      	cmp	r3, #0
 80028b8:	db0b      	blt.n	80028d2 <__NVIC_EnableIRQ+0x2a>
 80028ba:	79fb      	ldrb	r3, [r7, #7]
 80028bc:	f003 021f 	and.w	r2, r3, #31
 80028c0:	4907      	ldr	r1, [pc, #28]	@ (80028e0 <__NVIC_EnableIRQ+0x38>)
 80028c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80028c6:	095b      	lsrs	r3, r3, #5
 80028c8:	2001      	movs	r0, #1
 80028ca:	fa00 f202 	lsl.w	r2, r0, r2
 80028ce:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80028d2:	bf00      	nop
 80028d4:	370c      	adds	r7, #12
 80028d6:	46bd      	mov	sp, r7
 80028d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028dc:	4770      	bx	lr
 80028de:	bf00      	nop
 80028e0:	e000e100 	.word	0xe000e100

080028e4 <__NVIC_SetPriority>:
 80028e4:	b480      	push	{r7}
 80028e6:	b083      	sub	sp, #12
 80028e8:	af00      	add	r7, sp, #0
 80028ea:	4603      	mov	r3, r0
 80028ec:	6039      	str	r1, [r7, #0]
 80028ee:	71fb      	strb	r3, [r7, #7]
 80028f0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80028f4:	2b00      	cmp	r3, #0
 80028f6:	db0a      	blt.n	800290e <__NVIC_SetPriority+0x2a>
 80028f8:	683b      	ldr	r3, [r7, #0]
 80028fa:	b2da      	uxtb	r2, r3
 80028fc:	490c      	ldr	r1, [pc, #48]	@ (8002930 <__NVIC_SetPriority+0x4c>)
 80028fe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002902:	0112      	lsls	r2, r2, #4
 8002904:	b2d2      	uxtb	r2, r2
 8002906:	440b      	add	r3, r1
 8002908:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800290c:	e00a      	b.n	8002924 <__NVIC_SetPriority+0x40>
 800290e:	683b      	ldr	r3, [r7, #0]
 8002910:	b2da      	uxtb	r2, r3
 8002912:	4908      	ldr	r1, [pc, #32]	@ (8002934 <__NVIC_SetPriority+0x50>)
 8002914:	79fb      	ldrb	r3, [r7, #7]
 8002916:	f003 030f 	and.w	r3, r3, #15
 800291a:	3b04      	subs	r3, #4
 800291c:	0112      	lsls	r2, r2, #4
 800291e:	b2d2      	uxtb	r2, r2
 8002920:	440b      	add	r3, r1
 8002922:	761a      	strb	r2, [r3, #24]
 8002924:	bf00      	nop
 8002926:	370c      	adds	r7, #12
 8002928:	46bd      	mov	sp, r7
 800292a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800292e:	4770      	bx	lr
 8002930:	e000e100 	.word	0xe000e100
 8002934:	e000ed00 	.word	0xe000ed00

08002938 <NVIC_EncodePriority>:
 8002938:	b480      	push	{r7}
 800293a:	b089      	sub	sp, #36	@ 0x24
 800293c:	af00      	add	r7, sp, #0
 800293e:	60f8      	str	r0, [r7, #12]
 8002940:	60b9      	str	r1, [r7, #8]
 8002942:	607a      	str	r2, [r7, #4]
 8002944:	68fb      	ldr	r3, [r7, #12]
 8002946:	f003 0307 	and.w	r3, r3, #7
 800294a:	61fb      	str	r3, [r7, #28]
 800294c:	69fb      	ldr	r3, [r7, #28]
 800294e:	f1c3 0307 	rsb	r3, r3, #7
 8002952:	2b04      	cmp	r3, #4
 8002954:	bf28      	it	cs
 8002956:	2304      	movcs	r3, #4
 8002958:	61bb      	str	r3, [r7, #24]
 800295a:	69fb      	ldr	r3, [r7, #28]
 800295c:	3304      	adds	r3, #4
 800295e:	2b06      	cmp	r3, #6
 8002960:	d902      	bls.n	8002968 <NVIC_EncodePriority+0x30>
 8002962:	69fb      	ldr	r3, [r7, #28]
 8002964:	3b03      	subs	r3, #3
 8002966:	e000      	b.n	800296a <NVIC_EncodePriority+0x32>
 8002968:	2300      	movs	r3, #0
 800296a:	617b      	str	r3, [r7, #20]
 800296c:	f04f 32ff 	mov.w	r2, #4294967295
 8002970:	69bb      	ldr	r3, [r7, #24]
 8002972:	fa02 f303 	lsl.w	r3, r2, r3
 8002976:	43da      	mvns	r2, r3
 8002978:	68bb      	ldr	r3, [r7, #8]
 800297a:	401a      	ands	r2, r3
 800297c:	697b      	ldr	r3, [r7, #20]
 800297e:	409a      	lsls	r2, r3
 8002980:	f04f 31ff 	mov.w	r1, #4294967295
 8002984:	697b      	ldr	r3, [r7, #20]
 8002986:	fa01 f303 	lsl.w	r3, r1, r3
 800298a:	43d9      	mvns	r1, r3
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	400b      	ands	r3, r1
 8002990:	4313      	orrs	r3, r2
 8002992:	4618      	mov	r0, r3
 8002994:	3724      	adds	r7, #36	@ 0x24
 8002996:	46bd      	mov	sp, r7
 8002998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800299c:	4770      	bx	lr
	...

080029a0 <SysTick_Config>:
 80029a0:	b580      	push	{r7, lr}
 80029a2:	b082      	sub	sp, #8
 80029a4:	af00      	add	r7, sp, #0
 80029a6:	6078      	str	r0, [r7, #4]
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	3b01      	subs	r3, #1
 80029ac:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80029b0:	d301      	bcc.n	80029b6 <SysTick_Config+0x16>
 80029b2:	2301      	movs	r3, #1
 80029b4:	e00f      	b.n	80029d6 <SysTick_Config+0x36>
 80029b6:	4a0a      	ldr	r2, [pc, #40]	@ (80029e0 <SysTick_Config+0x40>)
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	3b01      	subs	r3, #1
 80029bc:	6053      	str	r3, [r2, #4]
 80029be:	210f      	movs	r1, #15
 80029c0:	f04f 30ff 	mov.w	r0, #4294967295
 80029c4:	f7ff ff8e 	bl	80028e4 <__NVIC_SetPriority>
 80029c8:	4b05      	ldr	r3, [pc, #20]	@ (80029e0 <SysTick_Config+0x40>)
 80029ca:	2200      	movs	r2, #0
 80029cc:	609a      	str	r2, [r3, #8]
 80029ce:	4b04      	ldr	r3, [pc, #16]	@ (80029e0 <SysTick_Config+0x40>)
 80029d0:	2207      	movs	r2, #7
 80029d2:	601a      	str	r2, [r3, #0]
 80029d4:	2300      	movs	r3, #0
 80029d6:	4618      	mov	r0, r3
 80029d8:	3708      	adds	r7, #8
 80029da:	46bd      	mov	sp, r7
 80029dc:	bd80      	pop	{r7, pc}
 80029de:	bf00      	nop
 80029e0:	e000e010 	.word	0xe000e010

080029e4 <HAL_NVIC_SetPriorityGrouping>:
 80029e4:	b580      	push	{r7, lr}
 80029e6:	b082      	sub	sp, #8
 80029e8:	af00      	add	r7, sp, #0
 80029ea:	6078      	str	r0, [r7, #4]
 80029ec:	6878      	ldr	r0, [r7, #4]
 80029ee:	f7ff ff29 	bl	8002844 <__NVIC_SetPriorityGrouping>
 80029f2:	bf00      	nop
 80029f4:	3708      	adds	r7, #8
 80029f6:	46bd      	mov	sp, r7
 80029f8:	bd80      	pop	{r7, pc}

080029fa <HAL_NVIC_SetPriority>:
 80029fa:	b580      	push	{r7, lr}
 80029fc:	b086      	sub	sp, #24
 80029fe:	af00      	add	r7, sp, #0
 8002a00:	4603      	mov	r3, r0
 8002a02:	60b9      	str	r1, [r7, #8]
 8002a04:	607a      	str	r2, [r7, #4]
 8002a06:	73fb      	strb	r3, [r7, #15]
 8002a08:	2300      	movs	r3, #0
 8002a0a:	617b      	str	r3, [r7, #20]
 8002a0c:	f7ff ff3e 	bl	800288c <__NVIC_GetPriorityGrouping>
 8002a10:	6178      	str	r0, [r7, #20]
 8002a12:	687a      	ldr	r2, [r7, #4]
 8002a14:	68b9      	ldr	r1, [r7, #8]
 8002a16:	6978      	ldr	r0, [r7, #20]
 8002a18:	f7ff ff8e 	bl	8002938 <NVIC_EncodePriority>
 8002a1c:	4602      	mov	r2, r0
 8002a1e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002a22:	4611      	mov	r1, r2
 8002a24:	4618      	mov	r0, r3
 8002a26:	f7ff ff5d 	bl	80028e4 <__NVIC_SetPriority>
 8002a2a:	bf00      	nop
 8002a2c:	3718      	adds	r7, #24
 8002a2e:	46bd      	mov	sp, r7
 8002a30:	bd80      	pop	{r7, pc}

08002a32 <HAL_NVIC_EnableIRQ>:
 8002a32:	b580      	push	{r7, lr}
 8002a34:	b082      	sub	sp, #8
 8002a36:	af00      	add	r7, sp, #0
 8002a38:	4603      	mov	r3, r0
 8002a3a:	71fb      	strb	r3, [r7, #7]
 8002a3c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a40:	4618      	mov	r0, r3
 8002a42:	f7ff ff31 	bl	80028a8 <__NVIC_EnableIRQ>
 8002a46:	bf00      	nop
 8002a48:	3708      	adds	r7, #8
 8002a4a:	46bd      	mov	sp, r7
 8002a4c:	bd80      	pop	{r7, pc}

08002a4e <HAL_SYSTICK_Config>:
 8002a4e:	b580      	push	{r7, lr}
 8002a50:	b082      	sub	sp, #8
 8002a52:	af00      	add	r7, sp, #0
 8002a54:	6078      	str	r0, [r7, #4]
 8002a56:	6878      	ldr	r0, [r7, #4]
 8002a58:	f7ff ffa2 	bl	80029a0 <SysTick_Config>
 8002a5c:	4603      	mov	r3, r0
 8002a5e:	4618      	mov	r0, r3
 8002a60:	3708      	adds	r7, #8
 8002a62:	46bd      	mov	sp, r7
 8002a64:	bd80      	pop	{r7, pc}
	...

08002a68 <HAL_GPIO_Init>:
 8002a68:	b480      	push	{r7}
 8002a6a:	b089      	sub	sp, #36	@ 0x24
 8002a6c:	af00      	add	r7, sp, #0
 8002a6e:	6078      	str	r0, [r7, #4]
 8002a70:	6039      	str	r1, [r7, #0]
 8002a72:	2300      	movs	r3, #0
 8002a74:	617b      	str	r3, [r7, #20]
 8002a76:	2300      	movs	r3, #0
 8002a78:	613b      	str	r3, [r7, #16]
 8002a7a:	2300      	movs	r3, #0
 8002a7c:	61bb      	str	r3, [r7, #24]
 8002a7e:	2300      	movs	r3, #0
 8002a80:	61fb      	str	r3, [r7, #28]
 8002a82:	e165      	b.n	8002d50 <HAL_GPIO_Init+0x2e8>
 8002a84:	2201      	movs	r2, #1
 8002a86:	69fb      	ldr	r3, [r7, #28]
 8002a88:	fa02 f303 	lsl.w	r3, r2, r3
 8002a8c:	617b      	str	r3, [r7, #20]
 8002a8e:	683b      	ldr	r3, [r7, #0]
 8002a90:	681b      	ldr	r3, [r3, #0]
 8002a92:	697a      	ldr	r2, [r7, #20]
 8002a94:	4013      	ands	r3, r2
 8002a96:	613b      	str	r3, [r7, #16]
 8002a98:	693a      	ldr	r2, [r7, #16]
 8002a9a:	697b      	ldr	r3, [r7, #20]
 8002a9c:	429a      	cmp	r2, r3
 8002a9e:	f040 8154 	bne.w	8002d4a <HAL_GPIO_Init+0x2e2>
 8002aa2:	683b      	ldr	r3, [r7, #0]
 8002aa4:	685b      	ldr	r3, [r3, #4]
 8002aa6:	f003 0303 	and.w	r3, r3, #3
 8002aaa:	2b01      	cmp	r3, #1
 8002aac:	d005      	beq.n	8002aba <HAL_GPIO_Init+0x52>
 8002aae:	683b      	ldr	r3, [r7, #0]
 8002ab0:	685b      	ldr	r3, [r3, #4]
 8002ab2:	f003 0303 	and.w	r3, r3, #3
 8002ab6:	2b02      	cmp	r3, #2
 8002ab8:	d130      	bne.n	8002b1c <HAL_GPIO_Init+0xb4>
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	689b      	ldr	r3, [r3, #8]
 8002abe:	61bb      	str	r3, [r7, #24]
 8002ac0:	69fb      	ldr	r3, [r7, #28]
 8002ac2:	005b      	lsls	r3, r3, #1
 8002ac4:	2203      	movs	r2, #3
 8002ac6:	fa02 f303 	lsl.w	r3, r2, r3
 8002aca:	43db      	mvns	r3, r3
 8002acc:	69ba      	ldr	r2, [r7, #24]
 8002ace:	4013      	ands	r3, r2
 8002ad0:	61bb      	str	r3, [r7, #24]
 8002ad2:	683b      	ldr	r3, [r7, #0]
 8002ad4:	68da      	ldr	r2, [r3, #12]
 8002ad6:	69fb      	ldr	r3, [r7, #28]
 8002ad8:	005b      	lsls	r3, r3, #1
 8002ada:	fa02 f303 	lsl.w	r3, r2, r3
 8002ade:	69ba      	ldr	r2, [r7, #24]
 8002ae0:	4313      	orrs	r3, r2
 8002ae2:	61bb      	str	r3, [r7, #24]
 8002ae4:	687b      	ldr	r3, [r7, #4]
 8002ae6:	69ba      	ldr	r2, [r7, #24]
 8002ae8:	609a      	str	r2, [r3, #8]
 8002aea:	687b      	ldr	r3, [r7, #4]
 8002aec:	685b      	ldr	r3, [r3, #4]
 8002aee:	61bb      	str	r3, [r7, #24]
 8002af0:	2201      	movs	r2, #1
 8002af2:	69fb      	ldr	r3, [r7, #28]
 8002af4:	fa02 f303 	lsl.w	r3, r2, r3
 8002af8:	43db      	mvns	r3, r3
 8002afa:	69ba      	ldr	r2, [r7, #24]
 8002afc:	4013      	ands	r3, r2
 8002afe:	61bb      	str	r3, [r7, #24]
 8002b00:	683b      	ldr	r3, [r7, #0]
 8002b02:	685b      	ldr	r3, [r3, #4]
 8002b04:	091b      	lsrs	r3, r3, #4
 8002b06:	f003 0201 	and.w	r2, r3, #1
 8002b0a:	69fb      	ldr	r3, [r7, #28]
 8002b0c:	fa02 f303 	lsl.w	r3, r2, r3
 8002b10:	69ba      	ldr	r2, [r7, #24]
 8002b12:	4313      	orrs	r3, r2
 8002b14:	61bb      	str	r3, [r7, #24]
 8002b16:	687b      	ldr	r3, [r7, #4]
 8002b18:	69ba      	ldr	r2, [r7, #24]
 8002b1a:	605a      	str	r2, [r3, #4]
 8002b1c:	683b      	ldr	r3, [r7, #0]
 8002b1e:	685b      	ldr	r3, [r3, #4]
 8002b20:	f003 0303 	and.w	r3, r3, #3
 8002b24:	2b03      	cmp	r3, #3
 8002b26:	d017      	beq.n	8002b58 <HAL_GPIO_Init+0xf0>
 8002b28:	687b      	ldr	r3, [r7, #4]
 8002b2a:	68db      	ldr	r3, [r3, #12]
 8002b2c:	61bb      	str	r3, [r7, #24]
 8002b2e:	69fb      	ldr	r3, [r7, #28]
 8002b30:	005b      	lsls	r3, r3, #1
 8002b32:	2203      	movs	r2, #3
 8002b34:	fa02 f303 	lsl.w	r3, r2, r3
 8002b38:	43db      	mvns	r3, r3
 8002b3a:	69ba      	ldr	r2, [r7, #24]
 8002b3c:	4013      	ands	r3, r2
 8002b3e:	61bb      	str	r3, [r7, #24]
 8002b40:	683b      	ldr	r3, [r7, #0]
 8002b42:	689a      	ldr	r2, [r3, #8]
 8002b44:	69fb      	ldr	r3, [r7, #28]
 8002b46:	005b      	lsls	r3, r3, #1
 8002b48:	fa02 f303 	lsl.w	r3, r2, r3
 8002b4c:	69ba      	ldr	r2, [r7, #24]
 8002b4e:	4313      	orrs	r3, r2
 8002b50:	61bb      	str	r3, [r7, #24]
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	69ba      	ldr	r2, [r7, #24]
 8002b56:	60da      	str	r2, [r3, #12]
 8002b58:	683b      	ldr	r3, [r7, #0]
 8002b5a:	685b      	ldr	r3, [r3, #4]
 8002b5c:	f003 0303 	and.w	r3, r3, #3
 8002b60:	2b02      	cmp	r3, #2
 8002b62:	d123      	bne.n	8002bac <HAL_GPIO_Init+0x144>
 8002b64:	69fb      	ldr	r3, [r7, #28]
 8002b66:	08da      	lsrs	r2, r3, #3
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	3208      	adds	r2, #8
 8002b6c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002b70:	61bb      	str	r3, [r7, #24]
 8002b72:	69fb      	ldr	r3, [r7, #28]
 8002b74:	f003 0307 	and.w	r3, r3, #7
 8002b78:	009b      	lsls	r3, r3, #2
 8002b7a:	220f      	movs	r2, #15
 8002b7c:	fa02 f303 	lsl.w	r3, r2, r3
 8002b80:	43db      	mvns	r3, r3
 8002b82:	69ba      	ldr	r2, [r7, #24]
 8002b84:	4013      	ands	r3, r2
 8002b86:	61bb      	str	r3, [r7, #24]
 8002b88:	683b      	ldr	r3, [r7, #0]
 8002b8a:	691a      	ldr	r2, [r3, #16]
 8002b8c:	69fb      	ldr	r3, [r7, #28]
 8002b8e:	f003 0307 	and.w	r3, r3, #7
 8002b92:	009b      	lsls	r3, r3, #2
 8002b94:	fa02 f303 	lsl.w	r3, r2, r3
 8002b98:	69ba      	ldr	r2, [r7, #24]
 8002b9a:	4313      	orrs	r3, r2
 8002b9c:	61bb      	str	r3, [r7, #24]
 8002b9e:	69fb      	ldr	r3, [r7, #28]
 8002ba0:	08da      	lsrs	r2, r3, #3
 8002ba2:	687b      	ldr	r3, [r7, #4]
 8002ba4:	3208      	adds	r2, #8
 8002ba6:	69b9      	ldr	r1, [r7, #24]
 8002ba8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	681b      	ldr	r3, [r3, #0]
 8002bb0:	61bb      	str	r3, [r7, #24]
 8002bb2:	69fb      	ldr	r3, [r7, #28]
 8002bb4:	005b      	lsls	r3, r3, #1
 8002bb6:	2203      	movs	r2, #3
 8002bb8:	fa02 f303 	lsl.w	r3, r2, r3
 8002bbc:	43db      	mvns	r3, r3
 8002bbe:	69ba      	ldr	r2, [r7, #24]
 8002bc0:	4013      	ands	r3, r2
 8002bc2:	61bb      	str	r3, [r7, #24]
 8002bc4:	683b      	ldr	r3, [r7, #0]
 8002bc6:	685b      	ldr	r3, [r3, #4]
 8002bc8:	f003 0203 	and.w	r2, r3, #3
 8002bcc:	69fb      	ldr	r3, [r7, #28]
 8002bce:	005b      	lsls	r3, r3, #1
 8002bd0:	fa02 f303 	lsl.w	r3, r2, r3
 8002bd4:	69ba      	ldr	r2, [r7, #24]
 8002bd6:	4313      	orrs	r3, r2
 8002bd8:	61bb      	str	r3, [r7, #24]
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	69ba      	ldr	r2, [r7, #24]
 8002bde:	601a      	str	r2, [r3, #0]
 8002be0:	683b      	ldr	r3, [r7, #0]
 8002be2:	685b      	ldr	r3, [r3, #4]
 8002be4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002be8:	2b00      	cmp	r3, #0
 8002bea:	f000 80ae 	beq.w	8002d4a <HAL_GPIO_Init+0x2e2>
 8002bee:	2300      	movs	r3, #0
 8002bf0:	60fb      	str	r3, [r7, #12]
 8002bf2:	4b5d      	ldr	r3, [pc, #372]	@ (8002d68 <HAL_GPIO_Init+0x300>)
 8002bf4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002bf6:	4a5c      	ldr	r2, [pc, #368]	@ (8002d68 <HAL_GPIO_Init+0x300>)
 8002bf8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002bfc:	6453      	str	r3, [r2, #68]	@ 0x44
 8002bfe:	4b5a      	ldr	r3, [pc, #360]	@ (8002d68 <HAL_GPIO_Init+0x300>)
 8002c00:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002c02:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002c06:	60fb      	str	r3, [r7, #12]
 8002c08:	68fb      	ldr	r3, [r7, #12]
 8002c0a:	4a58      	ldr	r2, [pc, #352]	@ (8002d6c <HAL_GPIO_Init+0x304>)
 8002c0c:	69fb      	ldr	r3, [r7, #28]
 8002c0e:	089b      	lsrs	r3, r3, #2
 8002c10:	3302      	adds	r3, #2
 8002c12:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002c16:	61bb      	str	r3, [r7, #24]
 8002c18:	69fb      	ldr	r3, [r7, #28]
 8002c1a:	f003 0303 	and.w	r3, r3, #3
 8002c1e:	009b      	lsls	r3, r3, #2
 8002c20:	220f      	movs	r2, #15
 8002c22:	fa02 f303 	lsl.w	r3, r2, r3
 8002c26:	43db      	mvns	r3, r3
 8002c28:	69ba      	ldr	r2, [r7, #24]
 8002c2a:	4013      	ands	r3, r2
 8002c2c:	61bb      	str	r3, [r7, #24]
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	4a4f      	ldr	r2, [pc, #316]	@ (8002d70 <HAL_GPIO_Init+0x308>)
 8002c32:	4293      	cmp	r3, r2
 8002c34:	d025      	beq.n	8002c82 <HAL_GPIO_Init+0x21a>
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	4a4e      	ldr	r2, [pc, #312]	@ (8002d74 <HAL_GPIO_Init+0x30c>)
 8002c3a:	4293      	cmp	r3, r2
 8002c3c:	d01f      	beq.n	8002c7e <HAL_GPIO_Init+0x216>
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	4a4d      	ldr	r2, [pc, #308]	@ (8002d78 <HAL_GPIO_Init+0x310>)
 8002c42:	4293      	cmp	r3, r2
 8002c44:	d019      	beq.n	8002c7a <HAL_GPIO_Init+0x212>
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	4a4c      	ldr	r2, [pc, #304]	@ (8002d7c <HAL_GPIO_Init+0x314>)
 8002c4a:	4293      	cmp	r3, r2
 8002c4c:	d013      	beq.n	8002c76 <HAL_GPIO_Init+0x20e>
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	4a4b      	ldr	r2, [pc, #300]	@ (8002d80 <HAL_GPIO_Init+0x318>)
 8002c52:	4293      	cmp	r3, r2
 8002c54:	d00d      	beq.n	8002c72 <HAL_GPIO_Init+0x20a>
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	4a4a      	ldr	r2, [pc, #296]	@ (8002d84 <HAL_GPIO_Init+0x31c>)
 8002c5a:	4293      	cmp	r3, r2
 8002c5c:	d007      	beq.n	8002c6e <HAL_GPIO_Init+0x206>
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	4a49      	ldr	r2, [pc, #292]	@ (8002d88 <HAL_GPIO_Init+0x320>)
 8002c62:	4293      	cmp	r3, r2
 8002c64:	d101      	bne.n	8002c6a <HAL_GPIO_Init+0x202>
 8002c66:	2306      	movs	r3, #6
 8002c68:	e00c      	b.n	8002c84 <HAL_GPIO_Init+0x21c>
 8002c6a:	2307      	movs	r3, #7
 8002c6c:	e00a      	b.n	8002c84 <HAL_GPIO_Init+0x21c>
 8002c6e:	2305      	movs	r3, #5
 8002c70:	e008      	b.n	8002c84 <HAL_GPIO_Init+0x21c>
 8002c72:	2304      	movs	r3, #4
 8002c74:	e006      	b.n	8002c84 <HAL_GPIO_Init+0x21c>
 8002c76:	2303      	movs	r3, #3
 8002c78:	e004      	b.n	8002c84 <HAL_GPIO_Init+0x21c>
 8002c7a:	2302      	movs	r3, #2
 8002c7c:	e002      	b.n	8002c84 <HAL_GPIO_Init+0x21c>
 8002c7e:	2301      	movs	r3, #1
 8002c80:	e000      	b.n	8002c84 <HAL_GPIO_Init+0x21c>
 8002c82:	2300      	movs	r3, #0
 8002c84:	69fa      	ldr	r2, [r7, #28]
 8002c86:	f002 0203 	and.w	r2, r2, #3
 8002c8a:	0092      	lsls	r2, r2, #2
 8002c8c:	4093      	lsls	r3, r2
 8002c8e:	69ba      	ldr	r2, [r7, #24]
 8002c90:	4313      	orrs	r3, r2
 8002c92:	61bb      	str	r3, [r7, #24]
 8002c94:	4935      	ldr	r1, [pc, #212]	@ (8002d6c <HAL_GPIO_Init+0x304>)
 8002c96:	69fb      	ldr	r3, [r7, #28]
 8002c98:	089b      	lsrs	r3, r3, #2
 8002c9a:	3302      	adds	r3, #2
 8002c9c:	69ba      	ldr	r2, [r7, #24]
 8002c9e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002ca2:	4b3a      	ldr	r3, [pc, #232]	@ (8002d8c <HAL_GPIO_Init+0x324>)
 8002ca4:	689b      	ldr	r3, [r3, #8]
 8002ca6:	61bb      	str	r3, [r7, #24]
 8002ca8:	693b      	ldr	r3, [r7, #16]
 8002caa:	43db      	mvns	r3, r3
 8002cac:	69ba      	ldr	r2, [r7, #24]
 8002cae:	4013      	ands	r3, r2
 8002cb0:	61bb      	str	r3, [r7, #24]
 8002cb2:	683b      	ldr	r3, [r7, #0]
 8002cb4:	685b      	ldr	r3, [r3, #4]
 8002cb6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002cba:	2b00      	cmp	r3, #0
 8002cbc:	d003      	beq.n	8002cc6 <HAL_GPIO_Init+0x25e>
 8002cbe:	69ba      	ldr	r2, [r7, #24]
 8002cc0:	693b      	ldr	r3, [r7, #16]
 8002cc2:	4313      	orrs	r3, r2
 8002cc4:	61bb      	str	r3, [r7, #24]
 8002cc6:	4a31      	ldr	r2, [pc, #196]	@ (8002d8c <HAL_GPIO_Init+0x324>)
 8002cc8:	69bb      	ldr	r3, [r7, #24]
 8002cca:	6093      	str	r3, [r2, #8]
 8002ccc:	4b2f      	ldr	r3, [pc, #188]	@ (8002d8c <HAL_GPIO_Init+0x324>)
 8002cce:	68db      	ldr	r3, [r3, #12]
 8002cd0:	61bb      	str	r3, [r7, #24]
 8002cd2:	693b      	ldr	r3, [r7, #16]
 8002cd4:	43db      	mvns	r3, r3
 8002cd6:	69ba      	ldr	r2, [r7, #24]
 8002cd8:	4013      	ands	r3, r2
 8002cda:	61bb      	str	r3, [r7, #24]
 8002cdc:	683b      	ldr	r3, [r7, #0]
 8002cde:	685b      	ldr	r3, [r3, #4]
 8002ce0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002ce4:	2b00      	cmp	r3, #0
 8002ce6:	d003      	beq.n	8002cf0 <HAL_GPIO_Init+0x288>
 8002ce8:	69ba      	ldr	r2, [r7, #24]
 8002cea:	693b      	ldr	r3, [r7, #16]
 8002cec:	4313      	orrs	r3, r2
 8002cee:	61bb      	str	r3, [r7, #24]
 8002cf0:	4a26      	ldr	r2, [pc, #152]	@ (8002d8c <HAL_GPIO_Init+0x324>)
 8002cf2:	69bb      	ldr	r3, [r7, #24]
 8002cf4:	60d3      	str	r3, [r2, #12]
 8002cf6:	4b25      	ldr	r3, [pc, #148]	@ (8002d8c <HAL_GPIO_Init+0x324>)
 8002cf8:	685b      	ldr	r3, [r3, #4]
 8002cfa:	61bb      	str	r3, [r7, #24]
 8002cfc:	693b      	ldr	r3, [r7, #16]
 8002cfe:	43db      	mvns	r3, r3
 8002d00:	69ba      	ldr	r2, [r7, #24]
 8002d02:	4013      	ands	r3, r2
 8002d04:	61bb      	str	r3, [r7, #24]
 8002d06:	683b      	ldr	r3, [r7, #0]
 8002d08:	685b      	ldr	r3, [r3, #4]
 8002d0a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002d0e:	2b00      	cmp	r3, #0
 8002d10:	d003      	beq.n	8002d1a <HAL_GPIO_Init+0x2b2>
 8002d12:	69ba      	ldr	r2, [r7, #24]
 8002d14:	693b      	ldr	r3, [r7, #16]
 8002d16:	4313      	orrs	r3, r2
 8002d18:	61bb      	str	r3, [r7, #24]
 8002d1a:	4a1c      	ldr	r2, [pc, #112]	@ (8002d8c <HAL_GPIO_Init+0x324>)
 8002d1c:	69bb      	ldr	r3, [r7, #24]
 8002d1e:	6053      	str	r3, [r2, #4]
 8002d20:	4b1a      	ldr	r3, [pc, #104]	@ (8002d8c <HAL_GPIO_Init+0x324>)
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	61bb      	str	r3, [r7, #24]
 8002d26:	693b      	ldr	r3, [r7, #16]
 8002d28:	43db      	mvns	r3, r3
 8002d2a:	69ba      	ldr	r2, [r7, #24]
 8002d2c:	4013      	ands	r3, r2
 8002d2e:	61bb      	str	r3, [r7, #24]
 8002d30:	683b      	ldr	r3, [r7, #0]
 8002d32:	685b      	ldr	r3, [r3, #4]
 8002d34:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002d38:	2b00      	cmp	r3, #0
 8002d3a:	d003      	beq.n	8002d44 <HAL_GPIO_Init+0x2dc>
 8002d3c:	69ba      	ldr	r2, [r7, #24]
 8002d3e:	693b      	ldr	r3, [r7, #16]
 8002d40:	4313      	orrs	r3, r2
 8002d42:	61bb      	str	r3, [r7, #24]
 8002d44:	4a11      	ldr	r2, [pc, #68]	@ (8002d8c <HAL_GPIO_Init+0x324>)
 8002d46:	69bb      	ldr	r3, [r7, #24]
 8002d48:	6013      	str	r3, [r2, #0]
 8002d4a:	69fb      	ldr	r3, [r7, #28]
 8002d4c:	3301      	adds	r3, #1
 8002d4e:	61fb      	str	r3, [r7, #28]
 8002d50:	69fb      	ldr	r3, [r7, #28]
 8002d52:	2b0f      	cmp	r3, #15
 8002d54:	f67f ae96 	bls.w	8002a84 <HAL_GPIO_Init+0x1c>
 8002d58:	bf00      	nop
 8002d5a:	bf00      	nop
 8002d5c:	3724      	adds	r7, #36	@ 0x24
 8002d5e:	46bd      	mov	sp, r7
 8002d60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d64:	4770      	bx	lr
 8002d66:	bf00      	nop
 8002d68:	40023800 	.word	0x40023800
 8002d6c:	40013800 	.word	0x40013800
 8002d70:	40020000 	.word	0x40020000
 8002d74:	40020400 	.word	0x40020400
 8002d78:	40020800 	.word	0x40020800
 8002d7c:	40020c00 	.word	0x40020c00
 8002d80:	40021000 	.word	0x40021000
 8002d84:	40021400 	.word	0x40021400
 8002d88:	40021800 	.word	0x40021800
 8002d8c:	40013c00 	.word	0x40013c00

08002d90 <HAL_GPIO_ReadPin>:
 8002d90:	b480      	push	{r7}
 8002d92:	b085      	sub	sp, #20
 8002d94:	af00      	add	r7, sp, #0
 8002d96:	6078      	str	r0, [r7, #4]
 8002d98:	460b      	mov	r3, r1
 8002d9a:	807b      	strh	r3, [r7, #2]
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	691a      	ldr	r2, [r3, #16]
 8002da0:	887b      	ldrh	r3, [r7, #2]
 8002da2:	4013      	ands	r3, r2
 8002da4:	2b00      	cmp	r3, #0
 8002da6:	d002      	beq.n	8002dae <HAL_GPIO_ReadPin+0x1e>
 8002da8:	2301      	movs	r3, #1
 8002daa:	73fb      	strb	r3, [r7, #15]
 8002dac:	e001      	b.n	8002db2 <HAL_GPIO_ReadPin+0x22>
 8002dae:	2300      	movs	r3, #0
 8002db0:	73fb      	strb	r3, [r7, #15]
 8002db2:	7bfb      	ldrb	r3, [r7, #15]
 8002db4:	4618      	mov	r0, r3
 8002db6:	3714      	adds	r7, #20
 8002db8:	46bd      	mov	sp, r7
 8002dba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dbe:	4770      	bx	lr

08002dc0 <HAL_GPIO_WritePin>:
 8002dc0:	b480      	push	{r7}
 8002dc2:	b083      	sub	sp, #12
 8002dc4:	af00      	add	r7, sp, #0
 8002dc6:	6078      	str	r0, [r7, #4]
 8002dc8:	460b      	mov	r3, r1
 8002dca:	807b      	strh	r3, [r7, #2]
 8002dcc:	4613      	mov	r3, r2
 8002dce:	707b      	strb	r3, [r7, #1]
 8002dd0:	787b      	ldrb	r3, [r7, #1]
 8002dd2:	2b00      	cmp	r3, #0
 8002dd4:	d003      	beq.n	8002dde <HAL_GPIO_WritePin+0x1e>
 8002dd6:	887a      	ldrh	r2, [r7, #2]
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	619a      	str	r2, [r3, #24]
 8002ddc:	e003      	b.n	8002de6 <HAL_GPIO_WritePin+0x26>
 8002dde:	887b      	ldrh	r3, [r7, #2]
 8002de0:	041a      	lsls	r2, r3, #16
 8002de2:	687b      	ldr	r3, [r7, #4]
 8002de4:	619a      	str	r2, [r3, #24]
 8002de6:	bf00      	nop
 8002de8:	370c      	adds	r7, #12
 8002dea:	46bd      	mov	sp, r7
 8002dec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002df0:	4770      	bx	lr
	...

08002df4 <HAL_I2C_Init>:
 8002df4:	b580      	push	{r7, lr}
 8002df6:	b084      	sub	sp, #16
 8002df8:	af00      	add	r7, sp, #0
 8002dfa:	6078      	str	r0, [r7, #4]
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	2b00      	cmp	r3, #0
 8002e00:	d101      	bne.n	8002e06 <HAL_I2C_Init+0x12>
 8002e02:	2301      	movs	r3, #1
 8002e04:	e12b      	b.n	800305e <HAL_I2C_Init+0x26a>
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002e0c:	b2db      	uxtb	r3, r3
 8002e0e:	2b00      	cmp	r3, #0
 8002e10:	d106      	bne.n	8002e20 <HAL_I2C_Init+0x2c>
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	2200      	movs	r2, #0
 8002e16:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002e1a:	6878      	ldr	r0, [r7, #4]
 8002e1c:	f7fe fb80 	bl	8001520 <HAL_I2C_MspInit>
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	2224      	movs	r2, #36	@ 0x24
 8002e24:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	681a      	ldr	r2, [r3, #0]
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	681b      	ldr	r3, [r3, #0]
 8002e32:	f022 0201 	bic.w	r2, r2, #1
 8002e36:	601a      	str	r2, [r3, #0]
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	681b      	ldr	r3, [r3, #0]
 8002e3c:	681a      	ldr	r2, [r3, #0]
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8002e46:	601a      	str	r2, [r3, #0]
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	681a      	ldr	r2, [r3, #0]
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	681b      	ldr	r3, [r3, #0]
 8002e52:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002e56:	601a      	str	r2, [r3, #0]
 8002e58:	f001 fa10 	bl	800427c <HAL_RCC_GetPCLK1Freq>
 8002e5c:	60f8      	str	r0, [r7, #12]
 8002e5e:	687b      	ldr	r3, [r7, #4]
 8002e60:	685b      	ldr	r3, [r3, #4]
 8002e62:	4a81      	ldr	r2, [pc, #516]	@ (8003068 <HAL_I2C_Init+0x274>)
 8002e64:	4293      	cmp	r3, r2
 8002e66:	d807      	bhi.n	8002e78 <HAL_I2C_Init+0x84>
 8002e68:	68fb      	ldr	r3, [r7, #12]
 8002e6a:	4a80      	ldr	r2, [pc, #512]	@ (800306c <HAL_I2C_Init+0x278>)
 8002e6c:	4293      	cmp	r3, r2
 8002e6e:	bf94      	ite	ls
 8002e70:	2301      	movls	r3, #1
 8002e72:	2300      	movhi	r3, #0
 8002e74:	b2db      	uxtb	r3, r3
 8002e76:	e006      	b.n	8002e86 <HAL_I2C_Init+0x92>
 8002e78:	68fb      	ldr	r3, [r7, #12]
 8002e7a:	4a7d      	ldr	r2, [pc, #500]	@ (8003070 <HAL_I2C_Init+0x27c>)
 8002e7c:	4293      	cmp	r3, r2
 8002e7e:	bf94      	ite	ls
 8002e80:	2301      	movls	r3, #1
 8002e82:	2300      	movhi	r3, #0
 8002e84:	b2db      	uxtb	r3, r3
 8002e86:	2b00      	cmp	r3, #0
 8002e88:	d001      	beq.n	8002e8e <HAL_I2C_Init+0x9a>
 8002e8a:	2301      	movs	r3, #1
 8002e8c:	e0e7      	b.n	800305e <HAL_I2C_Init+0x26a>
 8002e8e:	68fb      	ldr	r3, [r7, #12]
 8002e90:	4a78      	ldr	r2, [pc, #480]	@ (8003074 <HAL_I2C_Init+0x280>)
 8002e92:	fba2 2303 	umull	r2, r3, r2, r3
 8002e96:	0c9b      	lsrs	r3, r3, #18
 8002e98:	60bb      	str	r3, [r7, #8]
 8002e9a:	687b      	ldr	r3, [r7, #4]
 8002e9c:	681b      	ldr	r3, [r3, #0]
 8002e9e:	685b      	ldr	r3, [r3, #4]
 8002ea0:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	68ba      	ldr	r2, [r7, #8]
 8002eaa:	430a      	orrs	r2, r1
 8002eac:	605a      	str	r2, [r3, #4]
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	6a1b      	ldr	r3, [r3, #32]
 8002eb4:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	685b      	ldr	r3, [r3, #4]
 8002ebc:	4a6a      	ldr	r2, [pc, #424]	@ (8003068 <HAL_I2C_Init+0x274>)
 8002ebe:	4293      	cmp	r3, r2
 8002ec0:	d802      	bhi.n	8002ec8 <HAL_I2C_Init+0xd4>
 8002ec2:	68bb      	ldr	r3, [r7, #8]
 8002ec4:	3301      	adds	r3, #1
 8002ec6:	e009      	b.n	8002edc <HAL_I2C_Init+0xe8>
 8002ec8:	68bb      	ldr	r3, [r7, #8]
 8002eca:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8002ece:	fb02 f303 	mul.w	r3, r2, r3
 8002ed2:	4a69      	ldr	r2, [pc, #420]	@ (8003078 <HAL_I2C_Init+0x284>)
 8002ed4:	fba2 2303 	umull	r2, r3, r2, r3
 8002ed8:	099b      	lsrs	r3, r3, #6
 8002eda:	3301      	adds	r3, #1
 8002edc:	687a      	ldr	r2, [r7, #4]
 8002ede:	6812      	ldr	r2, [r2, #0]
 8002ee0:	430b      	orrs	r3, r1
 8002ee2:	6213      	str	r3, [r2, #32]
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	681b      	ldr	r3, [r3, #0]
 8002ee8:	69db      	ldr	r3, [r3, #28]
 8002eea:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8002eee:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	685b      	ldr	r3, [r3, #4]
 8002ef6:	495c      	ldr	r1, [pc, #368]	@ (8003068 <HAL_I2C_Init+0x274>)
 8002ef8:	428b      	cmp	r3, r1
 8002efa:	d819      	bhi.n	8002f30 <HAL_I2C_Init+0x13c>
 8002efc:	68fb      	ldr	r3, [r7, #12]
 8002efe:	1e59      	subs	r1, r3, #1
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	685b      	ldr	r3, [r3, #4]
 8002f04:	005b      	lsls	r3, r3, #1
 8002f06:	fbb1 f3f3 	udiv	r3, r1, r3
 8002f0a:	1c59      	adds	r1, r3, #1
 8002f0c:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8002f10:	400b      	ands	r3, r1
 8002f12:	2b00      	cmp	r3, #0
 8002f14:	d00a      	beq.n	8002f2c <HAL_I2C_Init+0x138>
 8002f16:	68fb      	ldr	r3, [r7, #12]
 8002f18:	1e59      	subs	r1, r3, #1
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	685b      	ldr	r3, [r3, #4]
 8002f1e:	005b      	lsls	r3, r3, #1
 8002f20:	fbb1 f3f3 	udiv	r3, r1, r3
 8002f24:	3301      	adds	r3, #1
 8002f26:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002f2a:	e051      	b.n	8002fd0 <HAL_I2C_Init+0x1dc>
 8002f2c:	2304      	movs	r3, #4
 8002f2e:	e04f      	b.n	8002fd0 <HAL_I2C_Init+0x1dc>
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	689b      	ldr	r3, [r3, #8]
 8002f34:	2b00      	cmp	r3, #0
 8002f36:	d111      	bne.n	8002f5c <HAL_I2C_Init+0x168>
 8002f38:	68fb      	ldr	r3, [r7, #12]
 8002f3a:	1e58      	subs	r0, r3, #1
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	6859      	ldr	r1, [r3, #4]
 8002f40:	460b      	mov	r3, r1
 8002f42:	005b      	lsls	r3, r3, #1
 8002f44:	440b      	add	r3, r1
 8002f46:	fbb0 f3f3 	udiv	r3, r0, r3
 8002f4a:	3301      	adds	r3, #1
 8002f4c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002f50:	2b00      	cmp	r3, #0
 8002f52:	bf0c      	ite	eq
 8002f54:	2301      	moveq	r3, #1
 8002f56:	2300      	movne	r3, #0
 8002f58:	b2db      	uxtb	r3, r3
 8002f5a:	e012      	b.n	8002f82 <HAL_I2C_Init+0x18e>
 8002f5c:	68fb      	ldr	r3, [r7, #12]
 8002f5e:	1e58      	subs	r0, r3, #1
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	6859      	ldr	r1, [r3, #4]
 8002f64:	460b      	mov	r3, r1
 8002f66:	009b      	lsls	r3, r3, #2
 8002f68:	440b      	add	r3, r1
 8002f6a:	0099      	lsls	r1, r3, #2
 8002f6c:	440b      	add	r3, r1
 8002f6e:	fbb0 f3f3 	udiv	r3, r0, r3
 8002f72:	3301      	adds	r3, #1
 8002f74:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002f78:	2b00      	cmp	r3, #0
 8002f7a:	bf0c      	ite	eq
 8002f7c:	2301      	moveq	r3, #1
 8002f7e:	2300      	movne	r3, #0
 8002f80:	b2db      	uxtb	r3, r3
 8002f82:	2b00      	cmp	r3, #0
 8002f84:	d001      	beq.n	8002f8a <HAL_I2C_Init+0x196>
 8002f86:	2301      	movs	r3, #1
 8002f88:	e022      	b.n	8002fd0 <HAL_I2C_Init+0x1dc>
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	689b      	ldr	r3, [r3, #8]
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d10e      	bne.n	8002fb0 <HAL_I2C_Init+0x1bc>
 8002f92:	68fb      	ldr	r3, [r7, #12]
 8002f94:	1e58      	subs	r0, r3, #1
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	6859      	ldr	r1, [r3, #4]
 8002f9a:	460b      	mov	r3, r1
 8002f9c:	005b      	lsls	r3, r3, #1
 8002f9e:	440b      	add	r3, r1
 8002fa0:	fbb0 f3f3 	udiv	r3, r0, r3
 8002fa4:	3301      	adds	r3, #1
 8002fa6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002faa:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002fae:	e00f      	b.n	8002fd0 <HAL_I2C_Init+0x1dc>
 8002fb0:	68fb      	ldr	r3, [r7, #12]
 8002fb2:	1e58      	subs	r0, r3, #1
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	6859      	ldr	r1, [r3, #4]
 8002fb8:	460b      	mov	r3, r1
 8002fba:	009b      	lsls	r3, r3, #2
 8002fbc:	440b      	add	r3, r1
 8002fbe:	0099      	lsls	r1, r3, #2
 8002fc0:	440b      	add	r3, r1
 8002fc2:	fbb0 f3f3 	udiv	r3, r0, r3
 8002fc6:	3301      	adds	r3, #1
 8002fc8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002fcc:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8002fd0:	6879      	ldr	r1, [r7, #4]
 8002fd2:	6809      	ldr	r1, [r1, #0]
 8002fd4:	4313      	orrs	r3, r2
 8002fd6:	61cb      	str	r3, [r1, #28]
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	681b      	ldr	r3, [r3, #0]
 8002fdc:	681b      	ldr	r3, [r3, #0]
 8002fde:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	69da      	ldr	r2, [r3, #28]
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	6a1b      	ldr	r3, [r3, #32]
 8002fea:	431a      	orrs	r2, r3
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	681b      	ldr	r3, [r3, #0]
 8002ff0:	430a      	orrs	r2, r1
 8002ff2:	601a      	str	r2, [r3, #0]
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	681b      	ldr	r3, [r3, #0]
 8002ff8:	689b      	ldr	r3, [r3, #8]
 8002ffa:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8002ffe:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8003002:	687a      	ldr	r2, [r7, #4]
 8003004:	6911      	ldr	r1, [r2, #16]
 8003006:	687a      	ldr	r2, [r7, #4]
 8003008:	68d2      	ldr	r2, [r2, #12]
 800300a:	4311      	orrs	r1, r2
 800300c:	687a      	ldr	r2, [r7, #4]
 800300e:	6812      	ldr	r2, [r2, #0]
 8003010:	430b      	orrs	r3, r1
 8003012:	6093      	str	r3, [r2, #8]
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	681b      	ldr	r3, [r3, #0]
 8003018:	68db      	ldr	r3, [r3, #12]
 800301a:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800301e:	687b      	ldr	r3, [r7, #4]
 8003020:	695a      	ldr	r2, [r3, #20]
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	699b      	ldr	r3, [r3, #24]
 8003026:	431a      	orrs	r2, r3
 8003028:	687b      	ldr	r3, [r7, #4]
 800302a:	681b      	ldr	r3, [r3, #0]
 800302c:	430a      	orrs	r2, r1
 800302e:	60da      	str	r2, [r3, #12]
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	681a      	ldr	r2, [r3, #0]
 8003036:	687b      	ldr	r3, [r7, #4]
 8003038:	681b      	ldr	r3, [r3, #0]
 800303a:	f042 0201 	orr.w	r2, r2, #1
 800303e:	601a      	str	r2, [r3, #0]
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	2200      	movs	r2, #0
 8003044:	641a      	str	r2, [r3, #64]	@ 0x40
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	2220      	movs	r2, #32
 800304a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	2200      	movs	r2, #0
 8003052:	631a      	str	r2, [r3, #48]	@ 0x30
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	2200      	movs	r2, #0
 8003058:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800305c:	2300      	movs	r3, #0
 800305e:	4618      	mov	r0, r3
 8003060:	3710      	adds	r7, #16
 8003062:	46bd      	mov	sp, r7
 8003064:	bd80      	pop	{r7, pc}
 8003066:	bf00      	nop
 8003068:	000186a0 	.word	0x000186a0
 800306c:	001e847f 	.word	0x001e847f
 8003070:	003d08ff 	.word	0x003d08ff
 8003074:	431bde83 	.word	0x431bde83
 8003078:	10624dd3 	.word	0x10624dd3

0800307c <HAL_I2C_Mem_Write>:
 800307c:	b580      	push	{r7, lr}
 800307e:	b088      	sub	sp, #32
 8003080:	af02      	add	r7, sp, #8
 8003082:	60f8      	str	r0, [r7, #12]
 8003084:	4608      	mov	r0, r1
 8003086:	4611      	mov	r1, r2
 8003088:	461a      	mov	r2, r3
 800308a:	4603      	mov	r3, r0
 800308c:	817b      	strh	r3, [r7, #10]
 800308e:	460b      	mov	r3, r1
 8003090:	813b      	strh	r3, [r7, #8]
 8003092:	4613      	mov	r3, r2
 8003094:	80fb      	strh	r3, [r7, #6]
 8003096:	f7ff fba5 	bl	80027e4 <HAL_GetTick>
 800309a:	6178      	str	r0, [r7, #20]
 800309c:	68fb      	ldr	r3, [r7, #12]
 800309e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80030a2:	b2db      	uxtb	r3, r3
 80030a4:	2b20      	cmp	r3, #32
 80030a6:	f040 80d9 	bne.w	800325c <HAL_I2C_Mem_Write+0x1e0>
 80030aa:	697b      	ldr	r3, [r7, #20]
 80030ac:	9300      	str	r3, [sp, #0]
 80030ae:	2319      	movs	r3, #25
 80030b0:	2201      	movs	r2, #1
 80030b2:	496d      	ldr	r1, [pc, #436]	@ (8003268 <HAL_I2C_Mem_Write+0x1ec>)
 80030b4:	68f8      	ldr	r0, [r7, #12]
 80030b6:	f000 fdb9 	bl	8003c2c <I2C_WaitOnFlagUntilTimeout>
 80030ba:	4603      	mov	r3, r0
 80030bc:	2b00      	cmp	r3, #0
 80030be:	d001      	beq.n	80030c4 <HAL_I2C_Mem_Write+0x48>
 80030c0:	2302      	movs	r3, #2
 80030c2:	e0cc      	b.n	800325e <HAL_I2C_Mem_Write+0x1e2>
 80030c4:	68fb      	ldr	r3, [r7, #12]
 80030c6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80030ca:	2b01      	cmp	r3, #1
 80030cc:	d101      	bne.n	80030d2 <HAL_I2C_Mem_Write+0x56>
 80030ce:	2302      	movs	r3, #2
 80030d0:	e0c5      	b.n	800325e <HAL_I2C_Mem_Write+0x1e2>
 80030d2:	68fb      	ldr	r3, [r7, #12]
 80030d4:	2201      	movs	r2, #1
 80030d6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80030da:	68fb      	ldr	r3, [r7, #12]
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	681b      	ldr	r3, [r3, #0]
 80030e0:	f003 0301 	and.w	r3, r3, #1
 80030e4:	2b01      	cmp	r3, #1
 80030e6:	d007      	beq.n	80030f8 <HAL_I2C_Mem_Write+0x7c>
 80030e8:	68fb      	ldr	r3, [r7, #12]
 80030ea:	681b      	ldr	r3, [r3, #0]
 80030ec:	681a      	ldr	r2, [r3, #0]
 80030ee:	68fb      	ldr	r3, [r7, #12]
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	f042 0201 	orr.w	r2, r2, #1
 80030f6:	601a      	str	r2, [r3, #0]
 80030f8:	68fb      	ldr	r3, [r7, #12]
 80030fa:	681b      	ldr	r3, [r3, #0]
 80030fc:	681a      	ldr	r2, [r3, #0]
 80030fe:	68fb      	ldr	r3, [r7, #12]
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003106:	601a      	str	r2, [r3, #0]
 8003108:	68fb      	ldr	r3, [r7, #12]
 800310a:	2221      	movs	r2, #33	@ 0x21
 800310c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003110:	68fb      	ldr	r3, [r7, #12]
 8003112:	2240      	movs	r2, #64	@ 0x40
 8003114:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003118:	68fb      	ldr	r3, [r7, #12]
 800311a:	2200      	movs	r2, #0
 800311c:	641a      	str	r2, [r3, #64]	@ 0x40
 800311e:	68fb      	ldr	r3, [r7, #12]
 8003120:	6a3a      	ldr	r2, [r7, #32]
 8003122:	625a      	str	r2, [r3, #36]	@ 0x24
 8003124:	68fb      	ldr	r3, [r7, #12]
 8003126:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8003128:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800312a:	68fb      	ldr	r3, [r7, #12]
 800312c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800312e:	b29a      	uxth	r2, r3
 8003130:	68fb      	ldr	r3, [r7, #12]
 8003132:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003134:	68fb      	ldr	r3, [r7, #12]
 8003136:	4a4d      	ldr	r2, [pc, #308]	@ (800326c <HAL_I2C_Mem_Write+0x1f0>)
 8003138:	62da      	str	r2, [r3, #44]	@ 0x2c
 800313a:	88f8      	ldrh	r0, [r7, #6]
 800313c:	893a      	ldrh	r2, [r7, #8]
 800313e:	8979      	ldrh	r1, [r7, #10]
 8003140:	697b      	ldr	r3, [r7, #20]
 8003142:	9301      	str	r3, [sp, #4]
 8003144:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003146:	9300      	str	r3, [sp, #0]
 8003148:	4603      	mov	r3, r0
 800314a:	68f8      	ldr	r0, [r7, #12]
 800314c:	f000 fbf0 	bl	8003930 <I2C_RequestMemoryWrite>
 8003150:	4603      	mov	r3, r0
 8003152:	2b00      	cmp	r3, #0
 8003154:	d052      	beq.n	80031fc <HAL_I2C_Mem_Write+0x180>
 8003156:	2301      	movs	r3, #1
 8003158:	e081      	b.n	800325e <HAL_I2C_Mem_Write+0x1e2>
 800315a:	697a      	ldr	r2, [r7, #20]
 800315c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800315e:	68f8      	ldr	r0, [r7, #12]
 8003160:	f000 fe7e 	bl	8003e60 <I2C_WaitOnTXEFlagUntilTimeout>
 8003164:	4603      	mov	r3, r0
 8003166:	2b00      	cmp	r3, #0
 8003168:	d00d      	beq.n	8003186 <HAL_I2C_Mem_Write+0x10a>
 800316a:	68fb      	ldr	r3, [r7, #12]
 800316c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800316e:	2b04      	cmp	r3, #4
 8003170:	d107      	bne.n	8003182 <HAL_I2C_Mem_Write+0x106>
 8003172:	68fb      	ldr	r3, [r7, #12]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	681a      	ldr	r2, [r3, #0]
 8003178:	68fb      	ldr	r3, [r7, #12]
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003180:	601a      	str	r2, [r3, #0]
 8003182:	2301      	movs	r3, #1
 8003184:	e06b      	b.n	800325e <HAL_I2C_Mem_Write+0x1e2>
 8003186:	68fb      	ldr	r3, [r7, #12]
 8003188:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800318a:	781a      	ldrb	r2, [r3, #0]
 800318c:	68fb      	ldr	r3, [r7, #12]
 800318e:	681b      	ldr	r3, [r3, #0]
 8003190:	611a      	str	r2, [r3, #16]
 8003192:	68fb      	ldr	r3, [r7, #12]
 8003194:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003196:	1c5a      	adds	r2, r3, #1
 8003198:	68fb      	ldr	r3, [r7, #12]
 800319a:	625a      	str	r2, [r3, #36]	@ 0x24
 800319c:	68fb      	ldr	r3, [r7, #12]
 800319e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80031a0:	3b01      	subs	r3, #1
 80031a2:	b29a      	uxth	r2, r3
 80031a4:	68fb      	ldr	r3, [r7, #12]
 80031a6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80031a8:	68fb      	ldr	r3, [r7, #12]
 80031aa:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80031ac:	b29b      	uxth	r3, r3
 80031ae:	3b01      	subs	r3, #1
 80031b0:	b29a      	uxth	r2, r3
 80031b2:	68fb      	ldr	r3, [r7, #12]
 80031b4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80031b6:	68fb      	ldr	r3, [r7, #12]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	695b      	ldr	r3, [r3, #20]
 80031bc:	f003 0304 	and.w	r3, r3, #4
 80031c0:	2b04      	cmp	r3, #4
 80031c2:	d11b      	bne.n	80031fc <HAL_I2C_Mem_Write+0x180>
 80031c4:	68fb      	ldr	r3, [r7, #12]
 80031c6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80031c8:	2b00      	cmp	r3, #0
 80031ca:	d017      	beq.n	80031fc <HAL_I2C_Mem_Write+0x180>
 80031cc:	68fb      	ldr	r3, [r7, #12]
 80031ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80031d0:	781a      	ldrb	r2, [r3, #0]
 80031d2:	68fb      	ldr	r3, [r7, #12]
 80031d4:	681b      	ldr	r3, [r3, #0]
 80031d6:	611a      	str	r2, [r3, #16]
 80031d8:	68fb      	ldr	r3, [r7, #12]
 80031da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80031dc:	1c5a      	adds	r2, r3, #1
 80031de:	68fb      	ldr	r3, [r7, #12]
 80031e0:	625a      	str	r2, [r3, #36]	@ 0x24
 80031e2:	68fb      	ldr	r3, [r7, #12]
 80031e4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80031e6:	3b01      	subs	r3, #1
 80031e8:	b29a      	uxth	r2, r3
 80031ea:	68fb      	ldr	r3, [r7, #12]
 80031ec:	851a      	strh	r2, [r3, #40]	@ 0x28
 80031ee:	68fb      	ldr	r3, [r7, #12]
 80031f0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80031f2:	b29b      	uxth	r3, r3
 80031f4:	3b01      	subs	r3, #1
 80031f6:	b29a      	uxth	r2, r3
 80031f8:	68fb      	ldr	r3, [r7, #12]
 80031fa:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80031fc:	68fb      	ldr	r3, [r7, #12]
 80031fe:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003200:	2b00      	cmp	r3, #0
 8003202:	d1aa      	bne.n	800315a <HAL_I2C_Mem_Write+0xde>
 8003204:	697a      	ldr	r2, [r7, #20]
 8003206:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003208:	68f8      	ldr	r0, [r7, #12]
 800320a:	f000 fe71 	bl	8003ef0 <I2C_WaitOnBTFFlagUntilTimeout>
 800320e:	4603      	mov	r3, r0
 8003210:	2b00      	cmp	r3, #0
 8003212:	d00d      	beq.n	8003230 <HAL_I2C_Mem_Write+0x1b4>
 8003214:	68fb      	ldr	r3, [r7, #12]
 8003216:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003218:	2b04      	cmp	r3, #4
 800321a:	d107      	bne.n	800322c <HAL_I2C_Mem_Write+0x1b0>
 800321c:	68fb      	ldr	r3, [r7, #12]
 800321e:	681b      	ldr	r3, [r3, #0]
 8003220:	681a      	ldr	r2, [r3, #0]
 8003222:	68fb      	ldr	r3, [r7, #12]
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800322a:	601a      	str	r2, [r3, #0]
 800322c:	2301      	movs	r3, #1
 800322e:	e016      	b.n	800325e <HAL_I2C_Mem_Write+0x1e2>
 8003230:	68fb      	ldr	r3, [r7, #12]
 8003232:	681b      	ldr	r3, [r3, #0]
 8003234:	681a      	ldr	r2, [r3, #0]
 8003236:	68fb      	ldr	r3, [r7, #12]
 8003238:	681b      	ldr	r3, [r3, #0]
 800323a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800323e:	601a      	str	r2, [r3, #0]
 8003240:	68fb      	ldr	r3, [r7, #12]
 8003242:	2220      	movs	r2, #32
 8003244:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003248:	68fb      	ldr	r3, [r7, #12]
 800324a:	2200      	movs	r2, #0
 800324c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003250:	68fb      	ldr	r3, [r7, #12]
 8003252:	2200      	movs	r2, #0
 8003254:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003258:	2300      	movs	r3, #0
 800325a:	e000      	b.n	800325e <HAL_I2C_Mem_Write+0x1e2>
 800325c:	2302      	movs	r3, #2
 800325e:	4618      	mov	r0, r3
 8003260:	3718      	adds	r7, #24
 8003262:	46bd      	mov	sp, r7
 8003264:	bd80      	pop	{r7, pc}
 8003266:	bf00      	nop
 8003268:	00100002 	.word	0x00100002
 800326c:	ffff0000 	.word	0xffff0000

08003270 <HAL_I2C_Mem_Read>:
 8003270:	b580      	push	{r7, lr}
 8003272:	b08c      	sub	sp, #48	@ 0x30
 8003274:	af02      	add	r7, sp, #8
 8003276:	60f8      	str	r0, [r7, #12]
 8003278:	4608      	mov	r0, r1
 800327a:	4611      	mov	r1, r2
 800327c:	461a      	mov	r2, r3
 800327e:	4603      	mov	r3, r0
 8003280:	817b      	strh	r3, [r7, #10]
 8003282:	460b      	mov	r3, r1
 8003284:	813b      	strh	r3, [r7, #8]
 8003286:	4613      	mov	r3, r2
 8003288:	80fb      	strh	r3, [r7, #6]
 800328a:	f7ff faab 	bl	80027e4 <HAL_GetTick>
 800328e:	6278      	str	r0, [r7, #36]	@ 0x24
 8003290:	68fb      	ldr	r3, [r7, #12]
 8003292:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003296:	b2db      	uxtb	r3, r3
 8003298:	2b20      	cmp	r3, #32
 800329a:	f040 8214 	bne.w	80036c6 <HAL_I2C_Mem_Read+0x456>
 800329e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80032a0:	9300      	str	r3, [sp, #0]
 80032a2:	2319      	movs	r3, #25
 80032a4:	2201      	movs	r2, #1
 80032a6:	497b      	ldr	r1, [pc, #492]	@ (8003494 <HAL_I2C_Mem_Read+0x224>)
 80032a8:	68f8      	ldr	r0, [r7, #12]
 80032aa:	f000 fcbf 	bl	8003c2c <I2C_WaitOnFlagUntilTimeout>
 80032ae:	4603      	mov	r3, r0
 80032b0:	2b00      	cmp	r3, #0
 80032b2:	d001      	beq.n	80032b8 <HAL_I2C_Mem_Read+0x48>
 80032b4:	2302      	movs	r3, #2
 80032b6:	e207      	b.n	80036c8 <HAL_I2C_Mem_Read+0x458>
 80032b8:	68fb      	ldr	r3, [r7, #12]
 80032ba:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80032be:	2b01      	cmp	r3, #1
 80032c0:	d101      	bne.n	80032c6 <HAL_I2C_Mem_Read+0x56>
 80032c2:	2302      	movs	r3, #2
 80032c4:	e200      	b.n	80036c8 <HAL_I2C_Mem_Read+0x458>
 80032c6:	68fb      	ldr	r3, [r7, #12]
 80032c8:	2201      	movs	r2, #1
 80032ca:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80032ce:	68fb      	ldr	r3, [r7, #12]
 80032d0:	681b      	ldr	r3, [r3, #0]
 80032d2:	681b      	ldr	r3, [r3, #0]
 80032d4:	f003 0301 	and.w	r3, r3, #1
 80032d8:	2b01      	cmp	r3, #1
 80032da:	d007      	beq.n	80032ec <HAL_I2C_Mem_Read+0x7c>
 80032dc:	68fb      	ldr	r3, [r7, #12]
 80032de:	681b      	ldr	r3, [r3, #0]
 80032e0:	681a      	ldr	r2, [r3, #0]
 80032e2:	68fb      	ldr	r3, [r7, #12]
 80032e4:	681b      	ldr	r3, [r3, #0]
 80032e6:	f042 0201 	orr.w	r2, r2, #1
 80032ea:	601a      	str	r2, [r3, #0]
 80032ec:	68fb      	ldr	r3, [r7, #12]
 80032ee:	681b      	ldr	r3, [r3, #0]
 80032f0:	681a      	ldr	r2, [r3, #0]
 80032f2:	68fb      	ldr	r3, [r7, #12]
 80032f4:	681b      	ldr	r3, [r3, #0]
 80032f6:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80032fa:	601a      	str	r2, [r3, #0]
 80032fc:	68fb      	ldr	r3, [r7, #12]
 80032fe:	2222      	movs	r2, #34	@ 0x22
 8003300:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003304:	68fb      	ldr	r3, [r7, #12]
 8003306:	2240      	movs	r2, #64	@ 0x40
 8003308:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800330c:	68fb      	ldr	r3, [r7, #12]
 800330e:	2200      	movs	r2, #0
 8003310:	641a      	str	r2, [r3, #64]	@ 0x40
 8003312:	68fb      	ldr	r3, [r7, #12]
 8003314:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003316:	625a      	str	r2, [r3, #36]	@ 0x24
 8003318:	68fb      	ldr	r3, [r7, #12]
 800331a:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 800331c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800331e:	68fb      	ldr	r3, [r7, #12]
 8003320:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003322:	b29a      	uxth	r2, r3
 8003324:	68fb      	ldr	r3, [r7, #12]
 8003326:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003328:	68fb      	ldr	r3, [r7, #12]
 800332a:	4a5b      	ldr	r2, [pc, #364]	@ (8003498 <HAL_I2C_Mem_Read+0x228>)
 800332c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800332e:	88f8      	ldrh	r0, [r7, #6]
 8003330:	893a      	ldrh	r2, [r7, #8]
 8003332:	8979      	ldrh	r1, [r7, #10]
 8003334:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003336:	9301      	str	r3, [sp, #4]
 8003338:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800333a:	9300      	str	r3, [sp, #0]
 800333c:	4603      	mov	r3, r0
 800333e:	68f8      	ldr	r0, [r7, #12]
 8003340:	f000 fb8c 	bl	8003a5c <I2C_RequestMemoryRead>
 8003344:	4603      	mov	r3, r0
 8003346:	2b00      	cmp	r3, #0
 8003348:	d001      	beq.n	800334e <HAL_I2C_Mem_Read+0xde>
 800334a:	2301      	movs	r3, #1
 800334c:	e1bc      	b.n	80036c8 <HAL_I2C_Mem_Read+0x458>
 800334e:	68fb      	ldr	r3, [r7, #12]
 8003350:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003352:	2b00      	cmp	r3, #0
 8003354:	d113      	bne.n	800337e <HAL_I2C_Mem_Read+0x10e>
 8003356:	2300      	movs	r3, #0
 8003358:	623b      	str	r3, [r7, #32]
 800335a:	68fb      	ldr	r3, [r7, #12]
 800335c:	681b      	ldr	r3, [r3, #0]
 800335e:	695b      	ldr	r3, [r3, #20]
 8003360:	623b      	str	r3, [r7, #32]
 8003362:	68fb      	ldr	r3, [r7, #12]
 8003364:	681b      	ldr	r3, [r3, #0]
 8003366:	699b      	ldr	r3, [r3, #24]
 8003368:	623b      	str	r3, [r7, #32]
 800336a:	6a3b      	ldr	r3, [r7, #32]
 800336c:	68fb      	ldr	r3, [r7, #12]
 800336e:	681b      	ldr	r3, [r3, #0]
 8003370:	681a      	ldr	r2, [r3, #0]
 8003372:	68fb      	ldr	r3, [r7, #12]
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800337a:	601a      	str	r2, [r3, #0]
 800337c:	e190      	b.n	80036a0 <HAL_I2C_Mem_Read+0x430>
 800337e:	68fb      	ldr	r3, [r7, #12]
 8003380:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003382:	2b01      	cmp	r3, #1
 8003384:	d11b      	bne.n	80033be <HAL_I2C_Mem_Read+0x14e>
 8003386:	68fb      	ldr	r3, [r7, #12]
 8003388:	681b      	ldr	r3, [r3, #0]
 800338a:	681a      	ldr	r2, [r3, #0]
 800338c:	68fb      	ldr	r3, [r7, #12]
 800338e:	681b      	ldr	r3, [r3, #0]
 8003390:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003394:	601a      	str	r2, [r3, #0]
 8003396:	2300      	movs	r3, #0
 8003398:	61fb      	str	r3, [r7, #28]
 800339a:	68fb      	ldr	r3, [r7, #12]
 800339c:	681b      	ldr	r3, [r3, #0]
 800339e:	695b      	ldr	r3, [r3, #20]
 80033a0:	61fb      	str	r3, [r7, #28]
 80033a2:	68fb      	ldr	r3, [r7, #12]
 80033a4:	681b      	ldr	r3, [r3, #0]
 80033a6:	699b      	ldr	r3, [r3, #24]
 80033a8:	61fb      	str	r3, [r7, #28]
 80033aa:	69fb      	ldr	r3, [r7, #28]
 80033ac:	68fb      	ldr	r3, [r7, #12]
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	681a      	ldr	r2, [r3, #0]
 80033b2:	68fb      	ldr	r3, [r7, #12]
 80033b4:	681b      	ldr	r3, [r3, #0]
 80033b6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80033ba:	601a      	str	r2, [r3, #0]
 80033bc:	e170      	b.n	80036a0 <HAL_I2C_Mem_Read+0x430>
 80033be:	68fb      	ldr	r3, [r7, #12]
 80033c0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80033c2:	2b02      	cmp	r3, #2
 80033c4:	d11b      	bne.n	80033fe <HAL_I2C_Mem_Read+0x18e>
 80033c6:	68fb      	ldr	r3, [r7, #12]
 80033c8:	681b      	ldr	r3, [r3, #0]
 80033ca:	681a      	ldr	r2, [r3, #0]
 80033cc:	68fb      	ldr	r3, [r7, #12]
 80033ce:	681b      	ldr	r3, [r3, #0]
 80033d0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80033d4:	601a      	str	r2, [r3, #0]
 80033d6:	68fb      	ldr	r3, [r7, #12]
 80033d8:	681b      	ldr	r3, [r3, #0]
 80033da:	681a      	ldr	r2, [r3, #0]
 80033dc:	68fb      	ldr	r3, [r7, #12]
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80033e4:	601a      	str	r2, [r3, #0]
 80033e6:	2300      	movs	r3, #0
 80033e8:	61bb      	str	r3, [r7, #24]
 80033ea:	68fb      	ldr	r3, [r7, #12]
 80033ec:	681b      	ldr	r3, [r3, #0]
 80033ee:	695b      	ldr	r3, [r3, #20]
 80033f0:	61bb      	str	r3, [r7, #24]
 80033f2:	68fb      	ldr	r3, [r7, #12]
 80033f4:	681b      	ldr	r3, [r3, #0]
 80033f6:	699b      	ldr	r3, [r3, #24]
 80033f8:	61bb      	str	r3, [r7, #24]
 80033fa:	69bb      	ldr	r3, [r7, #24]
 80033fc:	e150      	b.n	80036a0 <HAL_I2C_Mem_Read+0x430>
 80033fe:	2300      	movs	r3, #0
 8003400:	617b      	str	r3, [r7, #20]
 8003402:	68fb      	ldr	r3, [r7, #12]
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	695b      	ldr	r3, [r3, #20]
 8003408:	617b      	str	r3, [r7, #20]
 800340a:	68fb      	ldr	r3, [r7, #12]
 800340c:	681b      	ldr	r3, [r3, #0]
 800340e:	699b      	ldr	r3, [r3, #24]
 8003410:	617b      	str	r3, [r7, #20]
 8003412:	697b      	ldr	r3, [r7, #20]
 8003414:	e144      	b.n	80036a0 <HAL_I2C_Mem_Read+0x430>
 8003416:	68fb      	ldr	r3, [r7, #12]
 8003418:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800341a:	2b03      	cmp	r3, #3
 800341c:	f200 80f1 	bhi.w	8003602 <HAL_I2C_Mem_Read+0x392>
 8003420:	68fb      	ldr	r3, [r7, #12]
 8003422:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003424:	2b01      	cmp	r3, #1
 8003426:	d123      	bne.n	8003470 <HAL_I2C_Mem_Read+0x200>
 8003428:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800342a:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800342c:	68f8      	ldr	r0, [r7, #12]
 800342e:	f000 fda7 	bl	8003f80 <I2C_WaitOnRXNEFlagUntilTimeout>
 8003432:	4603      	mov	r3, r0
 8003434:	2b00      	cmp	r3, #0
 8003436:	d001      	beq.n	800343c <HAL_I2C_Mem_Read+0x1cc>
 8003438:	2301      	movs	r3, #1
 800343a:	e145      	b.n	80036c8 <HAL_I2C_Mem_Read+0x458>
 800343c:	68fb      	ldr	r3, [r7, #12]
 800343e:	681b      	ldr	r3, [r3, #0]
 8003440:	691a      	ldr	r2, [r3, #16]
 8003442:	68fb      	ldr	r3, [r7, #12]
 8003444:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003446:	b2d2      	uxtb	r2, r2
 8003448:	701a      	strb	r2, [r3, #0]
 800344a:	68fb      	ldr	r3, [r7, #12]
 800344c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800344e:	1c5a      	adds	r2, r3, #1
 8003450:	68fb      	ldr	r3, [r7, #12]
 8003452:	625a      	str	r2, [r3, #36]	@ 0x24
 8003454:	68fb      	ldr	r3, [r7, #12]
 8003456:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003458:	3b01      	subs	r3, #1
 800345a:	b29a      	uxth	r2, r3
 800345c:	68fb      	ldr	r3, [r7, #12]
 800345e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003460:	68fb      	ldr	r3, [r7, #12]
 8003462:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003464:	b29b      	uxth	r3, r3
 8003466:	3b01      	subs	r3, #1
 8003468:	b29a      	uxth	r2, r3
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800346e:	e117      	b.n	80036a0 <HAL_I2C_Mem_Read+0x430>
 8003470:	68fb      	ldr	r3, [r7, #12]
 8003472:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003474:	2b02      	cmp	r3, #2
 8003476:	d14e      	bne.n	8003516 <HAL_I2C_Mem_Read+0x2a6>
 8003478:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800347a:	9300      	str	r3, [sp, #0]
 800347c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800347e:	2200      	movs	r2, #0
 8003480:	4906      	ldr	r1, [pc, #24]	@ (800349c <HAL_I2C_Mem_Read+0x22c>)
 8003482:	68f8      	ldr	r0, [r7, #12]
 8003484:	f000 fbd2 	bl	8003c2c <I2C_WaitOnFlagUntilTimeout>
 8003488:	4603      	mov	r3, r0
 800348a:	2b00      	cmp	r3, #0
 800348c:	d008      	beq.n	80034a0 <HAL_I2C_Mem_Read+0x230>
 800348e:	2301      	movs	r3, #1
 8003490:	e11a      	b.n	80036c8 <HAL_I2C_Mem_Read+0x458>
 8003492:	bf00      	nop
 8003494:	00100002 	.word	0x00100002
 8003498:	ffff0000 	.word	0xffff0000
 800349c:	00010004 	.word	0x00010004
 80034a0:	68fb      	ldr	r3, [r7, #12]
 80034a2:	681b      	ldr	r3, [r3, #0]
 80034a4:	681a      	ldr	r2, [r3, #0]
 80034a6:	68fb      	ldr	r3, [r7, #12]
 80034a8:	681b      	ldr	r3, [r3, #0]
 80034aa:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80034ae:	601a      	str	r2, [r3, #0]
 80034b0:	68fb      	ldr	r3, [r7, #12]
 80034b2:	681b      	ldr	r3, [r3, #0]
 80034b4:	691a      	ldr	r2, [r3, #16]
 80034b6:	68fb      	ldr	r3, [r7, #12]
 80034b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034ba:	b2d2      	uxtb	r2, r2
 80034bc:	701a      	strb	r2, [r3, #0]
 80034be:	68fb      	ldr	r3, [r7, #12]
 80034c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034c2:	1c5a      	adds	r2, r3, #1
 80034c4:	68fb      	ldr	r3, [r7, #12]
 80034c6:	625a      	str	r2, [r3, #36]	@ 0x24
 80034c8:	68fb      	ldr	r3, [r7, #12]
 80034ca:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034cc:	3b01      	subs	r3, #1
 80034ce:	b29a      	uxth	r2, r3
 80034d0:	68fb      	ldr	r3, [r7, #12]
 80034d2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80034d4:	68fb      	ldr	r3, [r7, #12]
 80034d6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80034d8:	b29b      	uxth	r3, r3
 80034da:	3b01      	subs	r3, #1
 80034dc:	b29a      	uxth	r2, r3
 80034de:	68fb      	ldr	r3, [r7, #12]
 80034e0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80034e2:	68fb      	ldr	r3, [r7, #12]
 80034e4:	681b      	ldr	r3, [r3, #0]
 80034e6:	691a      	ldr	r2, [r3, #16]
 80034e8:	68fb      	ldr	r3, [r7, #12]
 80034ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034ec:	b2d2      	uxtb	r2, r2
 80034ee:	701a      	strb	r2, [r3, #0]
 80034f0:	68fb      	ldr	r3, [r7, #12]
 80034f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034f4:	1c5a      	adds	r2, r3, #1
 80034f6:	68fb      	ldr	r3, [r7, #12]
 80034f8:	625a      	str	r2, [r3, #36]	@ 0x24
 80034fa:	68fb      	ldr	r3, [r7, #12]
 80034fc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034fe:	3b01      	subs	r3, #1
 8003500:	b29a      	uxth	r2, r3
 8003502:	68fb      	ldr	r3, [r7, #12]
 8003504:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003506:	68fb      	ldr	r3, [r7, #12]
 8003508:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800350a:	b29b      	uxth	r3, r3
 800350c:	3b01      	subs	r3, #1
 800350e:	b29a      	uxth	r2, r3
 8003510:	68fb      	ldr	r3, [r7, #12]
 8003512:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003514:	e0c4      	b.n	80036a0 <HAL_I2C_Mem_Read+0x430>
 8003516:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003518:	9300      	str	r3, [sp, #0]
 800351a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800351c:	2200      	movs	r2, #0
 800351e:	496c      	ldr	r1, [pc, #432]	@ (80036d0 <HAL_I2C_Mem_Read+0x460>)
 8003520:	68f8      	ldr	r0, [r7, #12]
 8003522:	f000 fb83 	bl	8003c2c <I2C_WaitOnFlagUntilTimeout>
 8003526:	4603      	mov	r3, r0
 8003528:	2b00      	cmp	r3, #0
 800352a:	d001      	beq.n	8003530 <HAL_I2C_Mem_Read+0x2c0>
 800352c:	2301      	movs	r3, #1
 800352e:	e0cb      	b.n	80036c8 <HAL_I2C_Mem_Read+0x458>
 8003530:	68fb      	ldr	r3, [r7, #12]
 8003532:	681b      	ldr	r3, [r3, #0]
 8003534:	681a      	ldr	r2, [r3, #0]
 8003536:	68fb      	ldr	r3, [r7, #12]
 8003538:	681b      	ldr	r3, [r3, #0]
 800353a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800353e:	601a      	str	r2, [r3, #0]
 8003540:	68fb      	ldr	r3, [r7, #12]
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	691a      	ldr	r2, [r3, #16]
 8003546:	68fb      	ldr	r3, [r7, #12]
 8003548:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800354a:	b2d2      	uxtb	r2, r2
 800354c:	701a      	strb	r2, [r3, #0]
 800354e:	68fb      	ldr	r3, [r7, #12]
 8003550:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003552:	1c5a      	adds	r2, r3, #1
 8003554:	68fb      	ldr	r3, [r7, #12]
 8003556:	625a      	str	r2, [r3, #36]	@ 0x24
 8003558:	68fb      	ldr	r3, [r7, #12]
 800355a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800355c:	3b01      	subs	r3, #1
 800355e:	b29a      	uxth	r2, r3
 8003560:	68fb      	ldr	r3, [r7, #12]
 8003562:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003564:	68fb      	ldr	r3, [r7, #12]
 8003566:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003568:	b29b      	uxth	r3, r3
 800356a:	3b01      	subs	r3, #1
 800356c:	b29a      	uxth	r2, r3
 800356e:	68fb      	ldr	r3, [r7, #12]
 8003570:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003572:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003574:	9300      	str	r3, [sp, #0]
 8003576:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003578:	2200      	movs	r2, #0
 800357a:	4955      	ldr	r1, [pc, #340]	@ (80036d0 <HAL_I2C_Mem_Read+0x460>)
 800357c:	68f8      	ldr	r0, [r7, #12]
 800357e:	f000 fb55 	bl	8003c2c <I2C_WaitOnFlagUntilTimeout>
 8003582:	4603      	mov	r3, r0
 8003584:	2b00      	cmp	r3, #0
 8003586:	d001      	beq.n	800358c <HAL_I2C_Mem_Read+0x31c>
 8003588:	2301      	movs	r3, #1
 800358a:	e09d      	b.n	80036c8 <HAL_I2C_Mem_Read+0x458>
 800358c:	68fb      	ldr	r3, [r7, #12]
 800358e:	681b      	ldr	r3, [r3, #0]
 8003590:	681a      	ldr	r2, [r3, #0]
 8003592:	68fb      	ldr	r3, [r7, #12]
 8003594:	681b      	ldr	r3, [r3, #0]
 8003596:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800359a:	601a      	str	r2, [r3, #0]
 800359c:	68fb      	ldr	r3, [r7, #12]
 800359e:	681b      	ldr	r3, [r3, #0]
 80035a0:	691a      	ldr	r2, [r3, #16]
 80035a2:	68fb      	ldr	r3, [r7, #12]
 80035a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035a6:	b2d2      	uxtb	r2, r2
 80035a8:	701a      	strb	r2, [r3, #0]
 80035aa:	68fb      	ldr	r3, [r7, #12]
 80035ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035ae:	1c5a      	adds	r2, r3, #1
 80035b0:	68fb      	ldr	r3, [r7, #12]
 80035b2:	625a      	str	r2, [r3, #36]	@ 0x24
 80035b4:	68fb      	ldr	r3, [r7, #12]
 80035b6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80035b8:	3b01      	subs	r3, #1
 80035ba:	b29a      	uxth	r2, r3
 80035bc:	68fb      	ldr	r3, [r7, #12]
 80035be:	851a      	strh	r2, [r3, #40]	@ 0x28
 80035c0:	68fb      	ldr	r3, [r7, #12]
 80035c2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80035c4:	b29b      	uxth	r3, r3
 80035c6:	3b01      	subs	r3, #1
 80035c8:	b29a      	uxth	r2, r3
 80035ca:	68fb      	ldr	r3, [r7, #12]
 80035cc:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80035ce:	68fb      	ldr	r3, [r7, #12]
 80035d0:	681b      	ldr	r3, [r3, #0]
 80035d2:	691a      	ldr	r2, [r3, #16]
 80035d4:	68fb      	ldr	r3, [r7, #12]
 80035d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035d8:	b2d2      	uxtb	r2, r2
 80035da:	701a      	strb	r2, [r3, #0]
 80035dc:	68fb      	ldr	r3, [r7, #12]
 80035de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035e0:	1c5a      	adds	r2, r3, #1
 80035e2:	68fb      	ldr	r3, [r7, #12]
 80035e4:	625a      	str	r2, [r3, #36]	@ 0x24
 80035e6:	68fb      	ldr	r3, [r7, #12]
 80035e8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80035ea:	3b01      	subs	r3, #1
 80035ec:	b29a      	uxth	r2, r3
 80035ee:	68fb      	ldr	r3, [r7, #12]
 80035f0:	851a      	strh	r2, [r3, #40]	@ 0x28
 80035f2:	68fb      	ldr	r3, [r7, #12]
 80035f4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80035f6:	b29b      	uxth	r3, r3
 80035f8:	3b01      	subs	r3, #1
 80035fa:	b29a      	uxth	r2, r3
 80035fc:	68fb      	ldr	r3, [r7, #12]
 80035fe:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003600:	e04e      	b.n	80036a0 <HAL_I2C_Mem_Read+0x430>
 8003602:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003604:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8003606:	68f8      	ldr	r0, [r7, #12]
 8003608:	f000 fcba 	bl	8003f80 <I2C_WaitOnRXNEFlagUntilTimeout>
 800360c:	4603      	mov	r3, r0
 800360e:	2b00      	cmp	r3, #0
 8003610:	d001      	beq.n	8003616 <HAL_I2C_Mem_Read+0x3a6>
 8003612:	2301      	movs	r3, #1
 8003614:	e058      	b.n	80036c8 <HAL_I2C_Mem_Read+0x458>
 8003616:	68fb      	ldr	r3, [r7, #12]
 8003618:	681b      	ldr	r3, [r3, #0]
 800361a:	691a      	ldr	r2, [r3, #16]
 800361c:	68fb      	ldr	r3, [r7, #12]
 800361e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003620:	b2d2      	uxtb	r2, r2
 8003622:	701a      	strb	r2, [r3, #0]
 8003624:	68fb      	ldr	r3, [r7, #12]
 8003626:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003628:	1c5a      	adds	r2, r3, #1
 800362a:	68fb      	ldr	r3, [r7, #12]
 800362c:	625a      	str	r2, [r3, #36]	@ 0x24
 800362e:	68fb      	ldr	r3, [r7, #12]
 8003630:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003632:	3b01      	subs	r3, #1
 8003634:	b29a      	uxth	r2, r3
 8003636:	68fb      	ldr	r3, [r7, #12]
 8003638:	851a      	strh	r2, [r3, #40]	@ 0x28
 800363a:	68fb      	ldr	r3, [r7, #12]
 800363c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800363e:	b29b      	uxth	r3, r3
 8003640:	3b01      	subs	r3, #1
 8003642:	b29a      	uxth	r2, r3
 8003644:	68fb      	ldr	r3, [r7, #12]
 8003646:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003648:	68fb      	ldr	r3, [r7, #12]
 800364a:	681b      	ldr	r3, [r3, #0]
 800364c:	695b      	ldr	r3, [r3, #20]
 800364e:	f003 0304 	and.w	r3, r3, #4
 8003652:	2b04      	cmp	r3, #4
 8003654:	d124      	bne.n	80036a0 <HAL_I2C_Mem_Read+0x430>
 8003656:	68fb      	ldr	r3, [r7, #12]
 8003658:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800365a:	2b03      	cmp	r3, #3
 800365c:	d107      	bne.n	800366e <HAL_I2C_Mem_Read+0x3fe>
 800365e:	68fb      	ldr	r3, [r7, #12]
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	681a      	ldr	r2, [r3, #0]
 8003664:	68fb      	ldr	r3, [r7, #12]
 8003666:	681b      	ldr	r3, [r3, #0]
 8003668:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800366c:	601a      	str	r2, [r3, #0]
 800366e:	68fb      	ldr	r3, [r7, #12]
 8003670:	681b      	ldr	r3, [r3, #0]
 8003672:	691a      	ldr	r2, [r3, #16]
 8003674:	68fb      	ldr	r3, [r7, #12]
 8003676:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003678:	b2d2      	uxtb	r2, r2
 800367a:	701a      	strb	r2, [r3, #0]
 800367c:	68fb      	ldr	r3, [r7, #12]
 800367e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003680:	1c5a      	adds	r2, r3, #1
 8003682:	68fb      	ldr	r3, [r7, #12]
 8003684:	625a      	str	r2, [r3, #36]	@ 0x24
 8003686:	68fb      	ldr	r3, [r7, #12]
 8003688:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800368a:	3b01      	subs	r3, #1
 800368c:	b29a      	uxth	r2, r3
 800368e:	68fb      	ldr	r3, [r7, #12]
 8003690:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003692:	68fb      	ldr	r3, [r7, #12]
 8003694:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003696:	b29b      	uxth	r3, r3
 8003698:	3b01      	subs	r3, #1
 800369a:	b29a      	uxth	r2, r3
 800369c:	68fb      	ldr	r3, [r7, #12]
 800369e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80036a0:	68fb      	ldr	r3, [r7, #12]
 80036a2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80036a4:	2b00      	cmp	r3, #0
 80036a6:	f47f aeb6 	bne.w	8003416 <HAL_I2C_Mem_Read+0x1a6>
 80036aa:	68fb      	ldr	r3, [r7, #12]
 80036ac:	2220      	movs	r2, #32
 80036ae:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80036b2:	68fb      	ldr	r3, [r7, #12]
 80036b4:	2200      	movs	r2, #0
 80036b6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80036ba:	68fb      	ldr	r3, [r7, #12]
 80036bc:	2200      	movs	r2, #0
 80036be:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80036c2:	2300      	movs	r3, #0
 80036c4:	e000      	b.n	80036c8 <HAL_I2C_Mem_Read+0x458>
 80036c6:	2302      	movs	r3, #2
 80036c8:	4618      	mov	r0, r3
 80036ca:	3728      	adds	r7, #40	@ 0x28
 80036cc:	46bd      	mov	sp, r7
 80036ce:	bd80      	pop	{r7, pc}
 80036d0:	00010004 	.word	0x00010004

080036d4 <HAL_I2C_IsDeviceReady>:
 80036d4:	b580      	push	{r7, lr}
 80036d6:	b08a      	sub	sp, #40	@ 0x28
 80036d8:	af02      	add	r7, sp, #8
 80036da:	60f8      	str	r0, [r7, #12]
 80036dc:	607a      	str	r2, [r7, #4]
 80036de:	603b      	str	r3, [r7, #0]
 80036e0:	460b      	mov	r3, r1
 80036e2:	817b      	strh	r3, [r7, #10]
 80036e4:	f7ff f87e 	bl	80027e4 <HAL_GetTick>
 80036e8:	61f8      	str	r0, [r7, #28]
 80036ea:	2300      	movs	r3, #0
 80036ec:	61bb      	str	r3, [r7, #24]
 80036ee:	68fb      	ldr	r3, [r7, #12]
 80036f0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80036f4:	b2db      	uxtb	r3, r3
 80036f6:	2b20      	cmp	r3, #32
 80036f8:	f040 8111 	bne.w	800391e <HAL_I2C_IsDeviceReady+0x24a>
 80036fc:	69fb      	ldr	r3, [r7, #28]
 80036fe:	9300      	str	r3, [sp, #0]
 8003700:	2319      	movs	r3, #25
 8003702:	2201      	movs	r2, #1
 8003704:	4988      	ldr	r1, [pc, #544]	@ (8003928 <HAL_I2C_IsDeviceReady+0x254>)
 8003706:	68f8      	ldr	r0, [r7, #12]
 8003708:	f000 fa90 	bl	8003c2c <I2C_WaitOnFlagUntilTimeout>
 800370c:	4603      	mov	r3, r0
 800370e:	2b00      	cmp	r3, #0
 8003710:	d001      	beq.n	8003716 <HAL_I2C_IsDeviceReady+0x42>
 8003712:	2302      	movs	r3, #2
 8003714:	e104      	b.n	8003920 <HAL_I2C_IsDeviceReady+0x24c>
 8003716:	68fb      	ldr	r3, [r7, #12]
 8003718:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800371c:	2b01      	cmp	r3, #1
 800371e:	d101      	bne.n	8003724 <HAL_I2C_IsDeviceReady+0x50>
 8003720:	2302      	movs	r3, #2
 8003722:	e0fd      	b.n	8003920 <HAL_I2C_IsDeviceReady+0x24c>
 8003724:	68fb      	ldr	r3, [r7, #12]
 8003726:	2201      	movs	r2, #1
 8003728:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800372c:	68fb      	ldr	r3, [r7, #12]
 800372e:	681b      	ldr	r3, [r3, #0]
 8003730:	681b      	ldr	r3, [r3, #0]
 8003732:	f003 0301 	and.w	r3, r3, #1
 8003736:	2b01      	cmp	r3, #1
 8003738:	d007      	beq.n	800374a <HAL_I2C_IsDeviceReady+0x76>
 800373a:	68fb      	ldr	r3, [r7, #12]
 800373c:	681b      	ldr	r3, [r3, #0]
 800373e:	681a      	ldr	r2, [r3, #0]
 8003740:	68fb      	ldr	r3, [r7, #12]
 8003742:	681b      	ldr	r3, [r3, #0]
 8003744:	f042 0201 	orr.w	r2, r2, #1
 8003748:	601a      	str	r2, [r3, #0]
 800374a:	68fb      	ldr	r3, [r7, #12]
 800374c:	681b      	ldr	r3, [r3, #0]
 800374e:	681a      	ldr	r2, [r3, #0]
 8003750:	68fb      	ldr	r3, [r7, #12]
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003758:	601a      	str	r2, [r3, #0]
 800375a:	68fb      	ldr	r3, [r7, #12]
 800375c:	2224      	movs	r2, #36	@ 0x24
 800375e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003762:	68fb      	ldr	r3, [r7, #12]
 8003764:	2200      	movs	r2, #0
 8003766:	641a      	str	r2, [r3, #64]	@ 0x40
 8003768:	68fb      	ldr	r3, [r7, #12]
 800376a:	4a70      	ldr	r2, [pc, #448]	@ (800392c <HAL_I2C_IsDeviceReady+0x258>)
 800376c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800376e:	68fb      	ldr	r3, [r7, #12]
 8003770:	681b      	ldr	r3, [r3, #0]
 8003772:	681a      	ldr	r2, [r3, #0]
 8003774:	68fb      	ldr	r3, [r7, #12]
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800377c:	601a      	str	r2, [r3, #0]
 800377e:	69fb      	ldr	r3, [r7, #28]
 8003780:	9300      	str	r3, [sp, #0]
 8003782:	683b      	ldr	r3, [r7, #0]
 8003784:	2200      	movs	r2, #0
 8003786:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800378a:	68f8      	ldr	r0, [r7, #12]
 800378c:	f000 fa4e 	bl	8003c2c <I2C_WaitOnFlagUntilTimeout>
 8003790:	4603      	mov	r3, r0
 8003792:	2b00      	cmp	r3, #0
 8003794:	d00d      	beq.n	80037b2 <HAL_I2C_IsDeviceReady+0xde>
 8003796:	68fb      	ldr	r3, [r7, #12]
 8003798:	681b      	ldr	r3, [r3, #0]
 800379a:	681b      	ldr	r3, [r3, #0]
 800379c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80037a0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80037a4:	d103      	bne.n	80037ae <HAL_I2C_IsDeviceReady+0xda>
 80037a6:	68fb      	ldr	r3, [r7, #12]
 80037a8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80037ac:	641a      	str	r2, [r3, #64]	@ 0x40
 80037ae:	2303      	movs	r3, #3
 80037b0:	e0b6      	b.n	8003920 <HAL_I2C_IsDeviceReady+0x24c>
 80037b2:	897b      	ldrh	r3, [r7, #10]
 80037b4:	b2db      	uxtb	r3, r3
 80037b6:	461a      	mov	r2, r3
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 80037c0:	611a      	str	r2, [r3, #16]
 80037c2:	f7ff f80f 	bl	80027e4 <HAL_GetTick>
 80037c6:	61f8      	str	r0, [r7, #28]
 80037c8:	68fb      	ldr	r3, [r7, #12]
 80037ca:	681b      	ldr	r3, [r3, #0]
 80037cc:	695b      	ldr	r3, [r3, #20]
 80037ce:	f003 0302 	and.w	r3, r3, #2
 80037d2:	2b02      	cmp	r3, #2
 80037d4:	bf0c      	ite	eq
 80037d6:	2301      	moveq	r3, #1
 80037d8:	2300      	movne	r3, #0
 80037da:	b2db      	uxtb	r3, r3
 80037dc:	75fb      	strb	r3, [r7, #23]
 80037de:	68fb      	ldr	r3, [r7, #12]
 80037e0:	681b      	ldr	r3, [r3, #0]
 80037e2:	695b      	ldr	r3, [r3, #20]
 80037e4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80037e8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80037ec:	bf0c      	ite	eq
 80037ee:	2301      	moveq	r3, #1
 80037f0:	2300      	movne	r3, #0
 80037f2:	b2db      	uxtb	r3, r3
 80037f4:	75bb      	strb	r3, [r7, #22]
 80037f6:	e025      	b.n	8003844 <HAL_I2C_IsDeviceReady+0x170>
 80037f8:	f7fe fff4 	bl	80027e4 <HAL_GetTick>
 80037fc:	4602      	mov	r2, r0
 80037fe:	69fb      	ldr	r3, [r7, #28]
 8003800:	1ad3      	subs	r3, r2, r3
 8003802:	683a      	ldr	r2, [r7, #0]
 8003804:	429a      	cmp	r2, r3
 8003806:	d302      	bcc.n	800380e <HAL_I2C_IsDeviceReady+0x13a>
 8003808:	683b      	ldr	r3, [r7, #0]
 800380a:	2b00      	cmp	r3, #0
 800380c:	d103      	bne.n	8003816 <HAL_I2C_IsDeviceReady+0x142>
 800380e:	68fb      	ldr	r3, [r7, #12]
 8003810:	22a0      	movs	r2, #160	@ 0xa0
 8003812:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003816:	68fb      	ldr	r3, [r7, #12]
 8003818:	681b      	ldr	r3, [r3, #0]
 800381a:	695b      	ldr	r3, [r3, #20]
 800381c:	f003 0302 	and.w	r3, r3, #2
 8003820:	2b02      	cmp	r3, #2
 8003822:	bf0c      	ite	eq
 8003824:	2301      	moveq	r3, #1
 8003826:	2300      	movne	r3, #0
 8003828:	b2db      	uxtb	r3, r3
 800382a:	75fb      	strb	r3, [r7, #23]
 800382c:	68fb      	ldr	r3, [r7, #12]
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	695b      	ldr	r3, [r3, #20]
 8003832:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003836:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800383a:	bf0c      	ite	eq
 800383c:	2301      	moveq	r3, #1
 800383e:	2300      	movne	r3, #0
 8003840:	b2db      	uxtb	r3, r3
 8003842:	75bb      	strb	r3, [r7, #22]
 8003844:	68fb      	ldr	r3, [r7, #12]
 8003846:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800384a:	b2db      	uxtb	r3, r3
 800384c:	2ba0      	cmp	r3, #160	@ 0xa0
 800384e:	d005      	beq.n	800385c <HAL_I2C_IsDeviceReady+0x188>
 8003850:	7dfb      	ldrb	r3, [r7, #23]
 8003852:	2b00      	cmp	r3, #0
 8003854:	d102      	bne.n	800385c <HAL_I2C_IsDeviceReady+0x188>
 8003856:	7dbb      	ldrb	r3, [r7, #22]
 8003858:	2b00      	cmp	r3, #0
 800385a:	d0cd      	beq.n	80037f8 <HAL_I2C_IsDeviceReady+0x124>
 800385c:	68fb      	ldr	r3, [r7, #12]
 800385e:	2220      	movs	r2, #32
 8003860:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003864:	68fb      	ldr	r3, [r7, #12]
 8003866:	681b      	ldr	r3, [r3, #0]
 8003868:	695b      	ldr	r3, [r3, #20]
 800386a:	f003 0302 	and.w	r3, r3, #2
 800386e:	2b02      	cmp	r3, #2
 8003870:	d129      	bne.n	80038c6 <HAL_I2C_IsDeviceReady+0x1f2>
 8003872:	68fb      	ldr	r3, [r7, #12]
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	681a      	ldr	r2, [r3, #0]
 8003878:	68fb      	ldr	r3, [r7, #12]
 800387a:	681b      	ldr	r3, [r3, #0]
 800387c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003880:	601a      	str	r2, [r3, #0]
 8003882:	2300      	movs	r3, #0
 8003884:	613b      	str	r3, [r7, #16]
 8003886:	68fb      	ldr	r3, [r7, #12]
 8003888:	681b      	ldr	r3, [r3, #0]
 800388a:	695b      	ldr	r3, [r3, #20]
 800388c:	613b      	str	r3, [r7, #16]
 800388e:	68fb      	ldr	r3, [r7, #12]
 8003890:	681b      	ldr	r3, [r3, #0]
 8003892:	699b      	ldr	r3, [r3, #24]
 8003894:	613b      	str	r3, [r7, #16]
 8003896:	693b      	ldr	r3, [r7, #16]
 8003898:	69fb      	ldr	r3, [r7, #28]
 800389a:	9300      	str	r3, [sp, #0]
 800389c:	2319      	movs	r3, #25
 800389e:	2201      	movs	r2, #1
 80038a0:	4921      	ldr	r1, [pc, #132]	@ (8003928 <HAL_I2C_IsDeviceReady+0x254>)
 80038a2:	68f8      	ldr	r0, [r7, #12]
 80038a4:	f000 f9c2 	bl	8003c2c <I2C_WaitOnFlagUntilTimeout>
 80038a8:	4603      	mov	r3, r0
 80038aa:	2b00      	cmp	r3, #0
 80038ac:	d001      	beq.n	80038b2 <HAL_I2C_IsDeviceReady+0x1de>
 80038ae:	2301      	movs	r3, #1
 80038b0:	e036      	b.n	8003920 <HAL_I2C_IsDeviceReady+0x24c>
 80038b2:	68fb      	ldr	r3, [r7, #12]
 80038b4:	2220      	movs	r2, #32
 80038b6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80038ba:	68fb      	ldr	r3, [r7, #12]
 80038bc:	2200      	movs	r2, #0
 80038be:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80038c2:	2300      	movs	r3, #0
 80038c4:	e02c      	b.n	8003920 <HAL_I2C_IsDeviceReady+0x24c>
 80038c6:	68fb      	ldr	r3, [r7, #12]
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	681a      	ldr	r2, [r3, #0]
 80038cc:	68fb      	ldr	r3, [r7, #12]
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80038d4:	601a      	str	r2, [r3, #0]
 80038d6:	68fb      	ldr	r3, [r7, #12]
 80038d8:	681b      	ldr	r3, [r3, #0]
 80038da:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80038de:	615a      	str	r2, [r3, #20]
 80038e0:	69fb      	ldr	r3, [r7, #28]
 80038e2:	9300      	str	r3, [sp, #0]
 80038e4:	2319      	movs	r3, #25
 80038e6:	2201      	movs	r2, #1
 80038e8:	490f      	ldr	r1, [pc, #60]	@ (8003928 <HAL_I2C_IsDeviceReady+0x254>)
 80038ea:	68f8      	ldr	r0, [r7, #12]
 80038ec:	f000 f99e 	bl	8003c2c <I2C_WaitOnFlagUntilTimeout>
 80038f0:	4603      	mov	r3, r0
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	d001      	beq.n	80038fa <HAL_I2C_IsDeviceReady+0x226>
 80038f6:	2301      	movs	r3, #1
 80038f8:	e012      	b.n	8003920 <HAL_I2C_IsDeviceReady+0x24c>
 80038fa:	69bb      	ldr	r3, [r7, #24]
 80038fc:	3301      	adds	r3, #1
 80038fe:	61bb      	str	r3, [r7, #24]
 8003900:	69ba      	ldr	r2, [r7, #24]
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	429a      	cmp	r2, r3
 8003906:	f4ff af32 	bcc.w	800376e <HAL_I2C_IsDeviceReady+0x9a>
 800390a:	68fb      	ldr	r3, [r7, #12]
 800390c:	2220      	movs	r2, #32
 800390e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003912:	68fb      	ldr	r3, [r7, #12]
 8003914:	2200      	movs	r2, #0
 8003916:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800391a:	2301      	movs	r3, #1
 800391c:	e000      	b.n	8003920 <HAL_I2C_IsDeviceReady+0x24c>
 800391e:	2302      	movs	r3, #2
 8003920:	4618      	mov	r0, r3
 8003922:	3720      	adds	r7, #32
 8003924:	46bd      	mov	sp, r7
 8003926:	bd80      	pop	{r7, pc}
 8003928:	00100002 	.word	0x00100002
 800392c:	ffff0000 	.word	0xffff0000

08003930 <I2C_RequestMemoryWrite>:
 8003930:	b580      	push	{r7, lr}
 8003932:	b088      	sub	sp, #32
 8003934:	af02      	add	r7, sp, #8
 8003936:	60f8      	str	r0, [r7, #12]
 8003938:	4608      	mov	r0, r1
 800393a:	4611      	mov	r1, r2
 800393c:	461a      	mov	r2, r3
 800393e:	4603      	mov	r3, r0
 8003940:	817b      	strh	r3, [r7, #10]
 8003942:	460b      	mov	r3, r1
 8003944:	813b      	strh	r3, [r7, #8]
 8003946:	4613      	mov	r3, r2
 8003948:	80fb      	strh	r3, [r7, #6]
 800394a:	68fb      	ldr	r3, [r7, #12]
 800394c:	681b      	ldr	r3, [r3, #0]
 800394e:	681a      	ldr	r2, [r3, #0]
 8003950:	68fb      	ldr	r3, [r7, #12]
 8003952:	681b      	ldr	r3, [r3, #0]
 8003954:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003958:	601a      	str	r2, [r3, #0]
 800395a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800395c:	9300      	str	r3, [sp, #0]
 800395e:	6a3b      	ldr	r3, [r7, #32]
 8003960:	2200      	movs	r2, #0
 8003962:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003966:	68f8      	ldr	r0, [r7, #12]
 8003968:	f000 f960 	bl	8003c2c <I2C_WaitOnFlagUntilTimeout>
 800396c:	4603      	mov	r3, r0
 800396e:	2b00      	cmp	r3, #0
 8003970:	d00d      	beq.n	800398e <I2C_RequestMemoryWrite+0x5e>
 8003972:	68fb      	ldr	r3, [r7, #12]
 8003974:	681b      	ldr	r3, [r3, #0]
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800397c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003980:	d103      	bne.n	800398a <I2C_RequestMemoryWrite+0x5a>
 8003982:	68fb      	ldr	r3, [r7, #12]
 8003984:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003988:	641a      	str	r2, [r3, #64]	@ 0x40
 800398a:	2303      	movs	r3, #3
 800398c:	e05f      	b.n	8003a4e <I2C_RequestMemoryWrite+0x11e>
 800398e:	897b      	ldrh	r3, [r7, #10]
 8003990:	b2db      	uxtb	r3, r3
 8003992:	461a      	mov	r2, r3
 8003994:	68fb      	ldr	r3, [r7, #12]
 8003996:	681b      	ldr	r3, [r3, #0]
 8003998:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 800399c:	611a      	str	r2, [r3, #16]
 800399e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80039a0:	6a3a      	ldr	r2, [r7, #32]
 80039a2:	492d      	ldr	r1, [pc, #180]	@ (8003a58 <I2C_RequestMemoryWrite+0x128>)
 80039a4:	68f8      	ldr	r0, [r7, #12]
 80039a6:	f000 f9bb 	bl	8003d20 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80039aa:	4603      	mov	r3, r0
 80039ac:	2b00      	cmp	r3, #0
 80039ae:	d001      	beq.n	80039b4 <I2C_RequestMemoryWrite+0x84>
 80039b0:	2301      	movs	r3, #1
 80039b2:	e04c      	b.n	8003a4e <I2C_RequestMemoryWrite+0x11e>
 80039b4:	2300      	movs	r3, #0
 80039b6:	617b      	str	r3, [r7, #20]
 80039b8:	68fb      	ldr	r3, [r7, #12]
 80039ba:	681b      	ldr	r3, [r3, #0]
 80039bc:	695b      	ldr	r3, [r3, #20]
 80039be:	617b      	str	r3, [r7, #20]
 80039c0:	68fb      	ldr	r3, [r7, #12]
 80039c2:	681b      	ldr	r3, [r3, #0]
 80039c4:	699b      	ldr	r3, [r3, #24]
 80039c6:	617b      	str	r3, [r7, #20]
 80039c8:	697b      	ldr	r3, [r7, #20]
 80039ca:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80039cc:	6a39      	ldr	r1, [r7, #32]
 80039ce:	68f8      	ldr	r0, [r7, #12]
 80039d0:	f000 fa46 	bl	8003e60 <I2C_WaitOnTXEFlagUntilTimeout>
 80039d4:	4603      	mov	r3, r0
 80039d6:	2b00      	cmp	r3, #0
 80039d8:	d00d      	beq.n	80039f6 <I2C_RequestMemoryWrite+0xc6>
 80039da:	68fb      	ldr	r3, [r7, #12]
 80039dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039de:	2b04      	cmp	r3, #4
 80039e0:	d107      	bne.n	80039f2 <I2C_RequestMemoryWrite+0xc2>
 80039e2:	68fb      	ldr	r3, [r7, #12]
 80039e4:	681b      	ldr	r3, [r3, #0]
 80039e6:	681a      	ldr	r2, [r3, #0]
 80039e8:	68fb      	ldr	r3, [r7, #12]
 80039ea:	681b      	ldr	r3, [r3, #0]
 80039ec:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80039f0:	601a      	str	r2, [r3, #0]
 80039f2:	2301      	movs	r3, #1
 80039f4:	e02b      	b.n	8003a4e <I2C_RequestMemoryWrite+0x11e>
 80039f6:	88fb      	ldrh	r3, [r7, #6]
 80039f8:	2b01      	cmp	r3, #1
 80039fa:	d105      	bne.n	8003a08 <I2C_RequestMemoryWrite+0xd8>
 80039fc:	893b      	ldrh	r3, [r7, #8]
 80039fe:	b2da      	uxtb	r2, r3
 8003a00:	68fb      	ldr	r3, [r7, #12]
 8003a02:	681b      	ldr	r3, [r3, #0]
 8003a04:	611a      	str	r2, [r3, #16]
 8003a06:	e021      	b.n	8003a4c <I2C_RequestMemoryWrite+0x11c>
 8003a08:	893b      	ldrh	r3, [r7, #8]
 8003a0a:	0a1b      	lsrs	r3, r3, #8
 8003a0c:	b29b      	uxth	r3, r3
 8003a0e:	b2da      	uxtb	r2, r3
 8003a10:	68fb      	ldr	r3, [r7, #12]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	611a      	str	r2, [r3, #16]
 8003a16:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003a18:	6a39      	ldr	r1, [r7, #32]
 8003a1a:	68f8      	ldr	r0, [r7, #12]
 8003a1c:	f000 fa20 	bl	8003e60 <I2C_WaitOnTXEFlagUntilTimeout>
 8003a20:	4603      	mov	r3, r0
 8003a22:	2b00      	cmp	r3, #0
 8003a24:	d00d      	beq.n	8003a42 <I2C_RequestMemoryWrite+0x112>
 8003a26:	68fb      	ldr	r3, [r7, #12]
 8003a28:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a2a:	2b04      	cmp	r3, #4
 8003a2c:	d107      	bne.n	8003a3e <I2C_RequestMemoryWrite+0x10e>
 8003a2e:	68fb      	ldr	r3, [r7, #12]
 8003a30:	681b      	ldr	r3, [r3, #0]
 8003a32:	681a      	ldr	r2, [r3, #0]
 8003a34:	68fb      	ldr	r3, [r7, #12]
 8003a36:	681b      	ldr	r3, [r3, #0]
 8003a38:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003a3c:	601a      	str	r2, [r3, #0]
 8003a3e:	2301      	movs	r3, #1
 8003a40:	e005      	b.n	8003a4e <I2C_RequestMemoryWrite+0x11e>
 8003a42:	893b      	ldrh	r3, [r7, #8]
 8003a44:	b2da      	uxtb	r2, r3
 8003a46:	68fb      	ldr	r3, [r7, #12]
 8003a48:	681b      	ldr	r3, [r3, #0]
 8003a4a:	611a      	str	r2, [r3, #16]
 8003a4c:	2300      	movs	r3, #0
 8003a4e:	4618      	mov	r0, r3
 8003a50:	3718      	adds	r7, #24
 8003a52:	46bd      	mov	sp, r7
 8003a54:	bd80      	pop	{r7, pc}
 8003a56:	bf00      	nop
 8003a58:	00010002 	.word	0x00010002

08003a5c <I2C_RequestMemoryRead>:
 8003a5c:	b580      	push	{r7, lr}
 8003a5e:	b088      	sub	sp, #32
 8003a60:	af02      	add	r7, sp, #8
 8003a62:	60f8      	str	r0, [r7, #12]
 8003a64:	4608      	mov	r0, r1
 8003a66:	4611      	mov	r1, r2
 8003a68:	461a      	mov	r2, r3
 8003a6a:	4603      	mov	r3, r0
 8003a6c:	817b      	strh	r3, [r7, #10]
 8003a6e:	460b      	mov	r3, r1
 8003a70:	813b      	strh	r3, [r7, #8]
 8003a72:	4613      	mov	r3, r2
 8003a74:	80fb      	strh	r3, [r7, #6]
 8003a76:	68fb      	ldr	r3, [r7, #12]
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	681a      	ldr	r2, [r3, #0]
 8003a7c:	68fb      	ldr	r3, [r7, #12]
 8003a7e:	681b      	ldr	r3, [r3, #0]
 8003a80:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003a84:	601a      	str	r2, [r3, #0]
 8003a86:	68fb      	ldr	r3, [r7, #12]
 8003a88:	681b      	ldr	r3, [r3, #0]
 8003a8a:	681a      	ldr	r2, [r3, #0]
 8003a8c:	68fb      	ldr	r3, [r7, #12]
 8003a8e:	681b      	ldr	r3, [r3, #0]
 8003a90:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003a94:	601a      	str	r2, [r3, #0]
 8003a96:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003a98:	9300      	str	r3, [sp, #0]
 8003a9a:	6a3b      	ldr	r3, [r7, #32]
 8003a9c:	2200      	movs	r2, #0
 8003a9e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003aa2:	68f8      	ldr	r0, [r7, #12]
 8003aa4:	f000 f8c2 	bl	8003c2c <I2C_WaitOnFlagUntilTimeout>
 8003aa8:	4603      	mov	r3, r0
 8003aaa:	2b00      	cmp	r3, #0
 8003aac:	d00d      	beq.n	8003aca <I2C_RequestMemoryRead+0x6e>
 8003aae:	68fb      	ldr	r3, [r7, #12]
 8003ab0:	681b      	ldr	r3, [r3, #0]
 8003ab2:	681b      	ldr	r3, [r3, #0]
 8003ab4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003ab8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003abc:	d103      	bne.n	8003ac6 <I2C_RequestMemoryRead+0x6a>
 8003abe:	68fb      	ldr	r3, [r7, #12]
 8003ac0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003ac4:	641a      	str	r2, [r3, #64]	@ 0x40
 8003ac6:	2303      	movs	r3, #3
 8003ac8:	e0aa      	b.n	8003c20 <I2C_RequestMemoryRead+0x1c4>
 8003aca:	897b      	ldrh	r3, [r7, #10]
 8003acc:	b2db      	uxtb	r3, r3
 8003ace:	461a      	mov	r2, r3
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8003ad8:	611a      	str	r2, [r3, #16]
 8003ada:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003adc:	6a3a      	ldr	r2, [r7, #32]
 8003ade:	4952      	ldr	r1, [pc, #328]	@ (8003c28 <I2C_RequestMemoryRead+0x1cc>)
 8003ae0:	68f8      	ldr	r0, [r7, #12]
 8003ae2:	f000 f91d 	bl	8003d20 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003ae6:	4603      	mov	r3, r0
 8003ae8:	2b00      	cmp	r3, #0
 8003aea:	d001      	beq.n	8003af0 <I2C_RequestMemoryRead+0x94>
 8003aec:	2301      	movs	r3, #1
 8003aee:	e097      	b.n	8003c20 <I2C_RequestMemoryRead+0x1c4>
 8003af0:	2300      	movs	r3, #0
 8003af2:	617b      	str	r3, [r7, #20]
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	695b      	ldr	r3, [r3, #20]
 8003afa:	617b      	str	r3, [r7, #20]
 8003afc:	68fb      	ldr	r3, [r7, #12]
 8003afe:	681b      	ldr	r3, [r3, #0]
 8003b00:	699b      	ldr	r3, [r3, #24]
 8003b02:	617b      	str	r3, [r7, #20]
 8003b04:	697b      	ldr	r3, [r7, #20]
 8003b06:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003b08:	6a39      	ldr	r1, [r7, #32]
 8003b0a:	68f8      	ldr	r0, [r7, #12]
 8003b0c:	f000 f9a8 	bl	8003e60 <I2C_WaitOnTXEFlagUntilTimeout>
 8003b10:	4603      	mov	r3, r0
 8003b12:	2b00      	cmp	r3, #0
 8003b14:	d00d      	beq.n	8003b32 <I2C_RequestMemoryRead+0xd6>
 8003b16:	68fb      	ldr	r3, [r7, #12]
 8003b18:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b1a:	2b04      	cmp	r3, #4
 8003b1c:	d107      	bne.n	8003b2e <I2C_RequestMemoryRead+0xd2>
 8003b1e:	68fb      	ldr	r3, [r7, #12]
 8003b20:	681b      	ldr	r3, [r3, #0]
 8003b22:	681a      	ldr	r2, [r3, #0]
 8003b24:	68fb      	ldr	r3, [r7, #12]
 8003b26:	681b      	ldr	r3, [r3, #0]
 8003b28:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003b2c:	601a      	str	r2, [r3, #0]
 8003b2e:	2301      	movs	r3, #1
 8003b30:	e076      	b.n	8003c20 <I2C_RequestMemoryRead+0x1c4>
 8003b32:	88fb      	ldrh	r3, [r7, #6]
 8003b34:	2b01      	cmp	r3, #1
 8003b36:	d105      	bne.n	8003b44 <I2C_RequestMemoryRead+0xe8>
 8003b38:	893b      	ldrh	r3, [r7, #8]
 8003b3a:	b2da      	uxtb	r2, r3
 8003b3c:	68fb      	ldr	r3, [r7, #12]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	611a      	str	r2, [r3, #16]
 8003b42:	e021      	b.n	8003b88 <I2C_RequestMemoryRead+0x12c>
 8003b44:	893b      	ldrh	r3, [r7, #8]
 8003b46:	0a1b      	lsrs	r3, r3, #8
 8003b48:	b29b      	uxth	r3, r3
 8003b4a:	b2da      	uxtb	r2, r3
 8003b4c:	68fb      	ldr	r3, [r7, #12]
 8003b4e:	681b      	ldr	r3, [r3, #0]
 8003b50:	611a      	str	r2, [r3, #16]
 8003b52:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003b54:	6a39      	ldr	r1, [r7, #32]
 8003b56:	68f8      	ldr	r0, [r7, #12]
 8003b58:	f000 f982 	bl	8003e60 <I2C_WaitOnTXEFlagUntilTimeout>
 8003b5c:	4603      	mov	r3, r0
 8003b5e:	2b00      	cmp	r3, #0
 8003b60:	d00d      	beq.n	8003b7e <I2C_RequestMemoryRead+0x122>
 8003b62:	68fb      	ldr	r3, [r7, #12]
 8003b64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b66:	2b04      	cmp	r3, #4
 8003b68:	d107      	bne.n	8003b7a <I2C_RequestMemoryRead+0x11e>
 8003b6a:	68fb      	ldr	r3, [r7, #12]
 8003b6c:	681b      	ldr	r3, [r3, #0]
 8003b6e:	681a      	ldr	r2, [r3, #0]
 8003b70:	68fb      	ldr	r3, [r7, #12]
 8003b72:	681b      	ldr	r3, [r3, #0]
 8003b74:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003b78:	601a      	str	r2, [r3, #0]
 8003b7a:	2301      	movs	r3, #1
 8003b7c:	e050      	b.n	8003c20 <I2C_RequestMemoryRead+0x1c4>
 8003b7e:	893b      	ldrh	r3, [r7, #8]
 8003b80:	b2da      	uxtb	r2, r3
 8003b82:	68fb      	ldr	r3, [r7, #12]
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	611a      	str	r2, [r3, #16]
 8003b88:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003b8a:	6a39      	ldr	r1, [r7, #32]
 8003b8c:	68f8      	ldr	r0, [r7, #12]
 8003b8e:	f000 f967 	bl	8003e60 <I2C_WaitOnTXEFlagUntilTimeout>
 8003b92:	4603      	mov	r3, r0
 8003b94:	2b00      	cmp	r3, #0
 8003b96:	d00d      	beq.n	8003bb4 <I2C_RequestMemoryRead+0x158>
 8003b98:	68fb      	ldr	r3, [r7, #12]
 8003b9a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b9c:	2b04      	cmp	r3, #4
 8003b9e:	d107      	bne.n	8003bb0 <I2C_RequestMemoryRead+0x154>
 8003ba0:	68fb      	ldr	r3, [r7, #12]
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	681a      	ldr	r2, [r3, #0]
 8003ba6:	68fb      	ldr	r3, [r7, #12]
 8003ba8:	681b      	ldr	r3, [r3, #0]
 8003baa:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003bae:	601a      	str	r2, [r3, #0]
 8003bb0:	2301      	movs	r3, #1
 8003bb2:	e035      	b.n	8003c20 <I2C_RequestMemoryRead+0x1c4>
 8003bb4:	68fb      	ldr	r3, [r7, #12]
 8003bb6:	681b      	ldr	r3, [r3, #0]
 8003bb8:	681a      	ldr	r2, [r3, #0]
 8003bba:	68fb      	ldr	r3, [r7, #12]
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003bc2:	601a      	str	r2, [r3, #0]
 8003bc4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003bc6:	9300      	str	r3, [sp, #0]
 8003bc8:	6a3b      	ldr	r3, [r7, #32]
 8003bca:	2200      	movs	r2, #0
 8003bcc:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003bd0:	68f8      	ldr	r0, [r7, #12]
 8003bd2:	f000 f82b 	bl	8003c2c <I2C_WaitOnFlagUntilTimeout>
 8003bd6:	4603      	mov	r3, r0
 8003bd8:	2b00      	cmp	r3, #0
 8003bda:	d00d      	beq.n	8003bf8 <I2C_RequestMemoryRead+0x19c>
 8003bdc:	68fb      	ldr	r3, [r7, #12]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	681b      	ldr	r3, [r3, #0]
 8003be2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003be6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003bea:	d103      	bne.n	8003bf4 <I2C_RequestMemoryRead+0x198>
 8003bec:	68fb      	ldr	r3, [r7, #12]
 8003bee:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003bf2:	641a      	str	r2, [r3, #64]	@ 0x40
 8003bf4:	2303      	movs	r3, #3
 8003bf6:	e013      	b.n	8003c20 <I2C_RequestMemoryRead+0x1c4>
 8003bf8:	897b      	ldrh	r3, [r7, #10]
 8003bfa:	b2db      	uxtb	r3, r3
 8003bfc:	f043 0301 	orr.w	r3, r3, #1
 8003c00:	b2da      	uxtb	r2, r3
 8003c02:	68fb      	ldr	r3, [r7, #12]
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	611a      	str	r2, [r3, #16]
 8003c08:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003c0a:	6a3a      	ldr	r2, [r7, #32]
 8003c0c:	4906      	ldr	r1, [pc, #24]	@ (8003c28 <I2C_RequestMemoryRead+0x1cc>)
 8003c0e:	68f8      	ldr	r0, [r7, #12]
 8003c10:	f000 f886 	bl	8003d20 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003c14:	4603      	mov	r3, r0
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	d001      	beq.n	8003c1e <I2C_RequestMemoryRead+0x1c2>
 8003c1a:	2301      	movs	r3, #1
 8003c1c:	e000      	b.n	8003c20 <I2C_RequestMemoryRead+0x1c4>
 8003c1e:	2300      	movs	r3, #0
 8003c20:	4618      	mov	r0, r3
 8003c22:	3718      	adds	r7, #24
 8003c24:	46bd      	mov	sp, r7
 8003c26:	bd80      	pop	{r7, pc}
 8003c28:	00010002 	.word	0x00010002

08003c2c <I2C_WaitOnFlagUntilTimeout>:
 8003c2c:	b580      	push	{r7, lr}
 8003c2e:	b084      	sub	sp, #16
 8003c30:	af00      	add	r7, sp, #0
 8003c32:	60f8      	str	r0, [r7, #12]
 8003c34:	60b9      	str	r1, [r7, #8]
 8003c36:	603b      	str	r3, [r7, #0]
 8003c38:	4613      	mov	r3, r2
 8003c3a:	71fb      	strb	r3, [r7, #7]
 8003c3c:	e048      	b.n	8003cd0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003c3e:	683b      	ldr	r3, [r7, #0]
 8003c40:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003c44:	d044      	beq.n	8003cd0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003c46:	f7fe fdcd 	bl	80027e4 <HAL_GetTick>
 8003c4a:	4602      	mov	r2, r0
 8003c4c:	69bb      	ldr	r3, [r7, #24]
 8003c4e:	1ad3      	subs	r3, r2, r3
 8003c50:	683a      	ldr	r2, [r7, #0]
 8003c52:	429a      	cmp	r2, r3
 8003c54:	d302      	bcc.n	8003c5c <I2C_WaitOnFlagUntilTimeout+0x30>
 8003c56:	683b      	ldr	r3, [r7, #0]
 8003c58:	2b00      	cmp	r3, #0
 8003c5a:	d139      	bne.n	8003cd0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003c5c:	68bb      	ldr	r3, [r7, #8]
 8003c5e:	0c1b      	lsrs	r3, r3, #16
 8003c60:	b2db      	uxtb	r3, r3
 8003c62:	2b01      	cmp	r3, #1
 8003c64:	d10d      	bne.n	8003c82 <I2C_WaitOnFlagUntilTimeout+0x56>
 8003c66:	68fb      	ldr	r3, [r7, #12]
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	695b      	ldr	r3, [r3, #20]
 8003c6c:	43da      	mvns	r2, r3
 8003c6e:	68bb      	ldr	r3, [r7, #8]
 8003c70:	4013      	ands	r3, r2
 8003c72:	b29b      	uxth	r3, r3
 8003c74:	2b00      	cmp	r3, #0
 8003c76:	bf0c      	ite	eq
 8003c78:	2301      	moveq	r3, #1
 8003c7a:	2300      	movne	r3, #0
 8003c7c:	b2db      	uxtb	r3, r3
 8003c7e:	461a      	mov	r2, r3
 8003c80:	e00c      	b.n	8003c9c <I2C_WaitOnFlagUntilTimeout+0x70>
 8003c82:	68fb      	ldr	r3, [r7, #12]
 8003c84:	681b      	ldr	r3, [r3, #0]
 8003c86:	699b      	ldr	r3, [r3, #24]
 8003c88:	43da      	mvns	r2, r3
 8003c8a:	68bb      	ldr	r3, [r7, #8]
 8003c8c:	4013      	ands	r3, r2
 8003c8e:	b29b      	uxth	r3, r3
 8003c90:	2b00      	cmp	r3, #0
 8003c92:	bf0c      	ite	eq
 8003c94:	2301      	moveq	r3, #1
 8003c96:	2300      	movne	r3, #0
 8003c98:	b2db      	uxtb	r3, r3
 8003c9a:	461a      	mov	r2, r3
 8003c9c:	79fb      	ldrb	r3, [r7, #7]
 8003c9e:	429a      	cmp	r2, r3
 8003ca0:	d116      	bne.n	8003cd0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003ca2:	68fb      	ldr	r3, [r7, #12]
 8003ca4:	2200      	movs	r2, #0
 8003ca6:	631a      	str	r2, [r3, #48]	@ 0x30
 8003ca8:	68fb      	ldr	r3, [r7, #12]
 8003caa:	2220      	movs	r2, #32
 8003cac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003cb0:	68fb      	ldr	r3, [r7, #12]
 8003cb2:	2200      	movs	r2, #0
 8003cb4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003cb8:	68fb      	ldr	r3, [r7, #12]
 8003cba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003cbc:	f043 0220 	orr.w	r2, r3, #32
 8003cc0:	68fb      	ldr	r3, [r7, #12]
 8003cc2:	641a      	str	r2, [r3, #64]	@ 0x40
 8003cc4:	68fb      	ldr	r3, [r7, #12]
 8003cc6:	2200      	movs	r2, #0
 8003cc8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003ccc:	2301      	movs	r3, #1
 8003cce:	e023      	b.n	8003d18 <I2C_WaitOnFlagUntilTimeout+0xec>
 8003cd0:	68bb      	ldr	r3, [r7, #8]
 8003cd2:	0c1b      	lsrs	r3, r3, #16
 8003cd4:	b2db      	uxtb	r3, r3
 8003cd6:	2b01      	cmp	r3, #1
 8003cd8:	d10d      	bne.n	8003cf6 <I2C_WaitOnFlagUntilTimeout+0xca>
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	695b      	ldr	r3, [r3, #20]
 8003ce0:	43da      	mvns	r2, r3
 8003ce2:	68bb      	ldr	r3, [r7, #8]
 8003ce4:	4013      	ands	r3, r2
 8003ce6:	b29b      	uxth	r3, r3
 8003ce8:	2b00      	cmp	r3, #0
 8003cea:	bf0c      	ite	eq
 8003cec:	2301      	moveq	r3, #1
 8003cee:	2300      	movne	r3, #0
 8003cf0:	b2db      	uxtb	r3, r3
 8003cf2:	461a      	mov	r2, r3
 8003cf4:	e00c      	b.n	8003d10 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8003cf6:	68fb      	ldr	r3, [r7, #12]
 8003cf8:	681b      	ldr	r3, [r3, #0]
 8003cfa:	699b      	ldr	r3, [r3, #24]
 8003cfc:	43da      	mvns	r2, r3
 8003cfe:	68bb      	ldr	r3, [r7, #8]
 8003d00:	4013      	ands	r3, r2
 8003d02:	b29b      	uxth	r3, r3
 8003d04:	2b00      	cmp	r3, #0
 8003d06:	bf0c      	ite	eq
 8003d08:	2301      	moveq	r3, #1
 8003d0a:	2300      	movne	r3, #0
 8003d0c:	b2db      	uxtb	r3, r3
 8003d0e:	461a      	mov	r2, r3
 8003d10:	79fb      	ldrb	r3, [r7, #7]
 8003d12:	429a      	cmp	r2, r3
 8003d14:	d093      	beq.n	8003c3e <I2C_WaitOnFlagUntilTimeout+0x12>
 8003d16:	2300      	movs	r3, #0
 8003d18:	4618      	mov	r0, r3
 8003d1a:	3710      	adds	r7, #16
 8003d1c:	46bd      	mov	sp, r7
 8003d1e:	bd80      	pop	{r7, pc}

08003d20 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8003d20:	b580      	push	{r7, lr}
 8003d22:	b084      	sub	sp, #16
 8003d24:	af00      	add	r7, sp, #0
 8003d26:	60f8      	str	r0, [r7, #12]
 8003d28:	60b9      	str	r1, [r7, #8]
 8003d2a:	607a      	str	r2, [r7, #4]
 8003d2c:	603b      	str	r3, [r7, #0]
 8003d2e:	e071      	b.n	8003e14 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003d30:	68fb      	ldr	r3, [r7, #12]
 8003d32:	681b      	ldr	r3, [r3, #0]
 8003d34:	695b      	ldr	r3, [r3, #20]
 8003d36:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003d3a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003d3e:	d123      	bne.n	8003d88 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8003d40:	68fb      	ldr	r3, [r7, #12]
 8003d42:	681b      	ldr	r3, [r3, #0]
 8003d44:	681a      	ldr	r2, [r3, #0]
 8003d46:	68fb      	ldr	r3, [r7, #12]
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003d4e:	601a      	str	r2, [r3, #0]
 8003d50:	68fb      	ldr	r3, [r7, #12]
 8003d52:	681b      	ldr	r3, [r3, #0]
 8003d54:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8003d58:	615a      	str	r2, [r3, #20]
 8003d5a:	68fb      	ldr	r3, [r7, #12]
 8003d5c:	2200      	movs	r2, #0
 8003d5e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d60:	68fb      	ldr	r3, [r7, #12]
 8003d62:	2220      	movs	r2, #32
 8003d64:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d68:	68fb      	ldr	r3, [r7, #12]
 8003d6a:	2200      	movs	r2, #0
 8003d6c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003d70:	68fb      	ldr	r3, [r7, #12]
 8003d72:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003d74:	f043 0204 	orr.w	r2, r3, #4
 8003d78:	68fb      	ldr	r3, [r7, #12]
 8003d7a:	641a      	str	r2, [r3, #64]	@ 0x40
 8003d7c:	68fb      	ldr	r3, [r7, #12]
 8003d7e:	2200      	movs	r2, #0
 8003d80:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003d84:	2301      	movs	r3, #1
 8003d86:	e067      	b.n	8003e58 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003d88:	687b      	ldr	r3, [r7, #4]
 8003d8a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003d8e:	d041      	beq.n	8003e14 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003d90:	f7fe fd28 	bl	80027e4 <HAL_GetTick>
 8003d94:	4602      	mov	r2, r0
 8003d96:	683b      	ldr	r3, [r7, #0]
 8003d98:	1ad3      	subs	r3, r2, r3
 8003d9a:	687a      	ldr	r2, [r7, #4]
 8003d9c:	429a      	cmp	r2, r3
 8003d9e:	d302      	bcc.n	8003da6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8003da0:	687b      	ldr	r3, [r7, #4]
 8003da2:	2b00      	cmp	r3, #0
 8003da4:	d136      	bne.n	8003e14 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003da6:	68bb      	ldr	r3, [r7, #8]
 8003da8:	0c1b      	lsrs	r3, r3, #16
 8003daa:	b2db      	uxtb	r3, r3
 8003dac:	2b01      	cmp	r3, #1
 8003dae:	d10c      	bne.n	8003dca <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8003db0:	68fb      	ldr	r3, [r7, #12]
 8003db2:	681b      	ldr	r3, [r3, #0]
 8003db4:	695b      	ldr	r3, [r3, #20]
 8003db6:	43da      	mvns	r2, r3
 8003db8:	68bb      	ldr	r3, [r7, #8]
 8003dba:	4013      	ands	r3, r2
 8003dbc:	b29b      	uxth	r3, r3
 8003dbe:	2b00      	cmp	r3, #0
 8003dc0:	bf14      	ite	ne
 8003dc2:	2301      	movne	r3, #1
 8003dc4:	2300      	moveq	r3, #0
 8003dc6:	b2db      	uxtb	r3, r3
 8003dc8:	e00b      	b.n	8003de2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8003dca:	68fb      	ldr	r3, [r7, #12]
 8003dcc:	681b      	ldr	r3, [r3, #0]
 8003dce:	699b      	ldr	r3, [r3, #24]
 8003dd0:	43da      	mvns	r2, r3
 8003dd2:	68bb      	ldr	r3, [r7, #8]
 8003dd4:	4013      	ands	r3, r2
 8003dd6:	b29b      	uxth	r3, r3
 8003dd8:	2b00      	cmp	r3, #0
 8003dda:	bf14      	ite	ne
 8003ddc:	2301      	movne	r3, #1
 8003dde:	2300      	moveq	r3, #0
 8003de0:	b2db      	uxtb	r3, r3
 8003de2:	2b00      	cmp	r3, #0
 8003de4:	d016      	beq.n	8003e14 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003de6:	68fb      	ldr	r3, [r7, #12]
 8003de8:	2200      	movs	r2, #0
 8003dea:	631a      	str	r2, [r3, #48]	@ 0x30
 8003dec:	68fb      	ldr	r3, [r7, #12]
 8003dee:	2220      	movs	r2, #32
 8003df0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003df4:	68fb      	ldr	r3, [r7, #12]
 8003df6:	2200      	movs	r2, #0
 8003df8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003dfc:	68fb      	ldr	r3, [r7, #12]
 8003dfe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003e00:	f043 0220 	orr.w	r2, r3, #32
 8003e04:	68fb      	ldr	r3, [r7, #12]
 8003e06:	641a      	str	r2, [r3, #64]	@ 0x40
 8003e08:	68fb      	ldr	r3, [r7, #12]
 8003e0a:	2200      	movs	r2, #0
 8003e0c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003e10:	2301      	movs	r3, #1
 8003e12:	e021      	b.n	8003e58 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003e14:	68bb      	ldr	r3, [r7, #8]
 8003e16:	0c1b      	lsrs	r3, r3, #16
 8003e18:	b2db      	uxtb	r3, r3
 8003e1a:	2b01      	cmp	r3, #1
 8003e1c:	d10c      	bne.n	8003e38 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8003e1e:	68fb      	ldr	r3, [r7, #12]
 8003e20:	681b      	ldr	r3, [r3, #0]
 8003e22:	695b      	ldr	r3, [r3, #20]
 8003e24:	43da      	mvns	r2, r3
 8003e26:	68bb      	ldr	r3, [r7, #8]
 8003e28:	4013      	ands	r3, r2
 8003e2a:	b29b      	uxth	r3, r3
 8003e2c:	2b00      	cmp	r3, #0
 8003e2e:	bf14      	ite	ne
 8003e30:	2301      	movne	r3, #1
 8003e32:	2300      	moveq	r3, #0
 8003e34:	b2db      	uxtb	r3, r3
 8003e36:	e00b      	b.n	8003e50 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8003e38:	68fb      	ldr	r3, [r7, #12]
 8003e3a:	681b      	ldr	r3, [r3, #0]
 8003e3c:	699b      	ldr	r3, [r3, #24]
 8003e3e:	43da      	mvns	r2, r3
 8003e40:	68bb      	ldr	r3, [r7, #8]
 8003e42:	4013      	ands	r3, r2
 8003e44:	b29b      	uxth	r3, r3
 8003e46:	2b00      	cmp	r3, #0
 8003e48:	bf14      	ite	ne
 8003e4a:	2301      	movne	r3, #1
 8003e4c:	2300      	moveq	r3, #0
 8003e4e:	b2db      	uxtb	r3, r3
 8003e50:	2b00      	cmp	r3, #0
 8003e52:	f47f af6d 	bne.w	8003d30 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8003e56:	2300      	movs	r3, #0
 8003e58:	4618      	mov	r0, r3
 8003e5a:	3710      	adds	r7, #16
 8003e5c:	46bd      	mov	sp, r7
 8003e5e:	bd80      	pop	{r7, pc}

08003e60 <I2C_WaitOnTXEFlagUntilTimeout>:
 8003e60:	b580      	push	{r7, lr}
 8003e62:	b084      	sub	sp, #16
 8003e64:	af00      	add	r7, sp, #0
 8003e66:	60f8      	str	r0, [r7, #12]
 8003e68:	60b9      	str	r1, [r7, #8]
 8003e6a:	607a      	str	r2, [r7, #4]
 8003e6c:	e034      	b.n	8003ed8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003e6e:	68f8      	ldr	r0, [r7, #12]
 8003e70:	f000 f8e3 	bl	800403a <I2C_IsAcknowledgeFailed>
 8003e74:	4603      	mov	r3, r0
 8003e76:	2b00      	cmp	r3, #0
 8003e78:	d001      	beq.n	8003e7e <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8003e7a:	2301      	movs	r3, #1
 8003e7c:	e034      	b.n	8003ee8 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003e7e:	68bb      	ldr	r3, [r7, #8]
 8003e80:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003e84:	d028      	beq.n	8003ed8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003e86:	f7fe fcad 	bl	80027e4 <HAL_GetTick>
 8003e8a:	4602      	mov	r2, r0
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	1ad3      	subs	r3, r2, r3
 8003e90:	68ba      	ldr	r2, [r7, #8]
 8003e92:	429a      	cmp	r2, r3
 8003e94:	d302      	bcc.n	8003e9c <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8003e96:	68bb      	ldr	r3, [r7, #8]
 8003e98:	2b00      	cmp	r3, #0
 8003e9a:	d11d      	bne.n	8003ed8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003e9c:	68fb      	ldr	r3, [r7, #12]
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	695b      	ldr	r3, [r3, #20]
 8003ea2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003ea6:	2b80      	cmp	r3, #128	@ 0x80
 8003ea8:	d016      	beq.n	8003ed8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003eaa:	68fb      	ldr	r3, [r7, #12]
 8003eac:	2200      	movs	r2, #0
 8003eae:	631a      	str	r2, [r3, #48]	@ 0x30
 8003eb0:	68fb      	ldr	r3, [r7, #12]
 8003eb2:	2220      	movs	r2, #32
 8003eb4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003eb8:	68fb      	ldr	r3, [r7, #12]
 8003eba:	2200      	movs	r2, #0
 8003ebc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003ec0:	68fb      	ldr	r3, [r7, #12]
 8003ec2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ec4:	f043 0220 	orr.w	r2, r3, #32
 8003ec8:	68fb      	ldr	r3, [r7, #12]
 8003eca:	641a      	str	r2, [r3, #64]	@ 0x40
 8003ecc:	68fb      	ldr	r3, [r7, #12]
 8003ece:	2200      	movs	r2, #0
 8003ed0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003ed4:	2301      	movs	r3, #1
 8003ed6:	e007      	b.n	8003ee8 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003ed8:	68fb      	ldr	r3, [r7, #12]
 8003eda:	681b      	ldr	r3, [r3, #0]
 8003edc:	695b      	ldr	r3, [r3, #20]
 8003ede:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003ee2:	2b80      	cmp	r3, #128	@ 0x80
 8003ee4:	d1c3      	bne.n	8003e6e <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8003ee6:	2300      	movs	r3, #0
 8003ee8:	4618      	mov	r0, r3
 8003eea:	3710      	adds	r7, #16
 8003eec:	46bd      	mov	sp, r7
 8003eee:	bd80      	pop	{r7, pc}

08003ef0 <I2C_WaitOnBTFFlagUntilTimeout>:
 8003ef0:	b580      	push	{r7, lr}
 8003ef2:	b084      	sub	sp, #16
 8003ef4:	af00      	add	r7, sp, #0
 8003ef6:	60f8      	str	r0, [r7, #12]
 8003ef8:	60b9      	str	r1, [r7, #8]
 8003efa:	607a      	str	r2, [r7, #4]
 8003efc:	e034      	b.n	8003f68 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003efe:	68f8      	ldr	r0, [r7, #12]
 8003f00:	f000 f89b 	bl	800403a <I2C_IsAcknowledgeFailed>
 8003f04:	4603      	mov	r3, r0
 8003f06:	2b00      	cmp	r3, #0
 8003f08:	d001      	beq.n	8003f0e <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8003f0a:	2301      	movs	r3, #1
 8003f0c:	e034      	b.n	8003f78 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8003f0e:	68bb      	ldr	r3, [r7, #8]
 8003f10:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003f14:	d028      	beq.n	8003f68 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003f16:	f7fe fc65 	bl	80027e4 <HAL_GetTick>
 8003f1a:	4602      	mov	r2, r0
 8003f1c:	687b      	ldr	r3, [r7, #4]
 8003f1e:	1ad3      	subs	r3, r2, r3
 8003f20:	68ba      	ldr	r2, [r7, #8]
 8003f22:	429a      	cmp	r2, r3
 8003f24:	d302      	bcc.n	8003f2c <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8003f26:	68bb      	ldr	r3, [r7, #8]
 8003f28:	2b00      	cmp	r3, #0
 8003f2a:	d11d      	bne.n	8003f68 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003f2c:	68fb      	ldr	r3, [r7, #12]
 8003f2e:	681b      	ldr	r3, [r3, #0]
 8003f30:	695b      	ldr	r3, [r3, #20]
 8003f32:	f003 0304 	and.w	r3, r3, #4
 8003f36:	2b04      	cmp	r3, #4
 8003f38:	d016      	beq.n	8003f68 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003f3a:	68fb      	ldr	r3, [r7, #12]
 8003f3c:	2200      	movs	r2, #0
 8003f3e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003f40:	68fb      	ldr	r3, [r7, #12]
 8003f42:	2220      	movs	r2, #32
 8003f44:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003f48:	68fb      	ldr	r3, [r7, #12]
 8003f4a:	2200      	movs	r2, #0
 8003f4c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003f54:	f043 0220 	orr.w	r2, r3, #32
 8003f58:	68fb      	ldr	r3, [r7, #12]
 8003f5a:	641a      	str	r2, [r3, #64]	@ 0x40
 8003f5c:	68fb      	ldr	r3, [r7, #12]
 8003f5e:	2200      	movs	r2, #0
 8003f60:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003f64:	2301      	movs	r3, #1
 8003f66:	e007      	b.n	8003f78 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8003f68:	68fb      	ldr	r3, [r7, #12]
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	695b      	ldr	r3, [r3, #20]
 8003f6e:	f003 0304 	and.w	r3, r3, #4
 8003f72:	2b04      	cmp	r3, #4
 8003f74:	d1c3      	bne.n	8003efe <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8003f76:	2300      	movs	r3, #0
 8003f78:	4618      	mov	r0, r3
 8003f7a:	3710      	adds	r7, #16
 8003f7c:	46bd      	mov	sp, r7
 8003f7e:	bd80      	pop	{r7, pc}

08003f80 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8003f80:	b580      	push	{r7, lr}
 8003f82:	b084      	sub	sp, #16
 8003f84:	af00      	add	r7, sp, #0
 8003f86:	60f8      	str	r0, [r7, #12]
 8003f88:	60b9      	str	r1, [r7, #8]
 8003f8a:	607a      	str	r2, [r7, #4]
 8003f8c:	e049      	b.n	8004022 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003f8e:	68fb      	ldr	r3, [r7, #12]
 8003f90:	681b      	ldr	r3, [r3, #0]
 8003f92:	695b      	ldr	r3, [r3, #20]
 8003f94:	f003 0310 	and.w	r3, r3, #16
 8003f98:	2b10      	cmp	r3, #16
 8003f9a:	d119      	bne.n	8003fd0 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8003f9c:	68fb      	ldr	r3, [r7, #12]
 8003f9e:	681b      	ldr	r3, [r3, #0]
 8003fa0:	f06f 0210 	mvn.w	r2, #16
 8003fa4:	615a      	str	r2, [r3, #20]
 8003fa6:	68fb      	ldr	r3, [r7, #12]
 8003fa8:	2200      	movs	r2, #0
 8003faa:	631a      	str	r2, [r3, #48]	@ 0x30
 8003fac:	68fb      	ldr	r3, [r7, #12]
 8003fae:	2220      	movs	r2, #32
 8003fb0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	2200      	movs	r2, #0
 8003fb8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003fbc:	68fb      	ldr	r3, [r7, #12]
 8003fbe:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8003fc0:	68fb      	ldr	r3, [r7, #12]
 8003fc2:	641a      	str	r2, [r3, #64]	@ 0x40
 8003fc4:	68fb      	ldr	r3, [r7, #12]
 8003fc6:	2200      	movs	r2, #0
 8003fc8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003fcc:	2301      	movs	r3, #1
 8003fce:	e030      	b.n	8004032 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8003fd0:	f7fe fc08 	bl	80027e4 <HAL_GetTick>
 8003fd4:	4602      	mov	r2, r0
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	1ad3      	subs	r3, r2, r3
 8003fda:	68ba      	ldr	r2, [r7, #8]
 8003fdc:	429a      	cmp	r2, r3
 8003fde:	d302      	bcc.n	8003fe6 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8003fe0:	68bb      	ldr	r3, [r7, #8]
 8003fe2:	2b00      	cmp	r3, #0
 8003fe4:	d11d      	bne.n	8004022 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003fe6:	68fb      	ldr	r3, [r7, #12]
 8003fe8:	681b      	ldr	r3, [r3, #0]
 8003fea:	695b      	ldr	r3, [r3, #20]
 8003fec:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003ff0:	2b40      	cmp	r3, #64	@ 0x40
 8003ff2:	d016      	beq.n	8004022 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003ff4:	68fb      	ldr	r3, [r7, #12]
 8003ff6:	2200      	movs	r2, #0
 8003ff8:	631a      	str	r2, [r3, #48]	@ 0x30
 8003ffa:	68fb      	ldr	r3, [r7, #12]
 8003ffc:	2220      	movs	r2, #32
 8003ffe:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004002:	68fb      	ldr	r3, [r7, #12]
 8004004:	2200      	movs	r2, #0
 8004006:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800400a:	68fb      	ldr	r3, [r7, #12]
 800400c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800400e:	f043 0220 	orr.w	r2, r3, #32
 8004012:	68fb      	ldr	r3, [r7, #12]
 8004014:	641a      	str	r2, [r3, #64]	@ 0x40
 8004016:	68fb      	ldr	r3, [r7, #12]
 8004018:	2200      	movs	r2, #0
 800401a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800401e:	2301      	movs	r3, #1
 8004020:	e007      	b.n	8004032 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	681b      	ldr	r3, [r3, #0]
 8004026:	695b      	ldr	r3, [r3, #20]
 8004028:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800402c:	2b40      	cmp	r3, #64	@ 0x40
 800402e:	d1ae      	bne.n	8003f8e <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8004030:	2300      	movs	r3, #0
 8004032:	4618      	mov	r0, r3
 8004034:	3710      	adds	r7, #16
 8004036:	46bd      	mov	sp, r7
 8004038:	bd80      	pop	{r7, pc}

0800403a <I2C_IsAcknowledgeFailed>:
 800403a:	b480      	push	{r7}
 800403c:	b083      	sub	sp, #12
 800403e:	af00      	add	r7, sp, #0
 8004040:	6078      	str	r0, [r7, #4]
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	681b      	ldr	r3, [r3, #0]
 8004046:	695b      	ldr	r3, [r3, #20]
 8004048:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800404c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004050:	d11b      	bne.n	800408a <I2C_IsAcknowledgeFailed+0x50>
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	681b      	ldr	r3, [r3, #0]
 8004056:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800405a:	615a      	str	r2, [r3, #20]
 800405c:	687b      	ldr	r3, [r7, #4]
 800405e:	2200      	movs	r2, #0
 8004060:	631a      	str	r2, [r3, #48]	@ 0x30
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	2220      	movs	r2, #32
 8004066:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	2200      	movs	r2, #0
 800406e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004072:	687b      	ldr	r3, [r7, #4]
 8004074:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004076:	f043 0204 	orr.w	r2, r3, #4
 800407a:	687b      	ldr	r3, [r7, #4]
 800407c:	641a      	str	r2, [r3, #64]	@ 0x40
 800407e:	687b      	ldr	r3, [r7, #4]
 8004080:	2200      	movs	r2, #0
 8004082:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004086:	2301      	movs	r3, #1
 8004088:	e000      	b.n	800408c <I2C_IsAcknowledgeFailed+0x52>
 800408a:	2300      	movs	r3, #0
 800408c:	4618      	mov	r0, r3
 800408e:	370c      	adds	r7, #12
 8004090:	46bd      	mov	sp, r7
 8004092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004096:	4770      	bx	lr

08004098 <HAL_RCC_ClockConfig>:
 8004098:	b580      	push	{r7, lr}
 800409a:	b084      	sub	sp, #16
 800409c:	af00      	add	r7, sp, #0
 800409e:	6078      	str	r0, [r7, #4]
 80040a0:	6039      	str	r1, [r7, #0]
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	2b00      	cmp	r3, #0
 80040a6:	d101      	bne.n	80040ac <HAL_RCC_ClockConfig+0x14>
 80040a8:	2301      	movs	r3, #1
 80040aa:	e0cc      	b.n	8004246 <HAL_RCC_ClockConfig+0x1ae>
 80040ac:	4b68      	ldr	r3, [pc, #416]	@ (8004250 <HAL_RCC_ClockConfig+0x1b8>)
 80040ae:	681b      	ldr	r3, [r3, #0]
 80040b0:	f003 030f 	and.w	r3, r3, #15
 80040b4:	683a      	ldr	r2, [r7, #0]
 80040b6:	429a      	cmp	r2, r3
 80040b8:	d90c      	bls.n	80040d4 <HAL_RCC_ClockConfig+0x3c>
 80040ba:	4b65      	ldr	r3, [pc, #404]	@ (8004250 <HAL_RCC_ClockConfig+0x1b8>)
 80040bc:	683a      	ldr	r2, [r7, #0]
 80040be:	b2d2      	uxtb	r2, r2
 80040c0:	701a      	strb	r2, [r3, #0]
 80040c2:	4b63      	ldr	r3, [pc, #396]	@ (8004250 <HAL_RCC_ClockConfig+0x1b8>)
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	f003 030f 	and.w	r3, r3, #15
 80040ca:	683a      	ldr	r2, [r7, #0]
 80040cc:	429a      	cmp	r2, r3
 80040ce:	d001      	beq.n	80040d4 <HAL_RCC_ClockConfig+0x3c>
 80040d0:	2301      	movs	r3, #1
 80040d2:	e0b8      	b.n	8004246 <HAL_RCC_ClockConfig+0x1ae>
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	681b      	ldr	r3, [r3, #0]
 80040d8:	f003 0302 	and.w	r3, r3, #2
 80040dc:	2b00      	cmp	r3, #0
 80040de:	d020      	beq.n	8004122 <HAL_RCC_ClockConfig+0x8a>
 80040e0:	687b      	ldr	r3, [r7, #4]
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	f003 0304 	and.w	r3, r3, #4
 80040e8:	2b00      	cmp	r3, #0
 80040ea:	d005      	beq.n	80040f8 <HAL_RCC_ClockConfig+0x60>
 80040ec:	4b59      	ldr	r3, [pc, #356]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 80040ee:	689b      	ldr	r3, [r3, #8]
 80040f0:	4a58      	ldr	r2, [pc, #352]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 80040f2:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80040f6:	6093      	str	r3, [r2, #8]
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	681b      	ldr	r3, [r3, #0]
 80040fc:	f003 0308 	and.w	r3, r3, #8
 8004100:	2b00      	cmp	r3, #0
 8004102:	d005      	beq.n	8004110 <HAL_RCC_ClockConfig+0x78>
 8004104:	4b53      	ldr	r3, [pc, #332]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 8004106:	689b      	ldr	r3, [r3, #8]
 8004108:	4a52      	ldr	r2, [pc, #328]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 800410a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800410e:	6093      	str	r3, [r2, #8]
 8004110:	4b50      	ldr	r3, [pc, #320]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 8004112:	689b      	ldr	r3, [r3, #8]
 8004114:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004118:	687b      	ldr	r3, [r7, #4]
 800411a:	689b      	ldr	r3, [r3, #8]
 800411c:	494d      	ldr	r1, [pc, #308]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 800411e:	4313      	orrs	r3, r2
 8004120:	608b      	str	r3, [r1, #8]
 8004122:	687b      	ldr	r3, [r7, #4]
 8004124:	681b      	ldr	r3, [r3, #0]
 8004126:	f003 0301 	and.w	r3, r3, #1
 800412a:	2b00      	cmp	r3, #0
 800412c:	d044      	beq.n	80041b8 <HAL_RCC_ClockConfig+0x120>
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	685b      	ldr	r3, [r3, #4]
 8004132:	2b01      	cmp	r3, #1
 8004134:	d107      	bne.n	8004146 <HAL_RCC_ClockConfig+0xae>
 8004136:	4b47      	ldr	r3, [pc, #284]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 8004138:	681b      	ldr	r3, [r3, #0]
 800413a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800413e:	2b00      	cmp	r3, #0
 8004140:	d119      	bne.n	8004176 <HAL_RCC_ClockConfig+0xde>
 8004142:	2301      	movs	r3, #1
 8004144:	e07f      	b.n	8004246 <HAL_RCC_ClockConfig+0x1ae>
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	685b      	ldr	r3, [r3, #4]
 800414a:	2b02      	cmp	r3, #2
 800414c:	d003      	beq.n	8004156 <HAL_RCC_ClockConfig+0xbe>
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	685b      	ldr	r3, [r3, #4]
 8004152:	2b03      	cmp	r3, #3
 8004154:	d107      	bne.n	8004166 <HAL_RCC_ClockConfig+0xce>
 8004156:	4b3f      	ldr	r3, [pc, #252]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800415e:	2b00      	cmp	r3, #0
 8004160:	d109      	bne.n	8004176 <HAL_RCC_ClockConfig+0xde>
 8004162:	2301      	movs	r3, #1
 8004164:	e06f      	b.n	8004246 <HAL_RCC_ClockConfig+0x1ae>
 8004166:	4b3b      	ldr	r3, [pc, #236]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 8004168:	681b      	ldr	r3, [r3, #0]
 800416a:	f003 0302 	and.w	r3, r3, #2
 800416e:	2b00      	cmp	r3, #0
 8004170:	d101      	bne.n	8004176 <HAL_RCC_ClockConfig+0xde>
 8004172:	2301      	movs	r3, #1
 8004174:	e067      	b.n	8004246 <HAL_RCC_ClockConfig+0x1ae>
 8004176:	4b37      	ldr	r3, [pc, #220]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 8004178:	689b      	ldr	r3, [r3, #8]
 800417a:	f023 0203 	bic.w	r2, r3, #3
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	685b      	ldr	r3, [r3, #4]
 8004182:	4934      	ldr	r1, [pc, #208]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 8004184:	4313      	orrs	r3, r2
 8004186:	608b      	str	r3, [r1, #8]
 8004188:	f7fe fb2c 	bl	80027e4 <HAL_GetTick>
 800418c:	60f8      	str	r0, [r7, #12]
 800418e:	e00a      	b.n	80041a6 <HAL_RCC_ClockConfig+0x10e>
 8004190:	f7fe fb28 	bl	80027e4 <HAL_GetTick>
 8004194:	4602      	mov	r2, r0
 8004196:	68fb      	ldr	r3, [r7, #12]
 8004198:	1ad3      	subs	r3, r2, r3
 800419a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800419e:	4293      	cmp	r3, r2
 80041a0:	d901      	bls.n	80041a6 <HAL_RCC_ClockConfig+0x10e>
 80041a2:	2303      	movs	r3, #3
 80041a4:	e04f      	b.n	8004246 <HAL_RCC_ClockConfig+0x1ae>
 80041a6:	4b2b      	ldr	r3, [pc, #172]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 80041a8:	689b      	ldr	r3, [r3, #8]
 80041aa:	f003 020c 	and.w	r2, r3, #12
 80041ae:	687b      	ldr	r3, [r7, #4]
 80041b0:	685b      	ldr	r3, [r3, #4]
 80041b2:	009b      	lsls	r3, r3, #2
 80041b4:	429a      	cmp	r2, r3
 80041b6:	d1eb      	bne.n	8004190 <HAL_RCC_ClockConfig+0xf8>
 80041b8:	4b25      	ldr	r3, [pc, #148]	@ (8004250 <HAL_RCC_ClockConfig+0x1b8>)
 80041ba:	681b      	ldr	r3, [r3, #0]
 80041bc:	f003 030f 	and.w	r3, r3, #15
 80041c0:	683a      	ldr	r2, [r7, #0]
 80041c2:	429a      	cmp	r2, r3
 80041c4:	d20c      	bcs.n	80041e0 <HAL_RCC_ClockConfig+0x148>
 80041c6:	4b22      	ldr	r3, [pc, #136]	@ (8004250 <HAL_RCC_ClockConfig+0x1b8>)
 80041c8:	683a      	ldr	r2, [r7, #0]
 80041ca:	b2d2      	uxtb	r2, r2
 80041cc:	701a      	strb	r2, [r3, #0]
 80041ce:	4b20      	ldr	r3, [pc, #128]	@ (8004250 <HAL_RCC_ClockConfig+0x1b8>)
 80041d0:	681b      	ldr	r3, [r3, #0]
 80041d2:	f003 030f 	and.w	r3, r3, #15
 80041d6:	683a      	ldr	r2, [r7, #0]
 80041d8:	429a      	cmp	r2, r3
 80041da:	d001      	beq.n	80041e0 <HAL_RCC_ClockConfig+0x148>
 80041dc:	2301      	movs	r3, #1
 80041de:	e032      	b.n	8004246 <HAL_RCC_ClockConfig+0x1ae>
 80041e0:	687b      	ldr	r3, [r7, #4]
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	f003 0304 	and.w	r3, r3, #4
 80041e8:	2b00      	cmp	r3, #0
 80041ea:	d008      	beq.n	80041fe <HAL_RCC_ClockConfig+0x166>
 80041ec:	4b19      	ldr	r3, [pc, #100]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 80041ee:	689b      	ldr	r3, [r3, #8]
 80041f0:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	68db      	ldr	r3, [r3, #12]
 80041f8:	4916      	ldr	r1, [pc, #88]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 80041fa:	4313      	orrs	r3, r2
 80041fc:	608b      	str	r3, [r1, #8]
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	f003 0308 	and.w	r3, r3, #8
 8004206:	2b00      	cmp	r3, #0
 8004208:	d009      	beq.n	800421e <HAL_RCC_ClockConfig+0x186>
 800420a:	4b12      	ldr	r3, [pc, #72]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 800420c:	689b      	ldr	r3, [r3, #8]
 800420e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004212:	687b      	ldr	r3, [r7, #4]
 8004214:	691b      	ldr	r3, [r3, #16]
 8004216:	00db      	lsls	r3, r3, #3
 8004218:	490e      	ldr	r1, [pc, #56]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 800421a:	4313      	orrs	r3, r2
 800421c:	608b      	str	r3, [r1, #8]
 800421e:	f000 f841 	bl	80042a4 <HAL_RCC_GetSysClockFreq>
 8004222:	4602      	mov	r2, r0
 8004224:	4b0b      	ldr	r3, [pc, #44]	@ (8004254 <HAL_RCC_ClockConfig+0x1bc>)
 8004226:	689b      	ldr	r3, [r3, #8]
 8004228:	091b      	lsrs	r3, r3, #4
 800422a:	f003 030f 	and.w	r3, r3, #15
 800422e:	490a      	ldr	r1, [pc, #40]	@ (8004258 <HAL_RCC_ClockConfig+0x1c0>)
 8004230:	5ccb      	ldrb	r3, [r1, r3]
 8004232:	fa22 f303 	lsr.w	r3, r2, r3
 8004236:	4a09      	ldr	r2, [pc, #36]	@ (800425c <HAL_RCC_ClockConfig+0x1c4>)
 8004238:	6013      	str	r3, [r2, #0]
 800423a:	4b09      	ldr	r3, [pc, #36]	@ (8004260 <HAL_RCC_ClockConfig+0x1c8>)
 800423c:	681b      	ldr	r3, [r3, #0]
 800423e:	4618      	mov	r0, r3
 8004240:	f7fe fa8c 	bl	800275c <HAL_InitTick>
 8004244:	2300      	movs	r3, #0
 8004246:	4618      	mov	r0, r3
 8004248:	3710      	adds	r7, #16
 800424a:	46bd      	mov	sp, r7
 800424c:	bd80      	pop	{r7, pc}
 800424e:	bf00      	nop
 8004250:	40023c00 	.word	0x40023c00
 8004254:	40023800 	.word	0x40023800
 8004258:	08006488 	.word	0x08006488
 800425c:	20000028 	.word	0x20000028
 8004260:	2000002c 	.word	0x2000002c

08004264 <HAL_RCC_GetHCLKFreq>:
 8004264:	b480      	push	{r7}
 8004266:	af00      	add	r7, sp, #0
 8004268:	4b03      	ldr	r3, [pc, #12]	@ (8004278 <HAL_RCC_GetHCLKFreq+0x14>)
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	4618      	mov	r0, r3
 800426e:	46bd      	mov	sp, r7
 8004270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004274:	4770      	bx	lr
 8004276:	bf00      	nop
 8004278:	20000028 	.word	0x20000028

0800427c <HAL_RCC_GetPCLK1Freq>:
 800427c:	b580      	push	{r7, lr}
 800427e:	af00      	add	r7, sp, #0
 8004280:	f7ff fff0 	bl	8004264 <HAL_RCC_GetHCLKFreq>
 8004284:	4602      	mov	r2, r0
 8004286:	4b05      	ldr	r3, [pc, #20]	@ (800429c <HAL_RCC_GetPCLK1Freq+0x20>)
 8004288:	689b      	ldr	r3, [r3, #8]
 800428a:	0a9b      	lsrs	r3, r3, #10
 800428c:	f003 0307 	and.w	r3, r3, #7
 8004290:	4903      	ldr	r1, [pc, #12]	@ (80042a0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004292:	5ccb      	ldrb	r3, [r1, r3]
 8004294:	fa22 f303 	lsr.w	r3, r2, r3
 8004298:	4618      	mov	r0, r3
 800429a:	bd80      	pop	{r7, pc}
 800429c:	40023800 	.word	0x40023800
 80042a0:	08006498 	.word	0x08006498

080042a4 <HAL_RCC_GetSysClockFreq>:
 80042a4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80042a8:	b0a6      	sub	sp, #152	@ 0x98
 80042aa:	af00      	add	r7, sp, #0
 80042ac:	2300      	movs	r3, #0
 80042ae:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80042b2:	2300      	movs	r3, #0
 80042b4:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80042b8:	2300      	movs	r3, #0
 80042ba:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80042be:	2300      	movs	r3, #0
 80042c0:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80042c4:	2300      	movs	r3, #0
 80042c6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80042ca:	4bc8      	ldr	r3, [pc, #800]	@ (80045ec <HAL_RCC_GetSysClockFreq+0x348>)
 80042cc:	689b      	ldr	r3, [r3, #8]
 80042ce:	f003 030c 	and.w	r3, r3, #12
 80042d2:	2b0c      	cmp	r3, #12
 80042d4:	f200 817e 	bhi.w	80045d4 <HAL_RCC_GetSysClockFreq+0x330>
 80042d8:	a201      	add	r2, pc, #4	@ (adr r2, 80042e0 <HAL_RCC_GetSysClockFreq+0x3c>)
 80042da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80042de:	bf00      	nop
 80042e0:	08004315 	.word	0x08004315
 80042e4:	080045d5 	.word	0x080045d5
 80042e8:	080045d5 	.word	0x080045d5
 80042ec:	080045d5 	.word	0x080045d5
 80042f0:	0800431d 	.word	0x0800431d
 80042f4:	080045d5 	.word	0x080045d5
 80042f8:	080045d5 	.word	0x080045d5
 80042fc:	080045d5 	.word	0x080045d5
 8004300:	08004325 	.word	0x08004325
 8004304:	080045d5 	.word	0x080045d5
 8004308:	080045d5 	.word	0x080045d5
 800430c:	080045d5 	.word	0x080045d5
 8004310:	0800448f 	.word	0x0800448f
 8004314:	4bb6      	ldr	r3, [pc, #728]	@ (80045f0 <HAL_RCC_GetSysClockFreq+0x34c>)
 8004316:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800431a:	e15f      	b.n	80045dc <HAL_RCC_GetSysClockFreq+0x338>
 800431c:	4bb5      	ldr	r3, [pc, #724]	@ (80045f4 <HAL_RCC_GetSysClockFreq+0x350>)
 800431e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004322:	e15b      	b.n	80045dc <HAL_RCC_GetSysClockFreq+0x338>
 8004324:	4bb1      	ldr	r3, [pc, #708]	@ (80045ec <HAL_RCC_GetSysClockFreq+0x348>)
 8004326:	685b      	ldr	r3, [r3, #4]
 8004328:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800432c:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004330:	4bae      	ldr	r3, [pc, #696]	@ (80045ec <HAL_RCC_GetSysClockFreq+0x348>)
 8004332:	685b      	ldr	r3, [r3, #4]
 8004334:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004338:	2b00      	cmp	r3, #0
 800433a:	d031      	beq.n	80043a0 <HAL_RCC_GetSysClockFreq+0xfc>
 800433c:	4bab      	ldr	r3, [pc, #684]	@ (80045ec <HAL_RCC_GetSysClockFreq+0x348>)
 800433e:	685b      	ldr	r3, [r3, #4]
 8004340:	099b      	lsrs	r3, r3, #6
 8004342:	2200      	movs	r2, #0
 8004344:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004346:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8004348:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800434a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800434e:	663b      	str	r3, [r7, #96]	@ 0x60
 8004350:	2300      	movs	r3, #0
 8004352:	667b      	str	r3, [r7, #100]	@ 0x64
 8004354:	4ba7      	ldr	r3, [pc, #668]	@ (80045f4 <HAL_RCC_GetSysClockFreq+0x350>)
 8004356:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 800435a:	462a      	mov	r2, r5
 800435c:	fb03 f202 	mul.w	r2, r3, r2
 8004360:	2300      	movs	r3, #0
 8004362:	4621      	mov	r1, r4
 8004364:	fb01 f303 	mul.w	r3, r1, r3
 8004368:	4413      	add	r3, r2
 800436a:	4aa2      	ldr	r2, [pc, #648]	@ (80045f4 <HAL_RCC_GetSysClockFreq+0x350>)
 800436c:	4621      	mov	r1, r4
 800436e:	fba1 1202 	umull	r1, r2, r1, r2
 8004372:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8004374:	460a      	mov	r2, r1
 8004376:	67ba      	str	r2, [r7, #120]	@ 0x78
 8004378:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 800437a:	4413      	add	r3, r2
 800437c:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800437e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004382:	2200      	movs	r2, #0
 8004384:	65bb      	str	r3, [r7, #88]	@ 0x58
 8004386:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8004388:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800438c:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8004390:	f7fc fc3e 	bl	8000c10 <__aeabi_uldivmod>
 8004394:	4602      	mov	r2, r0
 8004396:	460b      	mov	r3, r1
 8004398:	4613      	mov	r3, r2
 800439a:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800439e:	e064      	b.n	800446a <HAL_RCC_GetSysClockFreq+0x1c6>
 80043a0:	4b92      	ldr	r3, [pc, #584]	@ (80045ec <HAL_RCC_GetSysClockFreq+0x348>)
 80043a2:	685b      	ldr	r3, [r3, #4]
 80043a4:	099b      	lsrs	r3, r3, #6
 80043a6:	2200      	movs	r2, #0
 80043a8:	653b      	str	r3, [r7, #80]	@ 0x50
 80043aa:	657a      	str	r2, [r7, #84]	@ 0x54
 80043ac:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80043ae:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80043b2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80043b4:	2300      	movs	r3, #0
 80043b6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80043b8:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	@ 0x48
 80043bc:	4622      	mov	r2, r4
 80043be:	462b      	mov	r3, r5
 80043c0:	f04f 0000 	mov.w	r0, #0
 80043c4:	f04f 0100 	mov.w	r1, #0
 80043c8:	0159      	lsls	r1, r3, #5
 80043ca:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80043ce:	0150      	lsls	r0, r2, #5
 80043d0:	4602      	mov	r2, r0
 80043d2:	460b      	mov	r3, r1
 80043d4:	4621      	mov	r1, r4
 80043d6:	1a51      	subs	r1, r2, r1
 80043d8:	6139      	str	r1, [r7, #16]
 80043da:	4629      	mov	r1, r5
 80043dc:	eb63 0301 	sbc.w	r3, r3, r1
 80043e0:	617b      	str	r3, [r7, #20]
 80043e2:	f04f 0200 	mov.w	r2, #0
 80043e6:	f04f 0300 	mov.w	r3, #0
 80043ea:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80043ee:	4659      	mov	r1, fp
 80043f0:	018b      	lsls	r3, r1, #6
 80043f2:	4651      	mov	r1, sl
 80043f4:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80043f8:	4651      	mov	r1, sl
 80043fa:	018a      	lsls	r2, r1, #6
 80043fc:	4651      	mov	r1, sl
 80043fe:	ebb2 0801 	subs.w	r8, r2, r1
 8004402:	4659      	mov	r1, fp
 8004404:	eb63 0901 	sbc.w	r9, r3, r1
 8004408:	f04f 0200 	mov.w	r2, #0
 800440c:	f04f 0300 	mov.w	r3, #0
 8004410:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004414:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004418:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800441c:	4690      	mov	r8, r2
 800441e:	4699      	mov	r9, r3
 8004420:	4623      	mov	r3, r4
 8004422:	eb18 0303 	adds.w	r3, r8, r3
 8004426:	60bb      	str	r3, [r7, #8]
 8004428:	462b      	mov	r3, r5
 800442a:	eb49 0303 	adc.w	r3, r9, r3
 800442e:	60fb      	str	r3, [r7, #12]
 8004430:	f04f 0200 	mov.w	r2, #0
 8004434:	f04f 0300 	mov.w	r3, #0
 8004438:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 800443c:	4629      	mov	r1, r5
 800443e:	028b      	lsls	r3, r1, #10
 8004440:	4621      	mov	r1, r4
 8004442:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004446:	4621      	mov	r1, r4
 8004448:	028a      	lsls	r2, r1, #10
 800444a:	4610      	mov	r0, r2
 800444c:	4619      	mov	r1, r3
 800444e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004452:	2200      	movs	r2, #0
 8004454:	643b      	str	r3, [r7, #64]	@ 0x40
 8004456:	647a      	str	r2, [r7, #68]	@ 0x44
 8004458:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800445c:	f7fc fbd8 	bl	8000c10 <__aeabi_uldivmod>
 8004460:	4602      	mov	r2, r0
 8004462:	460b      	mov	r3, r1
 8004464:	4613      	mov	r3, r2
 8004466:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800446a:	4b60      	ldr	r3, [pc, #384]	@ (80045ec <HAL_RCC_GetSysClockFreq+0x348>)
 800446c:	685b      	ldr	r3, [r3, #4]
 800446e:	0c1b      	lsrs	r3, r3, #16
 8004470:	f003 0303 	and.w	r3, r3, #3
 8004474:	3301      	adds	r3, #1
 8004476:	005b      	lsls	r3, r3, #1
 8004478:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800447c:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8004480:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8004484:	fbb2 f3f3 	udiv	r3, r2, r3
 8004488:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800448c:	e0a6      	b.n	80045dc <HAL_RCC_GetSysClockFreq+0x338>
 800448e:	4b57      	ldr	r3, [pc, #348]	@ (80045ec <HAL_RCC_GetSysClockFreq+0x348>)
 8004490:	685b      	ldr	r3, [r3, #4]
 8004492:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8004496:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800449a:	4b54      	ldr	r3, [pc, #336]	@ (80045ec <HAL_RCC_GetSysClockFreq+0x348>)
 800449c:	685b      	ldr	r3, [r3, #4]
 800449e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80044a2:	2b00      	cmp	r3, #0
 80044a4:	d02a      	beq.n	80044fc <HAL_RCC_GetSysClockFreq+0x258>
 80044a6:	4b51      	ldr	r3, [pc, #324]	@ (80045ec <HAL_RCC_GetSysClockFreq+0x348>)
 80044a8:	685b      	ldr	r3, [r3, #4]
 80044aa:	099b      	lsrs	r3, r3, #6
 80044ac:	2200      	movs	r2, #0
 80044ae:	63bb      	str	r3, [r7, #56]	@ 0x38
 80044b0:	63fa      	str	r2, [r7, #60]	@ 0x3c
 80044b2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80044b4:	f3c3 0008 	ubfx	r0, r3, #0, #9
 80044b8:	2100      	movs	r1, #0
 80044ba:	4b4e      	ldr	r3, [pc, #312]	@ (80045f4 <HAL_RCC_GetSysClockFreq+0x350>)
 80044bc:	fb03 f201 	mul.w	r2, r3, r1
 80044c0:	2300      	movs	r3, #0
 80044c2:	fb00 f303 	mul.w	r3, r0, r3
 80044c6:	4413      	add	r3, r2
 80044c8:	4a4a      	ldr	r2, [pc, #296]	@ (80045f4 <HAL_RCC_GetSysClockFreq+0x350>)
 80044ca:	fba0 1202 	umull	r1, r2, r0, r2
 80044ce:	677a      	str	r2, [r7, #116]	@ 0x74
 80044d0:	460a      	mov	r2, r1
 80044d2:	673a      	str	r2, [r7, #112]	@ 0x70
 80044d4:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 80044d6:	4413      	add	r3, r2
 80044d8:	677b      	str	r3, [r7, #116]	@ 0x74
 80044da:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80044de:	2200      	movs	r2, #0
 80044e0:	633b      	str	r3, [r7, #48]	@ 0x30
 80044e2:	637a      	str	r2, [r7, #52]	@ 0x34
 80044e4:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 80044e8:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 80044ec:	f7fc fb90 	bl	8000c10 <__aeabi_uldivmod>
 80044f0:	4602      	mov	r2, r0
 80044f2:	460b      	mov	r3, r1
 80044f4:	4613      	mov	r3, r2
 80044f6:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80044fa:	e05b      	b.n	80045b4 <HAL_RCC_GetSysClockFreq+0x310>
 80044fc:	4b3b      	ldr	r3, [pc, #236]	@ (80045ec <HAL_RCC_GetSysClockFreq+0x348>)
 80044fe:	685b      	ldr	r3, [r3, #4]
 8004500:	099b      	lsrs	r3, r3, #6
 8004502:	2200      	movs	r2, #0
 8004504:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004506:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004508:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800450a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800450e:	623b      	str	r3, [r7, #32]
 8004510:	2300      	movs	r3, #0
 8004512:	627b      	str	r3, [r7, #36]	@ 0x24
 8004514:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8004518:	4642      	mov	r2, r8
 800451a:	464b      	mov	r3, r9
 800451c:	f04f 0000 	mov.w	r0, #0
 8004520:	f04f 0100 	mov.w	r1, #0
 8004524:	0159      	lsls	r1, r3, #5
 8004526:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800452a:	0150      	lsls	r0, r2, #5
 800452c:	4602      	mov	r2, r0
 800452e:	460b      	mov	r3, r1
 8004530:	4641      	mov	r1, r8
 8004532:	ebb2 0a01 	subs.w	sl, r2, r1
 8004536:	4649      	mov	r1, r9
 8004538:	eb63 0b01 	sbc.w	fp, r3, r1
 800453c:	f04f 0200 	mov.w	r2, #0
 8004540:	f04f 0300 	mov.w	r3, #0
 8004544:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8004548:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 800454c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8004550:	ebb2 040a 	subs.w	r4, r2, sl
 8004554:	eb63 050b 	sbc.w	r5, r3, fp
 8004558:	f04f 0200 	mov.w	r2, #0
 800455c:	f04f 0300 	mov.w	r3, #0
 8004560:	00eb      	lsls	r3, r5, #3
 8004562:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004566:	00e2      	lsls	r2, r4, #3
 8004568:	4614      	mov	r4, r2
 800456a:	461d      	mov	r5, r3
 800456c:	4643      	mov	r3, r8
 800456e:	18e3      	adds	r3, r4, r3
 8004570:	603b      	str	r3, [r7, #0]
 8004572:	464b      	mov	r3, r9
 8004574:	eb45 0303 	adc.w	r3, r5, r3
 8004578:	607b      	str	r3, [r7, #4]
 800457a:	f04f 0200 	mov.w	r2, #0
 800457e:	f04f 0300 	mov.w	r3, #0
 8004582:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004586:	4629      	mov	r1, r5
 8004588:	028b      	lsls	r3, r1, #10
 800458a:	4621      	mov	r1, r4
 800458c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004590:	4621      	mov	r1, r4
 8004592:	028a      	lsls	r2, r1, #10
 8004594:	4610      	mov	r0, r2
 8004596:	4619      	mov	r1, r3
 8004598:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800459c:	2200      	movs	r2, #0
 800459e:	61bb      	str	r3, [r7, #24]
 80045a0:	61fa      	str	r2, [r7, #28]
 80045a2:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80045a6:	f7fc fb33 	bl	8000c10 <__aeabi_uldivmod>
 80045aa:	4602      	mov	r2, r0
 80045ac:	460b      	mov	r3, r1
 80045ae:	4613      	mov	r3, r2
 80045b0:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80045b4:	4b0d      	ldr	r3, [pc, #52]	@ (80045ec <HAL_RCC_GetSysClockFreq+0x348>)
 80045b6:	685b      	ldr	r3, [r3, #4]
 80045b8:	0f1b      	lsrs	r3, r3, #28
 80045ba:	f003 0307 	and.w	r3, r3, #7
 80045be:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80045c2:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80045c6:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80045ca:	fbb2 f3f3 	udiv	r3, r2, r3
 80045ce:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80045d2:	e003      	b.n	80045dc <HAL_RCC_GetSysClockFreq+0x338>
 80045d4:	4b06      	ldr	r3, [pc, #24]	@ (80045f0 <HAL_RCC_GetSysClockFreq+0x34c>)
 80045d6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80045da:	bf00      	nop
 80045dc:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 80045e0:	4618      	mov	r0, r3
 80045e2:	3798      	adds	r7, #152	@ 0x98
 80045e4:	46bd      	mov	sp, r7
 80045e6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80045ea:	bf00      	nop
 80045ec:	40023800 	.word	0x40023800
 80045f0:	00f42400 	.word	0x00f42400
 80045f4:	017d7840 	.word	0x017d7840

080045f8 <HAL_RCC_OscConfig>:
 80045f8:	b580      	push	{r7, lr}
 80045fa:	b086      	sub	sp, #24
 80045fc:	af00      	add	r7, sp, #0
 80045fe:	6078      	str	r0, [r7, #4]
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	2b00      	cmp	r3, #0
 8004604:	d101      	bne.n	800460a <HAL_RCC_OscConfig+0x12>
 8004606:	2301      	movs	r3, #1
 8004608:	e28d      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 800460a:	687b      	ldr	r3, [r7, #4]
 800460c:	681b      	ldr	r3, [r3, #0]
 800460e:	f003 0301 	and.w	r3, r3, #1
 8004612:	2b00      	cmp	r3, #0
 8004614:	f000 8083 	beq.w	800471e <HAL_RCC_OscConfig+0x126>
 8004618:	4b94      	ldr	r3, [pc, #592]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 800461a:	689b      	ldr	r3, [r3, #8]
 800461c:	f003 030c 	and.w	r3, r3, #12
 8004620:	2b04      	cmp	r3, #4
 8004622:	d019      	beq.n	8004658 <HAL_RCC_OscConfig+0x60>
 8004624:	4b91      	ldr	r3, [pc, #580]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004626:	689b      	ldr	r3, [r3, #8]
 8004628:	f003 030c 	and.w	r3, r3, #12
 800462c:	2b08      	cmp	r3, #8
 800462e:	d106      	bne.n	800463e <HAL_RCC_OscConfig+0x46>
 8004630:	4b8e      	ldr	r3, [pc, #568]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004632:	685b      	ldr	r3, [r3, #4]
 8004634:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004638:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800463c:	d00c      	beq.n	8004658 <HAL_RCC_OscConfig+0x60>
 800463e:	4b8b      	ldr	r3, [pc, #556]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004640:	689b      	ldr	r3, [r3, #8]
 8004642:	f003 030c 	and.w	r3, r3, #12
 8004646:	2b0c      	cmp	r3, #12
 8004648:	d112      	bne.n	8004670 <HAL_RCC_OscConfig+0x78>
 800464a:	4b88      	ldr	r3, [pc, #544]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 800464c:	685b      	ldr	r3, [r3, #4]
 800464e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004652:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004656:	d10b      	bne.n	8004670 <HAL_RCC_OscConfig+0x78>
 8004658:	4b84      	ldr	r3, [pc, #528]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 800465a:	681b      	ldr	r3, [r3, #0]
 800465c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004660:	2b00      	cmp	r3, #0
 8004662:	d05b      	beq.n	800471c <HAL_RCC_OscConfig+0x124>
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	685b      	ldr	r3, [r3, #4]
 8004668:	2b00      	cmp	r3, #0
 800466a:	d157      	bne.n	800471c <HAL_RCC_OscConfig+0x124>
 800466c:	2301      	movs	r3, #1
 800466e:	e25a      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	685b      	ldr	r3, [r3, #4]
 8004674:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004678:	d106      	bne.n	8004688 <HAL_RCC_OscConfig+0x90>
 800467a:	4b7c      	ldr	r3, [pc, #496]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 800467c:	681b      	ldr	r3, [r3, #0]
 800467e:	4a7b      	ldr	r2, [pc, #492]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004680:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004684:	6013      	str	r3, [r2, #0]
 8004686:	e01d      	b.n	80046c4 <HAL_RCC_OscConfig+0xcc>
 8004688:	687b      	ldr	r3, [r7, #4]
 800468a:	685b      	ldr	r3, [r3, #4]
 800468c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004690:	d10c      	bne.n	80046ac <HAL_RCC_OscConfig+0xb4>
 8004692:	4b76      	ldr	r3, [pc, #472]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004694:	681b      	ldr	r3, [r3, #0]
 8004696:	4a75      	ldr	r2, [pc, #468]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004698:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800469c:	6013      	str	r3, [r2, #0]
 800469e:	4b73      	ldr	r3, [pc, #460]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 80046a0:	681b      	ldr	r3, [r3, #0]
 80046a2:	4a72      	ldr	r2, [pc, #456]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 80046a4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80046a8:	6013      	str	r3, [r2, #0]
 80046aa:	e00b      	b.n	80046c4 <HAL_RCC_OscConfig+0xcc>
 80046ac:	4b6f      	ldr	r3, [pc, #444]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 80046ae:	681b      	ldr	r3, [r3, #0]
 80046b0:	4a6e      	ldr	r2, [pc, #440]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 80046b2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80046b6:	6013      	str	r3, [r2, #0]
 80046b8:	4b6c      	ldr	r3, [pc, #432]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 80046ba:	681b      	ldr	r3, [r3, #0]
 80046bc:	4a6b      	ldr	r2, [pc, #428]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 80046be:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80046c2:	6013      	str	r3, [r2, #0]
 80046c4:	687b      	ldr	r3, [r7, #4]
 80046c6:	685b      	ldr	r3, [r3, #4]
 80046c8:	2b00      	cmp	r3, #0
 80046ca:	d013      	beq.n	80046f4 <HAL_RCC_OscConfig+0xfc>
 80046cc:	f7fe f88a 	bl	80027e4 <HAL_GetTick>
 80046d0:	6138      	str	r0, [r7, #16]
 80046d2:	e008      	b.n	80046e6 <HAL_RCC_OscConfig+0xee>
 80046d4:	f7fe f886 	bl	80027e4 <HAL_GetTick>
 80046d8:	4602      	mov	r2, r0
 80046da:	693b      	ldr	r3, [r7, #16]
 80046dc:	1ad3      	subs	r3, r2, r3
 80046de:	2b64      	cmp	r3, #100	@ 0x64
 80046e0:	d901      	bls.n	80046e6 <HAL_RCC_OscConfig+0xee>
 80046e2:	2303      	movs	r3, #3
 80046e4:	e21f      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 80046e6:	4b61      	ldr	r3, [pc, #388]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80046ee:	2b00      	cmp	r3, #0
 80046f0:	d0f0      	beq.n	80046d4 <HAL_RCC_OscConfig+0xdc>
 80046f2:	e014      	b.n	800471e <HAL_RCC_OscConfig+0x126>
 80046f4:	f7fe f876 	bl	80027e4 <HAL_GetTick>
 80046f8:	6138      	str	r0, [r7, #16]
 80046fa:	e008      	b.n	800470e <HAL_RCC_OscConfig+0x116>
 80046fc:	f7fe f872 	bl	80027e4 <HAL_GetTick>
 8004700:	4602      	mov	r2, r0
 8004702:	693b      	ldr	r3, [r7, #16]
 8004704:	1ad3      	subs	r3, r2, r3
 8004706:	2b64      	cmp	r3, #100	@ 0x64
 8004708:	d901      	bls.n	800470e <HAL_RCC_OscConfig+0x116>
 800470a:	2303      	movs	r3, #3
 800470c:	e20b      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 800470e:	4b57      	ldr	r3, [pc, #348]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004710:	681b      	ldr	r3, [r3, #0]
 8004712:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004716:	2b00      	cmp	r3, #0
 8004718:	d1f0      	bne.n	80046fc <HAL_RCC_OscConfig+0x104>
 800471a:	e000      	b.n	800471e <HAL_RCC_OscConfig+0x126>
 800471c:	bf00      	nop
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	f003 0302 	and.w	r3, r3, #2
 8004726:	2b00      	cmp	r3, #0
 8004728:	d06f      	beq.n	800480a <HAL_RCC_OscConfig+0x212>
 800472a:	4b50      	ldr	r3, [pc, #320]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 800472c:	689b      	ldr	r3, [r3, #8]
 800472e:	f003 030c 	and.w	r3, r3, #12
 8004732:	2b00      	cmp	r3, #0
 8004734:	d017      	beq.n	8004766 <HAL_RCC_OscConfig+0x16e>
 8004736:	4b4d      	ldr	r3, [pc, #308]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004738:	689b      	ldr	r3, [r3, #8]
 800473a:	f003 030c 	and.w	r3, r3, #12
 800473e:	2b08      	cmp	r3, #8
 8004740:	d105      	bne.n	800474e <HAL_RCC_OscConfig+0x156>
 8004742:	4b4a      	ldr	r3, [pc, #296]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004744:	685b      	ldr	r3, [r3, #4]
 8004746:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800474a:	2b00      	cmp	r3, #0
 800474c:	d00b      	beq.n	8004766 <HAL_RCC_OscConfig+0x16e>
 800474e:	4b47      	ldr	r3, [pc, #284]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004750:	689b      	ldr	r3, [r3, #8]
 8004752:	f003 030c 	and.w	r3, r3, #12
 8004756:	2b0c      	cmp	r3, #12
 8004758:	d11c      	bne.n	8004794 <HAL_RCC_OscConfig+0x19c>
 800475a:	4b44      	ldr	r3, [pc, #272]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 800475c:	685b      	ldr	r3, [r3, #4]
 800475e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004762:	2b00      	cmp	r3, #0
 8004764:	d116      	bne.n	8004794 <HAL_RCC_OscConfig+0x19c>
 8004766:	4b41      	ldr	r3, [pc, #260]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004768:	681b      	ldr	r3, [r3, #0]
 800476a:	f003 0302 	and.w	r3, r3, #2
 800476e:	2b00      	cmp	r3, #0
 8004770:	d005      	beq.n	800477e <HAL_RCC_OscConfig+0x186>
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	68db      	ldr	r3, [r3, #12]
 8004776:	2b01      	cmp	r3, #1
 8004778:	d001      	beq.n	800477e <HAL_RCC_OscConfig+0x186>
 800477a:	2301      	movs	r3, #1
 800477c:	e1d3      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 800477e:	4b3b      	ldr	r3, [pc, #236]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004780:	681b      	ldr	r3, [r3, #0]
 8004782:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	691b      	ldr	r3, [r3, #16]
 800478a:	00db      	lsls	r3, r3, #3
 800478c:	4937      	ldr	r1, [pc, #220]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 800478e:	4313      	orrs	r3, r2
 8004790:	600b      	str	r3, [r1, #0]
 8004792:	e03a      	b.n	800480a <HAL_RCC_OscConfig+0x212>
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	68db      	ldr	r3, [r3, #12]
 8004798:	2b00      	cmp	r3, #0
 800479a:	d020      	beq.n	80047de <HAL_RCC_OscConfig+0x1e6>
 800479c:	4b34      	ldr	r3, [pc, #208]	@ (8004870 <HAL_RCC_OscConfig+0x278>)
 800479e:	2201      	movs	r2, #1
 80047a0:	601a      	str	r2, [r3, #0]
 80047a2:	f7fe f81f 	bl	80027e4 <HAL_GetTick>
 80047a6:	6138      	str	r0, [r7, #16]
 80047a8:	e008      	b.n	80047bc <HAL_RCC_OscConfig+0x1c4>
 80047aa:	f7fe f81b 	bl	80027e4 <HAL_GetTick>
 80047ae:	4602      	mov	r2, r0
 80047b0:	693b      	ldr	r3, [r7, #16]
 80047b2:	1ad3      	subs	r3, r2, r3
 80047b4:	2b02      	cmp	r3, #2
 80047b6:	d901      	bls.n	80047bc <HAL_RCC_OscConfig+0x1c4>
 80047b8:	2303      	movs	r3, #3
 80047ba:	e1b4      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 80047bc:	4b2b      	ldr	r3, [pc, #172]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 80047be:	681b      	ldr	r3, [r3, #0]
 80047c0:	f003 0302 	and.w	r3, r3, #2
 80047c4:	2b00      	cmp	r3, #0
 80047c6:	d0f0      	beq.n	80047aa <HAL_RCC_OscConfig+0x1b2>
 80047c8:	4b28      	ldr	r3, [pc, #160]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 80047ca:	681b      	ldr	r3, [r3, #0]
 80047cc:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	691b      	ldr	r3, [r3, #16]
 80047d4:	00db      	lsls	r3, r3, #3
 80047d6:	4925      	ldr	r1, [pc, #148]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 80047d8:	4313      	orrs	r3, r2
 80047da:	600b      	str	r3, [r1, #0]
 80047dc:	e015      	b.n	800480a <HAL_RCC_OscConfig+0x212>
 80047de:	4b24      	ldr	r3, [pc, #144]	@ (8004870 <HAL_RCC_OscConfig+0x278>)
 80047e0:	2200      	movs	r2, #0
 80047e2:	601a      	str	r2, [r3, #0]
 80047e4:	f7fd fffe 	bl	80027e4 <HAL_GetTick>
 80047e8:	6138      	str	r0, [r7, #16]
 80047ea:	e008      	b.n	80047fe <HAL_RCC_OscConfig+0x206>
 80047ec:	f7fd fffa 	bl	80027e4 <HAL_GetTick>
 80047f0:	4602      	mov	r2, r0
 80047f2:	693b      	ldr	r3, [r7, #16]
 80047f4:	1ad3      	subs	r3, r2, r3
 80047f6:	2b02      	cmp	r3, #2
 80047f8:	d901      	bls.n	80047fe <HAL_RCC_OscConfig+0x206>
 80047fa:	2303      	movs	r3, #3
 80047fc:	e193      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 80047fe:	4b1b      	ldr	r3, [pc, #108]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004800:	681b      	ldr	r3, [r3, #0]
 8004802:	f003 0302 	and.w	r3, r3, #2
 8004806:	2b00      	cmp	r3, #0
 8004808:	d1f0      	bne.n	80047ec <HAL_RCC_OscConfig+0x1f4>
 800480a:	687b      	ldr	r3, [r7, #4]
 800480c:	681b      	ldr	r3, [r3, #0]
 800480e:	f003 0308 	and.w	r3, r3, #8
 8004812:	2b00      	cmp	r3, #0
 8004814:	d036      	beq.n	8004884 <HAL_RCC_OscConfig+0x28c>
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	695b      	ldr	r3, [r3, #20]
 800481a:	2b00      	cmp	r3, #0
 800481c:	d016      	beq.n	800484c <HAL_RCC_OscConfig+0x254>
 800481e:	4b15      	ldr	r3, [pc, #84]	@ (8004874 <HAL_RCC_OscConfig+0x27c>)
 8004820:	2201      	movs	r2, #1
 8004822:	601a      	str	r2, [r3, #0]
 8004824:	f7fd ffde 	bl	80027e4 <HAL_GetTick>
 8004828:	6138      	str	r0, [r7, #16]
 800482a:	e008      	b.n	800483e <HAL_RCC_OscConfig+0x246>
 800482c:	f7fd ffda 	bl	80027e4 <HAL_GetTick>
 8004830:	4602      	mov	r2, r0
 8004832:	693b      	ldr	r3, [r7, #16]
 8004834:	1ad3      	subs	r3, r2, r3
 8004836:	2b02      	cmp	r3, #2
 8004838:	d901      	bls.n	800483e <HAL_RCC_OscConfig+0x246>
 800483a:	2303      	movs	r3, #3
 800483c:	e173      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 800483e:	4b0b      	ldr	r3, [pc, #44]	@ (800486c <HAL_RCC_OscConfig+0x274>)
 8004840:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004842:	f003 0302 	and.w	r3, r3, #2
 8004846:	2b00      	cmp	r3, #0
 8004848:	d0f0      	beq.n	800482c <HAL_RCC_OscConfig+0x234>
 800484a:	e01b      	b.n	8004884 <HAL_RCC_OscConfig+0x28c>
 800484c:	4b09      	ldr	r3, [pc, #36]	@ (8004874 <HAL_RCC_OscConfig+0x27c>)
 800484e:	2200      	movs	r2, #0
 8004850:	601a      	str	r2, [r3, #0]
 8004852:	f7fd ffc7 	bl	80027e4 <HAL_GetTick>
 8004856:	6138      	str	r0, [r7, #16]
 8004858:	e00e      	b.n	8004878 <HAL_RCC_OscConfig+0x280>
 800485a:	f7fd ffc3 	bl	80027e4 <HAL_GetTick>
 800485e:	4602      	mov	r2, r0
 8004860:	693b      	ldr	r3, [r7, #16]
 8004862:	1ad3      	subs	r3, r2, r3
 8004864:	2b02      	cmp	r3, #2
 8004866:	d907      	bls.n	8004878 <HAL_RCC_OscConfig+0x280>
 8004868:	2303      	movs	r3, #3
 800486a:	e15c      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 800486c:	40023800 	.word	0x40023800
 8004870:	42470000 	.word	0x42470000
 8004874:	42470e80 	.word	0x42470e80
 8004878:	4b8a      	ldr	r3, [pc, #552]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 800487a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800487c:	f003 0302 	and.w	r3, r3, #2
 8004880:	2b00      	cmp	r3, #0
 8004882:	d1ea      	bne.n	800485a <HAL_RCC_OscConfig+0x262>
 8004884:	687b      	ldr	r3, [r7, #4]
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	f003 0304 	and.w	r3, r3, #4
 800488c:	2b00      	cmp	r3, #0
 800488e:	f000 8097 	beq.w	80049c0 <HAL_RCC_OscConfig+0x3c8>
 8004892:	2300      	movs	r3, #0
 8004894:	75fb      	strb	r3, [r7, #23]
 8004896:	4b83      	ldr	r3, [pc, #524]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 8004898:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800489a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800489e:	2b00      	cmp	r3, #0
 80048a0:	d10f      	bne.n	80048c2 <HAL_RCC_OscConfig+0x2ca>
 80048a2:	2300      	movs	r3, #0
 80048a4:	60bb      	str	r3, [r7, #8]
 80048a6:	4b7f      	ldr	r3, [pc, #508]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 80048a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80048aa:	4a7e      	ldr	r2, [pc, #504]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 80048ac:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80048b0:	6413      	str	r3, [r2, #64]	@ 0x40
 80048b2:	4b7c      	ldr	r3, [pc, #496]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 80048b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80048b6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80048ba:	60bb      	str	r3, [r7, #8]
 80048bc:	68bb      	ldr	r3, [r7, #8]
 80048be:	2301      	movs	r3, #1
 80048c0:	75fb      	strb	r3, [r7, #23]
 80048c2:	4b79      	ldr	r3, [pc, #484]	@ (8004aa8 <HAL_RCC_OscConfig+0x4b0>)
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80048ca:	2b00      	cmp	r3, #0
 80048cc:	d118      	bne.n	8004900 <HAL_RCC_OscConfig+0x308>
 80048ce:	4b76      	ldr	r3, [pc, #472]	@ (8004aa8 <HAL_RCC_OscConfig+0x4b0>)
 80048d0:	681b      	ldr	r3, [r3, #0]
 80048d2:	4a75      	ldr	r2, [pc, #468]	@ (8004aa8 <HAL_RCC_OscConfig+0x4b0>)
 80048d4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80048d8:	6013      	str	r3, [r2, #0]
 80048da:	f7fd ff83 	bl	80027e4 <HAL_GetTick>
 80048de:	6138      	str	r0, [r7, #16]
 80048e0:	e008      	b.n	80048f4 <HAL_RCC_OscConfig+0x2fc>
 80048e2:	f7fd ff7f 	bl	80027e4 <HAL_GetTick>
 80048e6:	4602      	mov	r2, r0
 80048e8:	693b      	ldr	r3, [r7, #16]
 80048ea:	1ad3      	subs	r3, r2, r3
 80048ec:	2b02      	cmp	r3, #2
 80048ee:	d901      	bls.n	80048f4 <HAL_RCC_OscConfig+0x2fc>
 80048f0:	2303      	movs	r3, #3
 80048f2:	e118      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 80048f4:	4b6c      	ldr	r3, [pc, #432]	@ (8004aa8 <HAL_RCC_OscConfig+0x4b0>)
 80048f6:	681b      	ldr	r3, [r3, #0]
 80048f8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80048fc:	2b00      	cmp	r3, #0
 80048fe:	d0f0      	beq.n	80048e2 <HAL_RCC_OscConfig+0x2ea>
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	689b      	ldr	r3, [r3, #8]
 8004904:	2b01      	cmp	r3, #1
 8004906:	d106      	bne.n	8004916 <HAL_RCC_OscConfig+0x31e>
 8004908:	4b66      	ldr	r3, [pc, #408]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 800490a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800490c:	4a65      	ldr	r2, [pc, #404]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 800490e:	f043 0301 	orr.w	r3, r3, #1
 8004912:	6713      	str	r3, [r2, #112]	@ 0x70
 8004914:	e01c      	b.n	8004950 <HAL_RCC_OscConfig+0x358>
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	689b      	ldr	r3, [r3, #8]
 800491a:	2b05      	cmp	r3, #5
 800491c:	d10c      	bne.n	8004938 <HAL_RCC_OscConfig+0x340>
 800491e:	4b61      	ldr	r3, [pc, #388]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 8004920:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004922:	4a60      	ldr	r2, [pc, #384]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 8004924:	f043 0304 	orr.w	r3, r3, #4
 8004928:	6713      	str	r3, [r2, #112]	@ 0x70
 800492a:	4b5e      	ldr	r3, [pc, #376]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 800492c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800492e:	4a5d      	ldr	r2, [pc, #372]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 8004930:	f043 0301 	orr.w	r3, r3, #1
 8004934:	6713      	str	r3, [r2, #112]	@ 0x70
 8004936:	e00b      	b.n	8004950 <HAL_RCC_OscConfig+0x358>
 8004938:	4b5a      	ldr	r3, [pc, #360]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 800493a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800493c:	4a59      	ldr	r2, [pc, #356]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 800493e:	f023 0301 	bic.w	r3, r3, #1
 8004942:	6713      	str	r3, [r2, #112]	@ 0x70
 8004944:	4b57      	ldr	r3, [pc, #348]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 8004946:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004948:	4a56      	ldr	r2, [pc, #344]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 800494a:	f023 0304 	bic.w	r3, r3, #4
 800494e:	6713      	str	r3, [r2, #112]	@ 0x70
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	689b      	ldr	r3, [r3, #8]
 8004954:	2b00      	cmp	r3, #0
 8004956:	d015      	beq.n	8004984 <HAL_RCC_OscConfig+0x38c>
 8004958:	f7fd ff44 	bl	80027e4 <HAL_GetTick>
 800495c:	6138      	str	r0, [r7, #16]
 800495e:	e00a      	b.n	8004976 <HAL_RCC_OscConfig+0x37e>
 8004960:	f7fd ff40 	bl	80027e4 <HAL_GetTick>
 8004964:	4602      	mov	r2, r0
 8004966:	693b      	ldr	r3, [r7, #16]
 8004968:	1ad3      	subs	r3, r2, r3
 800496a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800496e:	4293      	cmp	r3, r2
 8004970:	d901      	bls.n	8004976 <HAL_RCC_OscConfig+0x37e>
 8004972:	2303      	movs	r3, #3
 8004974:	e0d7      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 8004976:	4b4b      	ldr	r3, [pc, #300]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 8004978:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800497a:	f003 0302 	and.w	r3, r3, #2
 800497e:	2b00      	cmp	r3, #0
 8004980:	d0ee      	beq.n	8004960 <HAL_RCC_OscConfig+0x368>
 8004982:	e014      	b.n	80049ae <HAL_RCC_OscConfig+0x3b6>
 8004984:	f7fd ff2e 	bl	80027e4 <HAL_GetTick>
 8004988:	6138      	str	r0, [r7, #16]
 800498a:	e00a      	b.n	80049a2 <HAL_RCC_OscConfig+0x3aa>
 800498c:	f7fd ff2a 	bl	80027e4 <HAL_GetTick>
 8004990:	4602      	mov	r2, r0
 8004992:	693b      	ldr	r3, [r7, #16]
 8004994:	1ad3      	subs	r3, r2, r3
 8004996:	f241 3288 	movw	r2, #5000	@ 0x1388
 800499a:	4293      	cmp	r3, r2
 800499c:	d901      	bls.n	80049a2 <HAL_RCC_OscConfig+0x3aa>
 800499e:	2303      	movs	r3, #3
 80049a0:	e0c1      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 80049a2:	4b40      	ldr	r3, [pc, #256]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 80049a4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80049a6:	f003 0302 	and.w	r3, r3, #2
 80049aa:	2b00      	cmp	r3, #0
 80049ac:	d1ee      	bne.n	800498c <HAL_RCC_OscConfig+0x394>
 80049ae:	7dfb      	ldrb	r3, [r7, #23]
 80049b0:	2b01      	cmp	r3, #1
 80049b2:	d105      	bne.n	80049c0 <HAL_RCC_OscConfig+0x3c8>
 80049b4:	4b3b      	ldr	r3, [pc, #236]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 80049b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80049b8:	4a3a      	ldr	r2, [pc, #232]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 80049ba:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80049be:	6413      	str	r3, [r2, #64]	@ 0x40
 80049c0:	687b      	ldr	r3, [r7, #4]
 80049c2:	699b      	ldr	r3, [r3, #24]
 80049c4:	2b00      	cmp	r3, #0
 80049c6:	f000 80ad 	beq.w	8004b24 <HAL_RCC_OscConfig+0x52c>
 80049ca:	4b36      	ldr	r3, [pc, #216]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 80049cc:	689b      	ldr	r3, [r3, #8]
 80049ce:	f003 030c 	and.w	r3, r3, #12
 80049d2:	2b08      	cmp	r3, #8
 80049d4:	d060      	beq.n	8004a98 <HAL_RCC_OscConfig+0x4a0>
 80049d6:	687b      	ldr	r3, [r7, #4]
 80049d8:	699b      	ldr	r3, [r3, #24]
 80049da:	2b02      	cmp	r3, #2
 80049dc:	d145      	bne.n	8004a6a <HAL_RCC_OscConfig+0x472>
 80049de:	4b33      	ldr	r3, [pc, #204]	@ (8004aac <HAL_RCC_OscConfig+0x4b4>)
 80049e0:	2200      	movs	r2, #0
 80049e2:	601a      	str	r2, [r3, #0]
 80049e4:	f7fd fefe 	bl	80027e4 <HAL_GetTick>
 80049e8:	6138      	str	r0, [r7, #16]
 80049ea:	e008      	b.n	80049fe <HAL_RCC_OscConfig+0x406>
 80049ec:	f7fd fefa 	bl	80027e4 <HAL_GetTick>
 80049f0:	4602      	mov	r2, r0
 80049f2:	693b      	ldr	r3, [r7, #16]
 80049f4:	1ad3      	subs	r3, r2, r3
 80049f6:	2b02      	cmp	r3, #2
 80049f8:	d901      	bls.n	80049fe <HAL_RCC_OscConfig+0x406>
 80049fa:	2303      	movs	r3, #3
 80049fc:	e093      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 80049fe:	4b29      	ldr	r3, [pc, #164]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 8004a00:	681b      	ldr	r3, [r3, #0]
 8004a02:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004a06:	2b00      	cmp	r3, #0
 8004a08:	d1f0      	bne.n	80049ec <HAL_RCC_OscConfig+0x3f4>
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	69da      	ldr	r2, [r3, #28]
 8004a0e:	687b      	ldr	r3, [r7, #4]
 8004a10:	6a1b      	ldr	r3, [r3, #32]
 8004a12:	431a      	orrs	r2, r3
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a18:	019b      	lsls	r3, r3, #6
 8004a1a:	431a      	orrs	r2, r3
 8004a1c:	687b      	ldr	r3, [r7, #4]
 8004a1e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004a20:	085b      	lsrs	r3, r3, #1
 8004a22:	3b01      	subs	r3, #1
 8004a24:	041b      	lsls	r3, r3, #16
 8004a26:	431a      	orrs	r2, r3
 8004a28:	687b      	ldr	r3, [r7, #4]
 8004a2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004a2c:	061b      	lsls	r3, r3, #24
 8004a2e:	431a      	orrs	r2, r3
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004a34:	071b      	lsls	r3, r3, #28
 8004a36:	491b      	ldr	r1, [pc, #108]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 8004a38:	4313      	orrs	r3, r2
 8004a3a:	604b      	str	r3, [r1, #4]
 8004a3c:	4b1b      	ldr	r3, [pc, #108]	@ (8004aac <HAL_RCC_OscConfig+0x4b4>)
 8004a3e:	2201      	movs	r2, #1
 8004a40:	601a      	str	r2, [r3, #0]
 8004a42:	f7fd fecf 	bl	80027e4 <HAL_GetTick>
 8004a46:	6138      	str	r0, [r7, #16]
 8004a48:	e008      	b.n	8004a5c <HAL_RCC_OscConfig+0x464>
 8004a4a:	f7fd fecb 	bl	80027e4 <HAL_GetTick>
 8004a4e:	4602      	mov	r2, r0
 8004a50:	693b      	ldr	r3, [r7, #16]
 8004a52:	1ad3      	subs	r3, r2, r3
 8004a54:	2b02      	cmp	r3, #2
 8004a56:	d901      	bls.n	8004a5c <HAL_RCC_OscConfig+0x464>
 8004a58:	2303      	movs	r3, #3
 8004a5a:	e064      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 8004a5c:	4b11      	ldr	r3, [pc, #68]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004a64:	2b00      	cmp	r3, #0
 8004a66:	d0f0      	beq.n	8004a4a <HAL_RCC_OscConfig+0x452>
 8004a68:	e05c      	b.n	8004b24 <HAL_RCC_OscConfig+0x52c>
 8004a6a:	4b10      	ldr	r3, [pc, #64]	@ (8004aac <HAL_RCC_OscConfig+0x4b4>)
 8004a6c:	2200      	movs	r2, #0
 8004a6e:	601a      	str	r2, [r3, #0]
 8004a70:	f7fd feb8 	bl	80027e4 <HAL_GetTick>
 8004a74:	6138      	str	r0, [r7, #16]
 8004a76:	e008      	b.n	8004a8a <HAL_RCC_OscConfig+0x492>
 8004a78:	f7fd feb4 	bl	80027e4 <HAL_GetTick>
 8004a7c:	4602      	mov	r2, r0
 8004a7e:	693b      	ldr	r3, [r7, #16]
 8004a80:	1ad3      	subs	r3, r2, r3
 8004a82:	2b02      	cmp	r3, #2
 8004a84:	d901      	bls.n	8004a8a <HAL_RCC_OscConfig+0x492>
 8004a86:	2303      	movs	r3, #3
 8004a88:	e04d      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 8004a8a:	4b06      	ldr	r3, [pc, #24]	@ (8004aa4 <HAL_RCC_OscConfig+0x4ac>)
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004a92:	2b00      	cmp	r3, #0
 8004a94:	d1f0      	bne.n	8004a78 <HAL_RCC_OscConfig+0x480>
 8004a96:	e045      	b.n	8004b24 <HAL_RCC_OscConfig+0x52c>
 8004a98:	687b      	ldr	r3, [r7, #4]
 8004a9a:	699b      	ldr	r3, [r3, #24]
 8004a9c:	2b01      	cmp	r3, #1
 8004a9e:	d107      	bne.n	8004ab0 <HAL_RCC_OscConfig+0x4b8>
 8004aa0:	2301      	movs	r3, #1
 8004aa2:	e040      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 8004aa4:	40023800 	.word	0x40023800
 8004aa8:	40007000 	.word	0x40007000
 8004aac:	42470060 	.word	0x42470060
 8004ab0:	4b1f      	ldr	r3, [pc, #124]	@ (8004b30 <HAL_RCC_OscConfig+0x538>)
 8004ab2:	685b      	ldr	r3, [r3, #4]
 8004ab4:	60fb      	str	r3, [r7, #12]
 8004ab6:	687b      	ldr	r3, [r7, #4]
 8004ab8:	699b      	ldr	r3, [r3, #24]
 8004aba:	2b01      	cmp	r3, #1
 8004abc:	d030      	beq.n	8004b20 <HAL_RCC_OscConfig+0x528>
 8004abe:	68fb      	ldr	r3, [r7, #12]
 8004ac0:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	69db      	ldr	r3, [r3, #28]
 8004ac8:	429a      	cmp	r2, r3
 8004aca:	d129      	bne.n	8004b20 <HAL_RCC_OscConfig+0x528>
 8004acc:	68fb      	ldr	r3, [r7, #12]
 8004ace:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8004ad2:	687b      	ldr	r3, [r7, #4]
 8004ad4:	6a1b      	ldr	r3, [r3, #32]
 8004ad6:	429a      	cmp	r2, r3
 8004ad8:	d122      	bne.n	8004b20 <HAL_RCC_OscConfig+0x528>
 8004ada:	68fa      	ldr	r2, [r7, #12]
 8004adc:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8004ae0:	4013      	ands	r3, r2
 8004ae2:	687a      	ldr	r2, [r7, #4]
 8004ae4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8004ae6:	0192      	lsls	r2, r2, #6
 8004ae8:	4293      	cmp	r3, r2
 8004aea:	d119      	bne.n	8004b20 <HAL_RCC_OscConfig+0x528>
 8004aec:	68fb      	ldr	r3, [r7, #12]
 8004aee:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8004af2:	687b      	ldr	r3, [r7, #4]
 8004af4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004af6:	085b      	lsrs	r3, r3, #1
 8004af8:	3b01      	subs	r3, #1
 8004afa:	041b      	lsls	r3, r3, #16
 8004afc:	429a      	cmp	r2, r3
 8004afe:	d10f      	bne.n	8004b20 <HAL_RCC_OscConfig+0x528>
 8004b00:	68fb      	ldr	r3, [r7, #12]
 8004b02:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8004b06:	687b      	ldr	r3, [r7, #4]
 8004b08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004b0a:	061b      	lsls	r3, r3, #24
 8004b0c:	429a      	cmp	r2, r3
 8004b0e:	d107      	bne.n	8004b20 <HAL_RCC_OscConfig+0x528>
 8004b10:	68fb      	ldr	r3, [r7, #12]
 8004b12:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8004b16:	687b      	ldr	r3, [r7, #4]
 8004b18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004b1a:	071b      	lsls	r3, r3, #28
 8004b1c:	429a      	cmp	r2, r3
 8004b1e:	d001      	beq.n	8004b24 <HAL_RCC_OscConfig+0x52c>
 8004b20:	2301      	movs	r3, #1
 8004b22:	e000      	b.n	8004b26 <HAL_RCC_OscConfig+0x52e>
 8004b24:	2300      	movs	r3, #0
 8004b26:	4618      	mov	r0, r3
 8004b28:	3718      	adds	r7, #24
 8004b2a:	46bd      	mov	sp, r7
 8004b2c:	bd80      	pop	{r7, pc}
 8004b2e:	bf00      	nop
 8004b30:	40023800 	.word	0x40023800

08004b34 <HAL_TIM_Base_Init>:
 8004b34:	b580      	push	{r7, lr}
 8004b36:	b082      	sub	sp, #8
 8004b38:	af00      	add	r7, sp, #0
 8004b3a:	6078      	str	r0, [r7, #4]
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	2b00      	cmp	r3, #0
 8004b40:	d101      	bne.n	8004b46 <HAL_TIM_Base_Init+0x12>
 8004b42:	2301      	movs	r3, #1
 8004b44:	e041      	b.n	8004bca <HAL_TIM_Base_Init+0x96>
 8004b46:	687b      	ldr	r3, [r7, #4]
 8004b48:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004b4c:	b2db      	uxtb	r3, r3
 8004b4e:	2b00      	cmp	r3, #0
 8004b50:	d106      	bne.n	8004b60 <HAL_TIM_Base_Init+0x2c>
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	2200      	movs	r2, #0
 8004b56:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004b5a:	6878      	ldr	r0, [r7, #4]
 8004b5c:	f7fd fd12 	bl	8002584 <HAL_TIM_Base_MspInit>
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	2202      	movs	r2, #2
 8004b64:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004b68:	687b      	ldr	r3, [r7, #4]
 8004b6a:	681a      	ldr	r2, [r3, #0]
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	3304      	adds	r3, #4
 8004b70:	4619      	mov	r1, r3
 8004b72:	4610      	mov	r0, r2
 8004b74:	f000 fdf4 	bl	8005760 <TIM_Base_SetConfig>
 8004b78:	687b      	ldr	r3, [r7, #4]
 8004b7a:	2201      	movs	r2, #1
 8004b7c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	2201      	movs	r2, #1
 8004b84:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004b88:	687b      	ldr	r3, [r7, #4]
 8004b8a:	2201      	movs	r2, #1
 8004b8c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	2201      	movs	r2, #1
 8004b94:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004b98:	687b      	ldr	r3, [r7, #4]
 8004b9a:	2201      	movs	r2, #1
 8004b9c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004ba0:	687b      	ldr	r3, [r7, #4]
 8004ba2:	2201      	movs	r2, #1
 8004ba4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004ba8:	687b      	ldr	r3, [r7, #4]
 8004baa:	2201      	movs	r2, #1
 8004bac:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	2201      	movs	r2, #1
 8004bb4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004bb8:	687b      	ldr	r3, [r7, #4]
 8004bba:	2201      	movs	r2, #1
 8004bbc:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004bc0:	687b      	ldr	r3, [r7, #4]
 8004bc2:	2201      	movs	r2, #1
 8004bc4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004bc8:	2300      	movs	r3, #0
 8004bca:	4618      	mov	r0, r3
 8004bcc:	3708      	adds	r7, #8
 8004bce:	46bd      	mov	sp, r7
 8004bd0:	bd80      	pop	{r7, pc}
	...

08004bd4 <HAL_TIM_Base_Start>:
 8004bd4:	b480      	push	{r7}
 8004bd6:	b085      	sub	sp, #20
 8004bd8:	af00      	add	r7, sp, #0
 8004bda:	6078      	str	r0, [r7, #4]
 8004bdc:	687b      	ldr	r3, [r7, #4]
 8004bde:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004be2:	b2db      	uxtb	r3, r3
 8004be4:	2b01      	cmp	r3, #1
 8004be6:	d001      	beq.n	8004bec <HAL_TIM_Base_Start+0x18>
 8004be8:	2301      	movs	r3, #1
 8004bea:	e046      	b.n	8004c7a <HAL_TIM_Base_Start+0xa6>
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	2202      	movs	r2, #2
 8004bf0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	681b      	ldr	r3, [r3, #0]
 8004bf8:	4a23      	ldr	r2, [pc, #140]	@ (8004c88 <HAL_TIM_Base_Start+0xb4>)
 8004bfa:	4293      	cmp	r3, r2
 8004bfc:	d022      	beq.n	8004c44 <HAL_TIM_Base_Start+0x70>
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004c06:	d01d      	beq.n	8004c44 <HAL_TIM_Base_Start+0x70>
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	681b      	ldr	r3, [r3, #0]
 8004c0c:	4a1f      	ldr	r2, [pc, #124]	@ (8004c8c <HAL_TIM_Base_Start+0xb8>)
 8004c0e:	4293      	cmp	r3, r2
 8004c10:	d018      	beq.n	8004c44 <HAL_TIM_Base_Start+0x70>
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	681b      	ldr	r3, [r3, #0]
 8004c16:	4a1e      	ldr	r2, [pc, #120]	@ (8004c90 <HAL_TIM_Base_Start+0xbc>)
 8004c18:	4293      	cmp	r3, r2
 8004c1a:	d013      	beq.n	8004c44 <HAL_TIM_Base_Start+0x70>
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	681b      	ldr	r3, [r3, #0]
 8004c20:	4a1c      	ldr	r2, [pc, #112]	@ (8004c94 <HAL_TIM_Base_Start+0xc0>)
 8004c22:	4293      	cmp	r3, r2
 8004c24:	d00e      	beq.n	8004c44 <HAL_TIM_Base_Start+0x70>
 8004c26:	687b      	ldr	r3, [r7, #4]
 8004c28:	681b      	ldr	r3, [r3, #0]
 8004c2a:	4a1b      	ldr	r2, [pc, #108]	@ (8004c98 <HAL_TIM_Base_Start+0xc4>)
 8004c2c:	4293      	cmp	r3, r2
 8004c2e:	d009      	beq.n	8004c44 <HAL_TIM_Base_Start+0x70>
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	681b      	ldr	r3, [r3, #0]
 8004c34:	4a19      	ldr	r2, [pc, #100]	@ (8004c9c <HAL_TIM_Base_Start+0xc8>)
 8004c36:	4293      	cmp	r3, r2
 8004c38:	d004      	beq.n	8004c44 <HAL_TIM_Base_Start+0x70>
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	681b      	ldr	r3, [r3, #0]
 8004c3e:	4a18      	ldr	r2, [pc, #96]	@ (8004ca0 <HAL_TIM_Base_Start+0xcc>)
 8004c40:	4293      	cmp	r3, r2
 8004c42:	d111      	bne.n	8004c68 <HAL_TIM_Base_Start+0x94>
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	689b      	ldr	r3, [r3, #8]
 8004c4a:	f003 0307 	and.w	r3, r3, #7
 8004c4e:	60fb      	str	r3, [r7, #12]
 8004c50:	68fb      	ldr	r3, [r7, #12]
 8004c52:	2b06      	cmp	r3, #6
 8004c54:	d010      	beq.n	8004c78 <HAL_TIM_Base_Start+0xa4>
 8004c56:	687b      	ldr	r3, [r7, #4]
 8004c58:	681b      	ldr	r3, [r3, #0]
 8004c5a:	681a      	ldr	r2, [r3, #0]
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	681b      	ldr	r3, [r3, #0]
 8004c60:	f042 0201 	orr.w	r2, r2, #1
 8004c64:	601a      	str	r2, [r3, #0]
 8004c66:	e007      	b.n	8004c78 <HAL_TIM_Base_Start+0xa4>
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	681b      	ldr	r3, [r3, #0]
 8004c6c:	681a      	ldr	r2, [r3, #0]
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	681b      	ldr	r3, [r3, #0]
 8004c72:	f042 0201 	orr.w	r2, r2, #1
 8004c76:	601a      	str	r2, [r3, #0]
 8004c78:	2300      	movs	r3, #0
 8004c7a:	4618      	mov	r0, r3
 8004c7c:	3714      	adds	r7, #20
 8004c7e:	46bd      	mov	sp, r7
 8004c80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c84:	4770      	bx	lr
 8004c86:	bf00      	nop
 8004c88:	40010000 	.word	0x40010000
 8004c8c:	40000400 	.word	0x40000400
 8004c90:	40000800 	.word	0x40000800
 8004c94:	40000c00 	.word	0x40000c00
 8004c98:	40010400 	.word	0x40010400
 8004c9c:	40014000 	.word	0x40014000
 8004ca0:	40001800 	.word	0x40001800

08004ca4 <HAL_TIM_Base_Start_IT>:
 8004ca4:	b480      	push	{r7}
 8004ca6:	b085      	sub	sp, #20
 8004ca8:	af00      	add	r7, sp, #0
 8004caa:	6078      	str	r0, [r7, #4]
 8004cac:	687b      	ldr	r3, [r7, #4]
 8004cae:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004cb2:	b2db      	uxtb	r3, r3
 8004cb4:	2b01      	cmp	r3, #1
 8004cb6:	d001      	beq.n	8004cbc <HAL_TIM_Base_Start_IT+0x18>
 8004cb8:	2301      	movs	r3, #1
 8004cba:	e04e      	b.n	8004d5a <HAL_TIM_Base_Start_IT+0xb6>
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	2202      	movs	r2, #2
 8004cc0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004cc4:	687b      	ldr	r3, [r7, #4]
 8004cc6:	681b      	ldr	r3, [r3, #0]
 8004cc8:	68da      	ldr	r2, [r3, #12]
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	f042 0201 	orr.w	r2, r2, #1
 8004cd2:	60da      	str	r2, [r3, #12]
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	681b      	ldr	r3, [r3, #0]
 8004cd8:	4a23      	ldr	r2, [pc, #140]	@ (8004d68 <HAL_TIM_Base_Start_IT+0xc4>)
 8004cda:	4293      	cmp	r3, r2
 8004cdc:	d022      	beq.n	8004d24 <HAL_TIM_Base_Start_IT+0x80>
 8004cde:	687b      	ldr	r3, [r7, #4]
 8004ce0:	681b      	ldr	r3, [r3, #0]
 8004ce2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004ce6:	d01d      	beq.n	8004d24 <HAL_TIM_Base_Start_IT+0x80>
 8004ce8:	687b      	ldr	r3, [r7, #4]
 8004cea:	681b      	ldr	r3, [r3, #0]
 8004cec:	4a1f      	ldr	r2, [pc, #124]	@ (8004d6c <HAL_TIM_Base_Start_IT+0xc8>)
 8004cee:	4293      	cmp	r3, r2
 8004cf0:	d018      	beq.n	8004d24 <HAL_TIM_Base_Start_IT+0x80>
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	4a1e      	ldr	r2, [pc, #120]	@ (8004d70 <HAL_TIM_Base_Start_IT+0xcc>)
 8004cf8:	4293      	cmp	r3, r2
 8004cfa:	d013      	beq.n	8004d24 <HAL_TIM_Base_Start_IT+0x80>
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	681b      	ldr	r3, [r3, #0]
 8004d00:	4a1c      	ldr	r2, [pc, #112]	@ (8004d74 <HAL_TIM_Base_Start_IT+0xd0>)
 8004d02:	4293      	cmp	r3, r2
 8004d04:	d00e      	beq.n	8004d24 <HAL_TIM_Base_Start_IT+0x80>
 8004d06:	687b      	ldr	r3, [r7, #4]
 8004d08:	681b      	ldr	r3, [r3, #0]
 8004d0a:	4a1b      	ldr	r2, [pc, #108]	@ (8004d78 <HAL_TIM_Base_Start_IT+0xd4>)
 8004d0c:	4293      	cmp	r3, r2
 8004d0e:	d009      	beq.n	8004d24 <HAL_TIM_Base_Start_IT+0x80>
 8004d10:	687b      	ldr	r3, [r7, #4]
 8004d12:	681b      	ldr	r3, [r3, #0]
 8004d14:	4a19      	ldr	r2, [pc, #100]	@ (8004d7c <HAL_TIM_Base_Start_IT+0xd8>)
 8004d16:	4293      	cmp	r3, r2
 8004d18:	d004      	beq.n	8004d24 <HAL_TIM_Base_Start_IT+0x80>
 8004d1a:	687b      	ldr	r3, [r7, #4]
 8004d1c:	681b      	ldr	r3, [r3, #0]
 8004d1e:	4a18      	ldr	r2, [pc, #96]	@ (8004d80 <HAL_TIM_Base_Start_IT+0xdc>)
 8004d20:	4293      	cmp	r3, r2
 8004d22:	d111      	bne.n	8004d48 <HAL_TIM_Base_Start_IT+0xa4>
 8004d24:	687b      	ldr	r3, [r7, #4]
 8004d26:	681b      	ldr	r3, [r3, #0]
 8004d28:	689b      	ldr	r3, [r3, #8]
 8004d2a:	f003 0307 	and.w	r3, r3, #7
 8004d2e:	60fb      	str	r3, [r7, #12]
 8004d30:	68fb      	ldr	r3, [r7, #12]
 8004d32:	2b06      	cmp	r3, #6
 8004d34:	d010      	beq.n	8004d58 <HAL_TIM_Base_Start_IT+0xb4>
 8004d36:	687b      	ldr	r3, [r7, #4]
 8004d38:	681b      	ldr	r3, [r3, #0]
 8004d3a:	681a      	ldr	r2, [r3, #0]
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	681b      	ldr	r3, [r3, #0]
 8004d40:	f042 0201 	orr.w	r2, r2, #1
 8004d44:	601a      	str	r2, [r3, #0]
 8004d46:	e007      	b.n	8004d58 <HAL_TIM_Base_Start_IT+0xb4>
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	681b      	ldr	r3, [r3, #0]
 8004d4c:	681a      	ldr	r2, [r3, #0]
 8004d4e:	687b      	ldr	r3, [r7, #4]
 8004d50:	681b      	ldr	r3, [r3, #0]
 8004d52:	f042 0201 	orr.w	r2, r2, #1
 8004d56:	601a      	str	r2, [r3, #0]
 8004d58:	2300      	movs	r3, #0
 8004d5a:	4618      	mov	r0, r3
 8004d5c:	3714      	adds	r7, #20
 8004d5e:	46bd      	mov	sp, r7
 8004d60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d64:	4770      	bx	lr
 8004d66:	bf00      	nop
 8004d68:	40010000 	.word	0x40010000
 8004d6c:	40000400 	.word	0x40000400
 8004d70:	40000800 	.word	0x40000800
 8004d74:	40000c00 	.word	0x40000c00
 8004d78:	40010400 	.word	0x40010400
 8004d7c:	40014000 	.word	0x40014000
 8004d80:	40001800 	.word	0x40001800

08004d84 <HAL_TIM_PWM_Init>:
 8004d84:	b580      	push	{r7, lr}
 8004d86:	b082      	sub	sp, #8
 8004d88:	af00      	add	r7, sp, #0
 8004d8a:	6078      	str	r0, [r7, #4]
 8004d8c:	687b      	ldr	r3, [r7, #4]
 8004d8e:	2b00      	cmp	r3, #0
 8004d90:	d101      	bne.n	8004d96 <HAL_TIM_PWM_Init+0x12>
 8004d92:	2301      	movs	r3, #1
 8004d94:	e041      	b.n	8004e1a <HAL_TIM_PWM_Init+0x96>
 8004d96:	687b      	ldr	r3, [r7, #4]
 8004d98:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004d9c:	b2db      	uxtb	r3, r3
 8004d9e:	2b00      	cmp	r3, #0
 8004da0:	d106      	bne.n	8004db0 <HAL_TIM_PWM_Init+0x2c>
 8004da2:	687b      	ldr	r3, [r7, #4]
 8004da4:	2200      	movs	r2, #0
 8004da6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004daa:	6878      	ldr	r0, [r7, #4]
 8004dac:	f7fd fc2e 	bl	800260c <HAL_TIM_PWM_MspInit>
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	2202      	movs	r2, #2
 8004db4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004db8:	687b      	ldr	r3, [r7, #4]
 8004dba:	681a      	ldr	r2, [r3, #0]
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	3304      	adds	r3, #4
 8004dc0:	4619      	mov	r1, r3
 8004dc2:	4610      	mov	r0, r2
 8004dc4:	f000 fccc 	bl	8005760 <TIM_Base_SetConfig>
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	2201      	movs	r2, #1
 8004dcc:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004dd0:	687b      	ldr	r3, [r7, #4]
 8004dd2:	2201      	movs	r2, #1
 8004dd4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	2201      	movs	r2, #1
 8004ddc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004de0:	687b      	ldr	r3, [r7, #4]
 8004de2:	2201      	movs	r2, #1
 8004de4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	2201      	movs	r2, #1
 8004dec:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	2201      	movs	r2, #1
 8004df4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004df8:	687b      	ldr	r3, [r7, #4]
 8004dfa:	2201      	movs	r2, #1
 8004dfc:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004e00:	687b      	ldr	r3, [r7, #4]
 8004e02:	2201      	movs	r2, #1
 8004e04:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	2201      	movs	r2, #1
 8004e0c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004e10:	687b      	ldr	r3, [r7, #4]
 8004e12:	2201      	movs	r2, #1
 8004e14:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004e18:	2300      	movs	r3, #0
 8004e1a:	4618      	mov	r0, r3
 8004e1c:	3708      	adds	r7, #8
 8004e1e:	46bd      	mov	sp, r7
 8004e20:	bd80      	pop	{r7, pc}
	...

08004e24 <HAL_TIM_PWM_Start>:
 8004e24:	b580      	push	{r7, lr}
 8004e26:	b084      	sub	sp, #16
 8004e28:	af00      	add	r7, sp, #0
 8004e2a:	6078      	str	r0, [r7, #4]
 8004e2c:	6039      	str	r1, [r7, #0]
 8004e2e:	683b      	ldr	r3, [r7, #0]
 8004e30:	2b00      	cmp	r3, #0
 8004e32:	d109      	bne.n	8004e48 <HAL_TIM_PWM_Start+0x24>
 8004e34:	687b      	ldr	r3, [r7, #4]
 8004e36:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8004e3a:	b2db      	uxtb	r3, r3
 8004e3c:	2b01      	cmp	r3, #1
 8004e3e:	bf14      	ite	ne
 8004e40:	2301      	movne	r3, #1
 8004e42:	2300      	moveq	r3, #0
 8004e44:	b2db      	uxtb	r3, r3
 8004e46:	e022      	b.n	8004e8e <HAL_TIM_PWM_Start+0x6a>
 8004e48:	683b      	ldr	r3, [r7, #0]
 8004e4a:	2b04      	cmp	r3, #4
 8004e4c:	d109      	bne.n	8004e62 <HAL_TIM_PWM_Start+0x3e>
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8004e54:	b2db      	uxtb	r3, r3
 8004e56:	2b01      	cmp	r3, #1
 8004e58:	bf14      	ite	ne
 8004e5a:	2301      	movne	r3, #1
 8004e5c:	2300      	moveq	r3, #0
 8004e5e:	b2db      	uxtb	r3, r3
 8004e60:	e015      	b.n	8004e8e <HAL_TIM_PWM_Start+0x6a>
 8004e62:	683b      	ldr	r3, [r7, #0]
 8004e64:	2b08      	cmp	r3, #8
 8004e66:	d109      	bne.n	8004e7c <HAL_TIM_PWM_Start+0x58>
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8004e6e:	b2db      	uxtb	r3, r3
 8004e70:	2b01      	cmp	r3, #1
 8004e72:	bf14      	ite	ne
 8004e74:	2301      	movne	r3, #1
 8004e76:	2300      	moveq	r3, #0
 8004e78:	b2db      	uxtb	r3, r3
 8004e7a:	e008      	b.n	8004e8e <HAL_TIM_PWM_Start+0x6a>
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004e82:	b2db      	uxtb	r3, r3
 8004e84:	2b01      	cmp	r3, #1
 8004e86:	bf14      	ite	ne
 8004e88:	2301      	movne	r3, #1
 8004e8a:	2300      	moveq	r3, #0
 8004e8c:	b2db      	uxtb	r3, r3
 8004e8e:	2b00      	cmp	r3, #0
 8004e90:	d001      	beq.n	8004e96 <HAL_TIM_PWM_Start+0x72>
 8004e92:	2301      	movs	r3, #1
 8004e94:	e07c      	b.n	8004f90 <HAL_TIM_PWM_Start+0x16c>
 8004e96:	683b      	ldr	r3, [r7, #0]
 8004e98:	2b00      	cmp	r3, #0
 8004e9a:	d104      	bne.n	8004ea6 <HAL_TIM_PWM_Start+0x82>
 8004e9c:	687b      	ldr	r3, [r7, #4]
 8004e9e:	2202      	movs	r2, #2
 8004ea0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004ea4:	e013      	b.n	8004ece <HAL_TIM_PWM_Start+0xaa>
 8004ea6:	683b      	ldr	r3, [r7, #0]
 8004ea8:	2b04      	cmp	r3, #4
 8004eaa:	d104      	bne.n	8004eb6 <HAL_TIM_PWM_Start+0x92>
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	2202      	movs	r2, #2
 8004eb0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004eb4:	e00b      	b.n	8004ece <HAL_TIM_PWM_Start+0xaa>
 8004eb6:	683b      	ldr	r3, [r7, #0]
 8004eb8:	2b08      	cmp	r3, #8
 8004eba:	d104      	bne.n	8004ec6 <HAL_TIM_PWM_Start+0xa2>
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	2202      	movs	r2, #2
 8004ec0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004ec4:	e003      	b.n	8004ece <HAL_TIM_PWM_Start+0xaa>
 8004ec6:	687b      	ldr	r3, [r7, #4]
 8004ec8:	2202      	movs	r2, #2
 8004eca:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	2201      	movs	r2, #1
 8004ed4:	6839      	ldr	r1, [r7, #0]
 8004ed6:	4618      	mov	r0, r3
 8004ed8:	f000 ff38 	bl	8005d4c <TIM_CCxChannelCmd>
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	681b      	ldr	r3, [r3, #0]
 8004ee0:	4a2d      	ldr	r2, [pc, #180]	@ (8004f98 <HAL_TIM_PWM_Start+0x174>)
 8004ee2:	4293      	cmp	r3, r2
 8004ee4:	d004      	beq.n	8004ef0 <HAL_TIM_PWM_Start+0xcc>
 8004ee6:	687b      	ldr	r3, [r7, #4]
 8004ee8:	681b      	ldr	r3, [r3, #0]
 8004eea:	4a2c      	ldr	r2, [pc, #176]	@ (8004f9c <HAL_TIM_PWM_Start+0x178>)
 8004eec:	4293      	cmp	r3, r2
 8004eee:	d101      	bne.n	8004ef4 <HAL_TIM_PWM_Start+0xd0>
 8004ef0:	2301      	movs	r3, #1
 8004ef2:	e000      	b.n	8004ef6 <HAL_TIM_PWM_Start+0xd2>
 8004ef4:	2300      	movs	r3, #0
 8004ef6:	2b00      	cmp	r3, #0
 8004ef8:	d007      	beq.n	8004f0a <HAL_TIM_PWM_Start+0xe6>
 8004efa:	687b      	ldr	r3, [r7, #4]
 8004efc:	681b      	ldr	r3, [r3, #0]
 8004efe:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	681b      	ldr	r3, [r3, #0]
 8004f04:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004f08:	645a      	str	r2, [r3, #68]	@ 0x44
 8004f0a:	687b      	ldr	r3, [r7, #4]
 8004f0c:	681b      	ldr	r3, [r3, #0]
 8004f0e:	4a22      	ldr	r2, [pc, #136]	@ (8004f98 <HAL_TIM_PWM_Start+0x174>)
 8004f10:	4293      	cmp	r3, r2
 8004f12:	d022      	beq.n	8004f5a <HAL_TIM_PWM_Start+0x136>
 8004f14:	687b      	ldr	r3, [r7, #4]
 8004f16:	681b      	ldr	r3, [r3, #0]
 8004f18:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004f1c:	d01d      	beq.n	8004f5a <HAL_TIM_PWM_Start+0x136>
 8004f1e:	687b      	ldr	r3, [r7, #4]
 8004f20:	681b      	ldr	r3, [r3, #0]
 8004f22:	4a1f      	ldr	r2, [pc, #124]	@ (8004fa0 <HAL_TIM_PWM_Start+0x17c>)
 8004f24:	4293      	cmp	r3, r2
 8004f26:	d018      	beq.n	8004f5a <HAL_TIM_PWM_Start+0x136>
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	681b      	ldr	r3, [r3, #0]
 8004f2c:	4a1d      	ldr	r2, [pc, #116]	@ (8004fa4 <HAL_TIM_PWM_Start+0x180>)
 8004f2e:	4293      	cmp	r3, r2
 8004f30:	d013      	beq.n	8004f5a <HAL_TIM_PWM_Start+0x136>
 8004f32:	687b      	ldr	r3, [r7, #4]
 8004f34:	681b      	ldr	r3, [r3, #0]
 8004f36:	4a1c      	ldr	r2, [pc, #112]	@ (8004fa8 <HAL_TIM_PWM_Start+0x184>)
 8004f38:	4293      	cmp	r3, r2
 8004f3a:	d00e      	beq.n	8004f5a <HAL_TIM_PWM_Start+0x136>
 8004f3c:	687b      	ldr	r3, [r7, #4]
 8004f3e:	681b      	ldr	r3, [r3, #0]
 8004f40:	4a16      	ldr	r2, [pc, #88]	@ (8004f9c <HAL_TIM_PWM_Start+0x178>)
 8004f42:	4293      	cmp	r3, r2
 8004f44:	d009      	beq.n	8004f5a <HAL_TIM_PWM_Start+0x136>
 8004f46:	687b      	ldr	r3, [r7, #4]
 8004f48:	681b      	ldr	r3, [r3, #0]
 8004f4a:	4a18      	ldr	r2, [pc, #96]	@ (8004fac <HAL_TIM_PWM_Start+0x188>)
 8004f4c:	4293      	cmp	r3, r2
 8004f4e:	d004      	beq.n	8004f5a <HAL_TIM_PWM_Start+0x136>
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	681b      	ldr	r3, [r3, #0]
 8004f54:	4a16      	ldr	r2, [pc, #88]	@ (8004fb0 <HAL_TIM_PWM_Start+0x18c>)
 8004f56:	4293      	cmp	r3, r2
 8004f58:	d111      	bne.n	8004f7e <HAL_TIM_PWM_Start+0x15a>
 8004f5a:	687b      	ldr	r3, [r7, #4]
 8004f5c:	681b      	ldr	r3, [r3, #0]
 8004f5e:	689b      	ldr	r3, [r3, #8]
 8004f60:	f003 0307 	and.w	r3, r3, #7
 8004f64:	60fb      	str	r3, [r7, #12]
 8004f66:	68fb      	ldr	r3, [r7, #12]
 8004f68:	2b06      	cmp	r3, #6
 8004f6a:	d010      	beq.n	8004f8e <HAL_TIM_PWM_Start+0x16a>
 8004f6c:	687b      	ldr	r3, [r7, #4]
 8004f6e:	681b      	ldr	r3, [r3, #0]
 8004f70:	681a      	ldr	r2, [r3, #0]
 8004f72:	687b      	ldr	r3, [r7, #4]
 8004f74:	681b      	ldr	r3, [r3, #0]
 8004f76:	f042 0201 	orr.w	r2, r2, #1
 8004f7a:	601a      	str	r2, [r3, #0]
 8004f7c:	e007      	b.n	8004f8e <HAL_TIM_PWM_Start+0x16a>
 8004f7e:	687b      	ldr	r3, [r7, #4]
 8004f80:	681b      	ldr	r3, [r3, #0]
 8004f82:	681a      	ldr	r2, [r3, #0]
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	f042 0201 	orr.w	r2, r2, #1
 8004f8c:	601a      	str	r2, [r3, #0]
 8004f8e:	2300      	movs	r3, #0
 8004f90:	4618      	mov	r0, r3
 8004f92:	3710      	adds	r7, #16
 8004f94:	46bd      	mov	sp, r7
 8004f96:	bd80      	pop	{r7, pc}
 8004f98:	40010000 	.word	0x40010000
 8004f9c:	40010400 	.word	0x40010400
 8004fa0:	40000400 	.word	0x40000400
 8004fa4:	40000800 	.word	0x40000800
 8004fa8:	40000c00 	.word	0x40000c00
 8004fac:	40014000 	.word	0x40014000
 8004fb0:	40001800 	.word	0x40001800

08004fb4 <HAL_TIM_Encoder_Init>:
 8004fb4:	b580      	push	{r7, lr}
 8004fb6:	b086      	sub	sp, #24
 8004fb8:	af00      	add	r7, sp, #0
 8004fba:	6078      	str	r0, [r7, #4]
 8004fbc:	6039      	str	r1, [r7, #0]
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	2b00      	cmp	r3, #0
 8004fc2:	d101      	bne.n	8004fc8 <HAL_TIM_Encoder_Init+0x14>
 8004fc4:	2301      	movs	r3, #1
 8004fc6:	e097      	b.n	80050f8 <HAL_TIM_Encoder_Init+0x144>
 8004fc8:	687b      	ldr	r3, [r7, #4]
 8004fca:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004fce:	b2db      	uxtb	r3, r3
 8004fd0:	2b00      	cmp	r3, #0
 8004fd2:	d106      	bne.n	8004fe2 <HAL_TIM_Encoder_Init+0x2e>
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	2200      	movs	r2, #0
 8004fd8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004fdc:	6878      	ldr	r0, [r7, #4]
 8004fde:	f7fd fa89 	bl	80024f4 <HAL_TIM_Encoder_MspInit>
 8004fe2:	687b      	ldr	r3, [r7, #4]
 8004fe4:	2202      	movs	r2, #2
 8004fe6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	681b      	ldr	r3, [r3, #0]
 8004fee:	689b      	ldr	r3, [r3, #8]
 8004ff0:	687a      	ldr	r2, [r7, #4]
 8004ff2:	6812      	ldr	r2, [r2, #0]
 8004ff4:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004ff8:	f023 0307 	bic.w	r3, r3, #7
 8004ffc:	6093      	str	r3, [r2, #8]
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	681a      	ldr	r2, [r3, #0]
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	3304      	adds	r3, #4
 8005006:	4619      	mov	r1, r3
 8005008:	4610      	mov	r0, r2
 800500a:	f000 fba9 	bl	8005760 <TIM_Base_SetConfig>
 800500e:	687b      	ldr	r3, [r7, #4]
 8005010:	681b      	ldr	r3, [r3, #0]
 8005012:	689b      	ldr	r3, [r3, #8]
 8005014:	617b      	str	r3, [r7, #20]
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	681b      	ldr	r3, [r3, #0]
 800501a:	699b      	ldr	r3, [r3, #24]
 800501c:	613b      	str	r3, [r7, #16]
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	681b      	ldr	r3, [r3, #0]
 8005022:	6a1b      	ldr	r3, [r3, #32]
 8005024:	60fb      	str	r3, [r7, #12]
 8005026:	683b      	ldr	r3, [r7, #0]
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	697a      	ldr	r2, [r7, #20]
 800502c:	4313      	orrs	r3, r2
 800502e:	617b      	str	r3, [r7, #20]
 8005030:	693b      	ldr	r3, [r7, #16]
 8005032:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005036:	f023 0303 	bic.w	r3, r3, #3
 800503a:	613b      	str	r3, [r7, #16]
 800503c:	683b      	ldr	r3, [r7, #0]
 800503e:	689a      	ldr	r2, [r3, #8]
 8005040:	683b      	ldr	r3, [r7, #0]
 8005042:	699b      	ldr	r3, [r3, #24]
 8005044:	021b      	lsls	r3, r3, #8
 8005046:	4313      	orrs	r3, r2
 8005048:	693a      	ldr	r2, [r7, #16]
 800504a:	4313      	orrs	r3, r2
 800504c:	613b      	str	r3, [r7, #16]
 800504e:	693b      	ldr	r3, [r7, #16]
 8005050:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8005054:	f023 030c 	bic.w	r3, r3, #12
 8005058:	613b      	str	r3, [r7, #16]
 800505a:	693b      	ldr	r3, [r7, #16]
 800505c:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005060:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005064:	613b      	str	r3, [r7, #16]
 8005066:	683b      	ldr	r3, [r7, #0]
 8005068:	68da      	ldr	r2, [r3, #12]
 800506a:	683b      	ldr	r3, [r7, #0]
 800506c:	69db      	ldr	r3, [r3, #28]
 800506e:	021b      	lsls	r3, r3, #8
 8005070:	4313      	orrs	r3, r2
 8005072:	693a      	ldr	r2, [r7, #16]
 8005074:	4313      	orrs	r3, r2
 8005076:	613b      	str	r3, [r7, #16]
 8005078:	683b      	ldr	r3, [r7, #0]
 800507a:	691b      	ldr	r3, [r3, #16]
 800507c:	011a      	lsls	r2, r3, #4
 800507e:	683b      	ldr	r3, [r7, #0]
 8005080:	6a1b      	ldr	r3, [r3, #32]
 8005082:	031b      	lsls	r3, r3, #12
 8005084:	4313      	orrs	r3, r2
 8005086:	693a      	ldr	r2, [r7, #16]
 8005088:	4313      	orrs	r3, r2
 800508a:	613b      	str	r3, [r7, #16]
 800508c:	68fb      	ldr	r3, [r7, #12]
 800508e:	f023 0322 	bic.w	r3, r3, #34	@ 0x22
 8005092:	60fb      	str	r3, [r7, #12]
 8005094:	68fb      	ldr	r3, [r7, #12]
 8005096:	f023 0388 	bic.w	r3, r3, #136	@ 0x88
 800509a:	60fb      	str	r3, [r7, #12]
 800509c:	683b      	ldr	r3, [r7, #0]
 800509e:	685a      	ldr	r2, [r3, #4]
 80050a0:	683b      	ldr	r3, [r7, #0]
 80050a2:	695b      	ldr	r3, [r3, #20]
 80050a4:	011b      	lsls	r3, r3, #4
 80050a6:	4313      	orrs	r3, r2
 80050a8:	68fa      	ldr	r2, [r7, #12]
 80050aa:	4313      	orrs	r3, r2
 80050ac:	60fb      	str	r3, [r7, #12]
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	681b      	ldr	r3, [r3, #0]
 80050b2:	697a      	ldr	r2, [r7, #20]
 80050b4:	609a      	str	r2, [r3, #8]
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	681b      	ldr	r3, [r3, #0]
 80050ba:	693a      	ldr	r2, [r7, #16]
 80050bc:	619a      	str	r2, [r3, #24]
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	681b      	ldr	r3, [r3, #0]
 80050c2:	68fa      	ldr	r2, [r7, #12]
 80050c4:	621a      	str	r2, [r3, #32]
 80050c6:	687b      	ldr	r3, [r7, #4]
 80050c8:	2201      	movs	r2, #1
 80050ca:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80050ce:	687b      	ldr	r3, [r7, #4]
 80050d0:	2201      	movs	r2, #1
 80050d2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80050d6:	687b      	ldr	r3, [r7, #4]
 80050d8:	2201      	movs	r2, #1
 80050da:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	2201      	movs	r2, #1
 80050e2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	2201      	movs	r2, #1
 80050ea:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80050ee:	687b      	ldr	r3, [r7, #4]
 80050f0:	2201      	movs	r2, #1
 80050f2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80050f6:	2300      	movs	r3, #0
 80050f8:	4618      	mov	r0, r3
 80050fa:	3718      	adds	r7, #24
 80050fc:	46bd      	mov	sp, r7
 80050fe:	bd80      	pop	{r7, pc}

08005100 <HAL_TIM_Encoder_Start>:
 8005100:	b580      	push	{r7, lr}
 8005102:	b084      	sub	sp, #16
 8005104:	af00      	add	r7, sp, #0
 8005106:	6078      	str	r0, [r7, #4]
 8005108:	6039      	str	r1, [r7, #0]
 800510a:	687b      	ldr	r3, [r7, #4]
 800510c:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8005110:	73fb      	strb	r3, [r7, #15]
 8005112:	687b      	ldr	r3, [r7, #4]
 8005114:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8005118:	73bb      	strb	r3, [r7, #14]
 800511a:	687b      	ldr	r3, [r7, #4]
 800511c:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005120:	737b      	strb	r3, [r7, #13]
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8005128:	733b      	strb	r3, [r7, #12]
 800512a:	683b      	ldr	r3, [r7, #0]
 800512c:	2b00      	cmp	r3, #0
 800512e:	d110      	bne.n	8005152 <HAL_TIM_Encoder_Start+0x52>
 8005130:	7bfb      	ldrb	r3, [r7, #15]
 8005132:	2b01      	cmp	r3, #1
 8005134:	d102      	bne.n	800513c <HAL_TIM_Encoder_Start+0x3c>
 8005136:	7b7b      	ldrb	r3, [r7, #13]
 8005138:	2b01      	cmp	r3, #1
 800513a:	d001      	beq.n	8005140 <HAL_TIM_Encoder_Start+0x40>
 800513c:	2301      	movs	r3, #1
 800513e:	e069      	b.n	8005214 <HAL_TIM_Encoder_Start+0x114>
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	2202      	movs	r2, #2
 8005144:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	2202      	movs	r2, #2
 800514c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005150:	e031      	b.n	80051b6 <HAL_TIM_Encoder_Start+0xb6>
 8005152:	683b      	ldr	r3, [r7, #0]
 8005154:	2b04      	cmp	r3, #4
 8005156:	d110      	bne.n	800517a <HAL_TIM_Encoder_Start+0x7a>
 8005158:	7bbb      	ldrb	r3, [r7, #14]
 800515a:	2b01      	cmp	r3, #1
 800515c:	d102      	bne.n	8005164 <HAL_TIM_Encoder_Start+0x64>
 800515e:	7b3b      	ldrb	r3, [r7, #12]
 8005160:	2b01      	cmp	r3, #1
 8005162:	d001      	beq.n	8005168 <HAL_TIM_Encoder_Start+0x68>
 8005164:	2301      	movs	r3, #1
 8005166:	e055      	b.n	8005214 <HAL_TIM_Encoder_Start+0x114>
 8005168:	687b      	ldr	r3, [r7, #4]
 800516a:	2202      	movs	r2, #2
 800516c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005170:	687b      	ldr	r3, [r7, #4]
 8005172:	2202      	movs	r2, #2
 8005174:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005178:	e01d      	b.n	80051b6 <HAL_TIM_Encoder_Start+0xb6>
 800517a:	7bfb      	ldrb	r3, [r7, #15]
 800517c:	2b01      	cmp	r3, #1
 800517e:	d108      	bne.n	8005192 <HAL_TIM_Encoder_Start+0x92>
 8005180:	7bbb      	ldrb	r3, [r7, #14]
 8005182:	2b01      	cmp	r3, #1
 8005184:	d105      	bne.n	8005192 <HAL_TIM_Encoder_Start+0x92>
 8005186:	7b7b      	ldrb	r3, [r7, #13]
 8005188:	2b01      	cmp	r3, #1
 800518a:	d102      	bne.n	8005192 <HAL_TIM_Encoder_Start+0x92>
 800518c:	7b3b      	ldrb	r3, [r7, #12]
 800518e:	2b01      	cmp	r3, #1
 8005190:	d001      	beq.n	8005196 <HAL_TIM_Encoder_Start+0x96>
 8005192:	2301      	movs	r3, #1
 8005194:	e03e      	b.n	8005214 <HAL_TIM_Encoder_Start+0x114>
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	2202      	movs	r2, #2
 800519a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800519e:	687b      	ldr	r3, [r7, #4]
 80051a0:	2202      	movs	r2, #2
 80051a2:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	2202      	movs	r2, #2
 80051aa:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	2202      	movs	r2, #2
 80051b2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80051b6:	683b      	ldr	r3, [r7, #0]
 80051b8:	2b00      	cmp	r3, #0
 80051ba:	d003      	beq.n	80051c4 <HAL_TIM_Encoder_Start+0xc4>
 80051bc:	683b      	ldr	r3, [r7, #0]
 80051be:	2b04      	cmp	r3, #4
 80051c0:	d008      	beq.n	80051d4 <HAL_TIM_Encoder_Start+0xd4>
 80051c2:	e00f      	b.n	80051e4 <HAL_TIM_Encoder_Start+0xe4>
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	2201      	movs	r2, #1
 80051ca:	2100      	movs	r1, #0
 80051cc:	4618      	mov	r0, r3
 80051ce:	f000 fdbd 	bl	8005d4c <TIM_CCxChannelCmd>
 80051d2:	e016      	b.n	8005202 <HAL_TIM_Encoder_Start+0x102>
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	2201      	movs	r2, #1
 80051da:	2104      	movs	r1, #4
 80051dc:	4618      	mov	r0, r3
 80051de:	f000 fdb5 	bl	8005d4c <TIM_CCxChannelCmd>
 80051e2:	e00e      	b.n	8005202 <HAL_TIM_Encoder_Start+0x102>
 80051e4:	687b      	ldr	r3, [r7, #4]
 80051e6:	681b      	ldr	r3, [r3, #0]
 80051e8:	2201      	movs	r2, #1
 80051ea:	2100      	movs	r1, #0
 80051ec:	4618      	mov	r0, r3
 80051ee:	f000 fdad 	bl	8005d4c <TIM_CCxChannelCmd>
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	681b      	ldr	r3, [r3, #0]
 80051f6:	2201      	movs	r2, #1
 80051f8:	2104      	movs	r1, #4
 80051fa:	4618      	mov	r0, r3
 80051fc:	f000 fda6 	bl	8005d4c <TIM_CCxChannelCmd>
 8005200:	bf00      	nop
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	681b      	ldr	r3, [r3, #0]
 8005206:	681a      	ldr	r2, [r3, #0]
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	f042 0201 	orr.w	r2, r2, #1
 8005210:	601a      	str	r2, [r3, #0]
 8005212:	2300      	movs	r3, #0
 8005214:	4618      	mov	r0, r3
 8005216:	3710      	adds	r7, #16
 8005218:	46bd      	mov	sp, r7
 800521a:	bd80      	pop	{r7, pc}

0800521c <HAL_TIM_IRQHandler>:
 800521c:	b580      	push	{r7, lr}
 800521e:	b084      	sub	sp, #16
 8005220:	af00      	add	r7, sp, #0
 8005222:	6078      	str	r0, [r7, #4]
 8005224:	687b      	ldr	r3, [r7, #4]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	68db      	ldr	r3, [r3, #12]
 800522a:	60fb      	str	r3, [r7, #12]
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	681b      	ldr	r3, [r3, #0]
 8005230:	691b      	ldr	r3, [r3, #16]
 8005232:	60bb      	str	r3, [r7, #8]
 8005234:	68bb      	ldr	r3, [r7, #8]
 8005236:	f003 0302 	and.w	r3, r3, #2
 800523a:	2b00      	cmp	r3, #0
 800523c:	d020      	beq.n	8005280 <HAL_TIM_IRQHandler+0x64>
 800523e:	68fb      	ldr	r3, [r7, #12]
 8005240:	f003 0302 	and.w	r3, r3, #2
 8005244:	2b00      	cmp	r3, #0
 8005246:	d01b      	beq.n	8005280 <HAL_TIM_IRQHandler+0x64>
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	681b      	ldr	r3, [r3, #0]
 800524c:	f06f 0202 	mvn.w	r2, #2
 8005250:	611a      	str	r2, [r3, #16]
 8005252:	687b      	ldr	r3, [r7, #4]
 8005254:	2201      	movs	r2, #1
 8005256:	771a      	strb	r2, [r3, #28]
 8005258:	687b      	ldr	r3, [r7, #4]
 800525a:	681b      	ldr	r3, [r3, #0]
 800525c:	699b      	ldr	r3, [r3, #24]
 800525e:	f003 0303 	and.w	r3, r3, #3
 8005262:	2b00      	cmp	r3, #0
 8005264:	d003      	beq.n	800526e <HAL_TIM_IRQHandler+0x52>
 8005266:	6878      	ldr	r0, [r7, #4]
 8005268:	f000 fa5b 	bl	8005722 <HAL_TIM_IC_CaptureCallback>
 800526c:	e005      	b.n	800527a <HAL_TIM_IRQHandler+0x5e>
 800526e:	6878      	ldr	r0, [r7, #4]
 8005270:	f000 fa4d 	bl	800570e <HAL_TIM_OC_DelayElapsedCallback>
 8005274:	6878      	ldr	r0, [r7, #4]
 8005276:	f000 fa5e 	bl	8005736 <HAL_TIM_PWM_PulseFinishedCallback>
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	2200      	movs	r2, #0
 800527e:	771a      	strb	r2, [r3, #28]
 8005280:	68bb      	ldr	r3, [r7, #8]
 8005282:	f003 0304 	and.w	r3, r3, #4
 8005286:	2b00      	cmp	r3, #0
 8005288:	d020      	beq.n	80052cc <HAL_TIM_IRQHandler+0xb0>
 800528a:	68fb      	ldr	r3, [r7, #12]
 800528c:	f003 0304 	and.w	r3, r3, #4
 8005290:	2b00      	cmp	r3, #0
 8005292:	d01b      	beq.n	80052cc <HAL_TIM_IRQHandler+0xb0>
 8005294:	687b      	ldr	r3, [r7, #4]
 8005296:	681b      	ldr	r3, [r3, #0]
 8005298:	f06f 0204 	mvn.w	r2, #4
 800529c:	611a      	str	r2, [r3, #16]
 800529e:	687b      	ldr	r3, [r7, #4]
 80052a0:	2202      	movs	r2, #2
 80052a2:	771a      	strb	r2, [r3, #28]
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	681b      	ldr	r3, [r3, #0]
 80052a8:	699b      	ldr	r3, [r3, #24]
 80052aa:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80052ae:	2b00      	cmp	r3, #0
 80052b0:	d003      	beq.n	80052ba <HAL_TIM_IRQHandler+0x9e>
 80052b2:	6878      	ldr	r0, [r7, #4]
 80052b4:	f000 fa35 	bl	8005722 <HAL_TIM_IC_CaptureCallback>
 80052b8:	e005      	b.n	80052c6 <HAL_TIM_IRQHandler+0xaa>
 80052ba:	6878      	ldr	r0, [r7, #4]
 80052bc:	f000 fa27 	bl	800570e <HAL_TIM_OC_DelayElapsedCallback>
 80052c0:	6878      	ldr	r0, [r7, #4]
 80052c2:	f000 fa38 	bl	8005736 <HAL_TIM_PWM_PulseFinishedCallback>
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	2200      	movs	r2, #0
 80052ca:	771a      	strb	r2, [r3, #28]
 80052cc:	68bb      	ldr	r3, [r7, #8]
 80052ce:	f003 0308 	and.w	r3, r3, #8
 80052d2:	2b00      	cmp	r3, #0
 80052d4:	d020      	beq.n	8005318 <HAL_TIM_IRQHandler+0xfc>
 80052d6:	68fb      	ldr	r3, [r7, #12]
 80052d8:	f003 0308 	and.w	r3, r3, #8
 80052dc:	2b00      	cmp	r3, #0
 80052de:	d01b      	beq.n	8005318 <HAL_TIM_IRQHandler+0xfc>
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	f06f 0208 	mvn.w	r2, #8
 80052e8:	611a      	str	r2, [r3, #16]
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	2204      	movs	r2, #4
 80052ee:	771a      	strb	r2, [r3, #28]
 80052f0:	687b      	ldr	r3, [r7, #4]
 80052f2:	681b      	ldr	r3, [r3, #0]
 80052f4:	69db      	ldr	r3, [r3, #28]
 80052f6:	f003 0303 	and.w	r3, r3, #3
 80052fa:	2b00      	cmp	r3, #0
 80052fc:	d003      	beq.n	8005306 <HAL_TIM_IRQHandler+0xea>
 80052fe:	6878      	ldr	r0, [r7, #4]
 8005300:	f000 fa0f 	bl	8005722 <HAL_TIM_IC_CaptureCallback>
 8005304:	e005      	b.n	8005312 <HAL_TIM_IRQHandler+0xf6>
 8005306:	6878      	ldr	r0, [r7, #4]
 8005308:	f000 fa01 	bl	800570e <HAL_TIM_OC_DelayElapsedCallback>
 800530c:	6878      	ldr	r0, [r7, #4]
 800530e:	f000 fa12 	bl	8005736 <HAL_TIM_PWM_PulseFinishedCallback>
 8005312:	687b      	ldr	r3, [r7, #4]
 8005314:	2200      	movs	r2, #0
 8005316:	771a      	strb	r2, [r3, #28]
 8005318:	68bb      	ldr	r3, [r7, #8]
 800531a:	f003 0310 	and.w	r3, r3, #16
 800531e:	2b00      	cmp	r3, #0
 8005320:	d020      	beq.n	8005364 <HAL_TIM_IRQHandler+0x148>
 8005322:	68fb      	ldr	r3, [r7, #12]
 8005324:	f003 0310 	and.w	r3, r3, #16
 8005328:	2b00      	cmp	r3, #0
 800532a:	d01b      	beq.n	8005364 <HAL_TIM_IRQHandler+0x148>
 800532c:	687b      	ldr	r3, [r7, #4]
 800532e:	681b      	ldr	r3, [r3, #0]
 8005330:	f06f 0210 	mvn.w	r2, #16
 8005334:	611a      	str	r2, [r3, #16]
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	2208      	movs	r2, #8
 800533a:	771a      	strb	r2, [r3, #28]
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	69db      	ldr	r3, [r3, #28]
 8005342:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005346:	2b00      	cmp	r3, #0
 8005348:	d003      	beq.n	8005352 <HAL_TIM_IRQHandler+0x136>
 800534a:	6878      	ldr	r0, [r7, #4]
 800534c:	f000 f9e9 	bl	8005722 <HAL_TIM_IC_CaptureCallback>
 8005350:	e005      	b.n	800535e <HAL_TIM_IRQHandler+0x142>
 8005352:	6878      	ldr	r0, [r7, #4]
 8005354:	f000 f9db 	bl	800570e <HAL_TIM_OC_DelayElapsedCallback>
 8005358:	6878      	ldr	r0, [r7, #4]
 800535a:	f000 f9ec 	bl	8005736 <HAL_TIM_PWM_PulseFinishedCallback>
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	2200      	movs	r2, #0
 8005362:	771a      	strb	r2, [r3, #28]
 8005364:	68bb      	ldr	r3, [r7, #8]
 8005366:	f003 0301 	and.w	r3, r3, #1
 800536a:	2b00      	cmp	r3, #0
 800536c:	d00c      	beq.n	8005388 <HAL_TIM_IRQHandler+0x16c>
 800536e:	68fb      	ldr	r3, [r7, #12]
 8005370:	f003 0301 	and.w	r3, r3, #1
 8005374:	2b00      	cmp	r3, #0
 8005376:	d007      	beq.n	8005388 <HAL_TIM_IRQHandler+0x16c>
 8005378:	687b      	ldr	r3, [r7, #4]
 800537a:	681b      	ldr	r3, [r3, #0]
 800537c:	f06f 0201 	mvn.w	r2, #1
 8005380:	611a      	str	r2, [r3, #16]
 8005382:	6878      	ldr	r0, [r7, #4]
 8005384:	f7fc faae 	bl	80018e4 <HAL_TIM_PeriodElapsedCallback>
 8005388:	68bb      	ldr	r3, [r7, #8]
 800538a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800538e:	2b00      	cmp	r3, #0
 8005390:	d00c      	beq.n	80053ac <HAL_TIM_IRQHandler+0x190>
 8005392:	68fb      	ldr	r3, [r7, #12]
 8005394:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005398:	2b00      	cmp	r3, #0
 800539a:	d007      	beq.n	80053ac <HAL_TIM_IRQHandler+0x190>
 800539c:	687b      	ldr	r3, [r7, #4]
 800539e:	681b      	ldr	r3, [r3, #0]
 80053a0:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80053a4:	611a      	str	r2, [r3, #16]
 80053a6:	6878      	ldr	r0, [r7, #4]
 80053a8:	f000 fd7c 	bl	8005ea4 <HAL_TIMEx_BreakCallback>
 80053ac:	68bb      	ldr	r3, [r7, #8]
 80053ae:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80053b2:	2b00      	cmp	r3, #0
 80053b4:	d00c      	beq.n	80053d0 <HAL_TIM_IRQHandler+0x1b4>
 80053b6:	68fb      	ldr	r3, [r7, #12]
 80053b8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80053bc:	2b00      	cmp	r3, #0
 80053be:	d007      	beq.n	80053d0 <HAL_TIM_IRQHandler+0x1b4>
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	681b      	ldr	r3, [r3, #0]
 80053c4:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80053c8:	611a      	str	r2, [r3, #16]
 80053ca:	6878      	ldr	r0, [r7, #4]
 80053cc:	f000 f9bd 	bl	800574a <HAL_TIM_TriggerCallback>
 80053d0:	68bb      	ldr	r3, [r7, #8]
 80053d2:	f003 0320 	and.w	r3, r3, #32
 80053d6:	2b00      	cmp	r3, #0
 80053d8:	d00c      	beq.n	80053f4 <HAL_TIM_IRQHandler+0x1d8>
 80053da:	68fb      	ldr	r3, [r7, #12]
 80053dc:	f003 0320 	and.w	r3, r3, #32
 80053e0:	2b00      	cmp	r3, #0
 80053e2:	d007      	beq.n	80053f4 <HAL_TIM_IRQHandler+0x1d8>
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	681b      	ldr	r3, [r3, #0]
 80053e8:	f06f 0220 	mvn.w	r2, #32
 80053ec:	611a      	str	r2, [r3, #16]
 80053ee:	6878      	ldr	r0, [r7, #4]
 80053f0:	f000 fd4e 	bl	8005e90 <HAL_TIMEx_CommutCallback>
 80053f4:	bf00      	nop
 80053f6:	3710      	adds	r7, #16
 80053f8:	46bd      	mov	sp, r7
 80053fa:	bd80      	pop	{r7, pc}

080053fc <HAL_TIM_PWM_ConfigChannel>:
 80053fc:	b580      	push	{r7, lr}
 80053fe:	b086      	sub	sp, #24
 8005400:	af00      	add	r7, sp, #0
 8005402:	60f8      	str	r0, [r7, #12]
 8005404:	60b9      	str	r1, [r7, #8]
 8005406:	607a      	str	r2, [r7, #4]
 8005408:	2300      	movs	r3, #0
 800540a:	75fb      	strb	r3, [r7, #23]
 800540c:	68fb      	ldr	r3, [r7, #12]
 800540e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005412:	2b01      	cmp	r3, #1
 8005414:	d101      	bne.n	800541a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8005416:	2302      	movs	r3, #2
 8005418:	e0ae      	b.n	8005578 <HAL_TIM_PWM_ConfigChannel+0x17c>
 800541a:	68fb      	ldr	r3, [r7, #12]
 800541c:	2201      	movs	r2, #1
 800541e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005422:	687b      	ldr	r3, [r7, #4]
 8005424:	2b0c      	cmp	r3, #12
 8005426:	f200 809f 	bhi.w	8005568 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800542a:	a201      	add	r2, pc, #4	@ (adr r2, 8005430 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800542c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005430:	08005465 	.word	0x08005465
 8005434:	08005569 	.word	0x08005569
 8005438:	08005569 	.word	0x08005569
 800543c:	08005569 	.word	0x08005569
 8005440:	080054a5 	.word	0x080054a5
 8005444:	08005569 	.word	0x08005569
 8005448:	08005569 	.word	0x08005569
 800544c:	08005569 	.word	0x08005569
 8005450:	080054e7 	.word	0x080054e7
 8005454:	08005569 	.word	0x08005569
 8005458:	08005569 	.word	0x08005569
 800545c:	08005569 	.word	0x08005569
 8005460:	08005527 	.word	0x08005527
 8005464:	68fb      	ldr	r3, [r7, #12]
 8005466:	681b      	ldr	r3, [r3, #0]
 8005468:	68b9      	ldr	r1, [r7, #8]
 800546a:	4618      	mov	r0, r3
 800546c:	f000 fa24 	bl	80058b8 <TIM_OC1_SetConfig>
 8005470:	68fb      	ldr	r3, [r7, #12]
 8005472:	681b      	ldr	r3, [r3, #0]
 8005474:	699a      	ldr	r2, [r3, #24]
 8005476:	68fb      	ldr	r3, [r7, #12]
 8005478:	681b      	ldr	r3, [r3, #0]
 800547a:	f042 0208 	orr.w	r2, r2, #8
 800547e:	619a      	str	r2, [r3, #24]
 8005480:	68fb      	ldr	r3, [r7, #12]
 8005482:	681b      	ldr	r3, [r3, #0]
 8005484:	699a      	ldr	r2, [r3, #24]
 8005486:	68fb      	ldr	r3, [r7, #12]
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	f022 0204 	bic.w	r2, r2, #4
 800548e:	619a      	str	r2, [r3, #24]
 8005490:	68fb      	ldr	r3, [r7, #12]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	6999      	ldr	r1, [r3, #24]
 8005496:	68bb      	ldr	r3, [r7, #8]
 8005498:	691a      	ldr	r2, [r3, #16]
 800549a:	68fb      	ldr	r3, [r7, #12]
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	430a      	orrs	r2, r1
 80054a0:	619a      	str	r2, [r3, #24]
 80054a2:	e064      	b.n	800556e <HAL_TIM_PWM_ConfigChannel+0x172>
 80054a4:	68fb      	ldr	r3, [r7, #12]
 80054a6:	681b      	ldr	r3, [r3, #0]
 80054a8:	68b9      	ldr	r1, [r7, #8]
 80054aa:	4618      	mov	r0, r3
 80054ac:	f000 fa74 	bl	8005998 <TIM_OC2_SetConfig>
 80054b0:	68fb      	ldr	r3, [r7, #12]
 80054b2:	681b      	ldr	r3, [r3, #0]
 80054b4:	699a      	ldr	r2, [r3, #24]
 80054b6:	68fb      	ldr	r3, [r7, #12]
 80054b8:	681b      	ldr	r3, [r3, #0]
 80054ba:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80054be:	619a      	str	r2, [r3, #24]
 80054c0:	68fb      	ldr	r3, [r7, #12]
 80054c2:	681b      	ldr	r3, [r3, #0]
 80054c4:	699a      	ldr	r2, [r3, #24]
 80054c6:	68fb      	ldr	r3, [r7, #12]
 80054c8:	681b      	ldr	r3, [r3, #0]
 80054ca:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80054ce:	619a      	str	r2, [r3, #24]
 80054d0:	68fb      	ldr	r3, [r7, #12]
 80054d2:	681b      	ldr	r3, [r3, #0]
 80054d4:	6999      	ldr	r1, [r3, #24]
 80054d6:	68bb      	ldr	r3, [r7, #8]
 80054d8:	691b      	ldr	r3, [r3, #16]
 80054da:	021a      	lsls	r2, r3, #8
 80054dc:	68fb      	ldr	r3, [r7, #12]
 80054de:	681b      	ldr	r3, [r3, #0]
 80054e0:	430a      	orrs	r2, r1
 80054e2:	619a      	str	r2, [r3, #24]
 80054e4:	e043      	b.n	800556e <HAL_TIM_PWM_ConfigChannel+0x172>
 80054e6:	68fb      	ldr	r3, [r7, #12]
 80054e8:	681b      	ldr	r3, [r3, #0]
 80054ea:	68b9      	ldr	r1, [r7, #8]
 80054ec:	4618      	mov	r0, r3
 80054ee:	f000 fac9 	bl	8005a84 <TIM_OC3_SetConfig>
 80054f2:	68fb      	ldr	r3, [r7, #12]
 80054f4:	681b      	ldr	r3, [r3, #0]
 80054f6:	69da      	ldr	r2, [r3, #28]
 80054f8:	68fb      	ldr	r3, [r7, #12]
 80054fa:	681b      	ldr	r3, [r3, #0]
 80054fc:	f042 0208 	orr.w	r2, r2, #8
 8005500:	61da      	str	r2, [r3, #28]
 8005502:	68fb      	ldr	r3, [r7, #12]
 8005504:	681b      	ldr	r3, [r3, #0]
 8005506:	69da      	ldr	r2, [r3, #28]
 8005508:	68fb      	ldr	r3, [r7, #12]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	f022 0204 	bic.w	r2, r2, #4
 8005510:	61da      	str	r2, [r3, #28]
 8005512:	68fb      	ldr	r3, [r7, #12]
 8005514:	681b      	ldr	r3, [r3, #0]
 8005516:	69d9      	ldr	r1, [r3, #28]
 8005518:	68bb      	ldr	r3, [r7, #8]
 800551a:	691a      	ldr	r2, [r3, #16]
 800551c:	68fb      	ldr	r3, [r7, #12]
 800551e:	681b      	ldr	r3, [r3, #0]
 8005520:	430a      	orrs	r2, r1
 8005522:	61da      	str	r2, [r3, #28]
 8005524:	e023      	b.n	800556e <HAL_TIM_PWM_ConfigChannel+0x172>
 8005526:	68fb      	ldr	r3, [r7, #12]
 8005528:	681b      	ldr	r3, [r3, #0]
 800552a:	68b9      	ldr	r1, [r7, #8]
 800552c:	4618      	mov	r0, r3
 800552e:	f000 fb1d 	bl	8005b6c <TIM_OC4_SetConfig>
 8005532:	68fb      	ldr	r3, [r7, #12]
 8005534:	681b      	ldr	r3, [r3, #0]
 8005536:	69da      	ldr	r2, [r3, #28]
 8005538:	68fb      	ldr	r3, [r7, #12]
 800553a:	681b      	ldr	r3, [r3, #0]
 800553c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005540:	61da      	str	r2, [r3, #28]
 8005542:	68fb      	ldr	r3, [r7, #12]
 8005544:	681b      	ldr	r3, [r3, #0]
 8005546:	69da      	ldr	r2, [r3, #28]
 8005548:	68fb      	ldr	r3, [r7, #12]
 800554a:	681b      	ldr	r3, [r3, #0]
 800554c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005550:	61da      	str	r2, [r3, #28]
 8005552:	68fb      	ldr	r3, [r7, #12]
 8005554:	681b      	ldr	r3, [r3, #0]
 8005556:	69d9      	ldr	r1, [r3, #28]
 8005558:	68bb      	ldr	r3, [r7, #8]
 800555a:	691b      	ldr	r3, [r3, #16]
 800555c:	021a      	lsls	r2, r3, #8
 800555e:	68fb      	ldr	r3, [r7, #12]
 8005560:	681b      	ldr	r3, [r3, #0]
 8005562:	430a      	orrs	r2, r1
 8005564:	61da      	str	r2, [r3, #28]
 8005566:	e002      	b.n	800556e <HAL_TIM_PWM_ConfigChannel+0x172>
 8005568:	2301      	movs	r3, #1
 800556a:	75fb      	strb	r3, [r7, #23]
 800556c:	bf00      	nop
 800556e:	68fb      	ldr	r3, [r7, #12]
 8005570:	2200      	movs	r2, #0
 8005572:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005576:	7dfb      	ldrb	r3, [r7, #23]
 8005578:	4618      	mov	r0, r3
 800557a:	3718      	adds	r7, #24
 800557c:	46bd      	mov	sp, r7
 800557e:	bd80      	pop	{r7, pc}

08005580 <HAL_TIM_ConfigClockSource>:
 8005580:	b580      	push	{r7, lr}
 8005582:	b084      	sub	sp, #16
 8005584:	af00      	add	r7, sp, #0
 8005586:	6078      	str	r0, [r7, #4]
 8005588:	6039      	str	r1, [r7, #0]
 800558a:	2300      	movs	r3, #0
 800558c:	73fb      	strb	r3, [r7, #15]
 800558e:	687b      	ldr	r3, [r7, #4]
 8005590:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005594:	2b01      	cmp	r3, #1
 8005596:	d101      	bne.n	800559c <HAL_TIM_ConfigClockSource+0x1c>
 8005598:	2302      	movs	r3, #2
 800559a:	e0b4      	b.n	8005706 <HAL_TIM_ConfigClockSource+0x186>
 800559c:	687b      	ldr	r3, [r7, #4]
 800559e:	2201      	movs	r2, #1
 80055a0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80055a4:	687b      	ldr	r3, [r7, #4]
 80055a6:	2202      	movs	r2, #2
 80055a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80055ac:	687b      	ldr	r3, [r7, #4]
 80055ae:	681b      	ldr	r3, [r3, #0]
 80055b0:	689b      	ldr	r3, [r3, #8]
 80055b2:	60bb      	str	r3, [r7, #8]
 80055b4:	68bb      	ldr	r3, [r7, #8]
 80055b6:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 80055ba:	60bb      	str	r3, [r7, #8]
 80055bc:	68bb      	ldr	r3, [r7, #8]
 80055be:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80055c2:	60bb      	str	r3, [r7, #8]
 80055c4:	687b      	ldr	r3, [r7, #4]
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	68ba      	ldr	r2, [r7, #8]
 80055ca:	609a      	str	r2, [r3, #8]
 80055cc:	683b      	ldr	r3, [r7, #0]
 80055ce:	681b      	ldr	r3, [r3, #0]
 80055d0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80055d4:	d03e      	beq.n	8005654 <HAL_TIM_ConfigClockSource+0xd4>
 80055d6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80055da:	f200 8087 	bhi.w	80056ec <HAL_TIM_ConfigClockSource+0x16c>
 80055de:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80055e2:	f000 8086 	beq.w	80056f2 <HAL_TIM_ConfigClockSource+0x172>
 80055e6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80055ea:	d87f      	bhi.n	80056ec <HAL_TIM_ConfigClockSource+0x16c>
 80055ec:	2b70      	cmp	r3, #112	@ 0x70
 80055ee:	d01a      	beq.n	8005626 <HAL_TIM_ConfigClockSource+0xa6>
 80055f0:	2b70      	cmp	r3, #112	@ 0x70
 80055f2:	d87b      	bhi.n	80056ec <HAL_TIM_ConfigClockSource+0x16c>
 80055f4:	2b60      	cmp	r3, #96	@ 0x60
 80055f6:	d050      	beq.n	800569a <HAL_TIM_ConfigClockSource+0x11a>
 80055f8:	2b60      	cmp	r3, #96	@ 0x60
 80055fa:	d877      	bhi.n	80056ec <HAL_TIM_ConfigClockSource+0x16c>
 80055fc:	2b50      	cmp	r3, #80	@ 0x50
 80055fe:	d03c      	beq.n	800567a <HAL_TIM_ConfigClockSource+0xfa>
 8005600:	2b50      	cmp	r3, #80	@ 0x50
 8005602:	d873      	bhi.n	80056ec <HAL_TIM_ConfigClockSource+0x16c>
 8005604:	2b40      	cmp	r3, #64	@ 0x40
 8005606:	d058      	beq.n	80056ba <HAL_TIM_ConfigClockSource+0x13a>
 8005608:	2b40      	cmp	r3, #64	@ 0x40
 800560a:	d86f      	bhi.n	80056ec <HAL_TIM_ConfigClockSource+0x16c>
 800560c:	2b30      	cmp	r3, #48	@ 0x30
 800560e:	d064      	beq.n	80056da <HAL_TIM_ConfigClockSource+0x15a>
 8005610:	2b30      	cmp	r3, #48	@ 0x30
 8005612:	d86b      	bhi.n	80056ec <HAL_TIM_ConfigClockSource+0x16c>
 8005614:	2b20      	cmp	r3, #32
 8005616:	d060      	beq.n	80056da <HAL_TIM_ConfigClockSource+0x15a>
 8005618:	2b20      	cmp	r3, #32
 800561a:	d867      	bhi.n	80056ec <HAL_TIM_ConfigClockSource+0x16c>
 800561c:	2b00      	cmp	r3, #0
 800561e:	d05c      	beq.n	80056da <HAL_TIM_ConfigClockSource+0x15a>
 8005620:	2b10      	cmp	r3, #16
 8005622:	d05a      	beq.n	80056da <HAL_TIM_ConfigClockSource+0x15a>
 8005624:	e062      	b.n	80056ec <HAL_TIM_ConfigClockSource+0x16c>
 8005626:	687b      	ldr	r3, [r7, #4]
 8005628:	6818      	ldr	r0, [r3, #0]
 800562a:	683b      	ldr	r3, [r7, #0]
 800562c:	6899      	ldr	r1, [r3, #8]
 800562e:	683b      	ldr	r3, [r7, #0]
 8005630:	685a      	ldr	r2, [r3, #4]
 8005632:	683b      	ldr	r3, [r7, #0]
 8005634:	68db      	ldr	r3, [r3, #12]
 8005636:	f000 fb69 	bl	8005d0c <TIM_ETR_SetConfig>
 800563a:	687b      	ldr	r3, [r7, #4]
 800563c:	681b      	ldr	r3, [r3, #0]
 800563e:	689b      	ldr	r3, [r3, #8]
 8005640:	60bb      	str	r3, [r7, #8]
 8005642:	68bb      	ldr	r3, [r7, #8]
 8005644:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8005648:	60bb      	str	r3, [r7, #8]
 800564a:	687b      	ldr	r3, [r7, #4]
 800564c:	681b      	ldr	r3, [r3, #0]
 800564e:	68ba      	ldr	r2, [r7, #8]
 8005650:	609a      	str	r2, [r3, #8]
 8005652:	e04f      	b.n	80056f4 <HAL_TIM_ConfigClockSource+0x174>
 8005654:	687b      	ldr	r3, [r7, #4]
 8005656:	6818      	ldr	r0, [r3, #0]
 8005658:	683b      	ldr	r3, [r7, #0]
 800565a:	6899      	ldr	r1, [r3, #8]
 800565c:	683b      	ldr	r3, [r7, #0]
 800565e:	685a      	ldr	r2, [r3, #4]
 8005660:	683b      	ldr	r3, [r7, #0]
 8005662:	68db      	ldr	r3, [r3, #12]
 8005664:	f000 fb52 	bl	8005d0c <TIM_ETR_SetConfig>
 8005668:	687b      	ldr	r3, [r7, #4]
 800566a:	681b      	ldr	r3, [r3, #0]
 800566c:	689a      	ldr	r2, [r3, #8]
 800566e:	687b      	ldr	r3, [r7, #4]
 8005670:	681b      	ldr	r3, [r3, #0]
 8005672:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005676:	609a      	str	r2, [r3, #8]
 8005678:	e03c      	b.n	80056f4 <HAL_TIM_ConfigClockSource+0x174>
 800567a:	687b      	ldr	r3, [r7, #4]
 800567c:	6818      	ldr	r0, [r3, #0]
 800567e:	683b      	ldr	r3, [r7, #0]
 8005680:	6859      	ldr	r1, [r3, #4]
 8005682:	683b      	ldr	r3, [r7, #0]
 8005684:	68db      	ldr	r3, [r3, #12]
 8005686:	461a      	mov	r2, r3
 8005688:	f000 fac6 	bl	8005c18 <TIM_TI1_ConfigInputStage>
 800568c:	687b      	ldr	r3, [r7, #4]
 800568e:	681b      	ldr	r3, [r3, #0]
 8005690:	2150      	movs	r1, #80	@ 0x50
 8005692:	4618      	mov	r0, r3
 8005694:	f000 fb1f 	bl	8005cd6 <TIM_ITRx_SetConfig>
 8005698:	e02c      	b.n	80056f4 <HAL_TIM_ConfigClockSource+0x174>
 800569a:	687b      	ldr	r3, [r7, #4]
 800569c:	6818      	ldr	r0, [r3, #0]
 800569e:	683b      	ldr	r3, [r7, #0]
 80056a0:	6859      	ldr	r1, [r3, #4]
 80056a2:	683b      	ldr	r3, [r7, #0]
 80056a4:	68db      	ldr	r3, [r3, #12]
 80056a6:	461a      	mov	r2, r3
 80056a8:	f000 fae5 	bl	8005c76 <TIM_TI2_ConfigInputStage>
 80056ac:	687b      	ldr	r3, [r7, #4]
 80056ae:	681b      	ldr	r3, [r3, #0]
 80056b0:	2160      	movs	r1, #96	@ 0x60
 80056b2:	4618      	mov	r0, r3
 80056b4:	f000 fb0f 	bl	8005cd6 <TIM_ITRx_SetConfig>
 80056b8:	e01c      	b.n	80056f4 <HAL_TIM_ConfigClockSource+0x174>
 80056ba:	687b      	ldr	r3, [r7, #4]
 80056bc:	6818      	ldr	r0, [r3, #0]
 80056be:	683b      	ldr	r3, [r7, #0]
 80056c0:	6859      	ldr	r1, [r3, #4]
 80056c2:	683b      	ldr	r3, [r7, #0]
 80056c4:	68db      	ldr	r3, [r3, #12]
 80056c6:	461a      	mov	r2, r3
 80056c8:	f000 faa6 	bl	8005c18 <TIM_TI1_ConfigInputStage>
 80056cc:	687b      	ldr	r3, [r7, #4]
 80056ce:	681b      	ldr	r3, [r3, #0]
 80056d0:	2140      	movs	r1, #64	@ 0x40
 80056d2:	4618      	mov	r0, r3
 80056d4:	f000 faff 	bl	8005cd6 <TIM_ITRx_SetConfig>
 80056d8:	e00c      	b.n	80056f4 <HAL_TIM_ConfigClockSource+0x174>
 80056da:	687b      	ldr	r3, [r7, #4]
 80056dc:	681a      	ldr	r2, [r3, #0]
 80056de:	683b      	ldr	r3, [r7, #0]
 80056e0:	681b      	ldr	r3, [r3, #0]
 80056e2:	4619      	mov	r1, r3
 80056e4:	4610      	mov	r0, r2
 80056e6:	f000 faf6 	bl	8005cd6 <TIM_ITRx_SetConfig>
 80056ea:	e003      	b.n	80056f4 <HAL_TIM_ConfigClockSource+0x174>
 80056ec:	2301      	movs	r3, #1
 80056ee:	73fb      	strb	r3, [r7, #15]
 80056f0:	e000      	b.n	80056f4 <HAL_TIM_ConfigClockSource+0x174>
 80056f2:	bf00      	nop
 80056f4:	687b      	ldr	r3, [r7, #4]
 80056f6:	2201      	movs	r2, #1
 80056f8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80056fc:	687b      	ldr	r3, [r7, #4]
 80056fe:	2200      	movs	r2, #0
 8005700:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005704:	7bfb      	ldrb	r3, [r7, #15]
 8005706:	4618      	mov	r0, r3
 8005708:	3710      	adds	r7, #16
 800570a:	46bd      	mov	sp, r7
 800570c:	bd80      	pop	{r7, pc}

0800570e <HAL_TIM_OC_DelayElapsedCallback>:
 800570e:	b480      	push	{r7}
 8005710:	b083      	sub	sp, #12
 8005712:	af00      	add	r7, sp, #0
 8005714:	6078      	str	r0, [r7, #4]
 8005716:	bf00      	nop
 8005718:	370c      	adds	r7, #12
 800571a:	46bd      	mov	sp, r7
 800571c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005720:	4770      	bx	lr

08005722 <HAL_TIM_IC_CaptureCallback>:
 8005722:	b480      	push	{r7}
 8005724:	b083      	sub	sp, #12
 8005726:	af00      	add	r7, sp, #0
 8005728:	6078      	str	r0, [r7, #4]
 800572a:	bf00      	nop
 800572c:	370c      	adds	r7, #12
 800572e:	46bd      	mov	sp, r7
 8005730:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005734:	4770      	bx	lr

08005736 <HAL_TIM_PWM_PulseFinishedCallback>:
 8005736:	b480      	push	{r7}
 8005738:	b083      	sub	sp, #12
 800573a:	af00      	add	r7, sp, #0
 800573c:	6078      	str	r0, [r7, #4]
 800573e:	bf00      	nop
 8005740:	370c      	adds	r7, #12
 8005742:	46bd      	mov	sp, r7
 8005744:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005748:	4770      	bx	lr

0800574a <HAL_TIM_TriggerCallback>:
 800574a:	b480      	push	{r7}
 800574c:	b083      	sub	sp, #12
 800574e:	af00      	add	r7, sp, #0
 8005750:	6078      	str	r0, [r7, #4]
 8005752:	bf00      	nop
 8005754:	370c      	adds	r7, #12
 8005756:	46bd      	mov	sp, r7
 8005758:	f85d 7b04 	ldr.w	r7, [sp], #4
 800575c:	4770      	bx	lr
	...

08005760 <TIM_Base_SetConfig>:
 8005760:	b480      	push	{r7}
 8005762:	b085      	sub	sp, #20
 8005764:	af00      	add	r7, sp, #0
 8005766:	6078      	str	r0, [r7, #4]
 8005768:	6039      	str	r1, [r7, #0]
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	681b      	ldr	r3, [r3, #0]
 800576e:	60fb      	str	r3, [r7, #12]
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	4a46      	ldr	r2, [pc, #280]	@ (800588c <TIM_Base_SetConfig+0x12c>)
 8005774:	4293      	cmp	r3, r2
 8005776:	d013      	beq.n	80057a0 <TIM_Base_SetConfig+0x40>
 8005778:	687b      	ldr	r3, [r7, #4]
 800577a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800577e:	d00f      	beq.n	80057a0 <TIM_Base_SetConfig+0x40>
 8005780:	687b      	ldr	r3, [r7, #4]
 8005782:	4a43      	ldr	r2, [pc, #268]	@ (8005890 <TIM_Base_SetConfig+0x130>)
 8005784:	4293      	cmp	r3, r2
 8005786:	d00b      	beq.n	80057a0 <TIM_Base_SetConfig+0x40>
 8005788:	687b      	ldr	r3, [r7, #4]
 800578a:	4a42      	ldr	r2, [pc, #264]	@ (8005894 <TIM_Base_SetConfig+0x134>)
 800578c:	4293      	cmp	r3, r2
 800578e:	d007      	beq.n	80057a0 <TIM_Base_SetConfig+0x40>
 8005790:	687b      	ldr	r3, [r7, #4]
 8005792:	4a41      	ldr	r2, [pc, #260]	@ (8005898 <TIM_Base_SetConfig+0x138>)
 8005794:	4293      	cmp	r3, r2
 8005796:	d003      	beq.n	80057a0 <TIM_Base_SetConfig+0x40>
 8005798:	687b      	ldr	r3, [r7, #4]
 800579a:	4a40      	ldr	r2, [pc, #256]	@ (800589c <TIM_Base_SetConfig+0x13c>)
 800579c:	4293      	cmp	r3, r2
 800579e:	d108      	bne.n	80057b2 <TIM_Base_SetConfig+0x52>
 80057a0:	68fb      	ldr	r3, [r7, #12]
 80057a2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80057a6:	60fb      	str	r3, [r7, #12]
 80057a8:	683b      	ldr	r3, [r7, #0]
 80057aa:	685b      	ldr	r3, [r3, #4]
 80057ac:	68fa      	ldr	r2, [r7, #12]
 80057ae:	4313      	orrs	r3, r2
 80057b0:	60fb      	str	r3, [r7, #12]
 80057b2:	687b      	ldr	r3, [r7, #4]
 80057b4:	4a35      	ldr	r2, [pc, #212]	@ (800588c <TIM_Base_SetConfig+0x12c>)
 80057b6:	4293      	cmp	r3, r2
 80057b8:	d02b      	beq.n	8005812 <TIM_Base_SetConfig+0xb2>
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80057c0:	d027      	beq.n	8005812 <TIM_Base_SetConfig+0xb2>
 80057c2:	687b      	ldr	r3, [r7, #4]
 80057c4:	4a32      	ldr	r2, [pc, #200]	@ (8005890 <TIM_Base_SetConfig+0x130>)
 80057c6:	4293      	cmp	r3, r2
 80057c8:	d023      	beq.n	8005812 <TIM_Base_SetConfig+0xb2>
 80057ca:	687b      	ldr	r3, [r7, #4]
 80057cc:	4a31      	ldr	r2, [pc, #196]	@ (8005894 <TIM_Base_SetConfig+0x134>)
 80057ce:	4293      	cmp	r3, r2
 80057d0:	d01f      	beq.n	8005812 <TIM_Base_SetConfig+0xb2>
 80057d2:	687b      	ldr	r3, [r7, #4]
 80057d4:	4a30      	ldr	r2, [pc, #192]	@ (8005898 <TIM_Base_SetConfig+0x138>)
 80057d6:	4293      	cmp	r3, r2
 80057d8:	d01b      	beq.n	8005812 <TIM_Base_SetConfig+0xb2>
 80057da:	687b      	ldr	r3, [r7, #4]
 80057dc:	4a2f      	ldr	r2, [pc, #188]	@ (800589c <TIM_Base_SetConfig+0x13c>)
 80057de:	4293      	cmp	r3, r2
 80057e0:	d017      	beq.n	8005812 <TIM_Base_SetConfig+0xb2>
 80057e2:	687b      	ldr	r3, [r7, #4]
 80057e4:	4a2e      	ldr	r2, [pc, #184]	@ (80058a0 <TIM_Base_SetConfig+0x140>)
 80057e6:	4293      	cmp	r3, r2
 80057e8:	d013      	beq.n	8005812 <TIM_Base_SetConfig+0xb2>
 80057ea:	687b      	ldr	r3, [r7, #4]
 80057ec:	4a2d      	ldr	r2, [pc, #180]	@ (80058a4 <TIM_Base_SetConfig+0x144>)
 80057ee:	4293      	cmp	r3, r2
 80057f0:	d00f      	beq.n	8005812 <TIM_Base_SetConfig+0xb2>
 80057f2:	687b      	ldr	r3, [r7, #4]
 80057f4:	4a2c      	ldr	r2, [pc, #176]	@ (80058a8 <TIM_Base_SetConfig+0x148>)
 80057f6:	4293      	cmp	r3, r2
 80057f8:	d00b      	beq.n	8005812 <TIM_Base_SetConfig+0xb2>
 80057fa:	687b      	ldr	r3, [r7, #4]
 80057fc:	4a2b      	ldr	r2, [pc, #172]	@ (80058ac <TIM_Base_SetConfig+0x14c>)
 80057fe:	4293      	cmp	r3, r2
 8005800:	d007      	beq.n	8005812 <TIM_Base_SetConfig+0xb2>
 8005802:	687b      	ldr	r3, [r7, #4]
 8005804:	4a2a      	ldr	r2, [pc, #168]	@ (80058b0 <TIM_Base_SetConfig+0x150>)
 8005806:	4293      	cmp	r3, r2
 8005808:	d003      	beq.n	8005812 <TIM_Base_SetConfig+0xb2>
 800580a:	687b      	ldr	r3, [r7, #4]
 800580c:	4a29      	ldr	r2, [pc, #164]	@ (80058b4 <TIM_Base_SetConfig+0x154>)
 800580e:	4293      	cmp	r3, r2
 8005810:	d108      	bne.n	8005824 <TIM_Base_SetConfig+0xc4>
 8005812:	68fb      	ldr	r3, [r7, #12]
 8005814:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005818:	60fb      	str	r3, [r7, #12]
 800581a:	683b      	ldr	r3, [r7, #0]
 800581c:	68db      	ldr	r3, [r3, #12]
 800581e:	68fa      	ldr	r2, [r7, #12]
 8005820:	4313      	orrs	r3, r2
 8005822:	60fb      	str	r3, [r7, #12]
 8005824:	68fb      	ldr	r3, [r7, #12]
 8005826:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800582a:	683b      	ldr	r3, [r7, #0]
 800582c:	695b      	ldr	r3, [r3, #20]
 800582e:	4313      	orrs	r3, r2
 8005830:	60fb      	str	r3, [r7, #12]
 8005832:	687b      	ldr	r3, [r7, #4]
 8005834:	68fa      	ldr	r2, [r7, #12]
 8005836:	601a      	str	r2, [r3, #0]
 8005838:	683b      	ldr	r3, [r7, #0]
 800583a:	689a      	ldr	r2, [r3, #8]
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005840:	683b      	ldr	r3, [r7, #0]
 8005842:	681a      	ldr	r2, [r3, #0]
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	629a      	str	r2, [r3, #40]	@ 0x28
 8005848:	687b      	ldr	r3, [r7, #4]
 800584a:	4a10      	ldr	r2, [pc, #64]	@ (800588c <TIM_Base_SetConfig+0x12c>)
 800584c:	4293      	cmp	r3, r2
 800584e:	d003      	beq.n	8005858 <TIM_Base_SetConfig+0xf8>
 8005850:	687b      	ldr	r3, [r7, #4]
 8005852:	4a12      	ldr	r2, [pc, #72]	@ (800589c <TIM_Base_SetConfig+0x13c>)
 8005854:	4293      	cmp	r3, r2
 8005856:	d103      	bne.n	8005860 <TIM_Base_SetConfig+0x100>
 8005858:	683b      	ldr	r3, [r7, #0]
 800585a:	691a      	ldr	r2, [r3, #16]
 800585c:	687b      	ldr	r3, [r7, #4]
 800585e:	631a      	str	r2, [r3, #48]	@ 0x30
 8005860:	687b      	ldr	r3, [r7, #4]
 8005862:	2201      	movs	r2, #1
 8005864:	615a      	str	r2, [r3, #20]
 8005866:	687b      	ldr	r3, [r7, #4]
 8005868:	691b      	ldr	r3, [r3, #16]
 800586a:	f003 0301 	and.w	r3, r3, #1
 800586e:	2b01      	cmp	r3, #1
 8005870:	d105      	bne.n	800587e <TIM_Base_SetConfig+0x11e>
 8005872:	687b      	ldr	r3, [r7, #4]
 8005874:	691b      	ldr	r3, [r3, #16]
 8005876:	f023 0201 	bic.w	r2, r3, #1
 800587a:	687b      	ldr	r3, [r7, #4]
 800587c:	611a      	str	r2, [r3, #16]
 800587e:	bf00      	nop
 8005880:	3714      	adds	r7, #20
 8005882:	46bd      	mov	sp, r7
 8005884:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005888:	4770      	bx	lr
 800588a:	bf00      	nop
 800588c:	40010000 	.word	0x40010000
 8005890:	40000400 	.word	0x40000400
 8005894:	40000800 	.word	0x40000800
 8005898:	40000c00 	.word	0x40000c00
 800589c:	40010400 	.word	0x40010400
 80058a0:	40014000 	.word	0x40014000
 80058a4:	40014400 	.word	0x40014400
 80058a8:	40014800 	.word	0x40014800
 80058ac:	40001800 	.word	0x40001800
 80058b0:	40001c00 	.word	0x40001c00
 80058b4:	40002000 	.word	0x40002000

080058b8 <TIM_OC1_SetConfig>:
 80058b8:	b480      	push	{r7}
 80058ba:	b087      	sub	sp, #28
 80058bc:	af00      	add	r7, sp, #0
 80058be:	6078      	str	r0, [r7, #4]
 80058c0:	6039      	str	r1, [r7, #0]
 80058c2:	687b      	ldr	r3, [r7, #4]
 80058c4:	6a1b      	ldr	r3, [r3, #32]
 80058c6:	617b      	str	r3, [r7, #20]
 80058c8:	687b      	ldr	r3, [r7, #4]
 80058ca:	6a1b      	ldr	r3, [r3, #32]
 80058cc:	f023 0201 	bic.w	r2, r3, #1
 80058d0:	687b      	ldr	r3, [r7, #4]
 80058d2:	621a      	str	r2, [r3, #32]
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	685b      	ldr	r3, [r3, #4]
 80058d8:	613b      	str	r3, [r7, #16]
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	699b      	ldr	r3, [r3, #24]
 80058de:	60fb      	str	r3, [r7, #12]
 80058e0:	68fb      	ldr	r3, [r7, #12]
 80058e2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80058e6:	60fb      	str	r3, [r7, #12]
 80058e8:	68fb      	ldr	r3, [r7, #12]
 80058ea:	f023 0303 	bic.w	r3, r3, #3
 80058ee:	60fb      	str	r3, [r7, #12]
 80058f0:	683b      	ldr	r3, [r7, #0]
 80058f2:	681b      	ldr	r3, [r3, #0]
 80058f4:	68fa      	ldr	r2, [r7, #12]
 80058f6:	4313      	orrs	r3, r2
 80058f8:	60fb      	str	r3, [r7, #12]
 80058fa:	697b      	ldr	r3, [r7, #20]
 80058fc:	f023 0302 	bic.w	r3, r3, #2
 8005900:	617b      	str	r3, [r7, #20]
 8005902:	683b      	ldr	r3, [r7, #0]
 8005904:	689b      	ldr	r3, [r3, #8]
 8005906:	697a      	ldr	r2, [r7, #20]
 8005908:	4313      	orrs	r3, r2
 800590a:	617b      	str	r3, [r7, #20]
 800590c:	687b      	ldr	r3, [r7, #4]
 800590e:	4a20      	ldr	r2, [pc, #128]	@ (8005990 <TIM_OC1_SetConfig+0xd8>)
 8005910:	4293      	cmp	r3, r2
 8005912:	d003      	beq.n	800591c <TIM_OC1_SetConfig+0x64>
 8005914:	687b      	ldr	r3, [r7, #4]
 8005916:	4a1f      	ldr	r2, [pc, #124]	@ (8005994 <TIM_OC1_SetConfig+0xdc>)
 8005918:	4293      	cmp	r3, r2
 800591a:	d10c      	bne.n	8005936 <TIM_OC1_SetConfig+0x7e>
 800591c:	697b      	ldr	r3, [r7, #20]
 800591e:	f023 0308 	bic.w	r3, r3, #8
 8005922:	617b      	str	r3, [r7, #20]
 8005924:	683b      	ldr	r3, [r7, #0]
 8005926:	68db      	ldr	r3, [r3, #12]
 8005928:	697a      	ldr	r2, [r7, #20]
 800592a:	4313      	orrs	r3, r2
 800592c:	617b      	str	r3, [r7, #20]
 800592e:	697b      	ldr	r3, [r7, #20]
 8005930:	f023 0304 	bic.w	r3, r3, #4
 8005934:	617b      	str	r3, [r7, #20]
 8005936:	687b      	ldr	r3, [r7, #4]
 8005938:	4a15      	ldr	r2, [pc, #84]	@ (8005990 <TIM_OC1_SetConfig+0xd8>)
 800593a:	4293      	cmp	r3, r2
 800593c:	d003      	beq.n	8005946 <TIM_OC1_SetConfig+0x8e>
 800593e:	687b      	ldr	r3, [r7, #4]
 8005940:	4a14      	ldr	r2, [pc, #80]	@ (8005994 <TIM_OC1_SetConfig+0xdc>)
 8005942:	4293      	cmp	r3, r2
 8005944:	d111      	bne.n	800596a <TIM_OC1_SetConfig+0xb2>
 8005946:	693b      	ldr	r3, [r7, #16]
 8005948:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800594c:	613b      	str	r3, [r7, #16]
 800594e:	693b      	ldr	r3, [r7, #16]
 8005950:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005954:	613b      	str	r3, [r7, #16]
 8005956:	683b      	ldr	r3, [r7, #0]
 8005958:	695b      	ldr	r3, [r3, #20]
 800595a:	693a      	ldr	r2, [r7, #16]
 800595c:	4313      	orrs	r3, r2
 800595e:	613b      	str	r3, [r7, #16]
 8005960:	683b      	ldr	r3, [r7, #0]
 8005962:	699b      	ldr	r3, [r3, #24]
 8005964:	693a      	ldr	r2, [r7, #16]
 8005966:	4313      	orrs	r3, r2
 8005968:	613b      	str	r3, [r7, #16]
 800596a:	687b      	ldr	r3, [r7, #4]
 800596c:	693a      	ldr	r2, [r7, #16]
 800596e:	605a      	str	r2, [r3, #4]
 8005970:	687b      	ldr	r3, [r7, #4]
 8005972:	68fa      	ldr	r2, [r7, #12]
 8005974:	619a      	str	r2, [r3, #24]
 8005976:	683b      	ldr	r3, [r7, #0]
 8005978:	685a      	ldr	r2, [r3, #4]
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	635a      	str	r2, [r3, #52]	@ 0x34
 800597e:	687b      	ldr	r3, [r7, #4]
 8005980:	697a      	ldr	r2, [r7, #20]
 8005982:	621a      	str	r2, [r3, #32]
 8005984:	bf00      	nop
 8005986:	371c      	adds	r7, #28
 8005988:	46bd      	mov	sp, r7
 800598a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800598e:	4770      	bx	lr
 8005990:	40010000 	.word	0x40010000
 8005994:	40010400 	.word	0x40010400

08005998 <TIM_OC2_SetConfig>:
 8005998:	b480      	push	{r7}
 800599a:	b087      	sub	sp, #28
 800599c:	af00      	add	r7, sp, #0
 800599e:	6078      	str	r0, [r7, #4]
 80059a0:	6039      	str	r1, [r7, #0]
 80059a2:	687b      	ldr	r3, [r7, #4]
 80059a4:	6a1b      	ldr	r3, [r3, #32]
 80059a6:	617b      	str	r3, [r7, #20]
 80059a8:	687b      	ldr	r3, [r7, #4]
 80059aa:	6a1b      	ldr	r3, [r3, #32]
 80059ac:	f023 0210 	bic.w	r2, r3, #16
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	621a      	str	r2, [r3, #32]
 80059b4:	687b      	ldr	r3, [r7, #4]
 80059b6:	685b      	ldr	r3, [r3, #4]
 80059b8:	613b      	str	r3, [r7, #16]
 80059ba:	687b      	ldr	r3, [r7, #4]
 80059bc:	699b      	ldr	r3, [r3, #24]
 80059be:	60fb      	str	r3, [r7, #12]
 80059c0:	68fb      	ldr	r3, [r7, #12]
 80059c2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80059c6:	60fb      	str	r3, [r7, #12]
 80059c8:	68fb      	ldr	r3, [r7, #12]
 80059ca:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80059ce:	60fb      	str	r3, [r7, #12]
 80059d0:	683b      	ldr	r3, [r7, #0]
 80059d2:	681b      	ldr	r3, [r3, #0]
 80059d4:	021b      	lsls	r3, r3, #8
 80059d6:	68fa      	ldr	r2, [r7, #12]
 80059d8:	4313      	orrs	r3, r2
 80059da:	60fb      	str	r3, [r7, #12]
 80059dc:	697b      	ldr	r3, [r7, #20]
 80059de:	f023 0320 	bic.w	r3, r3, #32
 80059e2:	617b      	str	r3, [r7, #20]
 80059e4:	683b      	ldr	r3, [r7, #0]
 80059e6:	689b      	ldr	r3, [r3, #8]
 80059e8:	011b      	lsls	r3, r3, #4
 80059ea:	697a      	ldr	r2, [r7, #20]
 80059ec:	4313      	orrs	r3, r2
 80059ee:	617b      	str	r3, [r7, #20]
 80059f0:	687b      	ldr	r3, [r7, #4]
 80059f2:	4a22      	ldr	r2, [pc, #136]	@ (8005a7c <TIM_OC2_SetConfig+0xe4>)
 80059f4:	4293      	cmp	r3, r2
 80059f6:	d003      	beq.n	8005a00 <TIM_OC2_SetConfig+0x68>
 80059f8:	687b      	ldr	r3, [r7, #4]
 80059fa:	4a21      	ldr	r2, [pc, #132]	@ (8005a80 <TIM_OC2_SetConfig+0xe8>)
 80059fc:	4293      	cmp	r3, r2
 80059fe:	d10d      	bne.n	8005a1c <TIM_OC2_SetConfig+0x84>
 8005a00:	697b      	ldr	r3, [r7, #20]
 8005a02:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005a06:	617b      	str	r3, [r7, #20]
 8005a08:	683b      	ldr	r3, [r7, #0]
 8005a0a:	68db      	ldr	r3, [r3, #12]
 8005a0c:	011b      	lsls	r3, r3, #4
 8005a0e:	697a      	ldr	r2, [r7, #20]
 8005a10:	4313      	orrs	r3, r2
 8005a12:	617b      	str	r3, [r7, #20]
 8005a14:	697b      	ldr	r3, [r7, #20]
 8005a16:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005a1a:	617b      	str	r3, [r7, #20]
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	4a17      	ldr	r2, [pc, #92]	@ (8005a7c <TIM_OC2_SetConfig+0xe4>)
 8005a20:	4293      	cmp	r3, r2
 8005a22:	d003      	beq.n	8005a2c <TIM_OC2_SetConfig+0x94>
 8005a24:	687b      	ldr	r3, [r7, #4]
 8005a26:	4a16      	ldr	r2, [pc, #88]	@ (8005a80 <TIM_OC2_SetConfig+0xe8>)
 8005a28:	4293      	cmp	r3, r2
 8005a2a:	d113      	bne.n	8005a54 <TIM_OC2_SetConfig+0xbc>
 8005a2c:	693b      	ldr	r3, [r7, #16]
 8005a2e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005a32:	613b      	str	r3, [r7, #16]
 8005a34:	693b      	ldr	r3, [r7, #16]
 8005a36:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005a3a:	613b      	str	r3, [r7, #16]
 8005a3c:	683b      	ldr	r3, [r7, #0]
 8005a3e:	695b      	ldr	r3, [r3, #20]
 8005a40:	009b      	lsls	r3, r3, #2
 8005a42:	693a      	ldr	r2, [r7, #16]
 8005a44:	4313      	orrs	r3, r2
 8005a46:	613b      	str	r3, [r7, #16]
 8005a48:	683b      	ldr	r3, [r7, #0]
 8005a4a:	699b      	ldr	r3, [r3, #24]
 8005a4c:	009b      	lsls	r3, r3, #2
 8005a4e:	693a      	ldr	r2, [r7, #16]
 8005a50:	4313      	orrs	r3, r2
 8005a52:	613b      	str	r3, [r7, #16]
 8005a54:	687b      	ldr	r3, [r7, #4]
 8005a56:	693a      	ldr	r2, [r7, #16]
 8005a58:	605a      	str	r2, [r3, #4]
 8005a5a:	687b      	ldr	r3, [r7, #4]
 8005a5c:	68fa      	ldr	r2, [r7, #12]
 8005a5e:	619a      	str	r2, [r3, #24]
 8005a60:	683b      	ldr	r3, [r7, #0]
 8005a62:	685a      	ldr	r2, [r3, #4]
 8005a64:	687b      	ldr	r3, [r7, #4]
 8005a66:	639a      	str	r2, [r3, #56]	@ 0x38
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	697a      	ldr	r2, [r7, #20]
 8005a6c:	621a      	str	r2, [r3, #32]
 8005a6e:	bf00      	nop
 8005a70:	371c      	adds	r7, #28
 8005a72:	46bd      	mov	sp, r7
 8005a74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a78:	4770      	bx	lr
 8005a7a:	bf00      	nop
 8005a7c:	40010000 	.word	0x40010000
 8005a80:	40010400 	.word	0x40010400

08005a84 <TIM_OC3_SetConfig>:
 8005a84:	b480      	push	{r7}
 8005a86:	b087      	sub	sp, #28
 8005a88:	af00      	add	r7, sp, #0
 8005a8a:	6078      	str	r0, [r7, #4]
 8005a8c:	6039      	str	r1, [r7, #0]
 8005a8e:	687b      	ldr	r3, [r7, #4]
 8005a90:	6a1b      	ldr	r3, [r3, #32]
 8005a92:	617b      	str	r3, [r7, #20]
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	6a1b      	ldr	r3, [r3, #32]
 8005a98:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8005a9c:	687b      	ldr	r3, [r7, #4]
 8005a9e:	621a      	str	r2, [r3, #32]
 8005aa0:	687b      	ldr	r3, [r7, #4]
 8005aa2:	685b      	ldr	r3, [r3, #4]
 8005aa4:	613b      	str	r3, [r7, #16]
 8005aa6:	687b      	ldr	r3, [r7, #4]
 8005aa8:	69db      	ldr	r3, [r3, #28]
 8005aaa:	60fb      	str	r3, [r7, #12]
 8005aac:	68fb      	ldr	r3, [r7, #12]
 8005aae:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005ab2:	60fb      	str	r3, [r7, #12]
 8005ab4:	68fb      	ldr	r3, [r7, #12]
 8005ab6:	f023 0303 	bic.w	r3, r3, #3
 8005aba:	60fb      	str	r3, [r7, #12]
 8005abc:	683b      	ldr	r3, [r7, #0]
 8005abe:	681b      	ldr	r3, [r3, #0]
 8005ac0:	68fa      	ldr	r2, [r7, #12]
 8005ac2:	4313      	orrs	r3, r2
 8005ac4:	60fb      	str	r3, [r7, #12]
 8005ac6:	697b      	ldr	r3, [r7, #20]
 8005ac8:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005acc:	617b      	str	r3, [r7, #20]
 8005ace:	683b      	ldr	r3, [r7, #0]
 8005ad0:	689b      	ldr	r3, [r3, #8]
 8005ad2:	021b      	lsls	r3, r3, #8
 8005ad4:	697a      	ldr	r2, [r7, #20]
 8005ad6:	4313      	orrs	r3, r2
 8005ad8:	617b      	str	r3, [r7, #20]
 8005ada:	687b      	ldr	r3, [r7, #4]
 8005adc:	4a21      	ldr	r2, [pc, #132]	@ (8005b64 <TIM_OC3_SetConfig+0xe0>)
 8005ade:	4293      	cmp	r3, r2
 8005ae0:	d003      	beq.n	8005aea <TIM_OC3_SetConfig+0x66>
 8005ae2:	687b      	ldr	r3, [r7, #4]
 8005ae4:	4a20      	ldr	r2, [pc, #128]	@ (8005b68 <TIM_OC3_SetConfig+0xe4>)
 8005ae6:	4293      	cmp	r3, r2
 8005ae8:	d10d      	bne.n	8005b06 <TIM_OC3_SetConfig+0x82>
 8005aea:	697b      	ldr	r3, [r7, #20]
 8005aec:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005af0:	617b      	str	r3, [r7, #20]
 8005af2:	683b      	ldr	r3, [r7, #0]
 8005af4:	68db      	ldr	r3, [r3, #12]
 8005af6:	021b      	lsls	r3, r3, #8
 8005af8:	697a      	ldr	r2, [r7, #20]
 8005afa:	4313      	orrs	r3, r2
 8005afc:	617b      	str	r3, [r7, #20]
 8005afe:	697b      	ldr	r3, [r7, #20]
 8005b00:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005b04:	617b      	str	r3, [r7, #20]
 8005b06:	687b      	ldr	r3, [r7, #4]
 8005b08:	4a16      	ldr	r2, [pc, #88]	@ (8005b64 <TIM_OC3_SetConfig+0xe0>)
 8005b0a:	4293      	cmp	r3, r2
 8005b0c:	d003      	beq.n	8005b16 <TIM_OC3_SetConfig+0x92>
 8005b0e:	687b      	ldr	r3, [r7, #4]
 8005b10:	4a15      	ldr	r2, [pc, #84]	@ (8005b68 <TIM_OC3_SetConfig+0xe4>)
 8005b12:	4293      	cmp	r3, r2
 8005b14:	d113      	bne.n	8005b3e <TIM_OC3_SetConfig+0xba>
 8005b16:	693b      	ldr	r3, [r7, #16]
 8005b18:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005b1c:	613b      	str	r3, [r7, #16]
 8005b1e:	693b      	ldr	r3, [r7, #16]
 8005b20:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005b24:	613b      	str	r3, [r7, #16]
 8005b26:	683b      	ldr	r3, [r7, #0]
 8005b28:	695b      	ldr	r3, [r3, #20]
 8005b2a:	011b      	lsls	r3, r3, #4
 8005b2c:	693a      	ldr	r2, [r7, #16]
 8005b2e:	4313      	orrs	r3, r2
 8005b30:	613b      	str	r3, [r7, #16]
 8005b32:	683b      	ldr	r3, [r7, #0]
 8005b34:	699b      	ldr	r3, [r3, #24]
 8005b36:	011b      	lsls	r3, r3, #4
 8005b38:	693a      	ldr	r2, [r7, #16]
 8005b3a:	4313      	orrs	r3, r2
 8005b3c:	613b      	str	r3, [r7, #16]
 8005b3e:	687b      	ldr	r3, [r7, #4]
 8005b40:	693a      	ldr	r2, [r7, #16]
 8005b42:	605a      	str	r2, [r3, #4]
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	68fa      	ldr	r2, [r7, #12]
 8005b48:	61da      	str	r2, [r3, #28]
 8005b4a:	683b      	ldr	r3, [r7, #0]
 8005b4c:	685a      	ldr	r2, [r3, #4]
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	697a      	ldr	r2, [r7, #20]
 8005b56:	621a      	str	r2, [r3, #32]
 8005b58:	bf00      	nop
 8005b5a:	371c      	adds	r7, #28
 8005b5c:	46bd      	mov	sp, r7
 8005b5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b62:	4770      	bx	lr
 8005b64:	40010000 	.word	0x40010000
 8005b68:	40010400 	.word	0x40010400

08005b6c <TIM_OC4_SetConfig>:
 8005b6c:	b480      	push	{r7}
 8005b6e:	b087      	sub	sp, #28
 8005b70:	af00      	add	r7, sp, #0
 8005b72:	6078      	str	r0, [r7, #4]
 8005b74:	6039      	str	r1, [r7, #0]
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	6a1b      	ldr	r3, [r3, #32]
 8005b7a:	613b      	str	r3, [r7, #16]
 8005b7c:	687b      	ldr	r3, [r7, #4]
 8005b7e:	6a1b      	ldr	r3, [r3, #32]
 8005b80:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005b84:	687b      	ldr	r3, [r7, #4]
 8005b86:	621a      	str	r2, [r3, #32]
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	685b      	ldr	r3, [r3, #4]
 8005b8c:	617b      	str	r3, [r7, #20]
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	69db      	ldr	r3, [r3, #28]
 8005b92:	60fb      	str	r3, [r7, #12]
 8005b94:	68fb      	ldr	r3, [r7, #12]
 8005b96:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005b9a:	60fb      	str	r3, [r7, #12]
 8005b9c:	68fb      	ldr	r3, [r7, #12]
 8005b9e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005ba2:	60fb      	str	r3, [r7, #12]
 8005ba4:	683b      	ldr	r3, [r7, #0]
 8005ba6:	681b      	ldr	r3, [r3, #0]
 8005ba8:	021b      	lsls	r3, r3, #8
 8005baa:	68fa      	ldr	r2, [r7, #12]
 8005bac:	4313      	orrs	r3, r2
 8005bae:	60fb      	str	r3, [r7, #12]
 8005bb0:	693b      	ldr	r3, [r7, #16]
 8005bb2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005bb6:	613b      	str	r3, [r7, #16]
 8005bb8:	683b      	ldr	r3, [r7, #0]
 8005bba:	689b      	ldr	r3, [r3, #8]
 8005bbc:	031b      	lsls	r3, r3, #12
 8005bbe:	693a      	ldr	r2, [r7, #16]
 8005bc0:	4313      	orrs	r3, r2
 8005bc2:	613b      	str	r3, [r7, #16]
 8005bc4:	687b      	ldr	r3, [r7, #4]
 8005bc6:	4a12      	ldr	r2, [pc, #72]	@ (8005c10 <TIM_OC4_SetConfig+0xa4>)
 8005bc8:	4293      	cmp	r3, r2
 8005bca:	d003      	beq.n	8005bd4 <TIM_OC4_SetConfig+0x68>
 8005bcc:	687b      	ldr	r3, [r7, #4]
 8005bce:	4a11      	ldr	r2, [pc, #68]	@ (8005c14 <TIM_OC4_SetConfig+0xa8>)
 8005bd0:	4293      	cmp	r3, r2
 8005bd2:	d109      	bne.n	8005be8 <TIM_OC4_SetConfig+0x7c>
 8005bd4:	697b      	ldr	r3, [r7, #20]
 8005bd6:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8005bda:	617b      	str	r3, [r7, #20]
 8005bdc:	683b      	ldr	r3, [r7, #0]
 8005bde:	695b      	ldr	r3, [r3, #20]
 8005be0:	019b      	lsls	r3, r3, #6
 8005be2:	697a      	ldr	r2, [r7, #20]
 8005be4:	4313      	orrs	r3, r2
 8005be6:	617b      	str	r3, [r7, #20]
 8005be8:	687b      	ldr	r3, [r7, #4]
 8005bea:	697a      	ldr	r2, [r7, #20]
 8005bec:	605a      	str	r2, [r3, #4]
 8005bee:	687b      	ldr	r3, [r7, #4]
 8005bf0:	68fa      	ldr	r2, [r7, #12]
 8005bf2:	61da      	str	r2, [r3, #28]
 8005bf4:	683b      	ldr	r3, [r7, #0]
 8005bf6:	685a      	ldr	r2, [r3, #4]
 8005bf8:	687b      	ldr	r3, [r7, #4]
 8005bfa:	641a      	str	r2, [r3, #64]	@ 0x40
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	693a      	ldr	r2, [r7, #16]
 8005c00:	621a      	str	r2, [r3, #32]
 8005c02:	bf00      	nop
 8005c04:	371c      	adds	r7, #28
 8005c06:	46bd      	mov	sp, r7
 8005c08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c0c:	4770      	bx	lr
 8005c0e:	bf00      	nop
 8005c10:	40010000 	.word	0x40010000
 8005c14:	40010400 	.word	0x40010400

08005c18 <TIM_TI1_ConfigInputStage>:
 8005c18:	b480      	push	{r7}
 8005c1a:	b087      	sub	sp, #28
 8005c1c:	af00      	add	r7, sp, #0
 8005c1e:	60f8      	str	r0, [r7, #12]
 8005c20:	60b9      	str	r1, [r7, #8]
 8005c22:	607a      	str	r2, [r7, #4]
 8005c24:	68fb      	ldr	r3, [r7, #12]
 8005c26:	6a1b      	ldr	r3, [r3, #32]
 8005c28:	617b      	str	r3, [r7, #20]
 8005c2a:	68fb      	ldr	r3, [r7, #12]
 8005c2c:	6a1b      	ldr	r3, [r3, #32]
 8005c2e:	f023 0201 	bic.w	r2, r3, #1
 8005c32:	68fb      	ldr	r3, [r7, #12]
 8005c34:	621a      	str	r2, [r3, #32]
 8005c36:	68fb      	ldr	r3, [r7, #12]
 8005c38:	699b      	ldr	r3, [r3, #24]
 8005c3a:	613b      	str	r3, [r7, #16]
 8005c3c:	693b      	ldr	r3, [r7, #16]
 8005c3e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005c42:	613b      	str	r3, [r7, #16]
 8005c44:	687b      	ldr	r3, [r7, #4]
 8005c46:	011b      	lsls	r3, r3, #4
 8005c48:	693a      	ldr	r2, [r7, #16]
 8005c4a:	4313      	orrs	r3, r2
 8005c4c:	613b      	str	r3, [r7, #16]
 8005c4e:	697b      	ldr	r3, [r7, #20]
 8005c50:	f023 030a 	bic.w	r3, r3, #10
 8005c54:	617b      	str	r3, [r7, #20]
 8005c56:	697a      	ldr	r2, [r7, #20]
 8005c58:	68bb      	ldr	r3, [r7, #8]
 8005c5a:	4313      	orrs	r3, r2
 8005c5c:	617b      	str	r3, [r7, #20]
 8005c5e:	68fb      	ldr	r3, [r7, #12]
 8005c60:	693a      	ldr	r2, [r7, #16]
 8005c62:	619a      	str	r2, [r3, #24]
 8005c64:	68fb      	ldr	r3, [r7, #12]
 8005c66:	697a      	ldr	r2, [r7, #20]
 8005c68:	621a      	str	r2, [r3, #32]
 8005c6a:	bf00      	nop
 8005c6c:	371c      	adds	r7, #28
 8005c6e:	46bd      	mov	sp, r7
 8005c70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c74:	4770      	bx	lr

08005c76 <TIM_TI2_ConfigInputStage>:
 8005c76:	b480      	push	{r7}
 8005c78:	b087      	sub	sp, #28
 8005c7a:	af00      	add	r7, sp, #0
 8005c7c:	60f8      	str	r0, [r7, #12]
 8005c7e:	60b9      	str	r1, [r7, #8]
 8005c80:	607a      	str	r2, [r7, #4]
 8005c82:	68fb      	ldr	r3, [r7, #12]
 8005c84:	6a1b      	ldr	r3, [r3, #32]
 8005c86:	617b      	str	r3, [r7, #20]
 8005c88:	68fb      	ldr	r3, [r7, #12]
 8005c8a:	6a1b      	ldr	r3, [r3, #32]
 8005c8c:	f023 0210 	bic.w	r2, r3, #16
 8005c90:	68fb      	ldr	r3, [r7, #12]
 8005c92:	621a      	str	r2, [r3, #32]
 8005c94:	68fb      	ldr	r3, [r7, #12]
 8005c96:	699b      	ldr	r3, [r3, #24]
 8005c98:	613b      	str	r3, [r7, #16]
 8005c9a:	693b      	ldr	r3, [r7, #16]
 8005c9c:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005ca0:	613b      	str	r3, [r7, #16]
 8005ca2:	687b      	ldr	r3, [r7, #4]
 8005ca4:	031b      	lsls	r3, r3, #12
 8005ca6:	693a      	ldr	r2, [r7, #16]
 8005ca8:	4313      	orrs	r3, r2
 8005caa:	613b      	str	r3, [r7, #16]
 8005cac:	697b      	ldr	r3, [r7, #20]
 8005cae:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8005cb2:	617b      	str	r3, [r7, #20]
 8005cb4:	68bb      	ldr	r3, [r7, #8]
 8005cb6:	011b      	lsls	r3, r3, #4
 8005cb8:	697a      	ldr	r2, [r7, #20]
 8005cba:	4313      	orrs	r3, r2
 8005cbc:	617b      	str	r3, [r7, #20]
 8005cbe:	68fb      	ldr	r3, [r7, #12]
 8005cc0:	693a      	ldr	r2, [r7, #16]
 8005cc2:	619a      	str	r2, [r3, #24]
 8005cc4:	68fb      	ldr	r3, [r7, #12]
 8005cc6:	697a      	ldr	r2, [r7, #20]
 8005cc8:	621a      	str	r2, [r3, #32]
 8005cca:	bf00      	nop
 8005ccc:	371c      	adds	r7, #28
 8005cce:	46bd      	mov	sp, r7
 8005cd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cd4:	4770      	bx	lr

08005cd6 <TIM_ITRx_SetConfig>:
 8005cd6:	b480      	push	{r7}
 8005cd8:	b085      	sub	sp, #20
 8005cda:	af00      	add	r7, sp, #0
 8005cdc:	6078      	str	r0, [r7, #4]
 8005cde:	6039      	str	r1, [r7, #0]
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	689b      	ldr	r3, [r3, #8]
 8005ce4:	60fb      	str	r3, [r7, #12]
 8005ce6:	68fb      	ldr	r3, [r7, #12]
 8005ce8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005cec:	60fb      	str	r3, [r7, #12]
 8005cee:	683a      	ldr	r2, [r7, #0]
 8005cf0:	68fb      	ldr	r3, [r7, #12]
 8005cf2:	4313      	orrs	r3, r2
 8005cf4:	f043 0307 	orr.w	r3, r3, #7
 8005cf8:	60fb      	str	r3, [r7, #12]
 8005cfa:	687b      	ldr	r3, [r7, #4]
 8005cfc:	68fa      	ldr	r2, [r7, #12]
 8005cfe:	609a      	str	r2, [r3, #8]
 8005d00:	bf00      	nop
 8005d02:	3714      	adds	r7, #20
 8005d04:	46bd      	mov	sp, r7
 8005d06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d0a:	4770      	bx	lr

08005d0c <TIM_ETR_SetConfig>:
 8005d0c:	b480      	push	{r7}
 8005d0e:	b087      	sub	sp, #28
 8005d10:	af00      	add	r7, sp, #0
 8005d12:	60f8      	str	r0, [r7, #12]
 8005d14:	60b9      	str	r1, [r7, #8]
 8005d16:	607a      	str	r2, [r7, #4]
 8005d18:	603b      	str	r3, [r7, #0]
 8005d1a:	68fb      	ldr	r3, [r7, #12]
 8005d1c:	689b      	ldr	r3, [r3, #8]
 8005d1e:	617b      	str	r3, [r7, #20]
 8005d20:	697b      	ldr	r3, [r7, #20]
 8005d22:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005d26:	617b      	str	r3, [r7, #20]
 8005d28:	683b      	ldr	r3, [r7, #0]
 8005d2a:	021a      	lsls	r2, r3, #8
 8005d2c:	687b      	ldr	r3, [r7, #4]
 8005d2e:	431a      	orrs	r2, r3
 8005d30:	68bb      	ldr	r3, [r7, #8]
 8005d32:	4313      	orrs	r3, r2
 8005d34:	697a      	ldr	r2, [r7, #20]
 8005d36:	4313      	orrs	r3, r2
 8005d38:	617b      	str	r3, [r7, #20]
 8005d3a:	68fb      	ldr	r3, [r7, #12]
 8005d3c:	697a      	ldr	r2, [r7, #20]
 8005d3e:	609a      	str	r2, [r3, #8]
 8005d40:	bf00      	nop
 8005d42:	371c      	adds	r7, #28
 8005d44:	46bd      	mov	sp, r7
 8005d46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d4a:	4770      	bx	lr

08005d4c <TIM_CCxChannelCmd>:
 8005d4c:	b480      	push	{r7}
 8005d4e:	b087      	sub	sp, #28
 8005d50:	af00      	add	r7, sp, #0
 8005d52:	60f8      	str	r0, [r7, #12]
 8005d54:	60b9      	str	r1, [r7, #8]
 8005d56:	607a      	str	r2, [r7, #4]
 8005d58:	68bb      	ldr	r3, [r7, #8]
 8005d5a:	f003 031f 	and.w	r3, r3, #31
 8005d5e:	2201      	movs	r2, #1
 8005d60:	fa02 f303 	lsl.w	r3, r2, r3
 8005d64:	617b      	str	r3, [r7, #20]
 8005d66:	68fb      	ldr	r3, [r7, #12]
 8005d68:	6a1a      	ldr	r2, [r3, #32]
 8005d6a:	697b      	ldr	r3, [r7, #20]
 8005d6c:	43db      	mvns	r3, r3
 8005d6e:	401a      	ands	r2, r3
 8005d70:	68fb      	ldr	r3, [r7, #12]
 8005d72:	621a      	str	r2, [r3, #32]
 8005d74:	68fb      	ldr	r3, [r7, #12]
 8005d76:	6a1a      	ldr	r2, [r3, #32]
 8005d78:	68bb      	ldr	r3, [r7, #8]
 8005d7a:	f003 031f 	and.w	r3, r3, #31
 8005d7e:	6879      	ldr	r1, [r7, #4]
 8005d80:	fa01 f303 	lsl.w	r3, r1, r3
 8005d84:	431a      	orrs	r2, r3
 8005d86:	68fb      	ldr	r3, [r7, #12]
 8005d88:	621a      	str	r2, [r3, #32]
 8005d8a:	bf00      	nop
 8005d8c:	371c      	adds	r7, #28
 8005d8e:	46bd      	mov	sp, r7
 8005d90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d94:	4770      	bx	lr
	...

08005d98 <HAL_TIMEx_MasterConfigSynchronization>:
 8005d98:	b480      	push	{r7}
 8005d9a:	b085      	sub	sp, #20
 8005d9c:	af00      	add	r7, sp, #0
 8005d9e:	6078      	str	r0, [r7, #4]
 8005da0:	6039      	str	r1, [r7, #0]
 8005da2:	687b      	ldr	r3, [r7, #4]
 8005da4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005da8:	2b01      	cmp	r3, #1
 8005daa:	d101      	bne.n	8005db0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005dac:	2302      	movs	r3, #2
 8005dae:	e05a      	b.n	8005e66 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8005db0:	687b      	ldr	r3, [r7, #4]
 8005db2:	2201      	movs	r2, #1
 8005db4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	2202      	movs	r2, #2
 8005dbc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005dc0:	687b      	ldr	r3, [r7, #4]
 8005dc2:	681b      	ldr	r3, [r3, #0]
 8005dc4:	685b      	ldr	r3, [r3, #4]
 8005dc6:	60fb      	str	r3, [r7, #12]
 8005dc8:	687b      	ldr	r3, [r7, #4]
 8005dca:	681b      	ldr	r3, [r3, #0]
 8005dcc:	689b      	ldr	r3, [r3, #8]
 8005dce:	60bb      	str	r3, [r7, #8]
 8005dd0:	68fb      	ldr	r3, [r7, #12]
 8005dd2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005dd6:	60fb      	str	r3, [r7, #12]
 8005dd8:	683b      	ldr	r3, [r7, #0]
 8005dda:	681b      	ldr	r3, [r3, #0]
 8005ddc:	68fa      	ldr	r2, [r7, #12]
 8005dde:	4313      	orrs	r3, r2
 8005de0:	60fb      	str	r3, [r7, #12]
 8005de2:	687b      	ldr	r3, [r7, #4]
 8005de4:	681b      	ldr	r3, [r3, #0]
 8005de6:	68fa      	ldr	r2, [r7, #12]
 8005de8:	605a      	str	r2, [r3, #4]
 8005dea:	687b      	ldr	r3, [r7, #4]
 8005dec:	681b      	ldr	r3, [r3, #0]
 8005dee:	4a21      	ldr	r2, [pc, #132]	@ (8005e74 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8005df0:	4293      	cmp	r3, r2
 8005df2:	d022      	beq.n	8005e3a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005df4:	687b      	ldr	r3, [r7, #4]
 8005df6:	681b      	ldr	r3, [r3, #0]
 8005df8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005dfc:	d01d      	beq.n	8005e3a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005dfe:	687b      	ldr	r3, [r7, #4]
 8005e00:	681b      	ldr	r3, [r3, #0]
 8005e02:	4a1d      	ldr	r2, [pc, #116]	@ (8005e78 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8005e04:	4293      	cmp	r3, r2
 8005e06:	d018      	beq.n	8005e3a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e08:	687b      	ldr	r3, [r7, #4]
 8005e0a:	681b      	ldr	r3, [r3, #0]
 8005e0c:	4a1b      	ldr	r2, [pc, #108]	@ (8005e7c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8005e0e:	4293      	cmp	r3, r2
 8005e10:	d013      	beq.n	8005e3a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e12:	687b      	ldr	r3, [r7, #4]
 8005e14:	681b      	ldr	r3, [r3, #0]
 8005e16:	4a1a      	ldr	r2, [pc, #104]	@ (8005e80 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8005e18:	4293      	cmp	r3, r2
 8005e1a:	d00e      	beq.n	8005e3a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e1c:	687b      	ldr	r3, [r7, #4]
 8005e1e:	681b      	ldr	r3, [r3, #0]
 8005e20:	4a18      	ldr	r2, [pc, #96]	@ (8005e84 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8005e22:	4293      	cmp	r3, r2
 8005e24:	d009      	beq.n	8005e3a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e26:	687b      	ldr	r3, [r7, #4]
 8005e28:	681b      	ldr	r3, [r3, #0]
 8005e2a:	4a17      	ldr	r2, [pc, #92]	@ (8005e88 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8005e2c:	4293      	cmp	r3, r2
 8005e2e:	d004      	beq.n	8005e3a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	681b      	ldr	r3, [r3, #0]
 8005e34:	4a15      	ldr	r2, [pc, #84]	@ (8005e8c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8005e36:	4293      	cmp	r3, r2
 8005e38:	d10c      	bne.n	8005e54 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8005e3a:	68bb      	ldr	r3, [r7, #8]
 8005e3c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005e40:	60bb      	str	r3, [r7, #8]
 8005e42:	683b      	ldr	r3, [r7, #0]
 8005e44:	685b      	ldr	r3, [r3, #4]
 8005e46:	68ba      	ldr	r2, [r7, #8]
 8005e48:	4313      	orrs	r3, r2
 8005e4a:	60bb      	str	r3, [r7, #8]
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	681b      	ldr	r3, [r3, #0]
 8005e50:	68ba      	ldr	r2, [r7, #8]
 8005e52:	609a      	str	r2, [r3, #8]
 8005e54:	687b      	ldr	r3, [r7, #4]
 8005e56:	2201      	movs	r2, #1
 8005e58:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005e5c:	687b      	ldr	r3, [r7, #4]
 8005e5e:	2200      	movs	r2, #0
 8005e60:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005e64:	2300      	movs	r3, #0
 8005e66:	4618      	mov	r0, r3
 8005e68:	3714      	adds	r7, #20
 8005e6a:	46bd      	mov	sp, r7
 8005e6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e70:	4770      	bx	lr
 8005e72:	bf00      	nop
 8005e74:	40010000 	.word	0x40010000
 8005e78:	40000400 	.word	0x40000400
 8005e7c:	40000800 	.word	0x40000800
 8005e80:	40000c00 	.word	0x40000c00
 8005e84:	40010400 	.word	0x40010400
 8005e88:	40014000 	.word	0x40014000
 8005e8c:	40001800 	.word	0x40001800

08005e90 <HAL_TIMEx_CommutCallback>:
 8005e90:	b480      	push	{r7}
 8005e92:	b083      	sub	sp, #12
 8005e94:	af00      	add	r7, sp, #0
 8005e96:	6078      	str	r0, [r7, #4]
 8005e98:	bf00      	nop
 8005e9a:	370c      	adds	r7, #12
 8005e9c:	46bd      	mov	sp, r7
 8005e9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ea2:	4770      	bx	lr

08005ea4 <HAL_TIMEx_BreakCallback>:
 8005ea4:	b480      	push	{r7}
 8005ea6:	b083      	sub	sp, #12
 8005ea8:	af00      	add	r7, sp, #0
 8005eaa:	6078      	str	r0, [r7, #4]
 8005eac:	bf00      	nop
 8005eae:	370c      	adds	r7, #12
 8005eb0:	46bd      	mov	sp, r7
 8005eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005eb6:	4770      	bx	lr

08005eb8 <memset>:
 8005eb8:	4402      	add	r2, r0
 8005eba:	4603      	mov	r3, r0
 8005ebc:	4293      	cmp	r3, r2
 8005ebe:	d100      	bne.n	8005ec2 <memset+0xa>
 8005ec0:	4770      	bx	lr
 8005ec2:	f803 1b01 	strb.w	r1, [r3], #1
 8005ec6:	e7f9      	b.n	8005ebc <memset+0x4>

08005ec8 <__errno>:
 8005ec8:	4b01      	ldr	r3, [pc, #4]	@ (8005ed0 <__errno+0x8>)
 8005eca:	6818      	ldr	r0, [r3, #0]
 8005ecc:	4770      	bx	lr
 8005ece:	bf00      	nop
 8005ed0:	20000034 	.word	0x20000034

08005ed4 <__libc_init_array>:
 8005ed4:	b570      	push	{r4, r5, r6, lr}
 8005ed6:	4d0d      	ldr	r5, [pc, #52]	@ (8005f0c <__libc_init_array+0x38>)
 8005ed8:	4c0d      	ldr	r4, [pc, #52]	@ (8005f10 <__libc_init_array+0x3c>)
 8005eda:	1b64      	subs	r4, r4, r5
 8005edc:	10a4      	asrs	r4, r4, #2
 8005ede:	2600      	movs	r6, #0
 8005ee0:	42a6      	cmp	r6, r4
 8005ee2:	d109      	bne.n	8005ef8 <__libc_init_array+0x24>
 8005ee4:	4d0b      	ldr	r5, [pc, #44]	@ (8005f14 <__libc_init_array+0x40>)
 8005ee6:	4c0c      	ldr	r4, [pc, #48]	@ (8005f18 <__libc_init_array+0x44>)
 8005ee8:	f000 fac0 	bl	800646c <_init>
 8005eec:	1b64      	subs	r4, r4, r5
 8005eee:	10a4      	asrs	r4, r4, #2
 8005ef0:	2600      	movs	r6, #0
 8005ef2:	42a6      	cmp	r6, r4
 8005ef4:	d105      	bne.n	8005f02 <__libc_init_array+0x2e>
 8005ef6:	bd70      	pop	{r4, r5, r6, pc}
 8005ef8:	f855 3b04 	ldr.w	r3, [r5], #4
 8005efc:	4798      	blx	r3
 8005efe:	3601      	adds	r6, #1
 8005f00:	e7ee      	b.n	8005ee0 <__libc_init_array+0xc>
 8005f02:	f855 3b04 	ldr.w	r3, [r5], #4
 8005f06:	4798      	blx	r3
 8005f08:	3601      	adds	r6, #1
 8005f0a:	e7f2      	b.n	8005ef2 <__libc_init_array+0x1e>
 8005f0c:	080064e8 	.word	0x080064e8
 8005f10:	080064e8 	.word	0x080064e8
 8005f14:	080064e8 	.word	0x080064e8
 8005f18:	080064ec 	.word	0x080064ec

08005f1c <sqrt>:
 8005f1c:	b538      	push	{r3, r4, r5, lr}
 8005f1e:	ed2d 8b02 	vpush	{d8}
 8005f22:	ec55 4b10 	vmov	r4, r5, d0
 8005f26:	f000 f9c7 	bl	80062b8 <__ieee754_sqrt>
 8005f2a:	4622      	mov	r2, r4
 8005f2c:	462b      	mov	r3, r5
 8005f2e:	4620      	mov	r0, r4
 8005f30:	4629      	mov	r1, r5
 8005f32:	eeb0 8a40 	vmov.f32	s16, s0
 8005f36:	eef0 8a60 	vmov.f32	s17, s1
 8005f3a:	f7fa fdbb 	bl	8000ab4 <__aeabi_dcmpun>
 8005f3e:	b990      	cbnz	r0, 8005f66 <sqrt+0x4a>
 8005f40:	2200      	movs	r2, #0
 8005f42:	2300      	movs	r3, #0
 8005f44:	4620      	mov	r0, r4
 8005f46:	4629      	mov	r1, r5
 8005f48:	f7fa fd8c 	bl	8000a64 <__aeabi_dcmplt>
 8005f4c:	b158      	cbz	r0, 8005f66 <sqrt+0x4a>
 8005f4e:	f7ff ffbb 	bl	8005ec8 <__errno>
 8005f52:	2321      	movs	r3, #33	@ 0x21
 8005f54:	6003      	str	r3, [r0, #0]
 8005f56:	2200      	movs	r2, #0
 8005f58:	2300      	movs	r3, #0
 8005f5a:	4610      	mov	r0, r2
 8005f5c:	4619      	mov	r1, r3
 8005f5e:	f7fa fc39 	bl	80007d4 <__aeabi_ddiv>
 8005f62:	ec41 0b18 	vmov	d8, r0, r1
 8005f66:	eeb0 0a48 	vmov.f32	s0, s16
 8005f6a:	eef0 0a68 	vmov.f32	s1, s17
 8005f6e:	ecbd 8b02 	vpop	{d8}
 8005f72:	bd38      	pop	{r3, r4, r5, pc}
 8005f74:	0000      	movs	r0, r0
	...

08005f78 <atan>:
 8005f78:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005f7c:	ec55 4b10 	vmov	r4, r5, d0
 8005f80:	4bbf      	ldr	r3, [pc, #764]	@ (8006280 <atan+0x308>)
 8005f82:	f025 4600 	bic.w	r6, r5, #2147483648	@ 0x80000000
 8005f86:	429e      	cmp	r6, r3
 8005f88:	46ab      	mov	fp, r5
 8005f8a:	d918      	bls.n	8005fbe <atan+0x46>
 8005f8c:	4bbd      	ldr	r3, [pc, #756]	@ (8006284 <atan+0x30c>)
 8005f8e:	429e      	cmp	r6, r3
 8005f90:	d801      	bhi.n	8005f96 <atan+0x1e>
 8005f92:	d109      	bne.n	8005fa8 <atan+0x30>
 8005f94:	b144      	cbz	r4, 8005fa8 <atan+0x30>
 8005f96:	4622      	mov	r2, r4
 8005f98:	462b      	mov	r3, r5
 8005f9a:	4620      	mov	r0, r4
 8005f9c:	4629      	mov	r1, r5
 8005f9e:	f7fa f939 	bl	8000214 <__adddf3>
 8005fa2:	4604      	mov	r4, r0
 8005fa4:	460d      	mov	r5, r1
 8005fa6:	e006      	b.n	8005fb6 <atan+0x3e>
 8005fa8:	f1bb 0f00 	cmp.w	fp, #0
 8005fac:	f340 812b 	ble.w	8006206 <atan+0x28e>
 8005fb0:	a597      	add	r5, pc, #604	@ (adr r5, 8006210 <atan+0x298>)
 8005fb2:	e9d5 4500 	ldrd	r4, r5, [r5]
 8005fb6:	ec45 4b10 	vmov	d0, r4, r5
 8005fba:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005fbe:	4bb2      	ldr	r3, [pc, #712]	@ (8006288 <atan+0x310>)
 8005fc0:	429e      	cmp	r6, r3
 8005fc2:	d813      	bhi.n	8005fec <atan+0x74>
 8005fc4:	f1a3 73de 	sub.w	r3, r3, #29097984	@ 0x1bc0000
 8005fc8:	429e      	cmp	r6, r3
 8005fca:	d80c      	bhi.n	8005fe6 <atan+0x6e>
 8005fcc:	a392      	add	r3, pc, #584	@ (adr r3, 8006218 <atan+0x2a0>)
 8005fce:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005fd2:	4620      	mov	r0, r4
 8005fd4:	4629      	mov	r1, r5
 8005fd6:	f7fa f91d 	bl	8000214 <__adddf3>
 8005fda:	4bac      	ldr	r3, [pc, #688]	@ (800628c <atan+0x314>)
 8005fdc:	2200      	movs	r2, #0
 8005fde:	f7fa fd5f 	bl	8000aa0 <__aeabi_dcmpgt>
 8005fe2:	2800      	cmp	r0, #0
 8005fe4:	d1e7      	bne.n	8005fb6 <atan+0x3e>
 8005fe6:	f04f 3aff 	mov.w	sl, #4294967295
 8005fea:	e029      	b.n	8006040 <atan+0xc8>
 8005fec:	f000 f95c 	bl	80062a8 <fabs>
 8005ff0:	4ba7      	ldr	r3, [pc, #668]	@ (8006290 <atan+0x318>)
 8005ff2:	429e      	cmp	r6, r3
 8005ff4:	ec55 4b10 	vmov	r4, r5, d0
 8005ff8:	f200 80bc 	bhi.w	8006174 <atan+0x1fc>
 8005ffc:	f5a3 2350 	sub.w	r3, r3, #851968	@ 0xd0000
 8006000:	429e      	cmp	r6, r3
 8006002:	f200 809e 	bhi.w	8006142 <atan+0x1ca>
 8006006:	4622      	mov	r2, r4
 8006008:	462b      	mov	r3, r5
 800600a:	4620      	mov	r0, r4
 800600c:	4629      	mov	r1, r5
 800600e:	f7fa f901 	bl	8000214 <__adddf3>
 8006012:	4b9e      	ldr	r3, [pc, #632]	@ (800628c <atan+0x314>)
 8006014:	2200      	movs	r2, #0
 8006016:	f7fa f8fb 	bl	8000210 <__aeabi_dsub>
 800601a:	2200      	movs	r2, #0
 800601c:	4606      	mov	r6, r0
 800601e:	460f      	mov	r7, r1
 8006020:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8006024:	4620      	mov	r0, r4
 8006026:	4629      	mov	r1, r5
 8006028:	f7fa f8f4 	bl	8000214 <__adddf3>
 800602c:	4602      	mov	r2, r0
 800602e:	460b      	mov	r3, r1
 8006030:	4630      	mov	r0, r6
 8006032:	4639      	mov	r1, r7
 8006034:	f7fa fbce 	bl	80007d4 <__aeabi_ddiv>
 8006038:	f04f 0a00 	mov.w	sl, #0
 800603c:	4604      	mov	r4, r0
 800603e:	460d      	mov	r5, r1
 8006040:	4622      	mov	r2, r4
 8006042:	462b      	mov	r3, r5
 8006044:	4620      	mov	r0, r4
 8006046:	4629      	mov	r1, r5
 8006048:	f7fa fa9a 	bl	8000580 <__aeabi_dmul>
 800604c:	4602      	mov	r2, r0
 800604e:	460b      	mov	r3, r1
 8006050:	4680      	mov	r8, r0
 8006052:	4689      	mov	r9, r1
 8006054:	f7fa fa94 	bl	8000580 <__aeabi_dmul>
 8006058:	a371      	add	r3, pc, #452	@ (adr r3, 8006220 <atan+0x2a8>)
 800605a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800605e:	4606      	mov	r6, r0
 8006060:	460f      	mov	r7, r1
 8006062:	f7fa fa8d 	bl	8000580 <__aeabi_dmul>
 8006066:	a370      	add	r3, pc, #448	@ (adr r3, 8006228 <atan+0x2b0>)
 8006068:	e9d3 2300 	ldrd	r2, r3, [r3]
 800606c:	f7fa f8d2 	bl	8000214 <__adddf3>
 8006070:	4632      	mov	r2, r6
 8006072:	463b      	mov	r3, r7
 8006074:	f7fa fa84 	bl	8000580 <__aeabi_dmul>
 8006078:	a36d      	add	r3, pc, #436	@ (adr r3, 8006230 <atan+0x2b8>)
 800607a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800607e:	f7fa f8c9 	bl	8000214 <__adddf3>
 8006082:	4632      	mov	r2, r6
 8006084:	463b      	mov	r3, r7
 8006086:	f7fa fa7b 	bl	8000580 <__aeabi_dmul>
 800608a:	a36b      	add	r3, pc, #428	@ (adr r3, 8006238 <atan+0x2c0>)
 800608c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006090:	f7fa f8c0 	bl	8000214 <__adddf3>
 8006094:	4632      	mov	r2, r6
 8006096:	463b      	mov	r3, r7
 8006098:	f7fa fa72 	bl	8000580 <__aeabi_dmul>
 800609c:	a368      	add	r3, pc, #416	@ (adr r3, 8006240 <atan+0x2c8>)
 800609e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060a2:	f7fa f8b7 	bl	8000214 <__adddf3>
 80060a6:	4632      	mov	r2, r6
 80060a8:	463b      	mov	r3, r7
 80060aa:	f7fa fa69 	bl	8000580 <__aeabi_dmul>
 80060ae:	a366      	add	r3, pc, #408	@ (adr r3, 8006248 <atan+0x2d0>)
 80060b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060b4:	f7fa f8ae 	bl	8000214 <__adddf3>
 80060b8:	4642      	mov	r2, r8
 80060ba:	464b      	mov	r3, r9
 80060bc:	f7fa fa60 	bl	8000580 <__aeabi_dmul>
 80060c0:	a363      	add	r3, pc, #396	@ (adr r3, 8006250 <atan+0x2d8>)
 80060c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060c6:	4680      	mov	r8, r0
 80060c8:	4689      	mov	r9, r1
 80060ca:	4630      	mov	r0, r6
 80060cc:	4639      	mov	r1, r7
 80060ce:	f7fa fa57 	bl	8000580 <__aeabi_dmul>
 80060d2:	a361      	add	r3, pc, #388	@ (adr r3, 8006258 <atan+0x2e0>)
 80060d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060d8:	f7fa f89a 	bl	8000210 <__aeabi_dsub>
 80060dc:	4632      	mov	r2, r6
 80060de:	463b      	mov	r3, r7
 80060e0:	f7fa fa4e 	bl	8000580 <__aeabi_dmul>
 80060e4:	a35e      	add	r3, pc, #376	@ (adr r3, 8006260 <atan+0x2e8>)
 80060e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060ea:	f7fa f891 	bl	8000210 <__aeabi_dsub>
 80060ee:	4632      	mov	r2, r6
 80060f0:	463b      	mov	r3, r7
 80060f2:	f7fa fa45 	bl	8000580 <__aeabi_dmul>
 80060f6:	a35c      	add	r3, pc, #368	@ (adr r3, 8006268 <atan+0x2f0>)
 80060f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060fc:	f7fa f888 	bl	8000210 <__aeabi_dsub>
 8006100:	4632      	mov	r2, r6
 8006102:	463b      	mov	r3, r7
 8006104:	f7fa fa3c 	bl	8000580 <__aeabi_dmul>
 8006108:	a359      	add	r3, pc, #356	@ (adr r3, 8006270 <atan+0x2f8>)
 800610a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800610e:	f7fa f87f 	bl	8000210 <__aeabi_dsub>
 8006112:	4632      	mov	r2, r6
 8006114:	463b      	mov	r3, r7
 8006116:	f7fa fa33 	bl	8000580 <__aeabi_dmul>
 800611a:	4602      	mov	r2, r0
 800611c:	460b      	mov	r3, r1
 800611e:	4640      	mov	r0, r8
 8006120:	4649      	mov	r1, r9
 8006122:	f7fa f877 	bl	8000214 <__adddf3>
 8006126:	4622      	mov	r2, r4
 8006128:	462b      	mov	r3, r5
 800612a:	f7fa fa29 	bl	8000580 <__aeabi_dmul>
 800612e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8006132:	4602      	mov	r2, r0
 8006134:	460b      	mov	r3, r1
 8006136:	d148      	bne.n	80061ca <atan+0x252>
 8006138:	4620      	mov	r0, r4
 800613a:	4629      	mov	r1, r5
 800613c:	f7fa f868 	bl	8000210 <__aeabi_dsub>
 8006140:	e72f      	b.n	8005fa2 <atan+0x2a>
 8006142:	4b52      	ldr	r3, [pc, #328]	@ (800628c <atan+0x314>)
 8006144:	2200      	movs	r2, #0
 8006146:	4620      	mov	r0, r4
 8006148:	4629      	mov	r1, r5
 800614a:	f7fa f861 	bl	8000210 <__aeabi_dsub>
 800614e:	4b4f      	ldr	r3, [pc, #316]	@ (800628c <atan+0x314>)
 8006150:	4606      	mov	r6, r0
 8006152:	460f      	mov	r7, r1
 8006154:	2200      	movs	r2, #0
 8006156:	4620      	mov	r0, r4
 8006158:	4629      	mov	r1, r5
 800615a:	f7fa f85b 	bl	8000214 <__adddf3>
 800615e:	4602      	mov	r2, r0
 8006160:	460b      	mov	r3, r1
 8006162:	4630      	mov	r0, r6
 8006164:	4639      	mov	r1, r7
 8006166:	f7fa fb35 	bl	80007d4 <__aeabi_ddiv>
 800616a:	f04f 0a01 	mov.w	sl, #1
 800616e:	4604      	mov	r4, r0
 8006170:	460d      	mov	r5, r1
 8006172:	e765      	b.n	8006040 <atan+0xc8>
 8006174:	4b47      	ldr	r3, [pc, #284]	@ (8006294 <atan+0x31c>)
 8006176:	429e      	cmp	r6, r3
 8006178:	d21c      	bcs.n	80061b4 <atan+0x23c>
 800617a:	4b47      	ldr	r3, [pc, #284]	@ (8006298 <atan+0x320>)
 800617c:	2200      	movs	r2, #0
 800617e:	4620      	mov	r0, r4
 8006180:	4629      	mov	r1, r5
 8006182:	f7fa f845 	bl	8000210 <__aeabi_dsub>
 8006186:	4b44      	ldr	r3, [pc, #272]	@ (8006298 <atan+0x320>)
 8006188:	4606      	mov	r6, r0
 800618a:	460f      	mov	r7, r1
 800618c:	2200      	movs	r2, #0
 800618e:	4620      	mov	r0, r4
 8006190:	4629      	mov	r1, r5
 8006192:	f7fa f9f5 	bl	8000580 <__aeabi_dmul>
 8006196:	4b3d      	ldr	r3, [pc, #244]	@ (800628c <atan+0x314>)
 8006198:	2200      	movs	r2, #0
 800619a:	f7fa f83b 	bl	8000214 <__adddf3>
 800619e:	4602      	mov	r2, r0
 80061a0:	460b      	mov	r3, r1
 80061a2:	4630      	mov	r0, r6
 80061a4:	4639      	mov	r1, r7
 80061a6:	f7fa fb15 	bl	80007d4 <__aeabi_ddiv>
 80061aa:	f04f 0a02 	mov.w	sl, #2
 80061ae:	4604      	mov	r4, r0
 80061b0:	460d      	mov	r5, r1
 80061b2:	e745      	b.n	8006040 <atan+0xc8>
 80061b4:	4622      	mov	r2, r4
 80061b6:	462b      	mov	r3, r5
 80061b8:	4938      	ldr	r1, [pc, #224]	@ (800629c <atan+0x324>)
 80061ba:	2000      	movs	r0, #0
 80061bc:	f7fa fb0a 	bl	80007d4 <__aeabi_ddiv>
 80061c0:	f04f 0a03 	mov.w	sl, #3
 80061c4:	4604      	mov	r4, r0
 80061c6:	460d      	mov	r5, r1
 80061c8:	e73a      	b.n	8006040 <atan+0xc8>
 80061ca:	4b35      	ldr	r3, [pc, #212]	@ (80062a0 <atan+0x328>)
 80061cc:	4e35      	ldr	r6, [pc, #212]	@ (80062a4 <atan+0x32c>)
 80061ce:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80061d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061d6:	f7fa f81b 	bl	8000210 <__aeabi_dsub>
 80061da:	4622      	mov	r2, r4
 80061dc:	462b      	mov	r3, r5
 80061de:	f7fa f817 	bl	8000210 <__aeabi_dsub>
 80061e2:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 80061e6:	4602      	mov	r2, r0
 80061e8:	460b      	mov	r3, r1
 80061ea:	e9d6 0100 	ldrd	r0, r1, [r6]
 80061ee:	f7fa f80f 	bl	8000210 <__aeabi_dsub>
 80061f2:	f1bb 0f00 	cmp.w	fp, #0
 80061f6:	4604      	mov	r4, r0
 80061f8:	460d      	mov	r5, r1
 80061fa:	f6bf aedc 	bge.w	8005fb6 <atan+0x3e>
 80061fe:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8006202:	461d      	mov	r5, r3
 8006204:	e6d7      	b.n	8005fb6 <atan+0x3e>
 8006206:	a51c      	add	r5, pc, #112	@ (adr r5, 8006278 <atan+0x300>)
 8006208:	e9d5 4500 	ldrd	r4, r5, [r5]
 800620c:	e6d3      	b.n	8005fb6 <atan+0x3e>
 800620e:	bf00      	nop
 8006210:	54442d18 	.word	0x54442d18
 8006214:	3ff921fb 	.word	0x3ff921fb
 8006218:	8800759c 	.word	0x8800759c
 800621c:	7e37e43c 	.word	0x7e37e43c
 8006220:	e322da11 	.word	0xe322da11
 8006224:	3f90ad3a 	.word	0x3f90ad3a
 8006228:	24760deb 	.word	0x24760deb
 800622c:	3fa97b4b 	.word	0x3fa97b4b
 8006230:	a0d03d51 	.word	0xa0d03d51
 8006234:	3fb10d66 	.word	0x3fb10d66
 8006238:	c54c206e 	.word	0xc54c206e
 800623c:	3fb745cd 	.word	0x3fb745cd
 8006240:	920083ff 	.word	0x920083ff
 8006244:	3fc24924 	.word	0x3fc24924
 8006248:	5555550d 	.word	0x5555550d
 800624c:	3fd55555 	.word	0x3fd55555
 8006250:	2c6a6c2f 	.word	0x2c6a6c2f
 8006254:	bfa2b444 	.word	0xbfa2b444
 8006258:	52defd9a 	.word	0x52defd9a
 800625c:	3fadde2d 	.word	0x3fadde2d
 8006260:	af749a6d 	.word	0xaf749a6d
 8006264:	3fb3b0f2 	.word	0x3fb3b0f2
 8006268:	fe231671 	.word	0xfe231671
 800626c:	3fbc71c6 	.word	0x3fbc71c6
 8006270:	9998ebc4 	.word	0x9998ebc4
 8006274:	3fc99999 	.word	0x3fc99999
 8006278:	54442d18 	.word	0x54442d18
 800627c:	bff921fb 	.word	0xbff921fb
 8006280:	440fffff 	.word	0x440fffff
 8006284:	7ff00000 	.word	0x7ff00000
 8006288:	3fdbffff 	.word	0x3fdbffff
 800628c:	3ff00000 	.word	0x3ff00000
 8006290:	3ff2ffff 	.word	0x3ff2ffff
 8006294:	40038000 	.word	0x40038000
 8006298:	3ff80000 	.word	0x3ff80000
 800629c:	bff00000 	.word	0xbff00000
 80062a0:	080064a0 	.word	0x080064a0
 80062a4:	080064c0 	.word	0x080064c0

080062a8 <fabs>:
 80062a8:	ec51 0b10 	vmov	r0, r1, d0
 80062ac:	4602      	mov	r2, r0
 80062ae:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 80062b2:	ec43 2b10 	vmov	d0, r2, r3
 80062b6:	4770      	bx	lr

080062b8 <__ieee754_sqrt>:
 80062b8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80062bc:	4a68      	ldr	r2, [pc, #416]	@ (8006460 <__ieee754_sqrt+0x1a8>)
 80062be:	ec55 4b10 	vmov	r4, r5, d0
 80062c2:	43aa      	bics	r2, r5
 80062c4:	462b      	mov	r3, r5
 80062c6:	4621      	mov	r1, r4
 80062c8:	d110      	bne.n	80062ec <__ieee754_sqrt+0x34>
 80062ca:	4622      	mov	r2, r4
 80062cc:	4620      	mov	r0, r4
 80062ce:	4629      	mov	r1, r5
 80062d0:	f7fa f956 	bl	8000580 <__aeabi_dmul>
 80062d4:	4602      	mov	r2, r0
 80062d6:	460b      	mov	r3, r1
 80062d8:	4620      	mov	r0, r4
 80062da:	4629      	mov	r1, r5
 80062dc:	f7f9 ff9a 	bl	8000214 <__adddf3>
 80062e0:	4604      	mov	r4, r0
 80062e2:	460d      	mov	r5, r1
 80062e4:	ec45 4b10 	vmov	d0, r4, r5
 80062e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062ec:	2d00      	cmp	r5, #0
 80062ee:	dc0e      	bgt.n	800630e <__ieee754_sqrt+0x56>
 80062f0:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 80062f4:	4322      	orrs	r2, r4
 80062f6:	d0f5      	beq.n	80062e4 <__ieee754_sqrt+0x2c>
 80062f8:	b19d      	cbz	r5, 8006322 <__ieee754_sqrt+0x6a>
 80062fa:	4622      	mov	r2, r4
 80062fc:	4620      	mov	r0, r4
 80062fe:	4629      	mov	r1, r5
 8006300:	f7f9 ff86 	bl	8000210 <__aeabi_dsub>
 8006304:	4602      	mov	r2, r0
 8006306:	460b      	mov	r3, r1
 8006308:	f7fa fa64 	bl	80007d4 <__aeabi_ddiv>
 800630c:	e7e8      	b.n	80062e0 <__ieee754_sqrt+0x28>
 800630e:	152a      	asrs	r2, r5, #20
 8006310:	d115      	bne.n	800633e <__ieee754_sqrt+0x86>
 8006312:	2000      	movs	r0, #0
 8006314:	e009      	b.n	800632a <__ieee754_sqrt+0x72>
 8006316:	0acb      	lsrs	r3, r1, #11
 8006318:	3a15      	subs	r2, #21
 800631a:	0549      	lsls	r1, r1, #21
 800631c:	2b00      	cmp	r3, #0
 800631e:	d0fa      	beq.n	8006316 <__ieee754_sqrt+0x5e>
 8006320:	e7f7      	b.n	8006312 <__ieee754_sqrt+0x5a>
 8006322:	462a      	mov	r2, r5
 8006324:	e7fa      	b.n	800631c <__ieee754_sqrt+0x64>
 8006326:	005b      	lsls	r3, r3, #1
 8006328:	3001      	adds	r0, #1
 800632a:	02dc      	lsls	r4, r3, #11
 800632c:	d5fb      	bpl.n	8006326 <__ieee754_sqrt+0x6e>
 800632e:	1e44      	subs	r4, r0, #1
 8006330:	1b12      	subs	r2, r2, r4
 8006332:	f1c0 0420 	rsb	r4, r0, #32
 8006336:	fa21 f404 	lsr.w	r4, r1, r4
 800633a:	4323      	orrs	r3, r4
 800633c:	4081      	lsls	r1, r0
 800633e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006342:	f2a2 35ff 	subw	r5, r2, #1023	@ 0x3ff
 8006346:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800634a:	07d2      	lsls	r2, r2, #31
 800634c:	bf5c      	itt	pl
 800634e:	005b      	lslpl	r3, r3, #1
 8006350:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 8006354:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8006358:	bf58      	it	pl
 800635a:	0049      	lslpl	r1, r1, #1
 800635c:	2600      	movs	r6, #0
 800635e:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 8006362:	106d      	asrs	r5, r5, #1
 8006364:	0049      	lsls	r1, r1, #1
 8006366:	2016      	movs	r0, #22
 8006368:	4632      	mov	r2, r6
 800636a:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 800636e:	1917      	adds	r7, r2, r4
 8006370:	429f      	cmp	r7, r3
 8006372:	bfde      	ittt	le
 8006374:	193a      	addle	r2, r7, r4
 8006376:	1bdb      	suble	r3, r3, r7
 8006378:	1936      	addle	r6, r6, r4
 800637a:	0fcf      	lsrs	r7, r1, #31
 800637c:	3801      	subs	r0, #1
 800637e:	eb07 0343 	add.w	r3, r7, r3, lsl #1
 8006382:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8006386:	ea4f 0454 	mov.w	r4, r4, lsr #1
 800638a:	d1f0      	bne.n	800636e <__ieee754_sqrt+0xb6>
 800638c:	4604      	mov	r4, r0
 800638e:	2720      	movs	r7, #32
 8006390:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8006394:	429a      	cmp	r2, r3
 8006396:	eb00 0e0c 	add.w	lr, r0, ip
 800639a:	db02      	blt.n	80063a2 <__ieee754_sqrt+0xea>
 800639c:	d113      	bne.n	80063c6 <__ieee754_sqrt+0x10e>
 800639e:	458e      	cmp	lr, r1
 80063a0:	d811      	bhi.n	80063c6 <__ieee754_sqrt+0x10e>
 80063a2:	f1be 0f00 	cmp.w	lr, #0
 80063a6:	eb0e 000c 	add.w	r0, lr, ip
 80063aa:	da42      	bge.n	8006432 <__ieee754_sqrt+0x17a>
 80063ac:	2800      	cmp	r0, #0
 80063ae:	db40      	blt.n	8006432 <__ieee754_sqrt+0x17a>
 80063b0:	f102 0801 	add.w	r8, r2, #1
 80063b4:	1a9b      	subs	r3, r3, r2
 80063b6:	458e      	cmp	lr, r1
 80063b8:	bf88      	it	hi
 80063ba:	f103 33ff 	addhi.w	r3, r3, #4294967295
 80063be:	eba1 010e 	sub.w	r1, r1, lr
 80063c2:	4464      	add	r4, ip
 80063c4:	4642      	mov	r2, r8
 80063c6:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 80063ca:	3f01      	subs	r7, #1
 80063cc:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 80063d0:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80063d4:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 80063d8:	d1dc      	bne.n	8006394 <__ieee754_sqrt+0xdc>
 80063da:	4319      	orrs	r1, r3
 80063dc:	d01b      	beq.n	8006416 <__ieee754_sqrt+0x15e>
 80063de:	f8df a084 	ldr.w	sl, [pc, #132]	@ 8006464 <__ieee754_sqrt+0x1ac>
 80063e2:	f8df b084 	ldr.w	fp, [pc, #132]	@ 8006468 <__ieee754_sqrt+0x1b0>
 80063e6:	e9da 0100 	ldrd	r0, r1, [sl]
 80063ea:	e9db 2300 	ldrd	r2, r3, [fp]
 80063ee:	f7f9 ff0f 	bl	8000210 <__aeabi_dsub>
 80063f2:	e9da 8900 	ldrd	r8, r9, [sl]
 80063f6:	4602      	mov	r2, r0
 80063f8:	460b      	mov	r3, r1
 80063fa:	4640      	mov	r0, r8
 80063fc:	4649      	mov	r1, r9
 80063fe:	f7fa fb3b 	bl	8000a78 <__aeabi_dcmple>
 8006402:	b140      	cbz	r0, 8006416 <__ieee754_sqrt+0x15e>
 8006404:	f1b4 3fff 	cmp.w	r4, #4294967295
 8006408:	e9da 0100 	ldrd	r0, r1, [sl]
 800640c:	e9db 2300 	ldrd	r2, r3, [fp]
 8006410:	d111      	bne.n	8006436 <__ieee754_sqrt+0x17e>
 8006412:	3601      	adds	r6, #1
 8006414:	463c      	mov	r4, r7
 8006416:	1072      	asrs	r2, r6, #1
 8006418:	0863      	lsrs	r3, r4, #1
 800641a:	07f1      	lsls	r1, r6, #31
 800641c:	f102 527f 	add.w	r2, r2, #1069547520	@ 0x3fc00000
 8006420:	f502 1200 	add.w	r2, r2, #2097152	@ 0x200000
 8006424:	bf48      	it	mi
 8006426:	f043 4300 	orrmi.w	r3, r3, #2147483648	@ 0x80000000
 800642a:	eb02 5105 	add.w	r1, r2, r5, lsl #20
 800642e:	4618      	mov	r0, r3
 8006430:	e756      	b.n	80062e0 <__ieee754_sqrt+0x28>
 8006432:	4690      	mov	r8, r2
 8006434:	e7be      	b.n	80063b4 <__ieee754_sqrt+0xfc>
 8006436:	f7f9 feed 	bl	8000214 <__adddf3>
 800643a:	e9da 8900 	ldrd	r8, r9, [sl]
 800643e:	4602      	mov	r2, r0
 8006440:	460b      	mov	r3, r1
 8006442:	4640      	mov	r0, r8
 8006444:	4649      	mov	r1, r9
 8006446:	f7fa fb0d 	bl	8000a64 <__aeabi_dcmplt>
 800644a:	b120      	cbz	r0, 8006456 <__ieee754_sqrt+0x19e>
 800644c:	1ca0      	adds	r0, r4, #2
 800644e:	bf08      	it	eq
 8006450:	3601      	addeq	r6, #1
 8006452:	3402      	adds	r4, #2
 8006454:	e7df      	b.n	8006416 <__ieee754_sqrt+0x15e>
 8006456:	1c63      	adds	r3, r4, #1
 8006458:	f023 0401 	bic.w	r4, r3, #1
 800645c:	e7db      	b.n	8006416 <__ieee754_sqrt+0x15e>
 800645e:	bf00      	nop
 8006460:	7ff00000 	.word	0x7ff00000
 8006464:	20000090 	.word	0x20000090
 8006468:	20000088 	.word	0x20000088

0800646c <_init>:
 800646c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800646e:	bf00      	nop
 8006470:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006472:	bc08      	pop	{r3}
 8006474:	469e      	mov	lr, r3
 8006476:	4770      	bx	lr

08006478 <_fini>:
 8006478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800647a:	bf00      	nop
 800647c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800647e:	bc08      	pop	{r3}
 8006480:	469e      	mov	lr, r3
 8006482:	4770      	bx	lr
